{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8e66bc64-c8b6-4a60-ab14-96df8776a688",
        "name": "Clear Cache",
        "item": [
          {
            "id": "083cebc8-9622-428d-9ecf-1c4a65284bfc",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c00dceb-dc3d-49c2-b5e5-0e3b43fa8abe",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c1c0cb91-7fdf-40af-8c21-7981c9d79b83"
                }
              }
            ]
          },
          {
            "id": "727717e7-302a-4de3-a69a-518d755ce6e9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "69c5f8fa-20a3-4183-8edf-8431da66ab4d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cee8dac2-5f67-422f-84b9-b1403960e61c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "47052094-3cd3-47e8-88fc-a72a0c42a828",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2e767dbd-d801-4029-aa68-d8a1cc8a6124",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cc9a488f-82db-432f-86dc-dc79b3e96e65",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "091e252b-f5f6-49dd-a3f9-d91fab847aab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9aacc61c-0c28-41f0-97c0-3952c753bd37"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "da9028f4-1595-4eb5-b07d-2ceb87dfc243",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5938a017-bbe5-49f4-b8db-1e8c714a2de8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "55c3c551-7dbb-400c-bd73-aa63c050d35c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bda780d0-b4b1-494c-8d3b-2118fd233279"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd911656-16f5-4353-99d3-1d1fe69eeaf9",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "397ba568-6ce5-4931-8d6a-de013282f7d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ffaa7f0d-b687-4f47-8eda-934470a4710d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15cc9d62-6250-41c1-b7cf-6b06231cb443"
            }
          }
        ]
      },
      {
        "id": "6f3199eb-574a-40de-8838-06329218442b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e5892886-13dc-4a65-9099-b9aae939f158",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c46a338-2832-44af-8090-f5a2912d431a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d88d3efd-cb8c-4914-a86a-3d1bba2643b7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac28d27-ea6e-41ea-ab0e-8af4e1578bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfc5001e-fb1e-4b2d-9924-fce63e6574c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a8bbe2-cd17-41f9-af6f-a6163247cd2d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d2d43f-f642-43a1-aa9d-9de1cd79cc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d02b9f76-9a42-4996-8f37-cd7aa3871489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce9e199-55fb-4e34-9356-78a97e7bfe90",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1bfee96-24be-410b-a9df-7e4cafafb10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9989db56-e801-4984-87e3-25b82f759c9d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9e82f963-e381-4d1e-a6f2-5aaf6a19031c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c09f7e6b-b2eb-416c-a5ce-3c909b0f336f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c78b163-56e1-43b7-a3d5-a6986eae89d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2123f50f-63ce-4239-8e60-cc5951961eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c55469-54b2-461d-bcdf-103ceae813fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee8b780-76b3-412e-8eff-bc68cf9bf423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7555fc6-8f2c-4d6d-b5ed-93321cb92862",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d225cc3b-cad8-4868-bd9f-2d296602c783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b912c22-51c2-4fb8-8421-2d6371b93786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41a9769-139a-43fd-9fb2-4f8d848e4c76",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "7664fa44-66cc-460a-a45c-fde9a54e3753"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0fa6c022-e276-4118-8aee-c537debd4c25",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4a2076a9-c033-42fd-87e8-059a3da16c53",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8dff9cd1-541a-484d-8bdc-c5682404e939",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b0d31b0c-0a12-42b1-923c-d062b20500d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b76bd73-de62-4da8-9ede-56140362b660",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "738eb398-d2e0-47b0-8f54-e99993a67954"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2380d1a-033a-4ff1-a011-5802a3b2a23c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2b23a8a-336d-4b18-b728-b4b611f18da0"
            }
          }
        ]
      },
      {
        "id": "80927b18-5497-4d33-85da-be828a25479c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e46409cc-5549-4358-9c18-1359e2a999f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d630e89-a6fe-4731-9999-858a2a1161b8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "854e3ecc-7121-4b87-8131-a543fec9a9f4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544355ee-fa7b-4a62-9685-c61eb74639c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1600fae-8e0e-46a3-bd6d-e3050768ab4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543607d3-9e37-4c72-b35d-63d748a74bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f1d0acc-67bb-48f5-8301-1ddd2487e540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d74914-cb15-42e6-ab0b-3fb48781c85b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb58c1b0-acd3-45a3-89e2-14168c856f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e410302-63db-4238-ba11-11eed7ac6786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ee104b-632e-473a-91eb-3d0751b1a532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c05304c-55c2-4c91-8a94-81b0f9474658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105519e6-9397-4c93-905f-a7145a243b32",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad3ff80-7e17-4f7e-9590-652cfc46e3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bfb616e-43c2-4601-b10d-4aa48d0a2547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91354a17-eb52-4cc8-82e8-8ce10aac358a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41e17b8c-16af-4266-afff-f42e5df2cdaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeaade10-1b8b-49e2-904f-9e2eea35747f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963ac7dc-905b-4cca-864c-bba5f3521fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a68fa63-b779-4fe2-91ad-89982f9a1b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba91e0f0-24b8-4603-93cd-fc238fdf1704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70f907c2-e152-4dde-81ea-9a912068262f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2f0785-0d0e-4a03-b287-e17f1267c4ac",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e336efa-2ca3-4b97-9a83-1209406b5069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e70a4aa1-628f-4dd5-a84f-bb44a7b12c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed5fbd7-5073-4c43-b5b8-0867c85bbf98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d60259c-d9ab-4cd8-9b31-405fb3ceed75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922936c7-a422-4c97-a6f5-9948736b5d60",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e144d750-4a69-40f4-93fe-771dc7101b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eddffd6-c667-4304-b7a1-8213338a11d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a51810-b172-42a3-828b-65d6cd79158e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c33b70e-a4e9-4245-aaa1-a6595be7edc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82328083-0dd9-4fa3-9d70-a08a13a710a0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97c92b1-63c3-4920-a20a-5b2c9528ca20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281fa859-4c7d-4373-bbe5-98f285abf972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a89acb-bf0c-49a5-8ace-c3d4ebe0b66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdc9e39c-827b-40e4-9353-510ce922381a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b036f10c-383c-4c03-aa19-4e42142d0f49",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742b1562-1c4c-40af-bd92-6df5cfe1011b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57582297-935a-48f0-9fb5-47e47e1bf6b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff75cf1-7c97-44ef-bf97-9e872488a50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a4d1795-49ea-4a6d-b6de-96a944ea067e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fcb5f9-f706-43d4-a07a-7069c0e50c1a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf92f11b-3920-40df-bf20-062fbd4c6dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf5ae33-ce51-4626-a674-6da4bdfa5173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c72308-c0dc-4bb0-8417-4ad9b07b4387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8eb601e-90d8-4121-a1fc-749c51f72d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a231635c-8cab-4274-b985-2ea3b9786eea",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a256b2a-8d60-482e-b951-fa88425cc31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55715d6-26cb-40ff-afc7-7a2daf28da64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3087eebb-c679-4456-ba20-66feefbd4eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "474a74e3-dd3b-428d-bdc8-87606ed21d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794f774b-9efb-44ee-818f-c482b9e27122",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e666d2-cefd-4a01-9dbd-2495de50eedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3e679b-2d17-4e88-b6ec-717b4189068e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db548182-94c8-4bc1-b26a-58df1f2ceabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9d63e87-e883-4343-ac11-32bce3d24b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312164f4-791e-4afc-9c50-5bb8f1db04be",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffe3b75-545f-47e8-8393-109d81100fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d77e4c-e1cf-48aa-8c57-c74d3b7ee4f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11690591-360a-4815-a5ae-25fdc070ecec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f1e7d51-e01b-442e-ac2a-657a9ef9315e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d105b564-1ee7-424a-a4e3-d2fa37d3a836",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8255fd0-ef94-4ce8-b1f9-156786aa68ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642fce67-c147-4771-8b6b-4d48845e8b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b080dd-3519-4c83-a72b-f25fb230aeae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41f04e40-ee1d-487e-9e18-50483e719130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c99a9ab-1258-47b6-8f53-ccfb80edf4b1",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef583a4-908b-4f77-8f36-54ae6d10c10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0252f7-fa0e-4b33-acc9-17396596c4e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc37bbc-77e9-40d0-b79f-2265dbdd95f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebafe79a-f666-4906-bfe4-e5137c0ed4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fbeac0-d504-44a3-908f-f67105d5928c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1402022-16b2-465a-82f5-518c4634c0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68eeee47-5bdb-4492-afbf-53acd9011624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b9c87d-2f45-41d1-82aa-01f2d7cab43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "137f95bd-ec66-45b8-bb92-45178c2290e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee18b2d5-d6e2-454e-b00f-fdf123c904f3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9986b16d-815a-4e07-befc-1ac41d5ea8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8f1dfc-e2a2-416a-a6a6-07f87ff14cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a37f70e-8852-419f-99e3-626081ad0851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7cd9823-cbb2-4e27-8f2f-8e886b008f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ce8244-f3d2-4b9d-86fa-1950db3a6763",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a145a08-4e35-4aac-9b9a-eda08438c702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7fc1f0f-81d7-43c4-9b75-a6c3829c0db0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e573a9-73aa-478d-89c9-a939b13848bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17a59704-6d50-4796-91e4-125080355322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae246656-bf6e-4efe-ada5-551a7ba11644",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7deeea19-5158-41dc-8e7d-bd0779dd9dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7437bae9-4818-42c7-a12e-5f7754bb2c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06398265-c332-420b-bd3c-a59358671278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "182182f9-5722-49e2-93b7-939e54db8819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b235ff2f-b9d4-42a5-aa65-1ed36906a20b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b97d76-6208-4d48-9484-d788996ea6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7358c0-b770-4618-9da9-308a00c97fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d850c4f-1ab6-4852-91ed-c9cd59733207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50340479-8e74-41a9-990f-4555d90803a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e13152b-9ce6-4445-83d3-f982fbbd993f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25220814-608a-41cf-821d-660624ca1654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8352e03d-01e1-40c8-9ae7-983fcee1457d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758de833-aae8-4360-8184-f4b8d4cef87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3384d39-165f-4abd-81be-37833a5239a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5f819b-dfa0-4548-afb3-10ac7140e98b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0552049-da51-43e7-bebb-4858756e6ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "735980b9-88a3-42db-9456-251c35830d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7612228a-1539-49ab-a48f-4701e0880edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7cebb5-70f9-4842-afbb-46a2a0992b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88189c15-294e-4cf5-87d3-11f891815c45",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b9aebb-c57f-4247-a5da-f1e2acfbb31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "259e90bc-224a-4d93-a67d-c2800a1d5754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d1cea5-b198-44f2-be69-506e4c53ba92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd18803-5ac5-49fe-a7f1-37e924340953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280e9898-12bb-442f-b0d6-44b92573740a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cd0381-aa74-4c49-8dfa-1dab7d3b5a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12a8afc-6862-4ad0-ba2a-991f71ecc417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b25a66-a25d-430a-ad34-958113a848a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6fe94ad-6863-4343-b25e-949f91d046a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3041b539-d1b1-411f-b287-122d1dd187b6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67e22c7-3121-4c14-9955-4cc24a2cb9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95562845-3b9d-41ec-b8c4-a5dbecf51425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18eb842e-c2d9-4173-8cca-2f8e59e3ce53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c611e2ba-ea4d-47e9-b61c-eeb2efe5cb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03adbb3-c35a-4369-98d2-7bbfe47a49f3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6670e607-117c-4ea7-b415-c047bf1306b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7bca15-46c0-4aed-885f-15ca212c5114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab24dfb1-9163-4539-9b53-86d05cb4b3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1cf911f-5f7c-4375-a20f-0574da5f12d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30d9c7b-17f2-4833-843b-bceed51de4c7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e403690-cabe-4303-a3a8-988f2858b86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8990d144-cbe6-4b07-8b36-f1c2517dbf63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82ec4ca-7c88-44f7-a8e6-e9cd33244f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "81a37ca4-af41-4856-8ceb-795b3ae94b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ab517b-8acc-42b6-bb9e-cc5198b97044",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5c85f1-feec-4191-8022-c817acce908d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b44e48a-132a-45bb-a6e6-161b9a774c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7e11c4-e8af-4724-9d54-77693128818a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7314cf88-0054-477c-bd04-041fb98fd8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84eb80d-31a3-49e0-bbf1-faccbc263f4a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c53d1c0-8123-4184-b587-6e9b30b05bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2773809-7bb2-4cd1-9e49-c3488dd01e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1c9e2e-e21b-4d74-aa97-bb5d19656cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b2836c-a7be-4b8c-b1d4-e7b6a249a107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f5e9d2-b13a-44cc-8252-ebb1897ba1a8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493bdf39-6e09-40a6-a636-c3d8f4f0a93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce726898-3315-4306-9a3f-767dcb849489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac01ff6-0234-4ea4-ab7d-59257ff8288c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61bf604b-4b51-420e-989e-61187af78a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab1f2a3-b06d-4b17-bd98-7fbfd9a0674c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf5d64f-e36f-4514-9a7c-a5a55219cf06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff2aed3-6b31-496f-b347-7c54468b8818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de5c642-a40b-4095-8336-0dee91b1c9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ccd51f0-099b-440f-9055-9f9365013650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c854875-0253-46fb-90be-8b00cb21916c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29186f83-73a3-416a-8956-ee6ce40340ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007dbbf1-98dc-4661-acc6-4c8fc092a647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3d41bf-7406-40d7-a785-55a7aedcfcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "59dcb897-fc48-4401-8851-72f39e7108ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5355dc6c-5ab2-41df-8b80-27c863e6e4a0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630978d6-cc95-4ffe-b6a5-575d2139369d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5563ea55-247d-4635-8bd1-614faa259223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405a9a40-b3da-476e-9390-8fca82213eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c0014e6-05ed-4e90-9afa-4c07f760e032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c88456-908d-44a3-9349-9592c7f38f7d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed7b740-d85f-4c3d-847f-21d1727f49a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3614fcc6-f9e7-4b18-b966-5be1018c1f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09be1fe-94f9-4eae-9265-4b401ae109fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6df83d07-72cb-4369-8d71-0684ff9986eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2796017a-d693-4ba7-acfe-e8b2afc5cf85",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd93d337-53b3-403f-8b58-24da9e784340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde1b506-89b7-48ee-b9af-ad2370fd0984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d151166d-0f99-4a06-bce8-80ead65865ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24b9d456-d481-490b-ba3b-8bc804542907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b05abd-006c-4fe1-b6df-494c873ace89",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05b023d-915f-46a0-99cd-63549279ef94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e32df24c-7fb0-4e0d-831a-bfb16379c5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0461ce-c3a5-4584-a01f-a40792208ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2604ea-d696-43a3-98e5-712d9122e954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39eb7eb-ecb6-4ac6-b936-3c424ad50dcb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d4d84b-ba19-454f-ab67-b2d255042ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d6600a-f4be-488c-813d-a66874bb410f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b3280c-0864-4023-8892-d37b39fe0694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd36a96-0769-429c-8323-870ce0a0c092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9239132a-7b89-4ebb-b5a5-7ba99735015d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2eeb56-af33-4d93-9d01-8634796d538a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f3cf7b-4d6b-4f0d-b08c-d14f8754ed9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be5d9f8-99f3-4ca2-a8a2-7f79a3ff8a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "199de070-f231-43e6-a56d-35ee7ad54fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532d4c4c-a3d8-4533-9c08-a08e4c9c2ecf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15239a21-212d-4d98-a339-74b2691a864a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8624143-6bef-481a-a7e2-b8d08e470918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fd725e-b1e8-40ff-9f70-beea509d71a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e72db8f-115b-49ee-bad7-a998ece7e139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52305750-7c3c-4a02-94fe-cc38bca29fb2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f39693-8d09-4073-9ef3-d9363253d1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29330034-3816-4e4b-a89c-407108c93187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bddb519-ecd6-4e8d-aaf3-74f9dc1aaddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed81b91-8581-4825-91ae-aa8fcf47fdbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7a64b3-ffec-490a-8fd5-82a84d8986de",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7811b6a1-291a-4055-b771-9805cd4aa7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a90867-ee71-4d0c-9c38-3d8f82858208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4235c487-03f1-4841-a9d2-93fd5991394f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e479527-4b28-48df-8f68-19d24dd8d852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59677a2-b325-44ef-8a52-770080ccc286",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf94c689-c909-4c97-b679-2f00cbfa2a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463195f3-d32f-4c25-bd1f-9b4319923a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fd6924-945a-46d6-87aa-3c35e75a6193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "069d3ad6-61f6-4288-9576-773991b99ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e548a5ad-0f50-44f0-86e6-08f639ba15b1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c2fb47-f922-4e10-860d-23cf3c798c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2b241d-1766-4dbf-8f17-00713e8c6d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed47e87-3358-428e-8a31-9dde8b1a1e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "82999f06-9e23-4a5c-b326-c27ebe7bc655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c239e19-08f5-4b7b-b83d-951312ee5db5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5747bb5b-4545-4375-a5ed-cbe648bd89f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f3e31ce-3eba-4a13-a82f-d9bda77bb182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec51563-729d-4247-a74f-249ea467f787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8472eea-cc5f-4711-a326-f7f2bbb15de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76f55ca-75a3-4692-84dc-9d1c56bfeb10",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4ba5e5-67fa-4d50-aa05-03942821a2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7fa85e-cb1f-4713-8283-e3027c7df065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153df6fa-5e85-41d9-bdd4-922f29b74e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "139bde04-105f-4053-ab33-d47d3d422737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61d7f8a-7fdd-463b-9d06-d021623196b9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69aa0e84-320c-44a0-b8e1-1b9a219a535f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926b8e32-9aae-4a4c-b9ef-55828e228b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71125900-2401-4bcc-af87-a33c08a08227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b94ac6f5-5e2c-42e8-ade4-9b6ce5827247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e62a3b-2df6-4f01-8991-00932d7a3256",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e76192e-9d13-47f3-894d-320e224f2e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee86acef-eb4f-4b6e-99b5-94d52833fb55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147fc20f-3b45-4f13-a51a-98926444c589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "93bc0ffb-a908-4821-9d2c-8b7521190b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49b60d8-f14a-40b0-9691-d4806ab93979",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec6c49f-a90b-41ea-8b39-db96c60d6927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09f3723-5533-469a-a961-eff95aa808c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5922bd5d-846b-4377-8727-ed7979200cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeb79f02-5ea1-497d-9a4d-2fa246f39d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8035c3-1224-4afe-a771-5ce144a83e36",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c21826-c022-47e8-87da-eeb30b0cd1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3236e8f-41f1-4e22-af86-5283ab6af2fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f796009a-0e3d-44c6-88cd-6355d5699302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "591c1a71-6120-45b7-a84d-509166af55ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e25bdba-dfc2-47dc-b83b-d3521d7e6ab8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb1a049-45b6-4166-9584-6dcaee59741f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10362c21-c06f-49c4-8aec-53cf671306e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dab4666-6334-45b2-b21a-526ad4a28639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c65504b0-a20a-40ac-b6e6-5358727fffa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7aba8a-9c3b-437d-afa1-f8500a569aa7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c05bd58-33a0-425d-9d31-ae45a745fefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "309eee81-3cb7-4e85-baaf-5500fcdc738c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339fa0cb-4fef-4462-831a-a7e00f532d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "caf7f8ce-2c22-4cd1-8ba3-ce08ea4974f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297435f5-0405-4022-a27b-0f677d25c546",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968933b6-a4d4-4957-bf79-aa6ac387918c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c293e53-8755-4bca-9c60-1bb280991adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d197b2-9bf5-4fe8-acf9-f374f0e36945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02b80686-ca56-4666-9545-324e068c34e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc7a519-f120-4699-a3a1-f52306a4b156",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9ac0fc-5bad-40ad-88d5-75563e943187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e07ce4d-54eb-4927-be9a-4da2d52a646c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cd7bca-0df0-4b08-9130-b39364ca207e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "475ba95f-62ff-49b6-b3c9-33bc9b0cf7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae2523a-33f9-4717-bb16-858c4f1e4e51",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f67efd4-67ea-45b6-a57a-f6f7f0a8f915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f99046-0490-411c-b507-230771405799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b706a0ef-9e54-4870-93d3-392ba382e04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "95190e7e-653b-47b4-92de-8ab2f169edbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d3fbfe-362c-4a8c-a175-8bca3809ace5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bc162c-151c-4b6e-a94d-0270229efd79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b695568-02f3-4d9b-a391-5a6b91964e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae78740d-8a04-4ca7-bf5b-8b695025b82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd16a9e-8960-4c70-85b3-661ad68a5041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903ca9b9-0285-481b-961f-9bb94c7182da",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e99b72-76b7-4c33-9894-1f7947bebd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e40f75-9d99-4753-ba53-db68c5150774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6ddb47-abe7-43dd-bb03-18c389a510ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "498be90e-82b6-4bdd-87fd-66f29cbf1d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a7bc65-a288-4cb1-b27f-0ed49377d21c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39f17cc-14d1-460a-882d-af40e9810f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf8364a0-c016-4b1a-940e-2e080a273d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53de82ab-a4f2-4a9e-a01a-8021f1d82bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8d0691-4761-4a37-b54e-0cede56c39c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff90f8e-79b3-41fa-ba75-970f7bee5295",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0edefa3-b55e-47ec-86ad-13fbe4c3b9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f62b77-bb1f-443a-8380-a70df3ba68eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cde5d6a-432a-4cfb-b14f-48f209000cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5cb1661-74fe-4e04-b769-e4c75edbd4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44806d6-6e7b-4c2c-9d4f-f4f743d313d5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50aa46ea-175c-4bb2-b7a3-69788f423203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8535401b-c00b-48b7-9b11-a8a8cb493f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2757642-9577-4b14-9aaf-5616beb20423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fe47084f-2240-478e-a97d-f7d9a85d46b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75cb16d-a6cc-43ca-80ed-b8cdbbeae26d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cada1ca7-2667-4062-b43e-dd70561c39fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7156fd-17cf-42c8-b6ce-7e67afd32979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5b1547-1fd1-44d4-a1b6-165daa577df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d05ad30-54b2-490c-9939-2b92422400fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50344c9-fe8d-4aa4-9e5d-258e8ad7fe83",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1132391b-dc77-45fa-a647-32b71bfbc268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887d04e8-c07f-428b-b555-18bbcd4ca1b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4ed22e-0c89-4726-9e6b-034876381cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "85895924-e0ae-4a5a-98e0-13c8c7975f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26019e38-2dec-42da-8789-28e0106968e3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a51160f-1138-49d8-a400-75ba7bb76476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a8a6b0f-6f47-4e4e-9ed0-05c6ec26b814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d850c1-9555-4bea-8bde-ad521f263da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "59e482c0-c71d-42c4-a3ee-3098427d5309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ef76a3-4a90-467c-a2c6-375da952d584",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ceca4cc-665d-46ec-b213-0fe4ebf89821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b571ef5-df86-43e5-ad4f-4af26f8a9fcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26f9f60-0dba-4162-833a-bf7a761452d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8216ea32-1b7d-4762-a846-f697db3c5d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd16d7b-0c47-4f84-a6fc-1319e77300b7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1589a251-dcef-4af8-9263-40c2869c148d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5c2849-25e1-40ce-87b4-f92d8cb2f070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687c03f6-b470-4a38-8ac5-7ee2827b5c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fb3f6e4-2624-49e6-99a2-d5ef7c4a170c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4091fd73-269c-4a8a-ae3a-b42375124338",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b53160-cd92-4f38-80dc-b27d547cfe92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892170e5-afa5-4756-809c-7f790f40a5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4a879a-01ab-4353-8121-b00b69195c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5c44fd-03b1-4404-860f-b7c4c97676e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72dc92da-13e9-4cb7-bd6b-d39ebb9f3b52",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9437d75-b193-4502-8fce-03617957acdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b207ec-762c-40fd-9574-8b4ca02aaa47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a458c23f-6dfb-43dd-a73c-e3e8db3854c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "33021471-6b12-4cfd-8ac2-cd8dc2041aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bafbc7-61a4-42fd-81aa-726218e231a1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bf8060-e5b7-4006-a8cb-80c4c6e30034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9e3e1a-e746-40bf-92c5-8ae2f5934fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e465d88c-14ed-497e-bc1a-6dbcbaf6d1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "047d4de2-e878-4458-84f1-45a95fb75590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bced91-ea1b-42cd-865e-c1c47ba20a9b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72738422-a850-4c46-afe2-b4ae8c6385df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d46e0a-6964-4c94-a68e-22be27a6f585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035cda70-7dcf-4978-81e8-47a01bad0d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83d19f03-9502-4b89-8baa-21e73761ab80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26fe0fc-7023-4789-bd48-aeb0a449a9e2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d73c0a-c980-4509-b2f7-e1860d5615fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab1c0e71-cc8e-4654-a224-b71ceddadb4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a828031-624e-4783-9f23-83221b537d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b25f99db-115c-4ee6-a68f-e610620f2cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27fcc329-8757-40bf-9749-b51bdd4cea18",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d121966-bf24-48f3-962a-bb8051688548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "883c98dc-7ceb-42f5-8c0a-9a7187d3ad8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdcd5d8a-22f0-48b0-9838-e031638d8c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a1d746d4-5531-47ab-b56f-e33119b8fdc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f205dd63-9a98-4f32-ae47-a95ff4af3994",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de709f8b-1f9d-47b8-b0c2-63d424ac75e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16054926-f70f-4e7a-9b52-215dddd24b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ace20a-8fb6-43c6-b020-b1366796f5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7281b74c-f193-4d5e-b923-54dd725d4796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2729c9ac-1174-40e1-af83-3247a51b60de",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "473baef7-d88c-4b2f-bba1-f06fb954b14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2580ae00-c0d7-4c12-bc9e-90c79e88c080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78b646d-6d58-48c7-bedf-ce59be9459ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d5736a4-27c5-4516-9d12-d8f2600aa979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057872b2-1ca0-4d83-afe2-30920abe067f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c06b33-c44d-47af-b664-b6fa6d56a468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5aa0f6-6d5a-4ce7-92ff-cf267c0cf637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daffd6d9-bb45-47cc-88ea-7df29e659d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "083b5573-2a78-4387-9733-d6dd19f5ad25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5bcb8c-2094-4eae-9e4b-39ad6bb0632a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eac403b-de65-44b4-a449-51771d4b5495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e73399-5f6a-431e-8ec6-cbb86ae14221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97996b2-076c-4e31-8a01-33e77186e618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3704007-e7e2-45d5-afc8-b2ae31ec45cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ec98ba-67f0-493f-ae6e-f2dda9de917f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbe6bd0-ce14-4d10-a65b-63a7e636f4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f1620e-6936-4035-83aa-7a350c463e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7882ea-d247-435d-bd8b-d23b615046cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc1cc2bc-0315-43d6-811f-85a98f833a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af309168-e739-40c4-8d1d-555b605c30f1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0f4e3d-416c-4d74-b0e7-a108f8e1160d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35221d1-d389-4829-8af8-c1e2fce3d39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76666c7d-20c6-4285-9d39-9eccdb0bdd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "003e8ddb-cc89-4d29-9c20-9f3d9ede9472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ee600c-3e9b-45f2-83a4-a28c1044e6c3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08af4812-f86c-4ff9-97d8-32bffa669834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0543c82f-8077-4e2b-9db1-7bee6a97ca1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a61520-74a0-4150-a735-a02ab40660a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "09f24641-01bd-4af6-a364-b70e5f308e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3a5133-46e0-4747-8194-460c30e0736b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96484ab3-1e4e-43e2-b8d6-e1fe14c31f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad429dbc-ab6c-489c-bae2-bbac45d1a9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f166c9-1e61-4ea6-b90a-765a0dda28ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d57c8701-6356-4ed5-a345-237911c22190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef095d4b-2f28-43a8-b756-f19c5ec96629",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c42038d-03df-4997-961b-09764e390301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc806a5-abe9-48bc-984e-3f47fc3beaa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3a23c9-3fec-407c-91f0-8daa9cc4abdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eff47fcf-6d9d-4511-8fe5-690f7d244c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113a33a5-e28c-420c-9005-210d45ddf69a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4d93a6-4b44-4575-80ba-1aa5f2a13b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b6e263-8d61-4b97-be5f-fc0449717669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c0cf7e-cb3b-44cc-a7b9-d4264a47a353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b27e329-d7de-4f5d-8ad6-91dad8b99568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2704efd-5b0e-4f97-bf72-21ed5e0f70b2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cef1ab-e1e6-40a3-874d-f8fcdfdf1492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c722287f-eb3b-41b9-9dc2-62bfa65834fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc70d0e-e5fd-4191-9bac-ffe8292ed2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fce51ed3-de8e-44c0-909a-d144d4c2142c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b8385c-0cd2-47f2-9d6c-a48943d82141",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d4d7b5-b8ca-467b-8f9c-12542c422c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6bbe86-6529-443b-8c94-3ae94308cff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ac60eb-38e6-4c98-8fb2-b9e8fd658532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7261d773-d80b-4867-b23a-84b36eee6641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db87e3e-efb5-4f01-8ea5-0c02b6ff54b9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa8ce98-ed7d-4f23-9f51-909f1879e2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a7194c-f8eb-4f00-9f4c-1a23041bf463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc89261-f35f-4919-89fe-382383f2aae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dae9f5f9-d2ff-444f-b7cc-2ba556590a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec63db12-e7ea-477b-be67-090c69c07473",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768c8045-d522-4024-9ba1-2d26673173f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e12f3a2-666c-4855-8ffa-429437a54c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2482415f-cbb0-496c-97eb-e4a728235b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c983477-cb0c-4139-be7e-f5c0a0b21c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ab180e-cf1e-4aa8-9fd0-075402637227",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd415ab-3412-4729-89d6-fdad39f73df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9b9353-c2f3-43ec-bd68-e8678639aa7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7865f877-48f0-4a4b-865e-32a1055e4f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8554ca3-22fe-4aa9-98f6-7dacf6aa2842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1db0735-e182-4fc8-8800-f0a531ef4d04",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea33886b-406a-4aee-baa4-3d7eed81376a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec6f407-db77-4690-8175-2c2064d0da74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a67fdf-efd3-41e2-a7f1-e1c6b05498ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31eaa595-031c-4e4b-b7be-a2ca3f99ce5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f832976d-59cd-4de9-8fca-6a73e6ccc689",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cc9271-34d6-4321-bb4b-ae65fa6e4288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "718e3b40-ff8a-4c41-8aa7-70d06036aa08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7f391f-eba9-42ba-b4bf-6dafaa00e96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b466ad-3af8-45f5-81b8-3d0d23f1813c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9b885f-fdd3-4728-9d1f-882b1e05841e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4958650e-eae2-4ae7-bbe4-13c8c9365296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "761a50c1-92f8-4ac7-bda2-168392dc832e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eeb42d7-42f9-4257-a508-40bede7d6cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "09c158a6-fa19-4116-9dd8-4a3f463b1452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db58c59-765d-411e-a013-a962d88d1578",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb16e16e-2b8c-409b-be28-4b3a1296925b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14b7d19-b25b-4955-a8d3-20b8499bc91d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d50cd9-aae6-4ec0-89ae-b58defb01401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "881fb5da-8468-440a-acd6-2dde357a480b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e676600b-a769-4ad0-8458-db70cf9de1bb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b078ae-7359-4883-ba44-ec514748d6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "689872bf-eaf7-44fa-a730-ce4cfe275fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be814736-0fef-4d50-9a1f-73937d4ce1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff6d378-7289-4c2f-96e9-a20c863f0d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e796e007-8365-47f0-8555-54b0a79db8c9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1a0e63-f3a7-4c44-901b-b4f32eebc496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49f2b4c2-1570-4ba3-994f-551d6430709d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8b31c0-efc7-45fb-9d1b-1a30dbd10304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "61ea86d2-1056-4296-b8a0-68d867c2fa3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6654260f-daac-4919-9895-09eb036f18b7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b898df62-9762-477f-926f-a9f36f23a842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee71ea83-ddf9-45ef-a91b-44a7f8c2c3dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50904afe-5d81-4684-b1e0-300a184f7de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "80e185a9-9ea1-43ea-b6ee-ecec5de26fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225187fd-35b2-4a7a-b717-fc466123a1b3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd26f84-929e-4ef5-97b2-c29081971a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a92d6b-4bb1-4361-ad75-54f58e4a7cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a8cd4f-fbc2-4c8f-bd93-48b27827880d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4074548-933b-4665-8a2e-ba55322b4eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0c1572-d384-4bdb-bd70-786ca14e8412",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8566b9f9-39f8-4ae3-a0c2-7454d68763a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc419055-9817-4a91-bdb3-e7268c4ed2e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a1e4f9-3e95-4d23-9aca-4afc41dea74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac6f896-fe2e-42f3-9a86-dbc8a712b5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db0649b-fcc2-4cb7-96bb-a6966a6cabcc",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce11bf19-fa41-41fd-ac1d-66c990bd62f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5b83ae91-5ab3-4473-aa87-f42a67331978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b76bfd9-a8a7-4eac-8c30-8b6c88af4f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "02fae767-f9a0-43cf-bac7-14ab7c9018d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bb4121e2-9e4b-4fda-99d3-1c2eb57700a7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fdfaf239-bca8-44df-aabc-63021563499d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43b6c4b-9572-4413-af62-206f46280696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "812e7c26-bbe8-4c8a-a6be-0c9a4aae1594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11424910-7c8f-4b9f-9d19-914bc910b9c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "d691cda3-1ef0-405c-b2e6-84d054b00c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19d620a-5b76-4a80-8a7e-786e39b205ff",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101247a2-c0fa-4f66-876d-9ed0888a9aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e028541-2d28-477e-a4e2-58a33a8f7a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6811c8e6-2cb0-44f6-b264-4578214da2f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "c1b99f00-5441-45ca-be82-589f77a2dbe7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b35df2b4-9390-473f-82f6-79c597a15766",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab91fc58-1b08-4fd8-aa63-da6a7ee7a823"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee03c836-bf93-4fda-b5cc-76619701346e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42060088-8247-4c1a-be94-07334b62b992"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6a72fee6-225b-4d2e-ac6f-e67e28a7d389",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f8804ef1-32df-4937-94f1-bfa8ddb7def5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c2fefe7f-2329-41a8-9a0a-68f082002b63",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca486345-f67c-47b6-a71f-366b6f65dcee"
                }
              }
            ]
          },
          {
            "id": "3e59ab2f-7bb5-4875-a27d-82f0a22e507d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3b7b5410-6c03-4624-8417-fa0999e40e0f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "778437b6-a35b-4597-a16e-922e94b8ca63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0cfceff-3dee-4028-9b90-9e37d2d6ad6e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "865c6c7c-0e09-40b2-aa66-ab979c09f206",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "470a192b-8806-4086-bd3f-508286c16c06"
                    }
                  }
                ]
              },
              {
                "id": "9f564549-779e-4616-8fd7-590831fc71f0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f87eb18-b127-4e2d-9335-2cb5c6f04f21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "881e17c4-ef65-4aa4-8af6-25808a6bcd72"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "200f0e1f-a05d-403f-83ef-d601cba4f498",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "354efa92-ef46-4720-8922-baefcc398047"
                    }
                  }
                ]
              },
              {
                "id": "9d1eb549-b680-44ce-b95a-40917b0ec5be",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b8256f7-81b9-4980-8c80-a2000c7d03af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc5f35cb-c04a-48e0-ba4a-2c5aae1f8f97"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5eb78685-99a3-4f9e-8f0f-0c862d566902",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ea94537b-8ddd-4b72-91ef-0ab1f7494f4e"
                    }
                  }
                ]
              },
              {
                "id": "0604dae0-44ae-4d47-a7e6-4519e59c16f6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff7d2b7d-6d36-4ab6-bb0e-8216931ece28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "768869dd-74c6-49b2-a5b7-d2141a2ea30a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1c6b6a1-47ca-4734-8dbe-0ffd82f6c033",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "31ea48b9-7b8c-4650-90f8-0395572fac07"
                    }
                  }
                ]
              },
              {
                "id": "06c901cb-d451-45d7-a9c9-e433dcf9d7be",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a069017a-e285-407c-8ba0-0a7449904d05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d293b799-4ad1-4f2e-b246-7671f0578ec6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b48fcbfa-bc63-4c22-bac0-921773f6e4f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fe30da60-da57-4149-b798-567f11682904"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "792459bd-bdad-4db4-9934-393666388423",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84829fe9-96bd-46c6-ac5a-ebec829d34f7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7fa6023c-43a7-43e2-9d19-e56cdbb9f111",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9fe90073-4380-4f6a-9db7-ee69659d3a31"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b925ca8c-b79d-460a-819f-cddfd74d9dc0",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f0d5a078-0720-4a51-ac7f-5663d7b6c7d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ac7cc63-7a2c-4eb6-907b-627ede870a10",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5072447-9efd-4cf0-bdee-3cee747eefa0"
            }
          }
        ]
      },
      {
        "id": "a4cf2984-e018-4661-8bbb-86e728e799e5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f999bef7-2c26-42c0-9002-15d94adc713a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ded37dd-7362-4ba6-9783-9e4ae372728a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "80f1e1dc-2fe6-4c1f-871e-50d3dffdc4d2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26f44b0-72b9-4ccb-854d-c9e656336e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ee252a-7222-44db-88f6-6cf1d300a54d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4d2297-8b8a-4237-8fc5-5f6ea0e08221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "79c5e998-9b4a-4532-84e6-d5c1f97287a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1108c98e-06e9-4b94-aaf5-7c5fe7c65f26",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5d9873-2b1a-4be6-bb72-22299cd8b914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2da6ca8-5bd9-4cf0-92c8-f4eb33efe74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880dbd57-e64f-461b-88cc-228f801df377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd3cd6d-9f99-4872-9ce9-7cd018236d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3435208-b5e6-4a18-9bea-7107ae4c69a3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e09af56-bf29-41db-93a2-ec6dcaec4f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb4e528-53a2-4d32-b9bc-d73d9579187f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce6619a-0811-4084-ad15-b2269d5ac624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fefe2f4-f2ea-49fa-9232-6d6e184a6646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd03c501-7523-49b3-bea1-84f78bb55a08",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2be6632-1019-4906-a8d2-535f9564f7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f656b301-de3d-4b60-9eb2-e4daab1cfbb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78aeb591-4bc4-4a7e-ba5c-c5b89086d1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fabbf636-0621-4afd-8d76-bd7424f3a8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c51eed-3a21-4039-bc6e-95df81118204",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d746a2e-5efe-491a-b2b8-db6ac474221b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470e97ab-7d10-4ce0-8790-40e8ba2115d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d9a228-52a2-47bf-9598-a7e177372c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc31210-e3ab-496c-8672-3c812d7be4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b785eaa2-b541-4e86-a944-8c4c943c3c47",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "783db36d-9815-4c7f-8e67-4f0f5dfc166f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ba5b63-0545-4393-81db-2c047b1809f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c16d72a-73a8-4a8e-bd9b-8bcb7a21fc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4666c4cb-9e7f-4d0a-94c8-9528ba6a5c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ae5f06-4b28-437e-abca-5684ced35f60",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19410bd7-fa5e-4511-a8f4-210375f5dfc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f5338f-70e4-408f-8753-3ba79415f545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aae11a0-255c-4656-a44e-8110cfe1e15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f871c053-88ab-4608-86a2-2370277ed608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58da304b-bb76-4957-a899-265cf3871ab6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f084ca-4107-4922-be5e-2c42bf8b9880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495b48ae-e3b8-48ad-83e6-ae29aa364ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9de0280-3c8c-4552-bfff-91e4c80ca490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f534c6a-fb2f-40ab-84cf-9529c73c911a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0f1bdf-904b-472c-befe-d5499bd68c08",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cfa6f92-7c3a-4478-9f83-b58e9df8ed03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def6f76a-bbf1-456b-9085-30d0913e06b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813da837-9608-48f4-8381-026083b4a4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "618fb90e-7830-4c5c-905b-397df0c3ebdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6f8789-4e87-47a1-9de1-9988fe632cdc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d6036b-5145-4d97-8791-e13f15347b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9389dd46-0905-424d-8895-953f462afc46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec960e0d-6ada-4586-b727-e61619f00791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d58e0ad-1e91-4df3-98e3-927c29cf7760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e1dec8-93de-480b-a629-580970a4b875",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a646f584-2a9c-49f2-a14d-8842613bab43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaeee6af-f3c9-4e1a-a193-f9b59a0173ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c44eb1-020b-4fbf-8aff-973549f1a774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb0775d-7edd-4d7b-ba8b-97c4f59e2d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054cdc30-ae63-47c0-b485-8e083dbe0389",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5693a72c-5456-4992-986a-b24e9c4f18c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29b408c-a725-42b2-9df8-4e9b452eb4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f78c74-236a-410c-a03f-f15552aa7bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "112cac26-1ba6-481d-93c4-78f735ba4ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf82444e-9871-4856-bf38-aa2d95fd2255",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53c80a9-c62b-4f77-8cc6-d831ebef87b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59916247-23bf-4d50-946b-f669af2c8bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7544223b-688f-4c06-bc16-694710ababf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2435f36f-8937-4c2b-b6b1-17dc00b83971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c1c6b3-d55c-4bc8-a180-7b2ef3b05ab7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6916bb9d-9c3e-4e76-9f8b-21aa11d1959b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98daf1d7-30a2-47d8-9d12-fef3a0af1801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c558496f-1621-4395-adcd-f4150ea7fd15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9f7f850-e95c-4994-965c-72bffd499b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc715d3-ab95-4a69-81ca-002292f9887e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b54a47-9d12-4668-8ce5-5338830be442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47eb0714-914f-43ae-a329-98365f431502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fbdb89-3bb4-498e-bf32-6e40ca26ba32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "769e57a2-aadf-4dd1-ba40-61c68b111b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fa01c7-7554-4fe7-a2a8-569d080a10a6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e491701-dc8b-42e3-9726-b2952561e334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8672def-bb3b-4936-85a8-2314ae4e6763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff05695-d6ce-416e-8477-7154b2f40904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6848fabc-ae8d-4924-adb4-74f9dd68e6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b460aea-1657-4b32-bdee-984a36173121",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1869b5-66d5-41e2-a5be-69219621b1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8012f813-aa21-4587-9445-aca6b696073e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f4ca41-c07e-41a7-951c-2dd28ca0e294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d5be8c4-8c2c-4927-a685-fcdd45cec50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8ac006-b72a-418d-88e0-8b57d2583cf7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84582e29-f4c3-4c31-bddf-262f48a26494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699d01e9-854b-423f-a23e-b267c878d330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa0d471-9825-4994-960c-9d1afdb6bbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d839c8b7-2502-4c5a-979f-3c222ab35694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529576fa-ff80-40b4-b015-71a5c9760532",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d9a09e-abe7-4db3-b164-dadec515671c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9a1ab8-0eb8-4af5-9171-7a29c5286124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b975ff0f-fddc-4e18-9736-8106d1ff8132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9047c391-ccf1-401d-98e9-24e35f2e8889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4506afab-f39a-4e8d-8898-5b0f916f2a6c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52b89d5-5f9a-4514-ad67-59857048c2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7779cc-d7e6-444a-ab31-00795a206dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7817d0-35e1-496c-b603-7aa273e73ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8666fbb-376a-4da2-b6b1-5cbef7292015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd212e0a-c590-43a4-a17c-24c748036e5a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d43732d-7a62-467b-8eef-11cb2721c6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d58a631-9944-425d-8a08-2670bdf5b1ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be6106f-301e-4668-bcf4-12ba9468ecb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b54526e-755d-424a-b518-8b6e799369bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a05959b-adf5-4b0f-a962-603c1579a1c2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6198ad00-be30-4fc1-888a-c6cef39a1037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6825be-b0c4-440e-b7bd-3db8f8b387fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ec3c26-1dce-4ce9-a3db-362573eaec0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39860ff2-b5ba-4f63-adc8-2680c42e97d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a809e8a3-0b2e-48c4-806f-6ba1d584fa3a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a828b09-80c8-4121-b2af-0c6baf6dfb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517a9491-2ed0-4eca-bec2-5d8049a3ca9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b08fab-00e6-47d1-b967-6307a4e9ecc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4884ca7f-1561-4850-ad9c-a6305bf7f60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162521c6-04f1-4db9-a9ca-e232d5efda42",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5411942-cfa4-4b54-bcf2-b74dbc4629c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d009d7d-81ae-48fe-8692-59adedab80a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25dd44ea-7f6c-4b28-bb75-ec54cc7d550c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa2f26f4-ac04-46dc-b189-7507c3c9aa4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2990ff3a-92c1-4b8b-9870-b77052542463",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bc766c-6b0e-48ad-974a-14212e3965e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094a3721-9212-492e-8267-2979210ba9b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e488449e-1e53-45b5-9a9b-60b43449a8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31412fc9-885d-4044-8aaa-0691aa0bad36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2df168-b0cc-4356-a80b-06fb459f0386",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136ac565-c25c-48ca-beed-acabce148ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044128b4-1ce6-4866-b175-86da214b3605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c218f8a-2f51-4f5b-b54f-60e66d2ec7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1fd5e3c-7166-4a03-a57b-17c390885d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11aa20a2-ec02-4940-950b-90dbd0718d06",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe0fc72-f111-4477-9a46-4f753ab8ebbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c8316a-858b-4926-b4a8-4b4834ea147d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4cbfbd3-14c7-4ea9-bb9c-98388acf9e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d98ad9-c061-4bd1-8f3a-460adb2334b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04cf414e-e325-47ac-b5b9-fa65101cc29f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abce244f-9e25-4185-9f3e-549a719e0bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d150216-b845-4153-b703-2f03d4a4dc37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1a3d90-14eb-48ea-ac39-3c645a2bf77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a58268ed-ccc1-4e36-809f-18c6b84262aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfeae998-7b6a-42fa-96ec-7280491229f5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cb9fb2-7e03-4919-a756-56d6df7cf0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2c83fd-ee3b-4492-a921-0ddf3aab57ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f460dc4-b597-4419-90a2-16322df80907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f79b68b4-1b6a-4bfb-9460-e39a549b577a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de521ddd-7d41-47cf-bd2e-627a67d0eed1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b4f712-344f-4c3f-9176-7b4a1ea78ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ff74fa-cc82-4086-be41-d13cb5efff09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07646e7d-c915-4112-97ec-353beac92e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6686c55c-9493-4e7a-baf2-c8a6618da690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea6993f-cdac-4b12-863a-04b1466b3cb0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba635fb-e99c-4917-9bd9-63f2e5775b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988285b9-6cf0-4c1f-8073-6f0eb6ddd3b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198aecd2-d61e-4306-af8a-39884a927649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33b7b6ef-edab-42f6-8690-e8dde10369b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a173999e-c75a-47dc-9fe4-0d1000797c2a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f980c722-4185-4c60-83e9-c91595230dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27bf4e91-da7d-4401-b142-9c4054fe99a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae2d1a5-856a-472b-898f-c10979104f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13f0e1a1-249a-44ae-bf8b-16000d4b5f9b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2a7f3544-2fab-4cd6-84fa-e918b5be7059",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92a88f49-b539-4e39-877e-f75504bc63b0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b2ec18-260b-463a-8f2b-24742b5a4367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8142ea-2264-4f79-b7bd-7baed096f9a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f4aa26-49cc-49e6-b3d6-8faf691e76a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c062933-66f8-4092-8b58-6f9f2c4320f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3768699-a962-464d-99bb-3b88fdb6eb13",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cfbe29-b530-4013-942a-1c3b8b2d6754",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "e4149eba-c4e8-4b8a-8d4c-2ce8b82e90f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6249c6a7-fd22-41e6-8d85-798501d299a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fb491d8-998b-4404-a972-2ef0e78b2032"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cfdf291-24cc-4fd1-bf86-e0485141706e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "832f8a0f-4014-4710-bb8c-1c2d78bc342e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5c84cc1-fb36-4750-88a7-7211cfd71bbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "870f5742-7328-4320-bbcd-9f15e8216430"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5076486e-c733-407a-829a-5c3528a0fc94",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cc857bb9-dd0d-4556-bac7-811f46d76091"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1fd00725-9976-46a8-96e0-32616d776d97",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e91cc6d0-f629-4dd8-8269-adf2f563a070"
            }
          }
        ]
      },
      {
        "id": "3d6ca055-1016-42ca-ac6d-cb3a87d85f0a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a17a8552-c836-4d1e-b67d-003ace745095",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4fcabe6-3809-40c3-bcf7-3d20d242ae68",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "74993859-63ba-48a0-a1a1-7c30c1e90194",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf24c9e3-f6d0-4366-83d4-dafb3634e184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e20b0b2-2abe-4ba4-addb-e54f320007c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794a06e7-92ac-43c2-b33c-e367fc02afdb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95cbbb8-361e-4b55-ae25-25f013ff88c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350670a7-8f57-480e-a0b3-80ddfff17ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f1d446-3a54-44b0-ad16-b97e81a94507",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5bb76a-8069-4512-8774-38ecd589bd30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4debcbc-6d19-4fd1-929c-42d67c98daa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd995f4e-b9b7-459c-9f15-2860f5a2bacc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "820f6dc7-748a-4afd-8dfa-10103f862bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb7211c-4a0a-4657-b4bc-44d8c054ca5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8061ab3-b3ea-47e2-8545-9f03f2f370f1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657f1f7c-dace-476b-bc82-05037cf8c580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb6f368-7a9f-4fb7-a717-c17c78aabab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fcf8a8-cce4-4f3d-b847-5f4a23cf175f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2e4606-a013-42cf-bb3b-a7d4c01fb0a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98736960-0f2b-4773-91b7-d4258b116461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158c8581-2cb5-44a4-ac90-d62d623e23d3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10c64b3-42b4-4418-be6f-eb45f72eac75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2cfbca0-2d24-4fe2-ac1c-69532e4a95d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be37791d-7c24-475c-9eb1-04682bf5586c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa20ef2-ac7d-47bc-b3b4-a931a7205cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884c94b6-0c0a-4ed1-bb0c-67ccfb18d4f2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e27f8f-32f5-4127-bbfa-50dbdbfb4e9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5adf1252-4497-48b5-bf53-3cf191fabe64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acd9a01-685a-4c58-8c81-2731232a4607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ea5427-f3a2-44ca-b663-b41d45ee31bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78b6b3e-8874-471e-87be-433ec4555fee",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648a03d8-1931-40d0-ba4c-42a3ddaba2ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a273f168-bfef-42c1-8587-09325c02e887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1b3377-4c2a-4d2a-bfc6-457d8d0b7660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e6b2b2-6abb-49bf-9dd4-2edc8aeb13dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b26c7c-fcea-4058-af85-ea59e8fa92a5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec950947-d363-4343-b5af-3a5872ce492c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cc205f3-6525-4173-b537-3049b9e28aaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf62c33-4ab6-424c-97fc-4c14b5fb6f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4129501f-3594-49d1-848b-a11983cd3fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef41720-8cab-4e01-be47-abff2bc708dd",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05636e33-c330-4c13-bb4e-a4dfd064a41b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae3ef9f-e4c6-4e9b-a15a-b3eaedbe4939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7219f36-7135-47ca-9ec5-90cb906ed591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51461869-a0e6-4501-86ce-536426b2dae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4269e29-7627-4a79-a266-acf3021c218a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b6bce2-427e-47e4-8786-9f9270579eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5615f2aa-2c49-4053-b665-19d33508201d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d117b157-c159-4bef-b6e1-d6487f8d8487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dbb113f-a29b-4683-8646-cc40722043c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c54a3dc-9b07-46a5-bf24-b15b83babb5d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3582299-cf7a-4385-9028-2a93e31b1179",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7616c3fa-f5d7-43a4-99e0-3fa20cab7d54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6acfdfac-2df4-44f0-8a18-9c3336d4f0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f33175-9ffb-4e66-a8dc-2022a48b0d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3521078c-f48f-4300-a2a9-cbb41a555f41",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50896b1e-95b1-45fc-8ebf-dc003dd72d12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e74863a-0e1e-4788-baca-451a8f6f8057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12286ff7-7728-495e-8a3f-82b008fe4f17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b89281-bbd9-4398-835c-0bb3a8518158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5ca82a-cab3-407a-88fc-def3fbeaf33b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b140dc-7eda-4846-b499-6224e1901236",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0a40419-d7e3-4e02-9a9e-a320b49bed11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "729950bf-2456-44f4-b095-aafe154d9dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d286d43-0890-45e7-ad1e-6d71b3f3ea7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498028bd-67c3-47ff-b177-545e05d10a5b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da26f8a4-bd89-4b7e-be6c-266d35caac17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "245f522e-25fe-45ef-95ce-16bb939baf43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04035848-1f51-4577-96db-a2dafe011ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90b7f7e-518d-4563-8451-bf91d482b68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b760d7-a864-495b-b793-3d6309c733ac",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5199765-54a3-4384-a07c-6fdaaabb0956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88935d08-5574-4dde-9f73-a09e95c59e9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1cf4491-a09d-41fd-8aeb-fbf912959803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "111527b6-6dd0-468a-8977-2c41dbdb4b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba100e29-bdbf-4b88-ac9f-ec36b99370b2",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873cbebf-d368-4b63-a6e9-c80f864a1aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a3aaa4b-218b-4d85-8027-c73664a35bae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2da127-2e06-4e4c-91fe-830ffda798f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f9221c-4060-4c3b-a19c-771697658932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8697962-fd00-4fc2-8eb4-933c11191f8a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6484e9-9686-4f9e-a67a-b55cf2e8010e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd16a8f-bb33-4fd7-b1f5-a912cfb74bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "829208d0-bfcb-4014-b2fb-bc4a03b0eb73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2793d9a6-5068-49df-ab1d-746d18a242c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3717123-1e78-4775-ae0b-e361a55bde5e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4672e90a-2d92-48df-b6ac-fdab1b8c6ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1749c0e1-bf75-4a35-83fa-99135bb85dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d1b8f8-a489-40dc-bcc1-7b7ef7b63012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf4955d-9bb8-47e2-a97a-29cbd5246853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9a71a1-44b0-44b7-9a10-fa46ccf3ea74",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d87d10-f664-43b1-bb56-ab6c5b6236f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97899117-0b96-4b3c-afa9-c776893734b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "965596f4-0e8c-4840-9da2-2301cd6dd3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848e7aa5-83ed-41b1-877c-d07d7ad7db71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d4913d-2aa7-4b32-a69b-41287227586e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50d4de7-1855-4799-96d5-91b6997a1390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9faac05b-2bfc-4c8f-9ae7-7e828a746687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba9fb7b-3ebf-467f-9e18-dc27a472e673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2c33f6-0fcc-4d4f-80ce-ccfdda671317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5464f426-9401-4424-924e-c841f0431883",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a8cde6-6b7f-45c0-a016-0ae45e558214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a6c610c-4efe-49b1-93dc-7d039a6ecb54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "581ae755-96b0-44df-bc0a-536f0e075ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50adae39-ad6d-49e8-8ab8-faa2453d5107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0416ab15-73d4-4870-8887-7b5c4b8e89e6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d92d55-ef27-4d5e-aaed-a9801f472a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5d9711-c53a-4946-a502-c699b0890a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "744cf93e-3765-46eb-bd2c-10101f093789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc01b110-109a-40f5-9eac-3524ce39c66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35ef636-3a6d-498c-a200-1ddbecab74c3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa40dfc-dce3-45da-acc8-f2cf00ea81c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "564a919a-134b-46a1-bec0-8a91e12da698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b856f8e8-a007-45ce-a9b1-14dd984b4b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbafed9a-31e1-41d3-a090-7f035ff0a212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f13e31-823f-4fe6-a555-69d9256cb0ca",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ba8d3c-cd9d-487c-94b4-deddd3d2a07a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a3b1da2-3daa-438c-a3fb-ce1daf9602a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3f14c2-e8ee-48de-a424-24731f381bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "586b2738-9937-467e-bbaf-5373ea7b8521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509e3003-fda5-4ccb-8124-6d5126607246",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f1f645-9903-41c9-a391-ffe58c435c49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4efe7c07-3499-4713-8ad9-bc922ccaff3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4aee590-1127-401b-8405-28758745e84a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec8ccdc-2742-405f-aaa3-260360f5226e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb119211-e3ff-4fbb-a97d-b97642762d7b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e4d239-66b8-4798-aeb4-0ae17af69727",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74f7ec7e-e2d0-44c5-8ba7-897451b2dbb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bb413e-3387-48e8-978c-49a152b297de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ffda263-90e8-411f-9c54-15d99a74c442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225f56a6-ceae-4099-bc33-61a8948c845c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a3e99c-48de-4374-b8ec-53e85ec26638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1597682e-31a2-4c57-9ca8-6793d2d793eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4301a6c4-bafb-4ee5-abf6-7d310494a02e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93fe3b28-50f9-482c-bf05-f6f07ff022e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c409156a-e190-454c-925f-d876866860d6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7c352b-2ace-47af-84b5-75d03bafedb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cff15c8-e4a6-4ad8-a940-84e8c5fd1e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d91671-848a-4373-805f-25c3fb1a875f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd9b7aa-609d-4fdc-9334-9ea10f2e59b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7e6382-75a0-4909-b5f1-143f968bcd5a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5afdab-106e-452d-9a26-cf1674a1d29c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b72e746-dffa-47e2-b37f-61641a755100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "491b919b-bb15-415d-9925-d6e855bab193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "371bc0e3-f06c-4b93-b812-6bbc0f26a2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4540ad4c-31c6-4c86-b6ae-48f17fb671b9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbd2e6a-855d-4980-b91e-0596762cea28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e900afb-4630-4fed-bb78-37dd681e324e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66818486-22ac-48c1-8144-900a8c73fecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da5e1c9-0154-43e5-a250-6f24b862b2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c16dfb9-7ada-463b-8125-9df81ab27a58",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048b29c4-3ab2-4d07-8349-604bb407859f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f64bdc06-b4dc-44b1-88ad-b7a56ea92ac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8ae6fb-4137-4ea6-819c-562429b2e178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b84cb0a4-7f44-435c-9dd5-c6b4b26103bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4aea03-9868-4621-8f5c-a8585e6a0fe0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef27570e-b910-428d-9c49-dd9c06b66145",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5364b700-cb89-4b9c-ab1e-3d6730dd4fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3c8d0d-4804-40f7-ad59-fd5e5f09b59a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb6523e-979f-4898-9137-41c373b8a4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f134e620-31f3-4d41-9310-6d2127baa0da",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d82306-1c0a-498a-b3e6-6da3543f3a9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ccb1668-f3a0-4a5f-bb34-48836f37c263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bba7e2f-dfd8-4ae8-9b8f-cfa1e799dd15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe2423a-1b91-48a2-8fe5-c77106c639de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccff99f-6aa2-4d96-a3e4-9f9c576bd3e1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51756ce-be30-40d3-815a-d4aadf51f00a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f07252b6-a884-4090-9a3b-3256f112c52e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8d8365-8d19-4694-b013-d616d0ac532e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6acf4a42-8881-43bc-bed9-b6e22a83eb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5934d7-69a0-4ed0-b435-c0418e1b3b03",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649e3fad-da40-4a23-8e61-9d471596f834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f39ef73-7866-442c-9252-99a12b37c4d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d34353-7f60-45e5-b073-a60f410eb085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d14d7b-668c-4785-b543-296153635980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d795d2-629d-4aa8-b2d9-4c3da78cc9d9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bab0a42-0223-4263-a178-684f9851e25e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce09953a-eb52-4c1b-8b5b-c1f1f6ae4ab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6477b88-5ec1-41bf-adde-02c53edf2a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae685b6-88e4-4643-ae5d-3a03d9c5df12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac8c9c1-7c39-4960-9384-fbf8e6209a90",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d1f75a-8712-4c59-b4c8-fa6ab91bcc05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "459b7061-b5fe-43f6-b0f8-b98b0f8de24f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b260f71-17a3-4bbf-8ab1-a8edc910b78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace15a15-a89a-43ab-8813-7ab2c5ada867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d381753-cfb7-4a36-b396-cfc0e7965cf1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4f02ef-c63d-4aa3-b1ca-20827de0b11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe38e396-d49a-4c0b-b139-b4499479596e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0986ecd-241e-4567-9635-9791b2fa3c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5922c4-bd1a-404a-bd97-aff74876ae79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd99ed8-1f07-4143-bb90-9fab0556b349",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605bdd60-d79e-460f-a37c-ddb2e571b624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87fa4c1d-360a-41c6-8dae-75e8b70e6d0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "181a0d8c-a225-4472-b0b8-90fd0e8332a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61fdab0c-e7ec-48b8-b099-8378bbc27311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e874e8f2-abf4-4218-9039-857917953f13",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e2aa5d-0e15-4042-b381-25ed7a94f434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a83b607-2bd8-4287-abb8-26d6434d6205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a889315-985a-458a-9f50-f3c493ac93ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0751d30f-e55b-473b-9de1-8bdd200a8be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7097aa29-3083-455e-b076-844dfa947409",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b930b9-338e-4038-9187-167d5c71d779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c918102-078c-4f50-a3c0-97d77c292237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77c29a8-f68f-4ad2-b70c-1926e268b649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef69c2a-9abc-4b84-9565-29b21fc12dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f815e98-8d88-414d-ae49-12a1f7f1a8b6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2ab501-530b-49d2-84a9-ffad449f7d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb0ac85-a484-41f3-9da0-128aef7eb0a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "046a6c68-bcf0-414f-b07b-e52991b1a0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b72a82-5365-4e4a-b5ec-8b8568cdf608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa592bf-9f16-43cb-8b40-48be0902f042",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c378dd-80ca-4793-9350-b628da56c48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fff01e0-5242-4baa-96cf-483a22e9213d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd834b17-48ff-4820-af78-6d3aaeb4b5f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e120dc38-ea9b-4461-85f1-cb2a17f3770a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edd685d-c018-4bd8-a2a9-5ef529936aba",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d36d2a-f5d1-41a1-96a6-51a0c58f6e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce4c424-6574-44ff-ab5a-5c3d8cd356d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5eb67ce-4f25-466f-8ac3-cb318af40a26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8705428-b749-46a2-bbf6-44a6d584f525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6863016a-67aa-481d-b88f-6aef9859ec9a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05b8dc1-fb87-4a0f-b39a-3accdf802864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c157aa2-6b21-40ef-9299-ded9e48dccb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fff690-dfb8-41c4-9440-54aa4355f1c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a904f39e-0cc0-465e-8303-0c62a400a229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f82cab-62d0-45fd-a11f-892b67c7f8b4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ea8adc-445b-4093-a7b6-9f8b02519736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1f0e98-d33c-465d-bb7f-8b3301056547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbc4f9d-21d7-4de0-8877-04d5a81fd11c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9454b9-7bcd-42e6-aa77-cd2a95959f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ea6336-41fc-4197-8834-db47232007a4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed1b390-0002-4bc9-a59d-02e6eea374ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c551f870-c310-462d-9419-1a34c198ef0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75534d37-7a1d-47ef-ab6c-1e8e3bad3d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86ed01d-49cf-4c52-bc81-a0ad429c08fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505b140b-3039-4e89-99f6-5713594dbc85",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a6786d-ecf1-48be-b8ae-985a5181720e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b8bff3b-fdfa-4084-84d7-45b91b9b4866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49aa6467-e565-4342-aa65-ec239b621b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446cfa7a-4b41-4c4d-b441-78e0968ed0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317809ec-df6e-4e64-9154-f70dc7594e68",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c92f4e-1751-4329-af58-8e2961787f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad46cc8-c4bb-44c0-9b8c-9cbeeeed8b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5a5f45-65bc-4ddf-95e5-159a976d7b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5996a99d-5c5c-4cbd-8db4-9b2b28574f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbef60f-9a09-409f-84c1-fa6ce71588b2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e7b2db-11bb-4649-b14b-13013df2b56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a96fe32-9152-40a2-9bc5-d49c622c0dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02ca6a8-927a-4342-ba8c-f0ce257dcb03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad26f91-8575-4870-88c7-af3686feb96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5074131f-70c8-49d7-956f-9f27916dfac7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a1bd8d-8a13-4ae4-9115-5566ac9ac29a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27269ab3-49ac-49e7-884a-5f25e169585f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1affbd-80c3-4736-96cc-9c5911f7f91b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb819908-538b-465e-aa7f-940423877a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce6fb60-fe7c-4e1e-8204-6a86fdc08765",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845103dd-1cf2-46a4-a9b9-c6a3ff981674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dbaeaec-2550-4b23-80df-5bb9bcbbcebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f737df02-ce79-47af-bd03-91189a7fa314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e85f549-c15b-4539-ae4d-32cea0f91069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5228e80-dc71-43a8-a1c3-baf8afe5c089",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f50aca-f1ce-42cb-85db-3381060a5261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7784c5c4-4437-4406-b046-b59683c871cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1eb68e1-a9f2-41e6-8049-4e2b94adc2df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f13fcc1-7217-448c-9592-4a604f0abb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65034536-0e70-477a-951c-e178cf6494d8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf71d7c-bf5e-4f1b-97b5-af6181fd57c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64cefefb-42bd-407b-9a71-acc1b12b9379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f44e3d1-6e3f-483c-8f98-68cf93c4a3de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8979aa5-50e6-4ef3-80ac-4e7d8be89378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee4ec32-19a5-440a-a510-63d6cd5f50ea",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5d1238-dbc0-4eb4-9bc5-84ca4044e8e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a692dda8-a0e2-4e43-b147-8f95066ae724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce274fd8-f42a-4ea7-ab7f-920d3b2e3700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10943e5-8a57-46f8-9ae4-94c7fc832f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8aa0c2-82bc-454f-9999-8ac822ffbb12",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e807b05-e210-4297-aa3b-903984e2764b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77d4d90-12f8-4ce7-96ce-8d5d0d931561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf179be-2d8e-4adf-80c4-54459d434874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84270aa6-957a-4863-b58e-03eea9424a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60902f79-df56-4de7-b344-2a735090c927",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af78fc3b-310d-44b7-91a3-12a38563c3bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad193fa-5d6a-436c-8841-f2c5fe30ebd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218f889e-3f43-446c-a73b-47ecbf085969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25169a47-39a9-4180-9ac3-20887ddbcce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b833ece4-aba3-4c9e-be2a-fbafea2f88fb",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315b8a72-6ff9-41e2-8be5-4189ef424119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99033b4d-5e0c-4979-ad95-6e3548023a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc3892e-ad38-4a4a-aa58-83f0c9eb0fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14800f7-2483-4ed3-8f37-569e821b4750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f32ea3-e610-4803-8540-1c47691e0ebf",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ce2031-044c-4efd-9069-41cd05817852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a50c050-1f3a-4574-8be3-968a6798e13c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a92a67-168c-4c41-8ced-15f18638826c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e438d5ae-f19a-4b6c-9fec-cc554966909a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfa94b1-c9fb-4b05-bfe3-a875ea3c6de9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfc4988-9272-4c71-8483-638da632246c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c76d3430-39c2-4024-b7c4-dbad73cf0721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "597fe329-8511-4a8e-b244-2e41907e27e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb10024e-be8a-480c-823b-72458ef604d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19cf09b2-2224-4553-88ba-ab42519a6aa9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4b9156-93ec-459e-b49f-218f877ff5c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "590b78d3-0d41-4a59-ab11-fe5134cb1655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7838db69-1391-400f-871f-7a1e189cc09f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b385e68-7f86-4ad1-9b92-4272c44a98ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e323a3-7549-4e08-ba06-1ae444e60bea",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b32e35-dd91-45a5-96dc-915098ffd45f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39184abb-f0e4-45bd-bdba-617ce227bfa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63f04ca-1cb3-44c4-b257-7c70f40f5319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae3234e-cc4e-461b-844e-dec63494a7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b18ef7-3e1e-4e44-850e-3bc2918db52e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91983e60-b5ca-4cf8-b8c4-08c8ca89f49d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7e44b6f-dd88-4bc4-808d-e71c122b7c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb72c8ad-e371-4af7-84b0-a7fd3123f744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976d8dbb-c7d1-4201-9db8-ca79b91d695d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612ed936-58c3-4d37-9e74-c0ff65ce7c25",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0685bc-30e5-4956-9a01-c5a3568f96bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f5865a0-5176-4cf0-bb30-16f662576e2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0310c8-4981-4a2a-b2ab-a6c44e80fae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956a60a5-1f3c-4f8e-94ae-2a7dcf2d2c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5298a2d2-4ae9-4fb4-86c8-98326c5de0f6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0374727-0209-4035-be3f-956353159111",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82b58861-5fd0-4bc8-b67a-4257f978f8c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b375a1e3-99cb-4862-a094-171811d10584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f23f50d-7533-4e77-8d7e-6d14818aaa83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ad169d-6dbd-469b-a8d7-84dce2d57e76",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32fbe983-96fc-4b4c-afe9-401aedfdc5db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c009f652-a02d-41b7-ad12-e48f0b1abd64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9d064f-64a9-4a48-bc3d-4ca017b0dfea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca232a34-f7ff-401a-83dc-ee93134233bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7fdf6e-87a7-4a64-81f4-d111317b2751",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5388d2e4-5d36-4132-a41e-489ae14267fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d86c6fc-0fae-4c6e-9820-aabfeefbafc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "510263f9-4ece-488a-afc1-a18f351b19b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e91f760-1d1b-4547-84b9-06c8fcb74df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfc183d-ebea-4a89-9317-7e108904b453",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae64b47-ed60-4417-8b5e-8939654f251f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0f22da7-5b4e-42e1-8d4d-1c001476c1f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "664fbc59-72e8-4630-bc22-7d8887a571b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a36cd1-4eee-4c04-ac90-f6c89f422ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfaa8eb-9f8f-4242-91f2-5f901c57ca51",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a3927d-0c50-4f5e-b407-32e25236ab05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31d160cd-e03c-4a20-9225-3c1a84a8217f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9763ab84-f3fe-4190-8de5-f87643a92871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eabc5e54-12bf-4393-bba9-636c512b449b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9dd172-8993-4f2c-ac01-7c2b3a3bf9e7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894d865c-feb0-41fe-bccf-3edc523e2154",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1f6de7b-711e-40ab-bee6-c489967e9798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0a22b4-794e-4273-b634-f52b37bdb9c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26846e40-3d3c-4ac5-b621-5d942798fd19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a6d730-a487-4953-bad0-1ca81b12646a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f03d69-f843-48d5-93a8-05ad09e66f66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7023e6ef-4d5b-45ad-a83e-f75219385013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1962c85a-9f96-4a19-a549-6c2786bb6e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae18e88-5888-4151-adc0-8e0298819877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9213f93a-f930-4a69-9b27-d66780ab9fd8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4a11d4-561f-46bd-ac26-7c694bbe7057",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6993a9d9-93a3-4091-acaa-ac81fc73def0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead483a8-1757-475c-b95c-d72c1aee038c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980459b9-e659-4a20-b1e4-5465d929c532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970f3aa1-f6a3-466f-a890-eeaa3ea10b07",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c279d6-2207-403a-90e6-5d7777154330",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f822cd2-b4cf-45e5-9c10-6bf66f6f0bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e97b580-ba92-4750-853d-abd12d0ca201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6f2c5b-87dc-4610-bf3d-5584526f1b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3293e8e0-250b-43e5-b441-d614811868e5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6d30fc-9b9a-42c5-9dfe-7c3641cc0620",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0321e09-6b53-4724-bc42-9e05654bcf18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b42707f-c709-436d-b0c9-1a035f7d1bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4fc7142-c8c2-47cd-abe0-166055d7d2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d82360-bf5b-4571-ba37-1fffc63ecd1c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c92f25-af0a-44cf-a60d-cd04e8c2e182",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ecce1e1-9c12-42d3-adf7-8a028f441f7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e421a527-af93-40e5-85b0-815d674fcfe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065e9d27-2f72-417e-939f-d36849443350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5df32e-1ce7-435a-aed8-79883fac0463",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bee837-b1b7-4401-bfaa-3930952c528d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aa8bc53-99de-4936-953f-d77776ca4de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8394524f-9a04-45a3-a0ab-3be766c61914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11d97ce-3cc0-4283-997f-f7458b773dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4b7a54-a0b6-4b92-9971-b2d350dec21a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c930c9-8759-4666-a67f-b0c1572627b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8226170c-08fc-4207-944a-3c8f119beee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585a178c-06dd-4448-b90a-9fc029acfc6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b61c84-631b-4ce1-9346-e2d8164f1c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2484034f-d0b8-42e3-935c-d5fe6b91f11d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea001d01-df88-47a3-ae74-9e07c3112cd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dc18e4f-932a-4ff5-9800-393f5ddd3187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6eaad2-9d16-47fe-ab5e-f9fbcd265917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ae91e1-5716-4427-b8ec-5dc50d05f385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0346e33d-2912-4efb-868d-9c9c6113b8a0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39741bbf-12cb-4de9-b53a-37dd3e398774",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0e47084-7cd8-4811-8ce7-9734409ebed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "576f9254-e23c-4414-90b0-699169281381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71bce20c-6eab-4ea9-9bd8-dd2776335d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5931fef7-8dae-4528-8e22-f56856338093",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed32a6a7-a7e7-4e90-9658-3f1277ce5a54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afbc812c-32db-4a7c-a8a0-86e87ae32d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26ccf9a-f85d-40aa-b9d7-1f0fe3068d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f1adf1a-849f-4dd4-b209-cab20088919e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee1370d-7287-42e2-a274-b19fb14ef4fe",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8734076a-b85a-4a56-83b9-a1e9665ff808",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e75bb6db-6b4d-4c90-8703-acb1354e3afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11eeaf7-2aa9-4729-9df2-b81faeeb5619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c687210-4d23-4ed4-b7db-fe896f09f4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b40ee2-7ec5-4558-943d-2416c126320d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f431fbca-55db-4e72-b10f-bd406165a146",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de3701f0-1c03-4375-be97-b91becde2b99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22001b7c-09f6-4a44-87c3-181e74d32fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0578cb5-4507-4140-b87b-7d0c9b440594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66389aeb-b96b-4cbc-b606-1c792a434d65",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75005ef9-ddde-40fd-a3f1-cf4e703e7566",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b43a6aa4-a14d-4088-b70e-7525cc965ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d8c4d7-e584-4e42-be67-59bb92e1adab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0de10f-6d93-444c-ba1f-2be4ac0b5c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6e747f-f9a7-4a40-b0ba-980e0c05e424",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ba550e-e9fe-415a-82db-c718db80f375",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4404537a-9d6b-46fa-8236-2e25432e7f43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2632c9-566b-410b-9d58-fff3f1ac2153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "addd491e-e234-4627-8230-3eac8a2e44d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e659df-8864-4ccc-bbb4-d8304a12b450",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50074d7-bb6a-48f3-8b93-e0313c7cd59f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7b1d902-f417-4b3e-a5d5-0d52b0a12a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8e580b-9da9-4c1a-b8ed-5eab3db6f4b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "743e0ab5-8915-46bd-9a30-89b60b7d5fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2c6aa2-3db7-44ac-a779-0e9a4cadea86",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4692b66-fdde-426d-9f73-011cfd1a2fff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85fea355-a4d6-4a9e-bc9b-882196ea3d60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d43ff8-fc99-4aba-9070-b1245b91e14b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "570115ea-5b59-46ac-b81e-7a26a359dd16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b2fabe-fdb7-4333-8232-7ee5a5d041bb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9fd6bb-01fd-412e-bea0-268ca61e8c1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "150445a2-dc12-4408-bba7-bd7722e82bd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b06f0a-cc30-4663-937b-6e1c1937691d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49fbdba3-5dce-4818-9c2f-12d6573d5d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cefe8f1-dcb9-49fb-8400-13c8bc20639e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a7b8a8-a5ef-4eb6-9a3a-ba249aca89d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d0f71e4-6e1c-405b-b093-812e5e71baec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7796b385-f940-4add-81ef-ccd9d3515e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17359b9-a955-4733-81ac-ac864a4e94b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457a42a0-edaf-4332-8f56-cd8254f3dd57",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e3ebc3-f684-4e17-9a86-919e41941bd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baa51d7a-09dc-4300-9c2d-2eaac11f57f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1d7761-674b-4751-bdd3-d1d74ae2e166",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df78cbf-2acb-42cd-b300-a2f8fb15599e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3395b658-4dfb-41da-a9c4-38081a618cbe",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29e2326-0670-47a4-b8b7-a88edbee532e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3411981c-c707-4353-95a1-d8328ba23c6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da41d02-05e4-4116-93d5-4587d103bf32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae8b0ed3-7fd3-4ccf-b673-663a2c640c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b569a3-62b6-4653-9696-eca56e55a112",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d13e214-56d1-4cc8-bd85-c3b6faca0801",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c77c4027-8152-4690-a670-8a031e28703c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3303555-d5ce-46a3-a4fc-1fb7d5463481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2daf2441-8435-4999-9a69-c3b206cc9e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43cc089-a54a-4c26-8855-fe26ed9ca4e9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0977a392-e25e-4207-9f26-a0edbd909cd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4e6b355-a2b2-4550-b90a-f7df6bd85600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0dafbec-c0ac-4c82-b1b7-310bf250cc1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c6ef230-33b9-4f6b-8443-639cdf6a0ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63d1045-be2c-4e14-921c-ea3f0f150bca",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f70c7ca-5245-4a43-a7da-393a80540694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d391af15-c930-44fa-b108-4050b80af3c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4428d8-7003-4ef3-ba4d-6683ecb1fca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1ae05f-58e3-487f-bc82-9608895971db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a80c79-5134-40de-a2bc-e53e8546baa2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8fc6a0-8370-4e7c-80e3-864263e0cf2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a5eff0a-2cb4-4f09-9133-376f38153275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6e1d3a-98f1-4a35-bf5b-a419f5e23b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa44017-8230-4102-a7f4-c8a04ebb52c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359c633b-906e-43c1-87a0-0807700dd95d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0625aa-f5e4-4bfa-86c5-1e9871cbbbab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f5da485-cfb4-4638-b54d-5ce57f9c68a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b6bb59-01eb-4848-be54-5efcae1153b8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933795c1-801a-4ad4-bfd8-7046d945b515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3abe32-8c96-484a-a953-0c7b93c81af3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9cd149-8ab6-46af-b207-8255129f5c05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af06d84d-98c4-481e-8b66-bd609d0054cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ab4289-0af5-4b97-838f-dc9ff2f0d217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6598a237-257d-4590-8590-8140d0552bb8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2d2797b-6b46-4b32-8b0c-92f4b2ee3837",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31d392ca-4aa2-4151-a431-17bde0990060"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c365a5a-0f33-4252-8bc9-bb9843b66955",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a82c7c07-1177-47da-8dba-8970cda4097f"
                    }
                  }
                ]
              },
              {
                "id": "ee7e691b-3825-4d2a-9495-f23ab9b6f0f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "edfb8ddb-40c9-487c-8b1f-371367f118d2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1431a972-6d37-4d0f-b7f0-7bc8db22fdfc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1d8c9968-3510-4350-9d22-7d1af8e9abcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da17ceb-0024-4beb-8dc0-3c1774f831b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "506e0574-5799-466a-a71f-c1c636253b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beaebf0b-1a25-4f81-96da-b0b888f1609c",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cfef8c-0465-4281-bdd4-c56a06a5f7eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d78a9792-7cc4-4d15-ac25-f3071ca62d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5683d7de-1257-4636-a056-39736d574198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2a0c0eb-acc6-450d-bfd0-cd6a46822657"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddb2b80a-4beb-4f8e-9a44-a0be4b57dcf0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2df065b-e24f-4f3a-b253-d98d6628db8e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4902d22e-6f2e-4dc9-a12e-32cd618c7363",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f63f4b1-89f8-4d15-b47c-f3993141621e"
                    }
                  }
                ]
              },
              {
                "id": "2e0c37cc-6692-4be5-86e0-a5d593e32f0f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "361c6b15-294e-485d-9ca0-20a89b7cea9d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f16ba1-0c8e-467a-b31b-6b0405312b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2821b9dd-45b0-4419-9735-3bef15d81cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f751f79e-3693-40c6-a78b-03a3f334a0de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd1e4b9-8d94-4b83-9403-0bb03e64f65c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0639b5e0-944c-4715-a31f-6973e54a2c22",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f292efae-6c8a-488a-9f8c-4522036a5cbc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb5212f3-cfec-4638-b4b3-5fa3fcefcf9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "224acdd1-4992-47cc-aa15-a8da60ee71b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c62d4114-a69b-487e-8b4d-b97c66ecd428",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ad29887-6588-45d3-af41-0bd2c80b302b"
                    }
                  }
                ]
              },
              {
                "id": "4c76b646-b482-4d24-8cc5-98d473c46119",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e97e95f3-0ba6-4033-a278-97ebf12a5d18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7289f2cd-2685-427b-81fc-f604988fb0a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "135afe26-6512-4ae3-a505-e5f4278d575d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd606a2f-691f-439a-8185-98632168c239"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c7036035-090f-4a37-8819-683696ce607a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "54c45e21-5069-4f8f-b5b2-2ba329d2714a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b99ecc2a-9fcf-428b-bac4-c75a51e2bf5d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3319a919-32a6-49e7-b7a3-e155af262e1f"
            }
          }
        ]
      },
      {
        "id": "97814093-b20b-4edc-b6d9-7590165aa080",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9562b899-20fd-4775-a1dd-8e9882fcd21e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4c04a7c4-efa8-4739-afcf-9491515c5f06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "22399438-e1d1-4bb1-9156-349720b59415",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d79000-3821-4fca-bca2-de9a5070a824",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2e4c12eb-cb02-4abd-96c7-cf6c7c72fd13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "922e5ca8-e308-44a4-bf94-510dc036c35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a600f16d-e42c-418a-998c-6298a6df6699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504955a9-5de3-499b-a5fb-8cc0c728ce14",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8020f3-5f2c-407e-98db-59418e05a143",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0d9691e4-1d81-4327-bed3-322d1f8c2340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef63d7a8-dc39-433a-93f0-b126573c6ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5346f7b-192a-477e-a9e7-b6fd60dda48e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eebc7ece-0c10-4768-9db0-5126e06d2482",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc33284b-2aba-47c6-b097-9cd224f359c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "678a1178-befd-49b5-8e20-0288ada8c5ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbee4d7d-6222-459a-9a2c-5b54bdeb79b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9cc0564-e411-4bd1-aae8-a587d4edf594",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3eb04c5a-3d17-4e64-a2ce-4f5d90cb8e2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a35abde-9d6e-4e1f-b5aa-229ff3e88f9c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b69a490-7399-41f1-a62f-8a6f855f256e"
            }
          }
        ]
      },
      {
        "id": "ed1deabf-df1b-47cc-ac21-6929d0923aca",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "16a3ac4c-4c71-4408-a7da-a00f29116870",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fdfe3b4f-80b8-4a9b-958a-faea263e0ca6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "703521ed-fb97-4a40-91b9-0092e825c044",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c03d958-97c7-4f14-9ade-7a2ff72d8d3a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "27dc5fe7-042d-4b13-9be9-7033660c835d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f013e008-9ac1-416b-84f1-a96ee2462d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e85d3d3-adce-4484-9aab-0b21238f12bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6324149-4b27-4808-866c-b1693fd080bd",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3acc7eb5-11cc-47d5-b09f-f677a799b3ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "de181211-1569-4c27-a80d-2ba933fac6b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "912d7570-5e2e-4a5f-b5cd-0e626908b15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8fda082a-bd84-4a12-91cc-f0404183249a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cffe535b-aab2-415f-8181-3d5ddc53c320",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b33cfd4-55f2-4024-938e-676ea7b1aacf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df85e72b-3db9-4930-a9ff-6701c8df9a99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a444ac77-0332-49bd-a0a3-708ba5f1e1f9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4db6b282-3b40-40bb-b46c-37c93c1756ca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ab3a1934-1556-42af-831a-3f1ff5c53fbe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6d417b0-4d57-44ff-ab0d-2871b751f0d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5615618-c306-4de7-bf15-c4a7b859e2d6"
            }
          }
        ]
      },
      {
        "id": "f9b6a344-964b-483a-a282-cf0107c7512c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6e4e7127-ae9d-4c03-8b33-f364bd40b106",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78ada588-5f0b-44a8-ab6e-461dacdfdac0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1e792767-e52d-4376-b871-992e2b8026fd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c45726-3cc6-433d-9764-d3d4f53eba8a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2ea84b0e-cb6f-4d3d-9486-4f6a4f8877cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e8d220-ab89-40cc-80b6-4467105ce60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7a87f00-ee78-4e6e-bf34-9decb9fc0e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33db1ad6-0b6c-428b-9b10-25e111674cad",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37e3a72-a435-4f8c-a4d7-782b1daa4b46",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c773b02d-4352-41f6-a278-6aaac7b31d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5f1369-b5b2-4003-937c-45408eb9c2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4652b617-0105-48cf-9cce-f6748ffe6e64"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a83da6d-f41a-44c0-8625-7f6553661d84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7c02afb-d07b-4009-9723-aea42dea196c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5df5e25-629b-4139-92fb-bebd31d52f04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d9b2339-bd22-41d3-ac4c-270ae75f2e6b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b48c836c-5b11-43b2-a08a-8a9a17196955",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "80d07754-928e-48f6-a3aa-64a5d0ca083a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "323fa432-a374-4a6d-b5a6-9b1eee019a6b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77213629-6c22-49cc-97ad-32f38d2c7b66"
            }
          }
        ]
      },
      {
        "id": "6c212f93-f936-47e9-baf2-ea203146c2aa",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5cbf0f90-992d-4d64-9d5f-69701bcf4d11",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62fdd966-94f4-4496-8766-28b7287066b3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "62a4c001-f7a7-420c-a0cc-e09ba70321f8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67a973c9-47d9-47d3-a5bf-4f015bc14a43",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33ee4396-f831-46b1-a744-fed226cd8ef6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 702.1068702290078,
      "responseMin": 11,
      "responseMax": 10954,
      "responseSd": 1053.9675513343748,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1673224686668,
      "completed": 1673224880453
    },
    "executions": [
      {
        "id": "083cebc8-9622-428d-9ecf-1c4a65284bfc",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "32b95024-5acb-48e1-a1bd-4be1097bc021",
          "httpRequestId": "50ee5c46-801a-4911-86ae-9eb92cc48fab"
        },
        "item": {
          "id": "083cebc8-9622-428d-9ecf-1c4a65284bfc",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6dd7d0f4-bab3-477e-849c-ed1b6903e1ff",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 0
        }
      },
      {
        "id": "727717e7-302a-4de3-a69a-518d755ce6e9",
        "cursor": {
          "ref": "02680689-b2ac-4b43-a3b6-d9d8f9385f68",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "930aaff4-1fd2-4367-b87b-7e812d4c3b8b"
        },
        "item": {
          "id": "727717e7-302a-4de3-a69a-518d755ce6e9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fbb29a53-cef7-4196-94fd-849d099b5a4b",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "cc9a488f-82db-432f-86dc-dc79b3e96e65",
        "cursor": {
          "ref": "c82b1648-9fd3-4231-9df2-c9d9843a5030",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "672dcb47-ffb5-4c46-9579-488e37ddb672"
        },
        "item": {
          "id": "cc9a488f-82db-432f-86dc-dc79b3e96e65",
          "name": "did_json"
        },
        "response": {
          "id": "57f72f2c-ed9a-4393-a1a9-36b85c945c87",
          "status": "OK",
          "code": 200,
          "responseTime": 1185,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88d3efd-cb8c-4914-a86a-3d1bba2643b7",
        "cursor": {
          "ref": "e05193e2-e9a1-427e-967e-e0f7c7cbea60",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "78d08b99-9519-4ac8-a1eb-c7987c6f5b4f"
        },
        "item": {
          "id": "d88d3efd-cb8c-4914-a86a-3d1bba2643b7",
          "name": "did:invalid"
        },
        "response": {
          "id": "e2f1f1ee-1d4a-4ceb-93b1-750539594921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 885,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88d3efd-cb8c-4914-a86a-3d1bba2643b7",
        "cursor": {
          "ref": "e05193e2-e9a1-427e-967e-e0f7c7cbea60",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "78d08b99-9519-4ac8-a1eb-c7987c6f5b4f"
        },
        "item": {
          "id": "d88d3efd-cb8c-4914-a86a-3d1bba2643b7",
          "name": "did:invalid"
        },
        "response": {
          "id": "e2f1f1ee-1d4a-4ceb-93b1-750539594921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 885,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a8bbe2-cd17-41f9-af6f-a6163247cd2d",
        "cursor": {
          "ref": "9a074da1-c1c7-4c93-b560-13ee330024d4",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "10f5a733-ffa8-4e12-ae82-32089a027138"
        },
        "item": {
          "id": "72a8bbe2-cd17-41f9-af6f-a6163247cd2d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cd036941-6fc6-4d15-abe1-ff3cbe72ba0f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 735,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce9e199-55fb-4e34-9356-78a97e7bfe90",
        "cursor": {
          "ref": "f42f508f-75bd-4a93-b955-c98707139b38",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "67e00801-d5ec-4d57-a936-23ed1641265f"
        },
        "item": {
          "id": "3ce9e199-55fb-4e34-9356-78a97e7bfe90",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "33b69e32-f957-48f1-82d5-6516c4f88cef",
          "status": "Not Found",
          "code": 404,
          "responseTime": 611,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09f7e6b-b2eb-416c-a5ce-3c909b0f336f",
        "cursor": {
          "ref": "81019485-5fbd-48e2-9500-80824f688395",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1181e4b0-aacf-436b-bfb8-995f5ac47288"
        },
        "item": {
          "id": "c09f7e6b-b2eb-416c-a5ce-3c909b0f336f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d23aae51-c896-4e5e-9b3a-fca5059762b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7555fc6-8f2c-4d6d-b5ed-93321cb92862",
        "cursor": {
          "ref": "1daa5a41-3bc9-421c-9db6-57e7b5dd5140",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7df7d9b6-1e0e-4e98-9d86-781585486622"
        },
        "item": {
          "id": "f7555fc6-8f2c-4d6d-b5ed-93321cb92862",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "8b5b43a1-2978-4b77-8a6b-c9510cd93431",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 946,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7555fc6-8f2c-4d6d-b5ed-93321cb92862",
        "cursor": {
          "ref": "1daa5a41-3bc9-421c-9db6-57e7b5dd5140",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7df7d9b6-1e0e-4e98-9d86-781585486622"
        },
        "item": {
          "id": "f7555fc6-8f2c-4d6d-b5ed-93321cb92862",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "8b5b43a1-2978-4b77-8a6b-c9510cd93431",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 946,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2076a9-c033-42fd-87e8-059a3da16c53",
        "cursor": {
          "ref": "ae2500bd-f8e5-4e34-b3b1-6af47fdbd84a",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "02d3100e-826c-40c9-af36-b04929e83f09"
        },
        "item": {
          "id": "4a2076a9-c033-42fd-87e8-059a3da16c53",
          "name": "identifiers"
        },
        "response": {
          "id": "6dfc39ba-54b2-429f-b14e-f3b3ace3fec5",
          "status": "OK",
          "code": 200,
          "responseTime": 1905,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854e3ecc-7121-4b87-8131-a543fec9a9f4",
        "cursor": {
          "ref": "20003a1e-bf16-47a5-b437-7129cbf69308",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "83c36c7e-13fe-4813-a9c6-aaff756c07bc"
        },
        "item": {
          "id": "854e3ecc-7121-4b87-8131-a543fec9a9f4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "819956d0-1306-4539-a48e-e5f661750d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1251,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854e3ecc-7121-4b87-8131-a543fec9a9f4",
        "cursor": {
          "ref": "20003a1e-bf16-47a5-b437-7129cbf69308",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "83c36c7e-13fe-4813-a9c6-aaff756c07bc"
        },
        "item": {
          "id": "854e3ecc-7121-4b87-8131-a543fec9a9f4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "819956d0-1306-4539-a48e-e5f661750d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1251,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d74914-cb15-42e6-ab0b-3fb48781c85b",
        "cursor": {
          "ref": "583ddf2a-308e-40e5-a028-3c92cb47084d",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bd1c2ee9-73b2-4a69-9ce5-d293f81886d5"
        },
        "item": {
          "id": "29d74914-cb15-42e6-ab0b-3fb48781c85b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f30ad4cc-474b-44fc-8c43-f5fbaee84d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1605,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105519e6-9397-4c93-905f-a7145a243b32",
        "cursor": {
          "ref": "c42a6152-585b-4506-a729-4e3666ccea35",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "15f6bced-4b6e-42a6-a52e-fed49051f9ee"
        },
        "item": {
          "id": "105519e6-9397-4c93-905f-a7145a243b32",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "3a682c75-e4fa-401b-ada8-87d0023520f2",
          "status": "Created",
          "code": 201,
          "responseTime": 4968,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "aeaade10-1b8b-49e2-904f-9e2eea35747f",
        "cursor": {
          "ref": "567fc85a-efc2-4b2e-a44f-c4794be60042",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "bc9f8425-576a-47f3-8a00-d128918c3d1f"
        },
        "item": {
          "id": "aeaade10-1b8b-49e2-904f-9e2eea35747f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fc92a76c-3fd1-4139-9f82-bcc86d2ea4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2f0785-0d0e-4a03-b287-e17f1267c4ac",
        "cursor": {
          "ref": "e790df8e-b949-4cec-908b-7d71d40c9ef0",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a3c5b346-1830-4269-8bc4-bac041930513"
        },
        "item": {
          "id": "5d2f0785-0d0e-4a03-b287-e17f1267c4ac",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "789ea383-42fb-40bb-9645-5ac420462a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922936c7-a422-4c97-a6f5-9948736b5d60",
        "cursor": {
          "ref": "924faa5b-3214-48e9-9172-575cc798ac83",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "42b1ba28-091b-4c68-a277-e1a2e4423bcc"
        },
        "item": {
          "id": "922936c7-a422-4c97-a6f5-9948736b5d60",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ea6aad9f-4258-4d8e-a071-d53ec6dcc717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82328083-0dd9-4fa3-9d70-a08a13a710a0",
        "cursor": {
          "ref": "c595756a-058f-4071-9b06-dc4770ce8edd",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2b20da61-5216-4df8-a254-f28796ef91a0"
        },
        "item": {
          "id": "82328083-0dd9-4fa3-9d70-a08a13a710a0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1f0f9d6b-cd05-49e9-a4dc-40d66f7a2f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b036f10c-383c-4c03-aa19-4e42142d0f49",
        "cursor": {
          "ref": "47ac0391-1435-429c-97a1-31612e7269f3",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "de36391c-91de-4fe3-97c2-66d097c1ec44"
        },
        "item": {
          "id": "b036f10c-383c-4c03-aa19-4e42142d0f49",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1088003c-0896-41fd-942f-1c32fa1ac466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fcb5f9-f706-43d4-a07a-7069c0e50c1a",
        "cursor": {
          "ref": "3ea0c02e-304c-4a42-9d8f-8fb1024c5c92",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "03b138df-0fd5-45da-b423-b7a766eb5746"
        },
        "item": {
          "id": "d8fcb5f9-f706-43d4-a07a-7069c0e50c1a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "21fa976b-9d91-4c3f-9d56-16efb7eabc4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a231635c-8cab-4274-b985-2ea3b9786eea",
        "cursor": {
          "ref": "2bbd9de0-0bd8-47b8-89de-6d4fd10c50e0",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "297b9886-f412-4f89-91d5-87bd9aae50b0"
        },
        "item": {
          "id": "a231635c-8cab-4274-b985-2ea3b9786eea",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e423a94b-03d1-41a1-9ad1-5d2a7f0b8836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794f774b-9efb-44ee-818f-c482b9e27122",
        "cursor": {
          "ref": "2aebba2a-93dc-437b-8d9e-3ebfedf2432d",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1d1052d4-97d7-4b44-bac6-bc8541017d2a"
        },
        "item": {
          "id": "794f774b-9efb-44ee-818f-c482b9e27122",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8bf1d5fb-e8eb-4794-a2fa-a7056cac62fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312164f4-791e-4afc-9c50-5bb8f1db04be",
        "cursor": {
          "ref": "6ca527fc-e5ff-4a03-b258-5de6fca04421",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0c1cae9f-e9bf-4cc3-87f8-eaa0190c71ba"
        },
        "item": {
          "id": "312164f4-791e-4afc-9c50-5bb8f1db04be",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "dbcf0ba2-ed32-42bb-a1bf-b0edc1f6dff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d105b564-1ee7-424a-a4e3-d2fa37d3a836",
        "cursor": {
          "ref": "209c3e10-374a-4e9a-9504-2ce1ef6c23c6",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1070d418-95ea-43cc-b384-851199ece7cd"
        },
        "item": {
          "id": "d105b564-1ee7-424a-a4e3-d2fa37d3a836",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "410584bf-d5b1-4817-a118-faab8a5eeee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c99a9ab-1258-47b6-8f53-ccfb80edf4b1",
        "cursor": {
          "ref": "4b00375b-3db6-48d8-88fc-058931e487f2",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5bd244fe-611d-4e27-826c-5c529167192b"
        },
        "item": {
          "id": "0c99a9ab-1258-47b6-8f53-ccfb80edf4b1",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "20808252-eb62-49c4-b62b-7b07d02a8784",
          "status": "Created",
          "code": 201,
          "responseTime": 4946,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "10fbeac0-d504-44a3-908f-f67105d5928c",
        "cursor": {
          "ref": "481e5375-7d13-4ec2-a7be-ccc4865b030d",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0a75ce0c-4085-4768-be51-17d7bd44b6cf"
        },
        "item": {
          "id": "10fbeac0-d504-44a3-908f-f67105d5928c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "69991bcd-83c7-49b7-8479-382a9d0f1dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee18b2d5-d6e2-454e-b00f-fdf123c904f3",
        "cursor": {
          "ref": "067ab510-9b53-4b80-8996-51a53b57abb2",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "31407e78-7a86-442a-9528-314a957f1c5d"
        },
        "item": {
          "id": "ee18b2d5-d6e2-454e-b00f-fdf123c904f3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ba27fcd8-5e56-4f2e-a738-6a323bd8e2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ce8244-f3d2-4b9d-86fa-1950db3a6763",
        "cursor": {
          "ref": "1d57efbf-601d-4384-9015-608fbbc75605",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "daff7d77-9b0a-4232-afb6-1092dbbfcb1d"
        },
        "item": {
          "id": "b0ce8244-f3d2-4b9d-86fa-1950db3a6763",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5ef7fdf2-088a-44ef-baf9-9184a385290f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae246656-bf6e-4efe-ada5-551a7ba11644",
        "cursor": {
          "ref": "2f44f179-1bc0-417b-b35a-b05d38986b05",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a4b02526-cae9-484c-8857-07037f79d3c9"
        },
        "item": {
          "id": "ae246656-bf6e-4efe-ada5-551a7ba11644",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6df6fca8-3085-40e3-8d82-585ca1af641d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b235ff2f-b9d4-42a5-aa65-1ed36906a20b",
        "cursor": {
          "ref": "ac4b3321-7b2f-4920-8757-8fc46c85a7d5",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0cd8ad19-eb53-4d51-b449-ff5702f08f52"
        },
        "item": {
          "id": "b235ff2f-b9d4-42a5-aa65-1ed36906a20b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "73d2e5e0-84ae-41ee-bcf2-862c50ed22d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e13152b-9ce6-4445-83d3-f982fbbd993f",
        "cursor": {
          "ref": "8a9212f2-8b6f-4042-92d3-fcf6e3fc0392",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "32c23130-3474-4e08-92bd-10c4dffa0dfc"
        },
        "item": {
          "id": "2e13152b-9ce6-4445-83d3-f982fbbd993f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6324c29a-3c16-42f7-9637-969f143c3bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5f819b-dfa0-4548-afb3-10ac7140e98b",
        "cursor": {
          "ref": "7e370ce9-cffc-4a4d-96fc-cc40390b32df",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ec4d3738-6a4b-443b-9e04-75e8e60996a2"
        },
        "item": {
          "id": "da5f819b-dfa0-4548-afb3-10ac7140e98b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5f693054-d651-44ee-b6b6-e7d4bf3870e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88189c15-294e-4cf5-87d3-11f891815c45",
        "cursor": {
          "ref": "f2eada7a-2b57-4e70-8b6d-cafcf080fba4",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c0877ad6-0db8-411c-b88f-a41f134515fd"
        },
        "item": {
          "id": "88189c15-294e-4cf5-87d3-11f891815c45",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c767f1f8-a029-4ae4-a257-66f33f50e929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280e9898-12bb-442f-b0d6-44b92573740a",
        "cursor": {
          "ref": "d9e3683f-3e82-4dab-9307-3c64159eb763",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a671a619-9ede-4f24-9000-cdece4cff30a"
        },
        "item": {
          "id": "280e9898-12bb-442f-b0d6-44b92573740a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f71dd945-db18-49da-8dc7-c1690b7c1b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3041b539-d1b1-411f-b287-122d1dd187b6",
        "cursor": {
          "ref": "952fe804-9ec8-43e5-a8f1-4e0a5a4c951b",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3a27ed46-5c49-4fa3-87b6-3fb99e493b83"
        },
        "item": {
          "id": "3041b539-d1b1-411f-b287-122d1dd187b6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "57f5ab86-7af6-4eb8-b7b3-23f65cb099b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03adbb3-c35a-4369-98d2-7bbfe47a49f3",
        "cursor": {
          "ref": "189bd729-fbf8-419f-8efa-be2dc489c325",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4d9fb23f-35fa-432b-bc6f-3892f4424768"
        },
        "item": {
          "id": "f03adbb3-c35a-4369-98d2-7bbfe47a49f3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9c82d220-933f-4e8d-950a-204779a0d284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30d9c7b-17f2-4833-843b-bceed51de4c7",
        "cursor": {
          "ref": "7bf493e5-0a59-42b7-86c5-299daff8df42",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d2a0a856-63ba-4103-a194-54ef8451a587"
        },
        "item": {
          "id": "f30d9c7b-17f2-4833-843b-bceed51de4c7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b08b4559-d756-4fad-b205-08a2d6bd1d61",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2162,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "25ab517b-8acc-42b6-bb9e-cc5198b97044",
        "cursor": {
          "ref": "74f0440e-d4d7-4dc5-8ace-3b86a1efbab0",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f1a2a330-8310-46d5-8499-e36b592468e6"
        },
        "item": {
          "id": "25ab517b-8acc-42b6-bb9e-cc5198b97044",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "92578dbe-0c8a-431a-a30c-bcd852676cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84eb80d-31a3-49e0-bbf1-faccbc263f4a",
        "cursor": {
          "ref": "0044a7db-2289-4c97-a01e-c630588eab91",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e81724a4-2a73-49a0-b793-8ef4286c7299"
        },
        "item": {
          "id": "f84eb80d-31a3-49e0-bbf1-faccbc263f4a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "71c81d9d-e36f-4613-94b9-1e37752290d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f5e9d2-b13a-44cc-8252-ebb1897ba1a8",
        "cursor": {
          "ref": "e6095fea-5172-438b-a83d-c5ed6c22beca",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "86f2040f-fa16-4a7a-9a63-aae4e7f8f5e2"
        },
        "item": {
          "id": "a5f5e9d2-b13a-44cc-8252-ebb1897ba1a8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9bd477a3-a732-48f2-a43a-8c30d41cb418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab1f2a3-b06d-4b17-bd98-7fbfd9a0674c",
        "cursor": {
          "ref": "d6e7435f-6bba-4399-8128-a9c4c67ec745",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f3463145-4a2b-4fe6-91f6-5fb3c350145c"
        },
        "item": {
          "id": "7ab1f2a3-b06d-4b17-bd98-7fbfd9a0674c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "872afe79-c50c-4a92-8e80-449e586dfecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c854875-0253-46fb-90be-8b00cb21916c",
        "cursor": {
          "ref": "af22a699-eb33-4f2c-884e-2fdfb771bca6",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a8f62d63-3ebe-4d96-b075-76ef3647c728"
        },
        "item": {
          "id": "2c854875-0253-46fb-90be-8b00cb21916c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "822a4658-0e27-4b4f-bbdc-0c0bf9ace5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5355dc6c-5ab2-41df-8b80-27c863e6e4a0",
        "cursor": {
          "ref": "66000e27-a438-4ae1-b332-7350a1ed9542",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8c8f3578-5285-48ea-8243-e51f9d165d2e"
        },
        "item": {
          "id": "5355dc6c-5ab2-41df-8b80-27c863e6e4a0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5beb2190-80e0-4c4e-acc5-fef9f3bbde6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c88456-908d-44a3-9349-9592c7f38f7d",
        "cursor": {
          "ref": "f9af4e1b-06dd-4597-891c-9b5f0da2381b",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e43849a9-af13-48ae-a183-2704285fef7d"
        },
        "item": {
          "id": "71c88456-908d-44a3-9349-9592c7f38f7d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ae9c26e7-d66b-40e0-8a42-2234939eeb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2796017a-d693-4ba7-acfe-e8b2afc5cf85",
        "cursor": {
          "ref": "525dc8cf-b142-4d83-a62b-b288405a1e2a",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5e68f618-18ac-43ba-a1ec-d92e6e5b1025"
        },
        "item": {
          "id": "2796017a-d693-4ba7-acfe-e8b2afc5cf85",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b208cc06-67cc-4d97-8ca0-27f63e678f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b05abd-006c-4fe1-b6df-494c873ace89",
        "cursor": {
          "ref": "687cfec3-eb1f-423f-85f1-f6a374d04e73",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "93a77740-c8c1-4491-8ac2-deff51c5898d"
        },
        "item": {
          "id": "c9b05abd-006c-4fe1-b6df-494c873ace89",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4d8eaf82-8312-43ab-b16c-20da6fc84113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39eb7eb-ecb6-4ac6-b936-3c424ad50dcb",
        "cursor": {
          "ref": "2a7f866c-2222-4e2f-8783-acf515ebeb22",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "676ada6a-4689-43c5-be82-e0c9bbcd701f"
        },
        "item": {
          "id": "a39eb7eb-ecb6-4ac6-b936-3c424ad50dcb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3223bca6-fc71-4cb5-9c82-b7e13e9f1a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9239132a-7b89-4ebb-b5a5-7ba99735015d",
        "cursor": {
          "ref": "e4507880-924b-47ef-945b-3253392d274a",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ec9cc5fe-f175-45cf-aaa1-f99611453d86"
        },
        "item": {
          "id": "9239132a-7b89-4ebb-b5a5-7ba99735015d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "68837386-e51c-4d2e-a300-9ef9423eb883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532d4c4c-a3d8-4533-9c08-a08e4c9c2ecf",
        "cursor": {
          "ref": "41082582-3aa9-4812-a346-fb5251bb61ec",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7a916c1a-8655-460a-ac59-03665ff72aec"
        },
        "item": {
          "id": "532d4c4c-a3d8-4533-9c08-a08e4c9c2ecf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ee13bcf0-54ae-4cde-86e7-ac7e6e418b61",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 602,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52305750-7c3c-4a02-94fe-cc38bca29fb2",
        "cursor": {
          "ref": "34acd487-4144-4725-ad0c-9edd11cb8607",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a39390a2-c28c-4e39-97ec-b3ad6dae3681"
        },
        "item": {
          "id": "52305750-7c3c-4a02-94fe-cc38bca29fb2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "24fcf18c-f3d7-404a-a591-a9d8e1b156a9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 548,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "4f7a64b3-ffec-490a-8fd5-82a84d8986de",
        "cursor": {
          "ref": "730b3958-6544-4d48-bd68-72d57e04c8e6",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4f91f259-cb88-4c8b-87d0-47035378c2e4"
        },
        "item": {
          "id": "4f7a64b3-ffec-490a-8fd5-82a84d8986de",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "14e3e41d-d6dd-4aca-9a12-cccd2cc26745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59677a2-b325-44ef-8a52-770080ccc286",
        "cursor": {
          "ref": "6a2b42ed-9703-4673-b28f-4705ec090650",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c44cbaf4-145b-402f-9830-727f759e1552"
        },
        "item": {
          "id": "b59677a2-b325-44ef-8a52-770080ccc286",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7030f7e2-1515-4758-83e9-1b8c04f82ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e548a5ad-0f50-44f0-86e6-08f639ba15b1",
        "cursor": {
          "ref": "b0fc6329-a10b-4884-bdce-00a19d0b1496",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "10d63f81-59a5-4b18-b583-e5f3fc9011a0"
        },
        "item": {
          "id": "e548a5ad-0f50-44f0-86e6-08f639ba15b1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9cd9da64-8853-4999-b823-e390cbcbede2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c239e19-08f5-4b7b-b83d-951312ee5db5",
        "cursor": {
          "ref": "b06aeb94-3623-4973-800b-89a8d2552b1c",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ff8e8287-3f11-48b0-a6d1-cf6c2cb34242"
        },
        "item": {
          "id": "6c239e19-08f5-4b7b-b83d-951312ee5db5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "cbdaae6c-5e44-47eb-9376-35f55dc535bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76f55ca-75a3-4692-84dc-9d1c56bfeb10",
        "cursor": {
          "ref": "d045db89-da9b-4835-904e-504cca28f0c6",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f444f5c5-8f6b-499a-8395-bbb2aed23eaf"
        },
        "item": {
          "id": "e76f55ca-75a3-4692-84dc-9d1c56bfeb10",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ab78ce17-ae10-4953-bffd-250a1b1bd3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61d7f8a-7fdd-463b-9d06-d021623196b9",
        "cursor": {
          "ref": "804baea3-b9a5-4371-b1cb-1cad466bd616",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "02dd4788-e52e-43e6-83f2-63c81894151b"
        },
        "item": {
          "id": "a61d7f8a-7fdd-463b-9d06-d021623196b9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "01c87b3f-09e7-4bb1-a903-23cf26415ac5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 605,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e62a3b-2df6-4f01-8991-00932d7a3256",
        "cursor": {
          "ref": "afe1a2dc-66b1-4ec5-95f5-5e65a6aaf82d",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "613c8355-67f2-4e0d-96d7-44da0fe4d05d"
        },
        "item": {
          "id": "47e62a3b-2df6-4f01-8991-00932d7a3256",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0364ff15-1393-4962-8114-00c94c69b854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49b60d8-f14a-40b0-9691-d4806ab93979",
        "cursor": {
          "ref": "6d7b09eb-e84e-4ca9-a244-614e766c96e3",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ab12abb7-c79e-4b57-a194-96dd199b247c"
        },
        "item": {
          "id": "e49b60d8-f14a-40b0-9691-d4806ab93979",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3133a981-b36d-40f0-b6ac-1bd260b6e2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8035c3-1224-4afe-a771-5ce144a83e36",
        "cursor": {
          "ref": "038459c0-ea7b-46a8-9215-b00fc86611c5",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d99b2fd0-7cb3-41a2-b1e4-91751fb60ef9"
        },
        "item": {
          "id": "fd8035c3-1224-4afe-a771-5ce144a83e36",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ab6f2a43-c291-47dd-9684-402d128f2ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e25bdba-dfc2-47dc-b83b-d3521d7e6ab8",
        "cursor": {
          "ref": "196756c4-51ad-45c3-8fba-eb22d30973e3",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f46437c1-0dd1-43b4-bbd9-94ffb7c86274"
        },
        "item": {
          "id": "6e25bdba-dfc2-47dc-b83b-d3521d7e6ab8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "75a72fd9-c866-4746-b5e9-2ebd0ca1b922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7aba8a-9c3b-437d-afa1-f8500a569aa7",
        "cursor": {
          "ref": "a93e2793-2379-4451-878a-da974f319851",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a2d9c7ac-f07b-410e-a8b8-d6a5b5afd051"
        },
        "item": {
          "id": "7f7aba8a-9c3b-437d-afa1-f8500a569aa7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7fa2bff7-f554-46ce-abe2-5b8a135917d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297435f5-0405-4022-a27b-0f677d25c546",
        "cursor": {
          "ref": "4763d55e-e0f3-458d-a641-943f826c7581",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d518a982-2491-4541-8bf2-ff9e4e1ed0bd"
        },
        "item": {
          "id": "297435f5-0405-4022-a27b-0f677d25c546",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "27e4dc21-74d0-4774-8eb5-eaeacf63649b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc7a519-f120-4699-a3a1-f52306a4b156",
        "cursor": {
          "ref": "f6cd0ff7-e531-471b-8830-b8a006172547",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "24ea2bc9-557f-45cc-bc33-91701c264b5b"
        },
        "item": {
          "id": "5cc7a519-f120-4699-a3a1-f52306a4b156",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b8f9197a-18d8-4862-80d4-3870654bfa70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae2523a-33f9-4717-bb16-858c4f1e4e51",
        "cursor": {
          "ref": "7e95525b-6180-4c77-b5e4-cb426baff833",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "cde79618-1df3-4878-bc0d-9da8a25547a4"
        },
        "item": {
          "id": "fae2523a-33f9-4717-bb16-858c4f1e4e51",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6f2888a3-40ee-4722-97b7-18fa115762f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d3fbfe-362c-4a8c-a175-8bca3809ace5",
        "cursor": {
          "ref": "5f7c2691-3ced-48a8-a9eb-134c8fc2c704",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "596fb9b6-0393-4bdc-9df9-4d7e2e2a9300"
        },
        "item": {
          "id": "72d3fbfe-362c-4a8c-a175-8bca3809ace5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "368b3783-f691-4975-add3-6804704e49c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903ca9b9-0285-481b-961f-9bb94c7182da",
        "cursor": {
          "ref": "7fe34cae-a7e2-40df-8c7a-ca947d122e95",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c9ba1219-f265-4652-ba2a-78bdbd69ad64"
        },
        "item": {
          "id": "903ca9b9-0285-481b-961f-9bb94c7182da",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b53a87cb-acc9-429f-995a-284acdcc0b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a7bc65-a288-4cb1-b27f-0ed49377d21c",
        "cursor": {
          "ref": "79a2185c-dfeb-4051-a008-f7d608aa7007",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f1d420d0-9a7e-4363-8486-71288322269d"
        },
        "item": {
          "id": "99a7bc65-a288-4cb1-b27f-0ed49377d21c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8a252d55-59a8-44c2-8842-9b11743cdcb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff90f8e-79b3-41fa-ba75-970f7bee5295",
        "cursor": {
          "ref": "297814b0-0957-461c-824e-3240f01be15c",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fe8f09ed-b075-47e6-8a55-bde24d8d5d25"
        },
        "item": {
          "id": "cff90f8e-79b3-41fa-ba75-970f7bee5295",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "392b4142-33ba-4392-83fb-8f95ad87cd40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44806d6-6e7b-4c2c-9d4f-f4f743d313d5",
        "cursor": {
          "ref": "7b401ce3-d1ea-4bb2-8643-f575e02ffb5b",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3f41dd0b-fad3-4b69-84ad-48053e43cb88"
        },
        "item": {
          "id": "c44806d6-6e7b-4c2c-9d4f-f4f743d313d5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b85062ea-c2c5-46e2-9065-c77b995e50a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75cb16d-a6cc-43ca-80ed-b8cdbbeae26d",
        "cursor": {
          "ref": "32165d2d-01c6-49df-b19d-4d44080ba285",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "56850a0a-50bb-4639-8c05-416e8d5dcb66"
        },
        "item": {
          "id": "b75cb16d-a6cc-43ca-80ed-b8cdbbeae26d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8f4c5fcd-ce7a-4cd9-a063-ee12639a375f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50344c9-fe8d-4aa4-9e5d-258e8ad7fe83",
        "cursor": {
          "ref": "db7f67e5-570d-4c0a-a82e-04972dc127df",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6dd6008f-a09d-4896-878c-c8b8cc55eecd"
        },
        "item": {
          "id": "f50344c9-fe8d-4aa4-9e5d-258e8ad7fe83",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3db6dbc2-3855-4ac9-935d-24b2360f355d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26019e38-2dec-42da-8789-28e0106968e3",
        "cursor": {
          "ref": "7a8836ca-fff7-4949-b3be-478a97211aa3",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2cd50542-c4c7-4ecb-ab7f-a0b17ea6d0a5"
        },
        "item": {
          "id": "26019e38-2dec-42da-8789-28e0106968e3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "98e2b208-2c88-41f9-b20e-a12b4e57b807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ef76a3-4a90-467c-a2c6-375da952d584",
        "cursor": {
          "ref": "41134b15-6629-4eb4-98f9-677574032985",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0217e6cf-3226-41ad-8a2a-c77abdacc58c"
        },
        "item": {
          "id": "73ef76a3-4a90-467c-a2c6-375da952d584",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "70a33672-fdb6-435e-a4d3-c031a2c05c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd16d7b-0c47-4f84-a6fc-1319e77300b7",
        "cursor": {
          "ref": "b7467600-945e-4c65-8d2a-a96eb3c1677a",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d4088c92-68cd-4493-acfe-99fd72a44285"
        },
        "item": {
          "id": "ecd16d7b-0c47-4f84-a6fc-1319e77300b7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "61fb565d-8087-431f-ba8e-19c8975d4f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4091fd73-269c-4a8a-ae3a-b42375124338",
        "cursor": {
          "ref": "643c01e6-3ff4-47e2-9fe3-c0c9fe573c7d",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "770c61e0-ea37-4630-803d-808712764899"
        },
        "item": {
          "id": "4091fd73-269c-4a8a-ae3a-b42375124338",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d5b17a5b-43c8-4dd2-9b46-3f1343ab69a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72dc92da-13e9-4cb7-bd6b-d39ebb9f3b52",
        "cursor": {
          "ref": "19de6586-fea5-481b-9d75-d45d2ce71141",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "72b6fbbb-d80f-4852-84dd-c27ad3802bc9"
        },
        "item": {
          "id": "72dc92da-13e9-4cb7-bd6b-d39ebb9f3b52",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0a1b73eb-eb80-4f4f-96c1-5d39c3398de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bafbc7-61a4-42fd-81aa-726218e231a1",
        "cursor": {
          "ref": "179ec54a-beac-482e-867a-cbdc35d8be17",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5771f9ad-dc41-4220-951a-a7b013e081f8"
        },
        "item": {
          "id": "b5bafbc7-61a4-42fd-81aa-726218e231a1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6e37d22f-2424-4e77-941e-a2a63d7275e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 925,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bced91-ea1b-42cd-865e-c1c47ba20a9b",
        "cursor": {
          "ref": "e2d39a9c-258c-42ce-9574-48e35985d647",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "276c8e44-d475-4f43-9db0-6838504e2d52"
        },
        "item": {
          "id": "b0bced91-ea1b-42cd-865e-c1c47ba20a9b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b84d8718-f5f4-4d13-a8fb-7b4f57175002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 900,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26fe0fc-7023-4789-bd48-aeb0a449a9e2",
        "cursor": {
          "ref": "5c8c3a9f-feda-428b-a6bc-bcf5f0ff8316",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ea69c5e2-8128-414c-8735-9530563bc7c9"
        },
        "item": {
          "id": "f26fe0fc-7023-4789-bd48-aeb0a449a9e2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8c81fb5e-2274-4b5c-a135-a605909f2470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27fcc329-8757-40bf-9749-b51bdd4cea18",
        "cursor": {
          "ref": "466dabdc-296b-4dd5-8575-de511114984d",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0c97083d-c75e-4a6f-9156-6f260a362278"
        },
        "item": {
          "id": "27fcc329-8757-40bf-9749-b51bdd4cea18",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d2bf8199-6740-429e-b7fb-bd40cd8442bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f205dd63-9a98-4f32-ae47-a95ff4af3994",
        "cursor": {
          "ref": "ca5fb219-1682-4e63-ba6f-1d2d64bf64aa",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8978cc77-a7d0-4c5f-bc13-8b6c407c4fe1"
        },
        "item": {
          "id": "f205dd63-9a98-4f32-ae47-a95ff4af3994",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a4bf90a7-b760-4107-b472-424a15bcb190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2729c9ac-1174-40e1-af83-3247a51b60de",
        "cursor": {
          "ref": "c1e8a0a7-1dbb-4356-90d8-2a5049024598",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b70e484f-9f77-4de6-b751-e147f94637e1"
        },
        "item": {
          "id": "2729c9ac-1174-40e1-af83-3247a51b60de",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6b62afd9-8cea-4982-8b1c-b069c751f8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057872b2-1ca0-4d83-afe2-30920abe067f",
        "cursor": {
          "ref": "0f03cc4c-94da-4b8d-b1ae-d1479efc6b9e",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4750f858-c7b8-4fab-bb70-4b30f48cb38c"
        },
        "item": {
          "id": "057872b2-1ca0-4d83-afe2-30920abe067f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "04a693ef-1770-4b93-a51a-530be1166f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5bcb8c-2094-4eae-9e4b-39ad6bb0632a",
        "cursor": {
          "ref": "d7e30b89-be16-4e7b-8509-158651c451ee",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5b7b61b9-686e-4eff-a74b-a9eeb99770a3"
        },
        "item": {
          "id": "2f5bcb8c-2094-4eae-9e4b-39ad6bb0632a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ab985c01-1f0c-45ae-a9e5-facf30054baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ec98ba-67f0-493f-ae6e-f2dda9de917f",
        "cursor": {
          "ref": "1f33d0ae-1228-45f6-8258-3b924f68c95e",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "396947cf-b97e-4453-85dd-99a5a3c955f0"
        },
        "item": {
          "id": "12ec98ba-67f0-493f-ae6e-f2dda9de917f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d3ac1849-b822-4a3a-8cb3-77d67c4fd1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af309168-e739-40c4-8d1d-555b605c30f1",
        "cursor": {
          "ref": "febc2dcd-23f1-426c-b3f2-94a92efd5f7b",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7875b42d-d648-469a-9b54-9e0c3df752b0"
        },
        "item": {
          "id": "af309168-e739-40c4-8d1d-555b605c30f1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a00ba353-9e72-417e-9770-847dd69f561f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ee600c-3e9b-45f2-83a4-a28c1044e6c3",
        "cursor": {
          "ref": "93653678-6c16-483d-bb34-0e08ce2eaae8",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e8eb4037-1b31-41cb-a2cb-7b98be85cd68"
        },
        "item": {
          "id": "53ee600c-3e9b-45f2-83a4-a28c1044e6c3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c5481b3d-9917-488c-890f-890c1c7ef954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3a5133-46e0-4747-8194-460c30e0736b",
        "cursor": {
          "ref": "2d189329-c41e-4bc5-aa6e-1444d9f7a677",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2257fa32-fbfa-4b09-a19d-8bc6bfbc1ef8"
        },
        "item": {
          "id": "bc3a5133-46e0-4747-8194-460c30e0736b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c974502a-4004-45fb-84b6-21d65af2b676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef095d4b-2f28-43a8-b756-f19c5ec96629",
        "cursor": {
          "ref": "b38bf664-2b63-43d2-8c74-a00433f8918d",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0e606324-3ef6-4f4e-9bb1-b24a8fdfdcad"
        },
        "item": {
          "id": "ef095d4b-2f28-43a8-b756-f19c5ec96629",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5f3471b6-aa88-4165-9c7e-bf065666d5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113a33a5-e28c-420c-9005-210d45ddf69a",
        "cursor": {
          "ref": "04bc4e54-1000-4941-9cb9-786b95f18738",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "51a88fe8-6736-4310-84e7-14a8dd50cf4a"
        },
        "item": {
          "id": "113a33a5-e28c-420c-9005-210d45ddf69a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f1eb989f-6a29-4dfd-a638-0e69c52021d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2704efd-5b0e-4f97-bf72-21ed5e0f70b2",
        "cursor": {
          "ref": "a70604d4-40d0-414d-8e6a-68fc36f40d56",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ec68fbb0-0209-4e18-875e-4b1a2a1a436a"
        },
        "item": {
          "id": "a2704efd-5b0e-4f97-bf72-21ed5e0f70b2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f4b868eb-8c54-474b-8cec-b05f7526fa77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b8385c-0cd2-47f2-9d6c-a48943d82141",
        "cursor": {
          "ref": "b745ecc4-e5bf-4584-a678-00fe03e9bd7e",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7e3fda63-188d-4cf7-8564-098416bd6c6f"
        },
        "item": {
          "id": "d2b8385c-0cd2-47f2-9d6c-a48943d82141",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "aec7dd98-f53c-43fb-81a4-0478845ba290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db87e3e-efb5-4f01-8ea5-0c02b6ff54b9",
        "cursor": {
          "ref": "6139f9bc-cd68-4db7-91c3-216519e3be4e",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "35532440-e17d-4800-a91f-9cfd729a21c6"
        },
        "item": {
          "id": "7db87e3e-efb5-4f01-8ea5-0c02b6ff54b9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "671e7c6b-c4a4-4693-9590-a3aad2d61bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec63db12-e7ea-477b-be67-090c69c07473",
        "cursor": {
          "ref": "6888fce8-1b17-40b3-bda1-3659608d21eb",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ef8c0bfd-7750-4e16-9565-28779928cdc6"
        },
        "item": {
          "id": "ec63db12-e7ea-477b-be67-090c69c07473",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "15fb4e40-e04b-48b6-8b81-e3bab8bde6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ab180e-cf1e-4aa8-9fd0-075402637227",
        "cursor": {
          "ref": "f27cb05c-3a92-4c0a-8d12-dffc7aebecbf",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "43d2e69d-017f-4de5-ac0c-ae4c43068b02"
        },
        "item": {
          "id": "e2ab180e-cf1e-4aa8-9fd0-075402637227",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e6acfc31-5d04-4548-bc6b-4e37381f24df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1db0735-e182-4fc8-8800-f0a531ef4d04",
        "cursor": {
          "ref": "61522327-c094-4b85-a55f-7ed490eecd3a",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b993f8c0-a3ea-4b09-8964-14c7f5a2017a"
        },
        "item": {
          "id": "c1db0735-e182-4fc8-8800-f0a531ef4d04",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "af6f479d-6a5d-4a6f-b841-9cc59c44918b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f832976d-59cd-4de9-8fca-6a73e6ccc689",
        "cursor": {
          "ref": "5b0bdc95-7d9a-460f-bbcc-d5995ef73ddb",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "22ac9fb4-72a0-460f-a499-c833cc6b2280"
        },
        "item": {
          "id": "f832976d-59cd-4de9-8fca-6a73e6ccc689",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "88834221-6a28-4c93-872b-20a043c63bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9b885f-fdd3-4728-9d1f-882b1e05841e",
        "cursor": {
          "ref": "55c4d3f7-be4b-4e35-a6d4-4dcba9e9c4a2",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "babfe591-604c-4022-addb-d5bfe62814a4"
        },
        "item": {
          "id": "9b9b885f-fdd3-4728-9d1f-882b1e05841e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "88e7f4cf-40da-469f-9599-983564ebe337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db58c59-765d-411e-a013-a962d88d1578",
        "cursor": {
          "ref": "28342c47-155c-47fc-a7c8-8ee56649f4ef",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "217d27f3-b216-4faf-b82e-81ca117caace"
        },
        "item": {
          "id": "1db58c59-765d-411e-a013-a962d88d1578",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b862bcd2-5c5c-40f8-a2ee-848ff4985a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e676600b-a769-4ad0-8458-db70cf9de1bb",
        "cursor": {
          "ref": "ceec66ff-4e38-4cf8-b0e5-713a46610444",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a23eb86b-75d4-4dea-b17b-4b4a6ce4f9c0"
        },
        "item": {
          "id": "e676600b-a769-4ad0-8458-db70cf9de1bb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "544b9bbd-d352-45c5-8ff8-9a5c8984f3d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e796e007-8365-47f0-8555-54b0a79db8c9",
        "cursor": {
          "ref": "6da95467-07a0-46a1-9d93-f682c24ae67a",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "193a1c22-1a45-4df7-98f5-2990114fc0c4"
        },
        "item": {
          "id": "e796e007-8365-47f0-8555-54b0a79db8c9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "51020bbb-e0e7-45a2-8978-c1a86914779a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6654260f-daac-4919-9895-09eb036f18b7",
        "cursor": {
          "ref": "e9b3d14e-f71e-4afe-863f-05ac844f2364",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ca8c8972-78e1-475e-b4fc-76364730f06c"
        },
        "item": {
          "id": "6654260f-daac-4919-9895-09eb036f18b7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "df3dba05-e51e-4975-a032-380f2a7b28f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225187fd-35b2-4a7a-b717-fc466123a1b3",
        "cursor": {
          "ref": "265faa40-6c65-4a69-be86-e53e7c1d4343",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b0906b2b-c988-4b1a-8ea6-cbce4b2d2e6d"
        },
        "item": {
          "id": "225187fd-35b2-4a7a-b717-fc466123a1b3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bc2c5c94-e460-40f0-9ebc-60987c8865b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0c1572-d384-4bdb-bd70-786ca14e8412",
        "cursor": {
          "ref": "c3d35f8e-da2f-4d77-912d-8334560be513",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fb519649-f598-4f5f-91a7-bc6e993518fd"
        },
        "item": {
          "id": "7a0c1572-d384-4bdb-bd70-786ca14e8412",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d4fbfbed-41af-4575-a7d0-19ba68a54d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db0649b-fcc2-4cb7-96bb-a6966a6cabcc",
        "cursor": {
          "ref": "d0d40223-b449-48c4-bdfa-39b904ed6bfc",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "61a9a8db-01b7-4eb6-b8a9-907408a338b8"
        },
        "item": {
          "id": "4db0649b-fcc2-4cb7-96bb-a6966a6cabcc",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "741931d4-c038-485e-9e10-eb772be358e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1073,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfaf239-bca8-44df-aabc-63021563499d",
        "cursor": {
          "ref": "ba3882fa-5c6a-41f7-9d75-b44095681909",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b39e1893-0d57-4bd3-a98e-246198169bd0"
        },
        "item": {
          "id": "fdfaf239-bca8-44df-aabc-63021563499d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "927672be-6e96-4303-bc2d-bc8422a57a5d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19d620a-5b76-4a80-8a7e-786e39b205ff",
        "cursor": {
          "ref": "43c28938-7744-4899-8ccc-19d974a6944e",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "53d7bb1e-3aff-4563-ab43-e342d692d631"
        },
        "item": {
          "id": "d19d620a-5b76-4a80-8a7e-786e39b205ff",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "9485bb8e-b22e-48bd-afda-6dfb025baa33",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1196,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7b5410-6c03-4624-8417-fa0999e40e0f",
        "cursor": {
          "ref": "9dc0d81a-f90e-43b5-a420-81fc205491c2",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a7e92bc5-3160-47e0-9d89-7d66c335dfcc"
        },
        "item": {
          "id": "3b7b5410-6c03-4624-8417-fa0999e40e0f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "188c917f-253b-481b-882d-a6262c610da1",
          "status": "Created",
          "code": 201,
          "responseTime": 10954,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "9f564549-779e-4616-8fd7-590831fc71f0",
        "cursor": {
          "ref": "c9148240-7216-4bfc-93b1-537052eefce6",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "51f0cef6-dabb-4833-a5e5-856af75e350e"
        },
        "item": {
          "id": "9f564549-779e-4616-8fd7-590831fc71f0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b07e4cc7-056a-425c-b789-039de0ff9e0d",
          "status": "Created",
          "code": 201,
          "responseTime": 5465,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "9d1eb549-b680-44ce-b95a-40917b0ec5be",
        "cursor": {
          "ref": "71e8a659-c93d-4a56-a8e2-53e5dae4ca97",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8243406a-2237-4f11-afa1-6f9da7f3a6f1"
        },
        "item": {
          "id": "9d1eb549-b680-44ce-b95a-40917b0ec5be",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8b3262bc-029d-4a3a-9178-41fb2a2f1630",
          "status": "Created",
          "code": 201,
          "responseTime": 6175,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "0604dae0-44ae-4d47-a7e6-4519e59c16f6",
        "cursor": {
          "ref": "957d235a-e573-432d-a7b0-05bf56e4f1ec",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8f6a8ed0-1dd1-4d9b-9696-b06ba8bee601"
        },
        "item": {
          "id": "0604dae0-44ae-4d47-a7e6-4519e59c16f6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dc8af654-a0ae-4e42-b315-8f23730f9b25",
          "status": "Created",
          "code": 201,
          "responseTime": 5398,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "06c901cb-d451-45d7-a9c9-e433dcf9d7be",
        "cursor": {
          "ref": "300786a2-6277-4a27-8233-93a72733459c",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9a38f100-18d6-484d-b7bc-d211143568ad"
        },
        "item": {
          "id": "06c901cb-d451-45d7-a9c9-e433dcf9d7be",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9442347d-85a9-4efc-9f54-283f7bf360c8",
          "status": "Created",
          "code": 201,
          "responseTime": 7525,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "80f1e1dc-2fe6-4c1f-871e-50d3dffdc4d2",
        "cursor": {
          "ref": "1d774e98-45f8-4a53-b6f9-28d4cd3f8527",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6f7dc249-b69b-4801-bd3e-5c1e5df233b4"
        },
        "item": {
          "id": "80f1e1dc-2fe6-4c1f-871e-50d3dffdc4d2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "95b17895-0d74-4317-b5d7-b002e6defabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f1e1dc-2fe6-4c1f-871e-50d3dffdc4d2",
        "cursor": {
          "ref": "1d774e98-45f8-4a53-b6f9-28d4cd3f8527",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6f7dc249-b69b-4801-bd3e-5c1e5df233b4"
        },
        "item": {
          "id": "80f1e1dc-2fe6-4c1f-871e-50d3dffdc4d2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "95b17895-0d74-4317-b5d7-b002e6defabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1108c98e-06e9-4b94-aaf5-7c5fe7c65f26",
        "cursor": {
          "ref": "0deb32d5-0984-4892-8b10-daffaa3d5840",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "75cbc0cb-6c15-4d2e-917e-f7d5599d1a3b"
        },
        "item": {
          "id": "1108c98e-06e9-4b94-aaf5-7c5fe7c65f26",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3130bcea-dad2-41f8-9fe9-a2d8448e0f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3435208-b5e6-4a18-9bea-7107ae4c69a3",
        "cursor": {
          "ref": "e0454631-07d5-4cc5-9d21-d07449dd9876",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1f0c7094-a897-4ebe-8bf2-6cdba736c0d9"
        },
        "item": {
          "id": "c3435208-b5e6-4a18-9bea-7107ae4c69a3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a3ef703d-6da0-4de3-959c-78b5ca48ccd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd03c501-7523-49b3-bea1-84f78bb55a08",
        "cursor": {
          "ref": "e9430136-e1b8-4654-814c-c83ac436401d",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "bc1dbca4-10a4-45d4-8dcf-5ca8de84d6a1"
        },
        "item": {
          "id": "cd03c501-7523-49b3-bea1-84f78bb55a08",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a3a38d33-29c9-4e66-bd84-2916ac994168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c51eed-3a21-4039-bc6e-95df81118204",
        "cursor": {
          "ref": "56a3f140-fd9c-460b-b860-0ce6b6778d92",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e4273a1e-e3da-493e-8b9f-b63befe956df"
        },
        "item": {
          "id": "f0c51eed-3a21-4039-bc6e-95df81118204",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "928dde76-6244-4b0c-8aff-3573af9bb55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b785eaa2-b541-4e86-a944-8c4c943c3c47",
        "cursor": {
          "ref": "a86e8737-3b59-472a-a2cc-199f044fb718",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "68e15014-f7de-40de-a601-750eefd9d7b4"
        },
        "item": {
          "id": "b785eaa2-b541-4e86-a944-8c4c943c3c47",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b28d5555-60a5-453a-8ff2-16351b14550d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 897,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ae5f06-4b28-437e-abca-5684ced35f60",
        "cursor": {
          "ref": "6e460e03-0389-4a5b-aa5f-68b8b9104bdb",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3625ce55-f75b-4fe4-94e1-ae02268a308a"
        },
        "item": {
          "id": "81ae5f06-4b28-437e-abca-5684ced35f60",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "396e60f1-d423-493d-a0ec-ce99f62dd094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 938,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58da304b-bb76-4957-a899-265cf3871ab6",
        "cursor": {
          "ref": "73781f73-fae1-46d4-b448-ebfd4b8b4cae",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c1f16288-9c64-490f-8fe8-ad533a7ef8d3"
        },
        "item": {
          "id": "58da304b-bb76-4957-a899-265cf3871ab6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "50f2cbd2-a427-4f7c-842a-2bc65d324775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0f1bdf-904b-472c-befe-d5499bd68c08",
        "cursor": {
          "ref": "e084fa2b-fefd-4180-befd-4bf192ef5ad4",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d90ef22b-c438-4303-a6ec-7a1aeb8bf37a"
        },
        "item": {
          "id": "0d0f1bdf-904b-472c-befe-d5499bd68c08",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "990465f3-383a-4c05-afc0-82f0f9963d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6f8789-4e87-47a1-9de1-9988fe632cdc",
        "cursor": {
          "ref": "4bfa54e6-61b5-4087-8b09-f6abbb4b8474",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fa2100fd-6330-44e4-b87a-f1d2ec813150"
        },
        "item": {
          "id": "ea6f8789-4e87-47a1-9de1-9988fe632cdc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "51db03b3-b45f-4648-a66b-dade9332f737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e1dec8-93de-480b-a629-580970a4b875",
        "cursor": {
          "ref": "62fed4ac-4dd1-4ed9-ba64-1902896e65d0",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "37fb13f7-cb95-481e-baa0-b269b2b52da7"
        },
        "item": {
          "id": "92e1dec8-93de-480b-a629-580970a4b875",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3dcbcd35-8bd1-4a4a-8c66-e9efebfd6744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054cdc30-ae63-47c0-b485-8e083dbe0389",
        "cursor": {
          "ref": "aff16bc7-12c8-4c6b-baa0-0648a2ee2f55",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d30e9667-aa04-4f64-8bc0-5521d6eaf0b2"
        },
        "item": {
          "id": "054cdc30-ae63-47c0-b485-8e083dbe0389",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "aaee1802-b7a1-41df-acc8-ea9af2f12893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf82444e-9871-4856-bf38-aa2d95fd2255",
        "cursor": {
          "ref": "d261301b-6156-4583-9b34-a1edbce65f0c",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "597937ae-9f93-42e6-ba8f-a0b968d92b01"
        },
        "item": {
          "id": "bf82444e-9871-4856-bf38-aa2d95fd2255",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a8f91c62-6270-4d4f-9542-09865ccb7d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c1c6b3-d55c-4bc8-a180-7b2ef3b05ab7",
        "cursor": {
          "ref": "39fefb5f-a6df-4aac-aa65-b0f70bb3f227",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "58e8a904-6780-4087-9bbf-05681940aefd"
        },
        "item": {
          "id": "69c1c6b3-d55c-4bc8-a180-7b2ef3b05ab7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "eb73ab8c-ea6f-4142-8d28-ce8a84fc4b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc715d3-ab95-4a69-81ca-002292f9887e",
        "cursor": {
          "ref": "06ed916a-1dd1-420b-a820-7dfb93a590f8",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ff87dbfb-21a7-4034-9d82-fd7981df5b50"
        },
        "item": {
          "id": "6bc715d3-ab95-4a69-81ca-002292f9887e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "806f4968-2f1d-49e8-9b62-f1cc03635ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fa01c7-7554-4fe7-a2a8-569d080a10a6",
        "cursor": {
          "ref": "b5ec20a2-9de0-47f8-a6e9-7a33d6a94734",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "80aff31a-b0db-43c8-8075-232e2adbaaf9"
        },
        "item": {
          "id": "92fa01c7-7554-4fe7-a2a8-569d080a10a6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "21e44194-9723-42b3-a880-f54065e7fc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b460aea-1657-4b32-bdee-984a36173121",
        "cursor": {
          "ref": "4da28001-e059-444f-a2e3-edf97aea2181",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ce9a4fdc-7345-49df-ae30-89d620a4dd65"
        },
        "item": {
          "id": "3b460aea-1657-4b32-bdee-984a36173121",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ce778724-755a-4df1-9244-e4b2a57d90da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8ac006-b72a-418d-88e0-8b57d2583cf7",
        "cursor": {
          "ref": "c857f042-40ee-4fdf-904a-387904c288e3",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2a9bff54-fea3-48f6-a573-b02b2c4f3e22"
        },
        "item": {
          "id": "cb8ac006-b72a-418d-88e0-8b57d2583cf7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8aa7ae1a-bc0e-4603-a35e-8f8a150012ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529576fa-ff80-40b4-b015-71a5c9760532",
        "cursor": {
          "ref": "6157530d-8ce2-4b6a-b7aa-52777f22462b",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d862b4c3-cb0e-48d1-85ca-4ba6f2d91126"
        },
        "item": {
          "id": "529576fa-ff80-40b4-b015-71a5c9760532",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "565ba09b-99dc-4f34-98e3-ab8bd0d4202a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4506afab-f39a-4e8d-8898-5b0f916f2a6c",
        "cursor": {
          "ref": "c8e54361-d4bf-482f-a8b9-98c5c62b7639",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fd07a010-0b94-442b-8ea2-71c0d4d3c225"
        },
        "item": {
          "id": "4506afab-f39a-4e8d-8898-5b0f916f2a6c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7f2d2a90-853b-40b5-92ca-92bdf8fc37e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd212e0a-c590-43a4-a17c-24c748036e5a",
        "cursor": {
          "ref": "8927c164-5fc8-41e2-8a4c-776ef0cbe229",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "30ec9b7f-688e-4c6c-bb25-7fcd82b8d214"
        },
        "item": {
          "id": "fd212e0a-c590-43a4-a17c-24c748036e5a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "72dddab8-42c3-4364-8cc0-04f59128cdc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a05959b-adf5-4b0f-a962-603c1579a1c2",
        "cursor": {
          "ref": "dcbe26de-99f1-462b-ab20-788354f0189b",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "543861fe-8561-40cc-a380-6e2919067e8a"
        },
        "item": {
          "id": "7a05959b-adf5-4b0f-a962-603c1579a1c2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "20bf1f6f-ef07-4e82-ab2a-6fc8848e2d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a809e8a3-0b2e-48c4-806f-6ba1d584fa3a",
        "cursor": {
          "ref": "c3ce55f2-9f07-4876-a1f1-eba61f6c3d30",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "67ee379e-c13c-4ab7-a76d-6d4f5f52b791"
        },
        "item": {
          "id": "a809e8a3-0b2e-48c4-806f-6ba1d584fa3a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "98562226-b9ce-4438-ac50-bbf1f3054948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162521c6-04f1-4db9-a9ca-e232d5efda42",
        "cursor": {
          "ref": "d8ea99c6-9dea-4c1b-8a2d-9ce2d978fddb",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8482f564-636e-4490-b765-525f8bea42fd"
        },
        "item": {
          "id": "162521c6-04f1-4db9-a9ca-e232d5efda42",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f5fde98d-81d6-4584-976f-2f3c5f3c321b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2990ff3a-92c1-4b8b-9870-b77052542463",
        "cursor": {
          "ref": "983d4156-6556-4e60-b0e4-3811bd129c48",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8fc78e32-e439-4be6-9de0-3c99cfecf57d"
        },
        "item": {
          "id": "2990ff3a-92c1-4b8b-9870-b77052542463",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d5b22592-2c46-45ad-8226-59c1e1945b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2df168-b0cc-4356-a80b-06fb459f0386",
        "cursor": {
          "ref": "f02f0294-38e1-43e4-9455-4c7389faa60e",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f60d42d3-bc4d-4b9f-9681-68e18c4fc975"
        },
        "item": {
          "id": "ef2df168-b0cc-4356-a80b-06fb459f0386",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "51827ef1-70fc-45c9-8f21-e91692edc73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11aa20a2-ec02-4940-950b-90dbd0718d06",
        "cursor": {
          "ref": "60c99098-09ac-4852-a1cf-cdf0ef906033",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7c3c3831-e08a-4097-9e56-439a912d99f0"
        },
        "item": {
          "id": "11aa20a2-ec02-4940-950b-90dbd0718d06",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a94e8931-8006-411a-a61a-fe31175f00d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cf414e-e325-47ac-b5b9-fa65101cc29f",
        "cursor": {
          "ref": "98279c5f-e53e-4416-8c8b-e8c84309c810",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d0ffbcea-4d72-4fcf-a5a3-0be1849ab845"
        },
        "item": {
          "id": "04cf414e-e325-47ac-b5b9-fa65101cc29f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "919bcbbe-01fd-44c1-900f-82ee0576eacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfeae998-7b6a-42fa-96ec-7280491229f5",
        "cursor": {
          "ref": "ddf11002-3d44-4415-ab0d-9fdf63ceaf4f",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fd988e4b-2e0b-4dae-a003-b2a2e221df1b"
        },
        "item": {
          "id": "dfeae998-7b6a-42fa-96ec-7280491229f5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9bccde2d-98da-4477-955d-5ed5a984a1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de521ddd-7d41-47cf-bd2e-627a67d0eed1",
        "cursor": {
          "ref": "ec7826b3-765e-43f2-9e41-8440f28f192d",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e8a79ac1-c69b-47e6-ae26-f352c68e4f39"
        },
        "item": {
          "id": "de521ddd-7d41-47cf-bd2e-627a67d0eed1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9176526b-5359-4727-8359-b97eba575845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea6993f-cdac-4b12-863a-04b1466b3cb0",
        "cursor": {
          "ref": "3acff3bb-4d3d-4698-a881-85d6e130906c",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b1b4e28d-8bf5-434f-820e-df5dd3bd3bc6"
        },
        "item": {
          "id": "2ea6993f-cdac-4b12-863a-04b1466b3cb0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "19f7f4a2-f6b2-46a9-964f-2e13e66ae492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a173999e-c75a-47dc-9fe4-0d1000797c2a",
        "cursor": {
          "ref": "5767622f-bdde-4f60-ae6e-4fef0076d676",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "de60b948-0900-4200-8848-111f43a3d827"
        },
        "item": {
          "id": "a173999e-c75a-47dc-9fe4-0d1000797c2a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a0dd2d28-ebdf-4168-90ce-60ec49b4a28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a88f49-b539-4e39-877e-f75504bc63b0",
        "cursor": {
          "ref": "20b5b775-6559-4479-86de-d5b2973bac6d",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "77e97101-c292-4093-a604-109a121d3142"
        },
        "item": {
          "id": "92a88f49-b539-4e39-877e-f75504bc63b0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e1c3171e-ce64-47fc-8947-f3652b2487c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3768699-a962-464d-99bb-3b88fdb6eb13",
        "cursor": {
          "ref": "5467c61e-481c-4198-956a-33b64684fe71",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "31767661-ff3e-464a-9f26-63f79aa1f3ed"
        },
        "item": {
          "id": "a3768699-a962-464d-99bb-3b88fdb6eb13",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "65ee800a-2c48-4e9c-a647-bd97fcd2ca90",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 540,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74993859-63ba-48a0-a1a1-7c30c1e90194",
        "cursor": {
          "ref": "5beaca4b-c165-4c3f-86bb-061beb34c9ef",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0d1526e3-cf68-4b36-b87b-07663414facc"
        },
        "item": {
          "id": "74993859-63ba-48a0-a1a1-7c30c1e90194",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "aee76654-d780-4ef7-be5f-84db47c9315c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74993859-63ba-48a0-a1a1-7c30c1e90194",
        "cursor": {
          "ref": "5beaca4b-c165-4c3f-86bb-061beb34c9ef",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0d1526e3-cf68-4b36-b87b-07663414facc"
        },
        "item": {
          "id": "74993859-63ba-48a0-a1a1-7c30c1e90194",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "aee76654-d780-4ef7-be5f-84db47c9315c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794a06e7-92ac-43c2-b33c-e367fc02afdb",
        "cursor": {
          "ref": "17f40fa5-42d2-4f51-9668-070340825f64",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ef4b790b-b4b6-4720-8737-65a06c9ed3d5"
        },
        "item": {
          "id": "794a06e7-92ac-43c2-b33c-e367fc02afdb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "78e92ff7-140b-432a-9487-6a426b01d5f2",
          "status": "OK",
          "code": 200,
          "responseTime": 324,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "a2f1d446-3a54-44b0-ad16-b97e81a94507",
        "cursor": {
          "ref": "9a90639f-9a03-49c4-a233-b5d4ca336d28",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7eb21da6-7cb5-4e82-96bf-388d5f4e640d"
        },
        "item": {
          "id": "a2f1d446-3a54-44b0-ad16-b97e81a94507",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a715f5a7-c9cc-411f-9baa-dcc3b5a07269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd995f4e-b9b7-459c-9f15-2860f5a2bacc",
        "cursor": {
          "ref": "9c0fab84-77ec-4279-8910-5c0043f33012",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cff033f6-b1aa-44c9-9c22-f1d007f7cc0e"
        },
        "item": {
          "id": "fd995f4e-b9b7-459c-9f15-2860f5a2bacc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "25c76fc2-2ead-4cb4-a6c3-117573c15c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8061ab3-b3ea-47e2-8545-9f03f2f370f1",
        "cursor": {
          "ref": "c8b8b94a-34a7-4a16-b2c4-7db36ab35f41",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "86824e8b-ce51-4ee2-8ebc-96fa8218bc76"
        },
        "item": {
          "id": "e8061ab3-b3ea-47e2-8545-9f03f2f370f1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8e577ab8-2773-4312-a004-2756b548d330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fcf8a8-cce4-4f3d-b847-5f4a23cf175f",
        "cursor": {
          "ref": "48432d6a-f10f-44d6-ab84-d74ab72a9d6e",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a46c288b-738c-48c0-9b74-236b26a377e9"
        },
        "item": {
          "id": "e3fcf8a8-cce4-4f3d-b847-5f4a23cf175f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "82e7232d-3163-44fe-9930-6cc602d5f781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158c8581-2cb5-44a4-ac90-d62d623e23d3",
        "cursor": {
          "ref": "604ad475-e62b-4a31-9657-a32fc5ce4ffb",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2f50b6f5-5f84-495b-b073-6b6a4dc68ca2"
        },
        "item": {
          "id": "158c8581-2cb5-44a4-ac90-d62d623e23d3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d0b7481e-aa28-497b-9213-aa547d5c9c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884c94b6-0c0a-4ed1-bb0c-67ccfb18d4f2",
        "cursor": {
          "ref": "1cde2071-8674-4805-9173-f329c3bc6d70",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fc1e7788-f2a7-47b1-b85c-4d2668368f82"
        },
        "item": {
          "id": "884c94b6-0c0a-4ed1-bb0c-67ccfb18d4f2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "741a3e63-028b-495b-ae4e-913c3aad0ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78b6b3e-8874-471e-87be-433ec4555fee",
        "cursor": {
          "ref": "8d4eca84-846d-4a66-9ea5-f1c785a816ff",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "43747fc1-ade6-4a9e-8505-b906d0cc8809"
        },
        "item": {
          "id": "c78b6b3e-8874-471e-87be-433ec4555fee",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a593db1a-69bd-4b07-a2db-7cb44d4f713f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b26c7c-fcea-4058-af85-ea59e8fa92a5",
        "cursor": {
          "ref": "02ce0b29-7ce1-4025-a10c-b56c4b437cf6",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "94a7c3ad-d940-40a8-9bd4-79602408357b"
        },
        "item": {
          "id": "d4b26c7c-fcea-4058-af85-ea59e8fa92a5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a8641453-b547-4596-85f2-e942992e02fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef41720-8cab-4e01-be47-abff2bc708dd",
        "cursor": {
          "ref": "6ffa7847-7736-4f0d-8805-25f7ee98300e",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a6f587bd-b127-4141-a083-f8cd9e6ad3ab"
        },
        "item": {
          "id": "5ef41720-8cab-4e01-be47-abff2bc708dd",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9e34d81c-a4dc-44a3-a712-d84852216554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4269e29-7627-4a79-a266-acf3021c218a",
        "cursor": {
          "ref": "53b7f148-075c-4ca2-981f-7e92409852af",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "704cc1da-11aa-419f-a757-528d138e7f53"
        },
        "item": {
          "id": "c4269e29-7627-4a79-a266-acf3021c218a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "08c7cd78-167a-4289-894c-33b6c4403519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c54a3dc-9b07-46a5-bf24-b15b83babb5d",
        "cursor": {
          "ref": "530bdee1-f206-45ca-8aed-9c6fb649066d",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a14e52df-f8c6-477b-aa86-505e3a654015"
        },
        "item": {
          "id": "1c54a3dc-9b07-46a5-bf24-b15b83babb5d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a3898a8a-838d-4bfa-844a-b44fbd1e1e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3521078c-f48f-4300-a2a9-cbb41a555f41",
        "cursor": {
          "ref": "62bf0aa8-48e5-4e05-8aa5-7a5502cd0117",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "07d9b3e2-c419-4337-9e18-12a6c3891f63"
        },
        "item": {
          "id": "3521078c-f48f-4300-a2a9-cbb41a555f41",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "623df486-fabf-444f-9cc5-d2f808ede069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5ca82a-cab3-407a-88fc-def3fbeaf33b",
        "cursor": {
          "ref": "7a8c0994-1701-4052-bd62-a871156f27ee",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d971d6ce-0495-4c3d-86da-a422a2a52258"
        },
        "item": {
          "id": "cb5ca82a-cab3-407a-88fc-def3fbeaf33b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d17c7ad4-a431-466f-8b79-05133999bf63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498028bd-67c3-47ff-b177-545e05d10a5b",
        "cursor": {
          "ref": "de0a8437-1ad3-47fb-ac80-2fe7b0f9e5df",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9bdacb08-5d34-4d45-be51-2ee0c522ba24"
        },
        "item": {
          "id": "498028bd-67c3-47ff-b177-545e05d10a5b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "822b499b-04c8-4c23-abed-c9b69f1409cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b760d7-a864-495b-b793-3d6309c733ac",
        "cursor": {
          "ref": "aea1f843-0332-4d98-b66a-f0e709f85949",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ed52c171-75e5-47bb-9d47-b6683c56c7bf"
        },
        "item": {
          "id": "68b760d7-a864-495b-b793-3d6309c733ac",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d5a6a33c-2525-4712-b4e5-ea115e81347a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba100e29-bdbf-4b88-ac9f-ec36b99370b2",
        "cursor": {
          "ref": "554a7708-702a-4a2d-9334-1947101f9d82",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e7fae9e0-7e63-41bd-a93b-d46824c85837"
        },
        "item": {
          "id": "ba100e29-bdbf-4b88-ac9f-ec36b99370b2",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "4741c085-02c7-422f-bd81-250dab411ecf",
          "status": "OK",
          "code": 200,
          "responseTime": 2143,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "e8697962-fd00-4fc2-8eb4-933c11191f8a",
        "cursor": {
          "ref": "6b76bc66-15cd-48cb-831f-235133fe73e0",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1d761cd5-b105-4478-9501-96d8fe3c2ec3"
        },
        "item": {
          "id": "e8697962-fd00-4fc2-8eb4-933c11191f8a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "eaf0a9e0-ed88-40e0-9064-64cb8ea5d834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3717123-1e78-4775-ae0b-e361a55bde5e",
        "cursor": {
          "ref": "97ed8ee0-61c1-49dc-9768-b09e560821da",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9d0e818e-c658-491b-9c35-397e2b3b9412"
        },
        "item": {
          "id": "f3717123-1e78-4775-ae0b-e361a55bde5e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "98e2dc05-63da-4f99-a2e9-7c790f2a4d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9a71a1-44b0-44b7-9a10-fa46ccf3ea74",
        "cursor": {
          "ref": "2e072191-cff0-4c26-8686-a194d1315b3f",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "83208156-1034-4ec3-9bd6-5f346c868d1d"
        },
        "item": {
          "id": "8a9a71a1-44b0-44b7-9a10-fa46ccf3ea74",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e9d730c6-e3f9-4b5e-b5a7-71258591d88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d4913d-2aa7-4b32-a69b-41287227586e",
        "cursor": {
          "ref": "f2109a06-dd50-49ed-a300-6e1af9fd09a8",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "dbe0685c-ebc4-4543-85e0-819d1a6a9b46"
        },
        "item": {
          "id": "f6d4913d-2aa7-4b32-a69b-41287227586e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8f6e7319-adc0-47cf-a1d5-21b786349cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5464f426-9401-4424-924e-c841f0431883",
        "cursor": {
          "ref": "3d9a4f31-d15d-4628-99d2-4865415dbb6c",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "74786376-01bf-44ec-9a80-9fdf20040462"
        },
        "item": {
          "id": "5464f426-9401-4424-924e-c841f0431883",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "27e7dda7-4056-42f3-883b-e458287023b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0416ab15-73d4-4870-8887-7b5c4b8e89e6",
        "cursor": {
          "ref": "6cf07bd6-b949-4c3d-bb75-65e8cd89d39e",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a8d8335a-e939-404d-befc-ddd2ba2a0421"
        },
        "item": {
          "id": "0416ab15-73d4-4870-8887-7b5c4b8e89e6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "27643f5c-e599-4427-ad43-ed653b8a3c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35ef636-3a6d-498c-a200-1ddbecab74c3",
        "cursor": {
          "ref": "910c4d37-0e3a-411a-a030-d7b4b1c5d850",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "93c9da32-de2a-4704-b3ca-995abab24530"
        },
        "item": {
          "id": "b35ef636-3a6d-498c-a200-1ddbecab74c3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5bb84a8f-7c95-4077-8f46-2b34347026bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f13e31-823f-4fe6-a555-69d9256cb0ca",
        "cursor": {
          "ref": "1c4a6e5f-c140-432f-86d0-bd46f00a1918",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "393c45df-2b77-4941-8e60-17127bac06a0"
        },
        "item": {
          "id": "01f13e31-823f-4fe6-a555-69d9256cb0ca",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7c9aa544-b77f-4e00-a1ea-061454eb1c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509e3003-fda5-4ccb-8124-6d5126607246",
        "cursor": {
          "ref": "e40e1197-ae0f-4175-a383-4899bd30be87",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3a2932db-0886-4afc-ae61-d51fd45f9d91"
        },
        "item": {
          "id": "509e3003-fda5-4ccb-8124-6d5126607246",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "59fbb00f-1c3e-4882-9623-a1f5e09f2e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb119211-e3ff-4fbb-a97d-b97642762d7b",
        "cursor": {
          "ref": "7bf95467-d2cc-4dc0-92c4-d7586c879be5",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "55b46d3f-499f-49d6-abb2-74f45382c8ab"
        },
        "item": {
          "id": "eb119211-e3ff-4fbb-a97d-b97642762d7b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "028e3bf4-bd98-41e9-b4e5-05abae07588a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225f56a6-ceae-4099-bc33-61a8948c845c",
        "cursor": {
          "ref": "d05fbb65-9481-4e39-9c08-d087f570ac5b",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9712e5af-b57c-4cd0-bbbd-c10409bc4cbe"
        },
        "item": {
          "id": "225f56a6-ceae-4099-bc33-61a8948c845c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a02aae80-cd93-4710-90b4-2d839321f455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c409156a-e190-454c-925f-d876866860d6",
        "cursor": {
          "ref": "17d22ddf-72b3-4f75-b8c7-2819c8d891f7",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c6bdfe15-67e3-4e0d-a438-dab2217f7572"
        },
        "item": {
          "id": "c409156a-e190-454c-925f-d876866860d6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "64af990b-66f5-4093-874f-c9c58f16890f",
          "status": "OK",
          "code": 200,
          "responseTime": 345,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "1f7e6382-75a0-4909-b5f1-143f968bcd5a",
        "cursor": {
          "ref": "94af197f-afdd-4817-b80f-dfe38a1b1f2c",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5e1f64f8-586b-4074-9939-079331e350df"
        },
        "item": {
          "id": "1f7e6382-75a0-4909-b5f1-143f968bcd5a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a41989b7-c102-4c25-82e3-d30626cf7ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4540ad4c-31c6-4c86-b6ae-48f17fb671b9",
        "cursor": {
          "ref": "478d9634-c2aa-4ade-8a37-3cd8e5aa60ea",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9b809b89-b9c9-4fdd-9dc6-4d857750e437"
        },
        "item": {
          "id": "4540ad4c-31c6-4c86-b6ae-48f17fb671b9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a0791200-029f-47e6-96cb-ac8186a75411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c16dfb9-7ada-463b-8125-9df81ab27a58",
        "cursor": {
          "ref": "976ea289-c34c-41bd-9407-62841101d355",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cc9eb727-8dc9-4a72-aa9a-c1beeeeda331"
        },
        "item": {
          "id": "6c16dfb9-7ada-463b-8125-9df81ab27a58",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f1f8f139-2619-4d3f-a31b-686f99d5f7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4aea03-9868-4621-8f5c-a8585e6a0fe0",
        "cursor": {
          "ref": "e9df9473-cec5-436b-9f48-1162a91b83e1",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "60f77338-d691-45dc-8b07-c64e3074fc23"
        },
        "item": {
          "id": "2d4aea03-9868-4621-8f5c-a8585e6a0fe0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "25fef314-7887-422f-9135-b2f3ef466d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f134e620-31f3-4d41-9310-6d2127baa0da",
        "cursor": {
          "ref": "02587b6e-e2c5-405a-af3a-e15fea130491",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5da67ce6-8257-4f3e-825f-794f11ffd1ec"
        },
        "item": {
          "id": "f134e620-31f3-4d41-9310-6d2127baa0da",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0704806f-f2aa-405e-8c1b-c00b8862b698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccff99f-6aa2-4d96-a3e4-9f9c576bd3e1",
        "cursor": {
          "ref": "014ae4b0-6f9a-45ce-8442-4b5506b4943a",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a772e80e-063b-4243-8ee4-53273dc6a79c"
        },
        "item": {
          "id": "2ccff99f-6aa2-4d96-a3e4-9f9c576bd3e1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7917630e-e131-48de-a17e-57e6eaf0f30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5934d7-69a0-4ed0-b435-c0418e1b3b03",
        "cursor": {
          "ref": "e7ff6962-ef11-4ff7-baea-4d4c2f178016",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2942b415-00ed-41b6-b6bf-3aaa2e455af0"
        },
        "item": {
          "id": "3c5934d7-69a0-4ed0-b435-c0418e1b3b03",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6c5c9526-ed03-47e1-ae02-81e940ba4927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1173,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d795d2-629d-4aa8-b2d9-4c3da78cc9d9",
        "cursor": {
          "ref": "c203351b-796d-4502-ba8b-fccf4a5fd706",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f2950686-ac4e-4f21-8ef4-b3d53ef688cb"
        },
        "item": {
          "id": "16d795d2-629d-4aa8-b2d9-4c3da78cc9d9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "73b3c7a1-5957-4a49-afdd-25db25b56f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac8c9c1-7c39-4960-9384-fbf8e6209a90",
        "cursor": {
          "ref": "bd1a222f-73be-49f3-99c1-528c83ac1f6a",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5c6d4c23-6ac8-4645-8274-e25635e4fe1f"
        },
        "item": {
          "id": "4ac8c9c1-7c39-4960-9384-fbf8e6209a90",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4d5a23f4-4348-4f7d-bf02-d876c1a038c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d381753-cfb7-4a36-b396-cfc0e7965cf1",
        "cursor": {
          "ref": "0c5076c5-4b21-4079-94c1-c421d0186ddc",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "53d15a58-7e97-4d9d-bfc7-61c9a9e7fa4b"
        },
        "item": {
          "id": "7d381753-cfb7-4a36-b396-cfc0e7965cf1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1b289286-8ae9-470d-843d-a4dce0f72ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd99ed8-1f07-4143-bb90-9fab0556b349",
        "cursor": {
          "ref": "a5290ab5-a519-4e06-9072-6baec037cc6b",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d8907e6e-1351-4e03-a748-de7b1b455d52"
        },
        "item": {
          "id": "0dd99ed8-1f07-4143-bb90-9fab0556b349",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "058003ed-d340-406e-b00a-b90b4d42efd4",
          "status": "OK",
          "code": 200,
          "responseTime": 622,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "e874e8f2-abf4-4218-9039-857917953f13",
        "cursor": {
          "ref": "1b06297c-52d9-42f5-9223-298930384e52",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a14ac630-cc99-440a-a77f-cda207438c3e"
        },
        "item": {
          "id": "e874e8f2-abf4-4218-9039-857917953f13",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c5dd5334-10b0-46a9-a6cc-34daa62c9646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7097aa29-3083-455e-b076-844dfa947409",
        "cursor": {
          "ref": "38410711-d6ca-4d1a-a80c-30f4085d92d7",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c8c64dfa-f96a-4fbf-972e-1f892cb79771"
        },
        "item": {
          "id": "7097aa29-3083-455e-b076-844dfa947409",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "be6868e0-c2bc-4808-8528-26e711b02ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f815e98-8d88-414d-ae49-12a1f7f1a8b6",
        "cursor": {
          "ref": "53bb62ac-b804-4cad-acc2-53f40e193047",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "28bcf8c8-41fc-4a64-b180-2a1119fdd460"
        },
        "item": {
          "id": "7f815e98-8d88-414d-ae49-12a1f7f1a8b6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "117c9a85-196e-4a78-a76d-a9ab95b29bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa592bf-9f16-43cb-8b40-48be0902f042",
        "cursor": {
          "ref": "01133644-b6bd-4276-896b-80d91c0dd046",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ad46248c-7f4d-4514-8567-98709636698f"
        },
        "item": {
          "id": "3fa592bf-9f16-43cb-8b40-48be0902f042",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0638aee4-7bac-4c2b-a7d6-623b11f120ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edd685d-c018-4bd8-a2a9-5ef529936aba",
        "cursor": {
          "ref": "e765a641-40f7-44cd-a453-8ba179994ab3",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2714e5f8-c59e-4123-ac39-b1e1c00afd6c"
        },
        "item": {
          "id": "7edd685d-c018-4bd8-a2a9-5ef529936aba",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "be916bff-5766-4bab-b300-b71b00b515ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6863016a-67aa-481d-b88f-6aef9859ec9a",
        "cursor": {
          "ref": "feea1238-cff3-48d8-82f9-3bb2d389a0af",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c6da9394-916d-4544-87c8-7373681af369"
        },
        "item": {
          "id": "6863016a-67aa-481d-b88f-6aef9859ec9a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "67e1cfdc-3702-4304-af9e-7ee369101109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f82cab-62d0-45fd-a11f-892b67c7f8b4",
        "cursor": {
          "ref": "8ff73f7e-8c43-43f4-b544-5ce5c99fbeb4",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "795c7cd6-33f7-43d8-85ec-b06de0197532"
        },
        "item": {
          "id": "c0f82cab-62d0-45fd-a11f-892b67c7f8b4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1a8599dd-d0de-4bd7-bb48-a39d2132f716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ea6336-41fc-4197-8834-db47232007a4",
        "cursor": {
          "ref": "21859804-b70c-4110-b7d2-39912ba8c9b5",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a27cd127-538e-4f72-98d8-e81afa45d5ac"
        },
        "item": {
          "id": "27ea6336-41fc-4197-8834-db47232007a4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "377e2cee-e1ea-4cfe-ac90-481b99234522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505b140b-3039-4e89-99f6-5713594dbc85",
        "cursor": {
          "ref": "263a56f7-d538-4f72-b8b2-380de3b4e38a",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "83df0c65-8268-4cee-8898-5bbcc260ca64"
        },
        "item": {
          "id": "505b140b-3039-4e89-99f6-5713594dbc85",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8c59dbb0-d02a-4157-bf11-1a38ab6eba92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317809ec-df6e-4e64-9154-f70dc7594e68",
        "cursor": {
          "ref": "a4b46aee-9979-4532-a6e3-5b31e71d87fd",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3d1f09a4-c41f-4951-b00d-c9d1dcab3dea"
        },
        "item": {
          "id": "317809ec-df6e-4e64-9154-f70dc7594e68",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7b7c8270-fff7-4f7a-a0d4-cc3b345edb48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbef60f-9a09-409f-84c1-fa6ce71588b2",
        "cursor": {
          "ref": "6397f0eb-a876-4fb4-b505-bdf034a6f05c",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0a6bd344-c732-4d24-a63b-81e6a65eed48"
        },
        "item": {
          "id": "ddbef60f-9a09-409f-84c1-fa6ce71588b2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ec9a4bd6-3147-40e7-85da-f5ed9cc74347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5074131f-70c8-49d7-956f-9f27916dfac7",
        "cursor": {
          "ref": "646cf968-8c2c-468e-89d7-5687f47d6866",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0ffaadae-03fd-47db-92ed-cead5953c60f"
        },
        "item": {
          "id": "5074131f-70c8-49d7-956f-9f27916dfac7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "de72ea0b-5182-4d2c-999c-a9585de6eb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce6fb60-fe7c-4e1e-8204-6a86fdc08765",
        "cursor": {
          "ref": "89aa54bd-9663-4d28-9204-20398c6f1dd1",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "dddeb06c-836b-417f-80fa-2b70f38519f4"
        },
        "item": {
          "id": "1ce6fb60-fe7c-4e1e-8204-6a86fdc08765",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0de2614c-8534-4754-91d6-1a9138d2e7d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5228e80-dc71-43a8-a1c3-baf8afe5c089",
        "cursor": {
          "ref": "e3e9f33d-7abe-4f49-8748-4b6f57d5c853",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f432a5fc-2b7e-4571-996f-51a90e4bb2b1"
        },
        "item": {
          "id": "e5228e80-dc71-43a8-a1c3-baf8afe5c089",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "aa4d6ead-38f6-4c63-80ac-01773cbfa75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65034536-0e70-477a-951c-e178cf6494d8",
        "cursor": {
          "ref": "f900be48-3d53-4e18-9090-b03ed59196c9",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3b1d5a1c-f7a1-49a3-8785-67deac68d284"
        },
        "item": {
          "id": "65034536-0e70-477a-951c-e178cf6494d8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a7e3bc9f-5cb5-41de-928b-5ce07571709b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee4ec32-19a5-440a-a510-63d6cd5f50ea",
        "cursor": {
          "ref": "b24216a6-19d6-4e93-a847-22a9640c104c",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a0938b3f-b236-4782-b205-0b519b7acda5"
        },
        "item": {
          "id": "4ee4ec32-19a5-440a-a510-63d6cd5f50ea",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "40ea5c84-2b5d-4061-a323-55c16d7c5eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8aa0c2-82bc-454f-9999-8ac822ffbb12",
        "cursor": {
          "ref": "774eb8b1-ca29-4fd6-9ff8-6e7f8260ba08",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e93d0cb1-79e5-43f5-9197-4069a7a4204e"
        },
        "item": {
          "id": "cd8aa0c2-82bc-454f-9999-8ac822ffbb12",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "cd1c103c-473c-46f0-bb00-08f45e47aa32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60902f79-df56-4de7-b344-2a735090c927",
        "cursor": {
          "ref": "d64a4c05-2886-4326-a778-545d1788ed0d",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "cba69fbb-2f44-457c-b74b-0d18e4b5c7e8"
        },
        "item": {
          "id": "60902f79-df56-4de7-b344-2a735090c927",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c7042a01-1b6e-4d6b-afec-d7275d349656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b833ece4-aba3-4c9e-be2a-fbafea2f88fb",
        "cursor": {
          "ref": "f4c3eee3-d64c-4d17-94af-2bb9c1e38d19",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b3efc4a8-1f67-421b-9027-ee1e2d319160"
        },
        "item": {
          "id": "b833ece4-aba3-4c9e-be2a-fbafea2f88fb",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2babfe99-9a8e-49da-88f3-82fd7e21bb98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f32ea3-e610-4803-8540-1c47691e0ebf",
        "cursor": {
          "ref": "fe852c42-6242-4098-af01-d43d272cb6a3",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5fb25767-400b-4ce6-850e-7e6636c254b4"
        },
        "item": {
          "id": "c9f32ea3-e610-4803-8540-1c47691e0ebf",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "bd44d662-9c64-4eba-abf2-ea85ec0ad943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfa94b1-c9fb-4b05-bfe3-a875ea3c6de9",
        "cursor": {
          "ref": "ad4228d7-7418-49a8-947f-793dcffcab1a",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "974c497b-9595-4144-8e43-4fe9d9084067"
        },
        "item": {
          "id": "fbfa94b1-c9fb-4b05-bfe3-a875ea3c6de9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "97d01735-f02f-4e6c-b5d4-0fb23c5b8474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cf09b2-2224-4553-88ba-ab42519a6aa9",
        "cursor": {
          "ref": "cbf34563-a74d-4687-8695-e8f5b79c1c7d",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3d5179b5-1a2c-43e5-b871-b0599ad061ce"
        },
        "item": {
          "id": "19cf09b2-2224-4553-88ba-ab42519a6aa9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0810163f-3fd0-4cfb-b20c-7b00b2113508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e323a3-7549-4e08-ba06-1ae444e60bea",
        "cursor": {
          "ref": "7dc022fa-e0a2-44bd-a0c5-f063f9e1967c",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "866f5965-e415-4fe2-8475-888b48b5963b"
        },
        "item": {
          "id": "31e323a3-7549-4e08-ba06-1ae444e60bea",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "feefcc63-8cb3-4023-a379-a1f67ee83898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b18ef7-3e1e-4e44-850e-3bc2918db52e",
        "cursor": {
          "ref": "292a0565-66d8-4279-a565-64df85672a84",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "de06bfa7-5aa7-44b7-895e-22b068290ce8"
        },
        "item": {
          "id": "98b18ef7-3e1e-4e44-850e-3bc2918db52e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bd010764-60d7-43ae-902e-ba1897b33bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612ed936-58c3-4d37-9e74-c0ff65ce7c25",
        "cursor": {
          "ref": "f26e6777-207c-4df2-b680-c109b5cffe73",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e9218e98-ec03-4d02-bb71-d2d9bd2ce5c5"
        },
        "item": {
          "id": "612ed936-58c3-4d37-9e74-c0ff65ce7c25",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b37eace1-9285-453b-bd3b-548b07393df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5298a2d2-4ae9-4fb4-86c8-98326c5de0f6",
        "cursor": {
          "ref": "a604f9d5-7db3-4827-b2ad-dc789c8a0829",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "dd91b20e-bc44-449c-868f-9832ecdb7d31"
        },
        "item": {
          "id": "5298a2d2-4ae9-4fb4-86c8-98326c5de0f6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "228afdc0-2b14-4a6a-8a44-877dacee9e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ad169d-6dbd-469b-a8d7-84dce2d57e76",
        "cursor": {
          "ref": "c2254048-573b-44b2-bee8-e5f3c5fdd482",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3097b16b-d9e5-4ed1-a8d9-d9d920eb544d"
        },
        "item": {
          "id": "40ad169d-6dbd-469b-a8d7-84dce2d57e76",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6774edbc-5bcf-46fe-98d1-70cc75be67cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7fdf6e-87a7-4a64-81f4-d111317b2751",
        "cursor": {
          "ref": "437b5bdb-7ecd-4701-826a-5393a5f2338f",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "de68d430-e0c3-45d0-bb45-5a283ef7bc30"
        },
        "item": {
          "id": "9c7fdf6e-87a7-4a64-81f4-d111317b2751",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "123bb090-6ba9-4465-8690-60b33692f7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfc183d-ebea-4a89-9317-7e108904b453",
        "cursor": {
          "ref": "9593ee57-7b55-49c6-85bd-c4f383f1b31e",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a776aa9d-20bf-469c-912e-cad6accf5e3f"
        },
        "item": {
          "id": "acfc183d-ebea-4a89-9317-7e108904b453",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "840cc364-ddcb-4015-887a-1eb5b38ca8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dfaa8eb-9f8f-4242-91f2-5f901c57ca51",
        "cursor": {
          "ref": "3ec1000d-7855-4ece-a419-58d950098ee7",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5db04f87-9ecb-46e9-ba1c-bdadc360bd0a"
        },
        "item": {
          "id": "1dfaa8eb-9f8f-4242-91f2-5f901c57ca51",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d55de7ae-a3ac-4658-9942-cb57108c84a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9dd172-8993-4f2c-ac01-7c2b3a3bf9e7",
        "cursor": {
          "ref": "8addb1ac-5fbc-48dd-a484-5509179a240b",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5c14459d-6c6c-4144-ba7b-927e4b2f851f"
        },
        "item": {
          "id": "1f9dd172-8993-4f2c-ac01-7c2b3a3bf9e7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "79900c3c-2fa7-4918-ad75-fad3ba0828a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a6d730-a487-4953-bad0-1ca81b12646a",
        "cursor": {
          "ref": "4dc596e7-9397-4ff1-b6f8-2b31a377bcd5",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6f83c9da-63bb-41f8-a045-5fab9f42560a"
        },
        "item": {
          "id": "35a6d730-a487-4953-bad0-1ca81b12646a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5b25faa8-c0c2-4241-857f-a3d22e5b3175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9213f93a-f930-4a69-9b27-d66780ab9fd8",
        "cursor": {
          "ref": "66208971-616a-43c5-becd-8d7daeac8191",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "94392565-b6c5-45bb-9193-a1f60397a978"
        },
        "item": {
          "id": "9213f93a-f930-4a69-9b27-d66780ab9fd8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7a454b09-2cae-46b9-9f1c-7986919acf2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970f3aa1-f6a3-466f-a890-eeaa3ea10b07",
        "cursor": {
          "ref": "fff1294a-0a62-41bb-8bba-a4437b927939",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "004c3fcc-4433-4ecb-9695-f277df16c9b6"
        },
        "item": {
          "id": "970f3aa1-f6a3-466f-a890-eeaa3ea10b07",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c945ed73-eed6-44ad-92b5-f9bc50d89904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3293e8e0-250b-43e5-b441-d614811868e5",
        "cursor": {
          "ref": "729a99bf-5422-427c-9475-52ec9e64399f",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8bf6468b-2a2e-4653-8e90-645c5a9ffef4"
        },
        "item": {
          "id": "3293e8e0-250b-43e5-b441-d614811868e5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5059f90c-12ed-4ed3-89f5-efdef3008aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d82360-bf5b-4571-ba37-1fffc63ecd1c",
        "cursor": {
          "ref": "aec265c0-7ba4-4826-b72f-880c94f64979",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "973a9c6b-8e21-469e-b771-cf0261133841"
        },
        "item": {
          "id": "11d82360-bf5b-4571-ba37-1fffc63ecd1c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "547c2da8-e58e-4ec0-8ffc-e5b147aab76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5df32e-1ce7-435a-aed8-79883fac0463",
        "cursor": {
          "ref": "ca0362fa-0dc9-43c9-8da3-eb4677431a94",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "07b5ffe8-08bf-4828-8ded-e7bc673d120a"
        },
        "item": {
          "id": "3c5df32e-1ce7-435a-aed8-79883fac0463",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "90a447bb-0d41-47ba-9119-4caa61756a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4b7a54-a0b6-4b92-9971-b2d350dec21a",
        "cursor": {
          "ref": "97650027-476b-4af0-8b7c-3e1f1f158052",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2a12868c-0614-419e-ac94-be3a9fc00b30"
        },
        "item": {
          "id": "8e4b7a54-a0b6-4b92-9971-b2d350dec21a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c4f805cb-9922-4da5-bcd8-cc727edb3e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2484034f-d0b8-42e3-935c-d5fe6b91f11d",
        "cursor": {
          "ref": "bc739e1a-6720-4546-ac92-6a5053112842",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "aa620a47-a928-403a-b700-731c1ecba5e4"
        },
        "item": {
          "id": "2484034f-d0b8-42e3-935c-d5fe6b91f11d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f35a0358-3e8d-4ea9-a9bc-9c72f87808d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0346e33d-2912-4efb-868d-9c9c6113b8a0",
        "cursor": {
          "ref": "1981f98a-26a2-45a2-b60f-4a3b44ba491d",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a91b00f0-3f2d-4719-a19c-41d69e3e1c48"
        },
        "item": {
          "id": "0346e33d-2912-4efb-868d-9c9c6113b8a0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1965d195-811a-465d-8f7e-229350d3e601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5931fef7-8dae-4528-8e22-f56856338093",
        "cursor": {
          "ref": "5dd1e60d-7654-427d-81f0-63224bdf303b",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "885152ee-0ff7-4858-b3c5-73c27cd5d40c"
        },
        "item": {
          "id": "5931fef7-8dae-4528-8e22-f56856338093",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2b1073de-9804-46bf-9103-68cf3470409e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee1370d-7287-42e2-a274-b19fb14ef4fe",
        "cursor": {
          "ref": "3156dd21-3aff-4018-a084-bb7a248c66b7",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "532c4d44-b74d-400a-aba7-1af8e35ffebf"
        },
        "item": {
          "id": "9ee1370d-7287-42e2-a274-b19fb14ef4fe",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3e04e1ce-f2fe-4aaf-a67f-f0291644396e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b40ee2-7ec5-4558-943d-2416c126320d",
        "cursor": {
          "ref": "f9c04369-09e0-4814-9d0a-70bb49e8464a",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5c7de70c-388e-4a31-849f-8c8d343439d7"
        },
        "item": {
          "id": "c2b40ee2-7ec5-4558-943d-2416c126320d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9b1b7f86-ad48-4864-8567-ee400380ab54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66389aeb-b96b-4cbc-b606-1c792a434d65",
        "cursor": {
          "ref": "2ea639c9-adba-4328-be63-7962b20f1d87",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "33a84f9f-5a4a-4086-ac80-d336c3e7f4d1"
        },
        "item": {
          "id": "66389aeb-b96b-4cbc-b606-1c792a434d65",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7b7ecc30-993b-4369-82dd-963de29fed1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6e747f-f9a7-4a40-b0ba-980e0c05e424",
        "cursor": {
          "ref": "88cfce89-c31e-44d0-a4ba-a590d9e240dd",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0d00df1c-5af2-4401-9a80-8cc56b8804c6"
        },
        "item": {
          "id": "4d6e747f-f9a7-4a40-b0ba-980e0c05e424",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fa567edf-6711-4536-8159-06dd653f8013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e659df-8864-4ccc-bbb4-d8304a12b450",
        "cursor": {
          "ref": "10784768-b1c7-4763-9340-1933bd92e48a",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "be35e473-5027-4970-88b4-39e0d1d61655"
        },
        "item": {
          "id": "a2e659df-8864-4ccc-bbb4-d8304a12b450",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "64772b46-9e89-4911-854f-214382c6adce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2c6aa2-3db7-44ac-a779-0e9a4cadea86",
        "cursor": {
          "ref": "6a8473d9-c1f6-4e51-b2f6-bef247d704d3",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "377c3cbf-3481-4102-a9bb-fd1d2c5451a4"
        },
        "item": {
          "id": "8f2c6aa2-3db7-44ac-a779-0e9a4cadea86",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "040b7eb4-fbe6-48fc-8c51-ef8427e3c57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b2fabe-fdb7-4333-8232-7ee5a5d041bb",
        "cursor": {
          "ref": "16b6635f-2de0-44dd-a63b-f6b686656e9a",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "13d28728-7080-4d07-9125-d531ac62d335"
        },
        "item": {
          "id": "a0b2fabe-fdb7-4333-8232-7ee5a5d041bb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "00a5763e-d3b6-4932-95db-76c62aa45af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cefe8f1-dcb9-49fb-8400-13c8bc20639e",
        "cursor": {
          "ref": "80c1dbd9-30c0-40dd-9277-fefbdb6e281d",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "04c2e278-0b44-440f-b9b4-2707caf6bcfb"
        },
        "item": {
          "id": "7cefe8f1-dcb9-49fb-8400-13c8bc20639e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4891d002-a538-497d-974e-6bbf48656f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457a42a0-edaf-4332-8f56-cd8254f3dd57",
        "cursor": {
          "ref": "d4042966-7dc2-43b5-a36a-675f275b3656",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a77dac0f-1f8e-4e3e-9b99-b0cd430cbcf5"
        },
        "item": {
          "id": "457a42a0-edaf-4332-8f56-cd8254f3dd57",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "076cd85d-bfc6-4721-bb7f-82667bb047b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3395b658-4dfb-41da-a9c4-38081a618cbe",
        "cursor": {
          "ref": "025cc5ce-7148-4d76-ac94-87bf00d90a53",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ec354753-c952-432d-b644-df50c5152270"
        },
        "item": {
          "id": "3395b658-4dfb-41da-a9c4-38081a618cbe",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ba7df7d3-79f2-404e-8d03-eb023ac29c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b569a3-62b6-4653-9696-eca56e55a112",
        "cursor": {
          "ref": "14885296-b406-46a6-aa27-c610d3338572",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ad31bbd4-dc1c-49e2-bebf-3a5da3f48595"
        },
        "item": {
          "id": "98b569a3-62b6-4653-9696-eca56e55a112",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a700cdc1-931f-4028-a1d9-f8c3184cc578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43cc089-a54a-4c26-8855-fe26ed9ca4e9",
        "cursor": {
          "ref": "2e8814ed-99c8-4482-bc2f-041d8f8ad364",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f488d761-d7c4-4416-91e3-003ac286d791"
        },
        "item": {
          "id": "d43cc089-a54a-4c26-8855-fe26ed9ca4e9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3b028575-9e22-4d5d-970e-594b31525b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63d1045-be2c-4e14-921c-ea3f0f150bca",
        "cursor": {
          "ref": "f01d1661-7697-45d4-a4c7-2032dc67e799",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0fd325cc-5334-4830-a05a-0ad55e20ee7f"
        },
        "item": {
          "id": "c63d1045-be2c-4e14-921c-ea3f0f150bca",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3b011314-c0d4-4b35-9404-c44a5c7ecaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a80c79-5134-40de-a2bc-e53e8546baa2",
        "cursor": {
          "ref": "92eb8225-567b-42cf-a2ae-681e1f47ca6b",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b8b5446c-1a92-4594-bfd8-f1b3d361fe6d"
        },
        "item": {
          "id": "f4a80c79-5134-40de-a2bc-e53e8546baa2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "673803ab-4ecb-4225-9bf8-3e22742f19af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359c633b-906e-43c1-87a0-0807700dd95d",
        "cursor": {
          "ref": "1f3a993a-9553-4f3a-9b3d-7b6db23e4e10",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ea50fabb-b205-462d-8fa1-f8fd3a275488"
        },
        "item": {
          "id": "359c633b-906e-43c1-87a0-0807700dd95d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bf938365-2819-4707-9509-e358759769fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3abe32-8c96-484a-a953-0c7b93c81af3",
        "cursor": {
          "ref": "9dead4f1-777e-4a72-a756-1754d4b328e3",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e8e14b1b-fbf1-46f9-92da-dfb8c84733c7"
        },
        "item": {
          "id": "5c3abe32-8c96-484a-a953-0c7b93c81af3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9cf9141c-8cdf-4464-8d51-8d11a9c1c25c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfb8ddb-40c9-487c-8b1f-371367f118d2",
        "cursor": {
          "ref": "0d66cac6-ed7a-4e8f-92de-8c7ab4550dd2",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "469f9432-8a12-4cfe-9a78-6c5347be492b"
        },
        "item": {
          "id": "edfb8ddb-40c9-487c-8b1f-371367f118d2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "69f93e7c-6714-4a6d-ae48-cf173fb25113",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beaebf0b-1a25-4f81-96da-b0b888f1609c",
        "cursor": {
          "ref": "378f42db-eee4-4375-9ae0-fde76e646c95",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a06bcc3e-5d11-401f-b198-d42247a24dbd"
        },
        "item": {
          "id": "beaebf0b-1a25-4f81-96da-b0b888f1609c",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "351559b5-6b59-46c2-926b-c576a73a4d3a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 331,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361c6b15-294e-485d-9ca0-20a89b7cea9d",
        "cursor": {
          "ref": "717cfaea-6a3e-4477-b0d7-2e697ebef7de",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "437b11d0-5e73-41ca-a803-32eb7db81042"
        },
        "item": {
          "id": "361c6b15-294e-485d-9ca0-20a89b7cea9d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "55d5040c-77f2-41a4-91c0-f5ed3ebfaa33",
          "status": "OK",
          "code": 200,
          "responseTime": 399,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f292efae-6c8a-488a-9f8c-4522036a5cbc",
        "cursor": {
          "ref": "15d1123f-9542-47c9-87ab-ccd6894b39f2",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "aafbc806-db8d-4123-8659-04ddc788ca0d"
        },
        "item": {
          "id": "f292efae-6c8a-488a-9f8c-4522036a5cbc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2fda80b0-1184-4001-b928-2a7b54bf9b23",
          "status": "OK",
          "code": 200,
          "responseTime": 2156,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c76b646-b482-4d24-8cc5-98d473c46119",
        "cursor": {
          "ref": "44875de8-be56-42f8-8fa5-713740c7acfa",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6da18748-a9ad-4422-8f4c-6c960804b513"
        },
        "item": {
          "id": "4c76b646-b482-4d24-8cc5-98d473c46119",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "65faff23-87a3-454e-8696-31044b4fd6cb",
          "status": "OK",
          "code": 200,
          "responseTime": 1889,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "22399438-e1d1-4bb1-9156-349720b59415",
        "cursor": {
          "ref": "22110e27-d5fb-43d9-97dc-d8161539deb2",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "790522a5-08f1-40fb-b4f0-1aba8ad23682"
        },
        "item": {
          "id": "22399438-e1d1-4bb1-9156-349720b59415",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "72dacd1f-2cc7-42a0-988a-db0355954fca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22399438-e1d1-4bb1-9156-349720b59415",
        "cursor": {
          "ref": "22110e27-d5fb-43d9-97dc-d8161539deb2",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "790522a5-08f1-40fb-b4f0-1aba8ad23682"
        },
        "item": {
          "id": "22399438-e1d1-4bb1-9156-349720b59415",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "72dacd1f-2cc7-42a0-988a-db0355954fca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22399438-e1d1-4bb1-9156-349720b59415",
        "cursor": {
          "ref": "22110e27-d5fb-43d9-97dc-d8161539deb2",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "790522a5-08f1-40fb-b4f0-1aba8ad23682"
        },
        "item": {
          "id": "22399438-e1d1-4bb1-9156-349720b59415",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "72dacd1f-2cc7-42a0-988a-db0355954fca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504955a9-5de3-499b-a5fb-8cc0c728ce14",
        "cursor": {
          "ref": "f51242d1-1062-4ce8-953e-779b12665a86",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "48555675-20f0-4e96-a423-0f957559fabf"
        },
        "item": {
          "id": "504955a9-5de3-499b-a5fb-8cc0c728ce14",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "3c22b1e3-6774-4ad8-bf15-4f7257b843ab",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 341,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703521ed-fb97-4a40-91b9-0092e825c044",
        "cursor": {
          "ref": "38e5a4b8-47f3-4d6b-be2f-f559b8bd8792",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8005d502-f68d-4091-a30d-4ddb01b88441"
        },
        "item": {
          "id": "703521ed-fb97-4a40-91b9-0092e825c044",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7357b367-aa94-4da3-b74c-140c45b29feb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703521ed-fb97-4a40-91b9-0092e825c044",
        "cursor": {
          "ref": "38e5a4b8-47f3-4d6b-be2f-f559b8bd8792",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8005d502-f68d-4091-a30d-4ddb01b88441"
        },
        "item": {
          "id": "703521ed-fb97-4a40-91b9-0092e825c044",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7357b367-aa94-4da3-b74c-140c45b29feb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6324149-4b27-4808-866c-b1693fd080bd",
        "cursor": {
          "ref": "4818b175-09cc-496a-9d0a-062b2ceb2eff",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6fb98f42-cdbe-4451-95a7-8e51b9b1b94f"
        },
        "item": {
          "id": "d6324149-4b27-4808-866c-b1693fd080bd",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "b573547a-feec-4345-add3-c6c50deca069",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 610,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e792767-e52d-4376-b871-992e2b8026fd",
        "cursor": {
          "ref": "e7f81174-e4c9-490d-9227-5a6fa8a951a3",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7ab030ef-e2b1-4717-9075-4b22c23028fe"
        },
        "item": {
          "id": "1e792767-e52d-4376-b871-992e2b8026fd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d26007c8-396e-4638-96de-1cbf0b8034f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e792767-e52d-4376-b871-992e2b8026fd",
        "cursor": {
          "ref": "e7f81174-e4c9-490d-9227-5a6fa8a951a3",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7ab030ef-e2b1-4717-9075-4b22c23028fe"
        },
        "item": {
          "id": "1e792767-e52d-4376-b871-992e2b8026fd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d26007c8-396e-4638-96de-1cbf0b8034f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33db1ad6-0b6c-428b-9b10-25e111674cad",
        "cursor": {
          "ref": "13a76ca1-98d3-400c-b79f-fb882d20f4a2",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5b8d9b80-c10a-454e-9d0c-dd2b94e7d860"
        },
        "item": {
          "id": "33db1ad6-0b6c-428b-9b10-25e111674cad",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "3e9e50a3-f14d-4b8e-9b62-ce0df553b160",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 572,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}