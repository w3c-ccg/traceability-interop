{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ae5babc9-c1e1-4059-9e35-635a9430d454",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9e1e0cab-9a29-49ee-bb06-907b4cd08ec8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1a20388a-6b23-4609-8aae-b78dd1605758",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "29a0889f-f85e-4c54-9fa3-3ae9a8130fbb"
                }
              }
            ]
          },
          {
            "id": "b18fa225-18e2-4101-8326-e6e9697ce129",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fef747c9-5bfe-415c-a98a-7cae6561a107",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e96bfc01-9c02-4f1d-b3ee-9c5c33e5a262"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8cdedf53-3f91-4c27-8909-74626c037295",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7a16a61a-50bf-4508-ae76-e1c5996d9288",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c158b498-d1b1-46f5-808e-b3f5003ca399",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "965e92ef-8d96-4b27-ab40-10c1615dc807",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a1ee4b8-d5a2-45f1-b721-052ce6e2cb81"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e7ba5425-0d3b-4df7-9354-abe9d081033c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "43d45ae7-5e22-4cbf-b90d-a94ebbfa4b58"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2b72aff0-ee34-43f7-9cf5-587bdc7ddfde",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "41a1c6eb-6648-44d5-a449-94394c29a5bb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "459fbbb9-386c-4a4c-8f15-8f9dc049e1b8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d3406a9d-8d68-4ec6-8fc0-7a72e30aec14"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f80a5041-2572-4857-a995-19a77f704c50",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5495b702-cb5a-4555-97cd-6bee54137626"
            }
          }
        ]
      },
      {
        "id": "6f447bb7-71b3-468a-b5f3-625c21be4300",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a2c9b2d6-dd24-429a-bc5b-f41bd13afef5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a25ccbc-5a05-477d-8333-cae85e0698cf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fac3203a-5ee7-47d5-9622-bb2793c5d3ba",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70651c96-1055-4e72-abf7-49ebc26238f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15302ad1-7f7a-425a-bff0-c7b443080213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485c1f08-69b2-44dc-a9e2-d28db98c738a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cdd531d-cb1a-4945-864f-112c6597cc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46d2836c-2211-4473-a19b-82e6759fc6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a573910a-7311-4804-bfbe-ab35ca936962",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df92abd3-300a-4b71-8f7d-7d57432b687e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0290150d-140c-4ebd-a8bc-3a65d600a605"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "76818ee5-ac26-4eb8-9158-56f0d707cd96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a761e0f-7593-487d-b1ac-5f96b905ea3b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8904a15d-5161-4366-8c34-0505ed659966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2dc4f418-5f48-48a9-9f32-6e972e05febc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc80b14c-6130-4ce5-a39a-099179ca336c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538d6234-2bcf-4414-8a92-5cc7c9368593"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "077af7b4-83bc-46fd-a211-2ee021baf346",
            "name": "Positive Testing",
            "item": [
              {
                "id": "93661895-e282-457a-ba45-61078a00f3b6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62179778-bac3-4f54-9122-19bcc3583153",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8ec56aba-e0d9-409e-a0bc-044fa5d45041"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c582731c-2636-45fc-b4f4-0cff54dea2b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d1003c36-a238-4338-9c73-d0227048c085"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac741637-2191-4f51-a47f-1886dd99bceb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ff834cd-d410-479a-97b6-aceb90478e50"
            }
          }
        ]
      },
      {
        "id": "68defabb-666f-4943-b55d-8785d5e2dc2a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d7f25090-12a5-406a-9bed-229a7792fdfc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cbcdb6f1-2779-4d4c-ab55-37af89080e38",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cabed531-bae7-44a4-bcd0-bc7da5323768",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b440e00c-f36c-4e48-a570-dcf8b31ea434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f0a547-5c90-40d9-a9bb-25947c385cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a902cc9-55d6-451a-b718-dfd1dbc0bb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c67f792-23be-4a90-a779-e08d7d376da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbeb249-a6bf-454e-9a1d-3c0a507c3d29",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833e1dbf-5775-4d23-a7d4-09f2ac81a328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08e81e71-4e91-4b75-864d-92835fe155a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f9ea5e-60ca-4d0d-9898-4a39425e5419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01f3b4e3-0c2d-40c3-a11b-7e7f56860aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3999e2de-a5a1-4abb-adfc-1a742475cc90",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f595c0fe-c77e-47a1-bc37-5538b47b219d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3000c8c3-6bd6-486a-b88d-39b12857839d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56a2d1c-6132-4639-9ab9-32c25b6702b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39b62fd4-1268-4476-b03e-103d79be6288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6abf5ba-177d-4b21-be43-9810e780ed3b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92314c9-c902-44a7-a132-eef410f40614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fab817-5f4f-4171-99c8-9254d1884596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7398808a-df6f-4282-a01e-1abe1aeb59a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87633e02-d3dd-458a-83de-fe7b937990be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d8ed07-8f60-4990-bef3-60d18c6939fb",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db20256b-00c5-4b76-9b5d-dfb11eeb6583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaba5a77-85f3-4a71-b7eb-908de5d262e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606e7c70-d2f7-460c-bea0-6c4400a587d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4208030b-1dca-498c-80b2-e1a2a21beb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0236759b-ae8a-4f45-9bf3-fcaa79a1c2cf",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772ca572-05fd-4ca8-a08f-8ec3e4f40e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4b9104-bd6a-4184-93ff-b50b4771009f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a24cf3-40ef-42c8-9eae-59fa4ef60e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93063766-6713-4bd7-8554-1183d534d37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee0b6e8-8ea8-4ae1-92b6-ab5f8dd3aeea",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bf0281-f5d0-48e3-a5c5-f611c3b615ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039b8749-0e18-4fe4-a980-d1fe5594b514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef7bffe-a905-4199-af6f-430711b712e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4aa96f39-5122-41ba-b9e9-ea555ba4be30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2255d5f5-6818-4f1b-be99-c5b02196684c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5a3744-81b8-4ded-8c09-5bdc15ee26fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded25cad-9e78-423a-adfa-2fde23c509bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f27301-2527-4e72-99d5-4a56178fd257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83a19443-45ac-4ba8-9579-f7c234ba6dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a879b04-0062-4cd7-9aa8-c145f62c3489",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f791cb-7c0a-4e42-9439-0881705af28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc850448-1a5d-43ce-ba11-7b93f4265c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6ceb1f-899c-43dd-8842-635f6c43c472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76d1eac4-bfde-402e-be7c-b6e6b12de9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a082bd0-8731-40f9-9a91-ca3faa890161",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1e06c3-c783-4168-b16c-1e7b197d0a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83348a91-28e5-4b98-8c76-feb6ad5fb493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd153bf-2744-48e8-9fff-6626cf63be4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62029f46-54b7-49b8-8bf5-e2f70ff1a3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287e748b-0b6c-4e32-a82c-413a40061d63",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c0cb94-a032-4d10-b65d-4360e311158f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d563cc6-7654-4aa4-9d53-949e2ec57397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39d0aca-7c9b-403d-84b7-b085f898953b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ceef15d5-3b26-4f0f-a8fd-28e3a7f822c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b831f5-a81f-45e6-869a-859a588dc62b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bdba82e-f0d9-4dda-abb4-976d435c485e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b3e56e-2514-46a4-b7bc-2265f93074ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f446e525-1c2b-46a9-8d42-702d17473947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f6cee89-cd20-4e4e-9157-e8fe0b5d16e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ad3a5f-ef25-479a-8441-6f9f54ab966f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a932d7-cf03-4425-ae35-c3516f3a9b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b318ac6-3adc-4f24-a7d3-dea40d4f0691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27419ea-5c5e-4b38-8df9-bfa6ae01e15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "979e1cc7-207c-4358-94a9-5d768f80f5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968bf72b-2dc1-4048-a82a-c411c6537885",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7c4216-7882-422a-8d95-4e1ee3c0084d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f21a500-8714-4056-9e73-10d0dd4a5cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa79a0a-3dd3-4976-9bbc-b10f0c5f1802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b49710f-ac86-4af7-9b3e-e32383fd1e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6646a950-4cd0-447f-9996-29050b5e7e98",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3499cb-c383-4d14-afdb-07fdefa73e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de17b30b-393d-4127-a37a-a4bafab43fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a75e5de-12bb-4ee5-bef6-17b333cefe1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23c76397-68aa-430c-bfb9-9c9c07ac520a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb67d5bd-b5ff-44bc-8e59-e7a1b2e63092",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7974865f-c370-4567-9168-96ea17285740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f2b73e-e2be-48b7-ba57-bc82ebb21b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5fc506-c352-4fdf-8ae9-fc12c3d25885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a92cacc8-4047-492c-9a60-dddf78835cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e8401c-b54c-4954-a055-181d971e1a7b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa5e6a7-d9be-482c-b22e-f196e1807ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa0b679-6d19-4082-9d56-b053635ea941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c54f35-075e-4a44-9035-8ef0ff9281f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "863a19e5-3470-42bd-8484-436945cee3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310503e0-79d9-4851-ac47-b7fb6abe19f8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3def54-a65e-4638-9626-2ec44d19337d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f293fa00-112d-45d4-b530-d847ddf3cf9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e212a5-46a6-4028-b03f-862421d8d565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "eaee11b9-fe04-416f-bf81-756180e6ed9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a175fde4-8259-4979-a93e-303a83635336",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da8c494-f5f3-4f6e-bde5-359e4269eeae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3fd351a-1e9f-4a5c-9889-1d6faf960c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5287de8-7242-43a9-8f72-c1fded077742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "caffca16-1227-4167-a926-9608b01ceb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f05f31-c4d5-4eda-b549-de6665a0780f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3541d46f-a1e2-4072-9adc-25bf54f00c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaec9591-0ef1-4d4b-ad3c-4bee23c1b472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6c918a-dd14-420c-9827-dc7c668b91ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa39295-4cc7-41e1-a938-47d7c304e92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872f2c39-9cda-46c5-bca6-405f44625152",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a90c65a-879f-4433-8a29-7f842fc1278f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66fea94-78de-4d7f-9196-545a0edf4c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c413b43a-6307-4f61-88e0-36a8dfd278ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60af5a19-771f-41ca-8c3e-f1e1efd2f9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dce9f83-55ab-4c81-b5f3-1ea506c870ab",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3d4341-5f23-4fe3-afc4-6271799b653a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "429caf24-8e00-40a9-bb2d-8143316bccee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39afbdff-d2cb-4c5c-8305-9c438a2fe871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a66edfc4-5277-4c2c-9ddd-83d1236cc715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c934e4f-ece6-4ece-a0b4-eaf567b6b573",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd0e0df-755b-4f75-b2b4-4a94de326ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94772e53-f182-432d-bdc6-e7d55c4544fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7730a2e3-9d46-44e0-a6b9-e91ab46345d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "779d2ee1-c83d-4f88-94d4-de3ada3103dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9046c2-e75d-49b9-8eb4-05938870addd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571e1776-756a-4a4b-aa51-e7df1de55eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7912b1-1804-4a4f-aae9-2136fbc8beb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370e4d4c-61cc-4b14-b039-e1dc41dff5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0077e029-2417-40be-9252-6196b4e67a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f239a162-3a13-4845-98ca-6516d9e8e210",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f96fdb-a683-47e7-b839-4998701e4f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff1689c4-7448-429a-97f9-529f7d910f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731586fb-ef42-4d74-8753-9253e5162cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e87452cc-e63f-4817-9989-5d6a5ce2de16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca05bff-b60e-414b-a97f-0cd0c3a8cf12",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e28bab-2a5e-4c8e-90f2-520c5c462ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9f90f2-3d58-4be4-9342-ee161cc3c241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a65f43-2e42-436e-a11a-ed3a1611ce75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc9b9728-2b9e-4059-bc6f-805d96560095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b668b0-7b70-48df-b89f-4f827a565d50",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "866b4dc8-7a89-46f3-8fc7-1d0255546981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55dc1442-b9fd-44d2-abec-bff66daccd87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ab0349-1f85-4875-b757-7bbdcc180a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a47ebb5-0768-44cc-a7e4-75387fdb09ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd5a138-9a7a-4ea9-9dd2-d0f28da3fbda",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f865ca58-d52d-44bf-93a8-b4148085e37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da4cccc-5760-4123-9f0f-958c1e58d34a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb1b47b-6f73-4d05-8dfa-c8d509be0bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f045b9a4-df0e-4aff-9b58-e9d3589ef1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d4fe82-e25c-464b-b116-082c392d69af",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9f388e-5800-48a4-8ff6-65956f25afe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23174a1a-f4b4-42f3-9c33-b6cd3455b591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b367d131-87b8-4aaf-a021-9ac380fa5cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e228d1b5-455f-4ea6-8588-52e5d7753bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52aca08-f2d4-48fd-b7a4-0e9b8bef8458",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9bb509-138a-49b1-b5e4-a3c58ada1ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ef0821-3e61-416f-877c-82e9f676af2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa1cab0-cece-41e8-8736-3ba0df5c69f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4fa677-6838-4c73-acd2-648cb1ba5d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01440a48-3ecd-4210-9d07-20d512df30d5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a1b945-4057-4ee6-8c71-b3cb7ab2c125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b53644-7a12-4b44-b600-b44f264af298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68215cf-fb9e-4018-9093-30aeecc0b797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8514ec0b-793b-43bc-bf09-c4eb3fe24d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa71a51-e0b9-4087-ab42-b596ea3307e1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59382181-ea75-485d-8648-de07cff54650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df10735-12de-485f-af35-7eadccc85412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2362ae94-113f-4be2-b055-8034826d61d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e784333-0f8a-43db-b1d1-346215797ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f211f065-7018-490b-a603-c22afdaeaa46",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb6b585-0237-4388-8aa6-6b88a5c94d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25411c50-0da8-4649-a66c-7340078511bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82bb7fe-2ce2-46f7-8639-1c3076335a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95839d6a-3150-42e7-9445-52764bd2db64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78aa4178-a6f8-4dd6-9909-c1be95348442",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9696db-45d9-42bf-88a8-7b087a310c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270499a0-1725-4369-91ba-3a7d04117d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88de4df4-4659-4f50-b6d1-eba66912cff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf7fe43-a3cf-4766-9039-e808702dfe42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be31855-dac4-449e-bd17-3dbd861ae850",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "726d7b34-bb4d-4b66-94d1-403431cabd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5061dfef-9cd2-45f0-8c01-f6e303044b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcae781-8973-4b10-b964-a2438a0210ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4f434015-bf97-4f75-80c2-292e5b318024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da686d6f-2bc2-488a-81d5-ca8ff53dcada",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e05fb69-c655-44c3-a2ed-03c5c34020be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6aba773b-0c50-4d3f-b5ce-5fbf3310b638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713619fa-4308-4695-a067-91d41da10b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01b08be2-1b7e-4b81-ab06-e346aecff12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3a0e9d-1178-456a-b50a-7dc9c754065f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5e8ca9-e6d0-4a9a-a289-befb9f151b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3277015b-e249-4420-845f-5dac422e7be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7faa4b9-9e58-41d5-bdd5-0142c01801be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5510b9d-8923-4e93-b462-3449609fd937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae97494-28d8-48b9-8a77-c7d3af2caedf",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6159edf8-8e9c-472a-ad1e-12b2fcf5a500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc69fab3-c5c3-490f-957f-1a5f8a7a985d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64db4a9e-71b2-4a21-8887-bfcef0b8f629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "68e8a7e7-9627-4862-9924-5b97f3d9de6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacfd74f-d085-4899-b25d-b747e8e70287",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30128382-94ed-439c-942f-aa2a7778bf94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e4de018-d75b-4da0-b2e2-fea5368dfd33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b53e7a-9b8d-49c5-bb0e-f1e957fb1e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e16aa039-2d39-40d5-a41a-60ae86069c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd5759f-cc05-4cfb-88dd-fe8be166b56e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96eb72f9-a6fd-4ee1-8cdd-9706e8cb15d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d07cc171-d25b-4c06-8244-597847e3e2c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90818e4f-f20d-4ff3-a5af-5c9456f4c7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "71cd34ba-ec32-4203-996d-d4f8345e4e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8071ab43-7cb1-4926-9a84-3db8ba42fcdf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1262a1c1-4164-428e-960d-96a5b6426092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a57227-54a1-41e0-be62-3f9d55728821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42deb9bb-b4f1-4e61-9c78-c8312bc8b4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "176aa1bb-b377-4a2a-b99f-508a17387135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29bd181-dc9b-4306-ba87-b5fb96b35dfe",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee370df-4f8b-476c-9676-6d150bb7aff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557b1b2d-1e93-4d6a-9e8f-f9004918fe55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddff04a4-a53e-4e9f-aaf0-467477d8f75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "76dc863b-242c-4771-ae79-80d98e0cb372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90af3669-1d87-4b22-ba71-071a4281d919",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8652cbf3-f1f8-485c-8778-27bbd2192692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60babd1b-2309-40e3-b596-19861b9dbd4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4bb384-2eaf-48bc-94d1-9f818ca98756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6c140a-e566-46d5-b27a-c9d6606aaae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4bc9fe-ec7a-4d17-9911-57023652437f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c9f01d-7a96-4f9a-99fa-8e5a1ef7f6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e613ab-0eda-45e2-adcc-29a05acf4331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d496fef-09d9-498d-820e-8917980564b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "37d7d528-0866-4476-b97f-3dd16ba543f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab8b618-62ed-496f-b974-2519233badca",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f879f460-7654-44b6-bce3-e90208f8fb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f356f83-32f7-4db1-bcc1-6a1d7405a139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c003563-49b1-4510-965a-58bdc6a5a5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be323146-fc6e-4ace-97c9-71466baea67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0482e7-a832-4c73-bc62-b63c3685a1ab",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cfe0f66-6b39-463c-8341-7917f9e591a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5125ef86-61ba-46ed-87a7-05a23fbe0a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9104ff7-42fa-4578-a3eb-b5ee49f290ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60ab1874-501c-410d-aeeb-cef2bcc8f3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80b896e-7e94-49f7-9fec-f22c9f1bb791",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43519fc4-ca69-4a0c-9d8e-04a03010d986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5dbff6-e56e-469c-969a-33953ee74a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1145e784-bf13-4bd7-a46a-cdb7d196a254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53f56e6f-55c2-41ed-a568-d4c5fa4fd0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9426b5d1-c0f1-4360-81b6-297ade04bbe2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0dc1dad-fa7d-4b12-8d6b-49dd0ce9f13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "528d3631-e7c7-4e35-bc63-76f908d1d9e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4313c38e-72f7-4fbd-a19e-13ebb6d43ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9385104-8819-46c6-a1a9-9bc06b16095e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a39fdc5-9ac6-42d6-bded-04a7ebd77503",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17493f77-5863-4ddc-a504-85eecf6a4a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f59fe6ff-fe0e-4dbd-8182-3b8cbc2ad23c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7539547d-27ce-47ad-8388-c479f2c12cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "da036c1c-42c4-4117-8993-146b61a7d6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97e929c-b5a3-4055-bf4d-9680cd264330",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254169b4-fc40-42c2-b60b-c3b3723c3bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c3d648-832c-4621-a5a9-698e977de411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546e79d1-182d-4059-ae5f-505cba8fc1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "183ceadf-328d-4995-a2db-1add5e6daded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3e04fc-7328-4a59-9422-895b844ebce5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c351ed4-41f2-4904-a8dd-d0ac62cc9eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c625a22-5474-4338-b1e0-ce748b96d63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286ebd33-9402-4dd9-a733-5ad21668a2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "986c4ec2-58eb-48c3-821d-347e02496cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679497cd-7c03-4fcd-94a9-818d2630696b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1dedb9-65a7-4e36-a1dd-be3ac66fdb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb29517-2d65-419a-b413-6c905d8576d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664499e1-f591-42a5-9b83-e4ae6158ebd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eed406eb-995c-4382-9fc0-e9b88f2330ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2305c0a6-74f1-45f6-98b6-1b2263327395",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ff2fa5-576e-492a-815f-403f0d1b5e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85fd209c-6c08-4857-8c4c-4994133c2e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513b4f39-ca5a-48a3-bdbe-f6ac2b2d69bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1792c4ce-f907-41da-8110-f8a416c7db41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d72b21b-0e3e-4df5-ba55-dc8bf4beb9ee",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079e3fae-0ba5-4011-8dbd-5131bf9cc90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d43cab-c385-4059-ab30-ff9fc9a6560d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e57d069-255f-476b-9984-1709279928ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28e857b5-371c-43ee-8ae1-70bdda1c84d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93034f30-7b38-4166-a567-958145cdde65",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c948a0-e3b9-4b43-b1e9-c81177d6c6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "710d1324-c3c0-4df3-a372-e6c5a3a2bab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65062b3-f811-4b96-973b-c5204f7ea0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5274c0f-079f-41e2-b2f3-ade5df6d04fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cfa6a9-258c-4346-bbc2-f48f4268d863",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627faf8f-d861-42d1-b6e5-83996834b0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4faad868-b6a0-413b-81d6-b333f0b1db23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700821cf-ad4a-42e9-8e9d-fb9332c419d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0d08de-04a9-4854-a016-e8e5608f47bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f36a0b1-e9d7-4b46-9e8f-519c00edf9cf",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd652b2-709e-47a1-b7f4-960b02cbba73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54ba5d3-df4c-442b-8a8f-5cf9d6574b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7efc4f4-4b39-48e7-8c60-dac7ca63b919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e482db3e-f267-4f43-8518-8f7e0a110e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ae6486-7b46-4394-86d7-dbf21fdf122e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a9624d-07da-4e0f-b45b-a34f9179958b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8537d232-49ef-4d01-a0db-746a7b69e4bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3935bbad-c8a8-4145-a675-7c0c0e3a11ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "47b66348-919b-415c-ad99-5e2b1e548cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a436956-a485-4b38-b3c1-fa85549004cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853d1961-ee75-4c80-b448-d8415229cd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013accb9-f1ba-4829-ab03-048a0ded8f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef87dd96-644a-4730-ac56-361bceca4d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "475bea64-35c3-4798-a331-8886349bdef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca84623b-204e-495c-845f-f9a76a61df93",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7abf6b-b64e-4c75-acdf-a468688f1386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc814052-a11b-46f7-97cc-5ed8f855ba4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ad7936-7624-4e63-9211-d8931d489862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "39a5eff0-5e59-4430-ba32-cd8780c9d546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b241de-342c-473e-80c6-060ef3584242",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898a2da0-b1eb-4f56-a512-6bf207626be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4f18ff-7f93-48ed-ac0f-200b2b0ec129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357883e9-0be7-4de1-b935-11f9086c9f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a3e5d73-8b28-4069-b204-ca27df6e1e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c0e527-8598-4c9d-9b83-c22d43627711",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2c8363-ec79-4514-b7ae-97dd65d2d9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c02002e-96e0-41b5-aebf-442e5d189da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783bac42-ab05-4e53-aba4-331916873b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7b453e-46f3-4ee8-b88a-777f9f92086b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360698a0-07e3-48a9-885c-057b626bd550",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931dabb0-fbcd-4247-8689-4e5d0fc790e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a82ec6-7543-485b-a1b4-0cd029f2ddb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1a43b7-25b1-4ee8-9104-70426e21d1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "295b539f-b3d0-43fe-9fab-b755adb7997f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbf3754-3a90-4c69-b172-f847616a9afa",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05ab610-b439-4de1-b3fd-d333fe2e147d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ddc89cb-1a89-422d-b3cc-cb1dfc9532df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa604af-7dc6-4754-8128-05b6c63214ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9522e9dd-8305-42f8-844b-7e8b2b39f5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89868d2b-33f6-4836-9205-265d8e35a9c0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396ee38a-7151-4023-98ad-e9cea3c7c9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b75806-8a69-44f2-a1f1-a9d5eae1e7a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce2c789-c18c-4d28-90b6-1abaf98a8e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e585cb2a-e2d8-46b0-9554-97b56c2ce9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782b99ba-d4b1-4d4e-8eb8-fe3f98092240",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a2b450-c42d-4938-803b-da8e0130f80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9862f13-f6aa-43b6-836c-a78a6e192109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33990b9-cf46-4b5d-8669-ed04129daccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ececd6cd-c547-4764-b235-4ca7dd95503f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8e3666-9f9c-471c-8999-559a61d12341",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb778e6b-3b82-4fcc-82f7-7bf751816bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5856ced-f333-4463-8d2a-658573ed103f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae346e0-fdde-49d3-8c60-efbf554a1721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a90a2b9-c642-44ec-84cb-ddb1c94ab0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285239de-0cd3-4d44-871c-c33707784af6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242f13fc-1e7a-4cc2-b65f-f02f65dc5e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4455edd6-8ec7-4b88-b0ef-ccaebdf6c909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d700318e-b632-46c3-85b3-9c56e8270856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "68c4ef64-ad6a-4981-a03c-d9ece776f2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb27931-3fc0-49a2-9752-8f921a42e432",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c57549-0096-4f13-82d0-fdfa8a29a97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5faf725c-f4cd-4662-b8c6-0fa67740dbec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b841b24-18cb-4837-8ab8-570825cea659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "01570c91-f466-491d-987f-4cf294a7d9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dad87de-f2b5-4fa0-beff-80af8e8bc2d8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0f82be-0144-4188-bdb2-1edafc5f5a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e0f8d3-cdca-4253-851a-1bceb3b10f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0cd39a-47e8-495f-826b-eaa9a40596a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04fb71ef-53aa-4bd6-9331-f5121ac07886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bdce722-55c3-478f-a509-9a5d53caa30b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02bc376b-87ce-47d6-89d4-28394a90700e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148e2f4b-cbda-4fd9-ac2d-00236a5f4ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cae27b4-b916-48d4-8577-045e420a42b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "659783a2-1f86-4930-b017-c45e9b658eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f40224-ba5a-4d39-a05f-22a28c9de620",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6279e47-9f00-424b-b2c3-6a7927514685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87525998-7d4c-4993-8add-c99d6320d44e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db32df9-a8e1-4403-85ed-4721e543527c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c17f653d-443a-437b-8ce5-587ff771de52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f808f29-f0c2-499c-a926-4f1c29b8279a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f60fda-6e54-410c-a9ee-d0a9dadf0212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aff336f-dbcc-4af3-9406-f7a85d1d794b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c7baab-6fe0-4fa1-9bdd-2b5d591ba873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b075eaf-d3f5-4d3b-a953-84ad39eefbbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd1f1a5-f82d-4aac-a622-e50c57e26c19",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38757765-7ca0-4b37-a1a5-46bc36991fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a178f6-fbfa-4d27-95e9-f6e5fbc7ef38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb95a630-36f8-40d0-862f-3c9e98b179ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bcdeaf84-4451-421e-946b-9a7a8b5ca1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0caeccd8-98f7-47a2-b398-15f5ea98ae7f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a98206f-bdd6-4ad6-bbfa-7cb10e6e55b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab7f947-1699-4237-b629-22eb9b7d7587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3146814-c94a-4844-8fc6-f48ab5dec337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc385b9a-e64d-47c3-9005-cb19147bf709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61d4b08-11a3-4c37-8163-3dc6b92f33c8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267d6113-a085-4bdf-9ee7-b0a6aae319e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d787530-d394-4e20-96c3-69d908fb69b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7c02a7-623c-43ce-b751-b48b0165ceff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4aa2019-9f35-4723-9062-3c5a51a6a4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10923a70-7215-4511-966d-1ddf7936e9d7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a0d7c9-e6cd-45e2-be7d-566015081a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d86a63-fe51-4e27-92b2-cf58d3bfe760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43e1b12-9ad8-4f42-8a79-542f76df55b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "069f4760-9eff-40b5-b08d-3e2ad574d59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d148ac-d124-4aea-af10-78adfdf44215",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fcb46b-7abf-4068-abc5-3687acaf24cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eabeebd-1a1a-499e-b9b0-2a98a0bb1e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e376b4a3-8031-4f42-bee9-599462f8fa95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9baed7-a186-4b3f-b17a-d9be6fdfda7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ade21f3-837c-470a-b23d-25edb8ec0506",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e44d1c-d5f4-45d3-abc4-d6d58457872b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3178fd7-2ff6-4da4-ac60-b64f671a64b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21dd5b9-7507-41e2-954b-2b4dc1e063f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a842a899-c270-480b-887f-93ca15133686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddd8a81-7f6e-4045-b71f-fc52f9c62e94",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d094c448-380f-48ee-bea8-4adefbf74f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a8ad4b-a6ff-4923-9d13-3076e6b3b664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bed527-26af-409e-8212-1c763a931c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd47fa7-d434-42b2-a494-3f27a047e4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627f75ae-6437-492c-9938-0f03c731abb5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70147618-0922-480b-a5cf-ba4fa049c6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dcb7acb-b53f-4c7f-8614-d20cf66a121d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575e7dc2-aa23-4a07-b89e-bade00179bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2253a86-d4eb-44fa-a426-befe450c5d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ece2ab2-5a3a-4a50-a476-ca8b821b9c45",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57fdf331-27e5-4c28-8b99-bb3ea1bf08fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a828a81b-7e84-4ebc-8610-7ebd982de6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1209c3db-68ea-4ba4-898c-5203d8d38e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f6d49a4-3aa5-4b48-a4ac-bda5a14c2c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f9e0fa-5bec-4bb6-ae35-990c5c22753b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d06028-a081-4179-b35e-e4f9548ef5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d30581d1-aef1-48c6-8451-1aec5b19fa0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ded6be-de39-43d0-b720-ca3e69a74646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5383057-5c2f-429d-bc5f-d7f84f32dae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1414ee3-3013-409e-be4a-d4e7b502aaa9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a47432b-54cd-47db-b549-8e94bd363dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d449c261-a01f-49d2-9dfd-a11078502c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265d3827-9199-4130-849f-f362c7e62eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6cc4dd-0fc5-41aa-b90a-721116fb12c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa5af22-78d4-4c0d-b3e0-60b3b60d0366",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b938b8f1-04a5-4f8e-bd53-9df53f272993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7540faea-d925-4e91-87c0-b2d3ff702ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a1317a-b944-4d8b-b28e-b7812936be94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "750f62eb-c532-4770-9d9d-48d3b5a1df84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7ca368-3a64-4d1a-b0dd-6fd86f3614c8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf78ad9-b995-484f-a1d8-8d94f35ac1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0472cb8b-66ba-490d-81d6-4b8adb121160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a3f34a-748b-450c-bc71-e935e7d81a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b789c208-f983-4b9b-9fb8-783da8346136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a605ae54-4e1e-489a-93d9-6417375ee6ea",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac06310-cb36-4e8d-89a3-be94de21af9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f05b563-30ef-49da-bff8-8c902d8e1d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b354ff-f3d7-4b4f-af6e-eeb3a2c1d178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0899cd0d-bcde-43ec-a27f-11fe3e1c3a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5fb904-8d7e-4466-a4b3-391e59563296",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfff99b-1b40-40b9-90f3-465e73ab0d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc453379-d8c3-403b-9283-cc0d14986a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e58420-d417-47cc-bdf8-338e785dd159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "15ff6a03-c97c-48be-9ee4-fb6117d72dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef91c8f-e0b9-4a79-88e1-eff8ad4f76f4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f8b7a5-9969-4b50-8c54-7e9c2921a8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e722e352-6398-4151-b79e-851d5e5c3342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdc08d2-7bcf-4287-838b-4d23ca5e9833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "72ea9b1e-5b97-4ca8-adde-0905f25c8644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329d927e-2ced-4fa7-9f74-08f6b566d3ad",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfc455a-abc6-42b2-b27c-56a3b2a58dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb02fd6-71c6-4ab4-94a5-390ea1a2b02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e26ead4-3c07-4425-ae66-715498759074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "02f9c1ae-79d2-460c-81f8-ea6972d418d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e32033-fb86-4426-84eb-d25619d79707",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c618d2a2-7e95-4434-8a74-3de4d04708ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f8d9873-140f-46f6-9d25-b16c436c8c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c078a4ab-0f5c-4a61-8be9-8d0c446f42b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd3d252f-07d6-4570-8096-c4efda033278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d7d551-c8e5-4f7e-8b8d-2a55dbf35130",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88170b4-6d26-41b9-b7c3-00e8ca5f09d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c7bd1239-56e2-40ad-b6fb-5176336f33ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce850bc-6a2a-4079-91bf-cefa71775066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d290542-7029-4f38-ac13-9ad5c4bac960"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "efa120f0-1b81-4b77-a5d1-b5f9594a7789",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "310d0a16-6ff3-4955-bf1b-dd2c5822ce18",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8b8d16-243e-4a3d-bdd4-84dcffd55d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90263860-069c-4455-9aee-58a7dfc7983f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf9ab2a-aa86-4edf-8779-da72d4a607ad",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48144111-7777-422d-91b7-331c2de2e42d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62c5d903-a14a-4aa5-b807-44ffe424708c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13bbaf69-b043-4cc1-bbd7-018733ad94ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1de43127-a8bd-4862-824d-abff8eb1510a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2dad2de-251a-4a54-ac68-883d3232128d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "671e75df-a5e9-44c3-901e-09e9e90168b6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e9090d26-56ad-454a-b24a-468904d432c3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a9e6a4fe-85b6-44e1-af34-ab3899774acd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "880257bc-b606-47c1-853c-9b44a9826013"
                }
              }
            ]
          },
          {
            "id": "cc4ae2bb-e073-4352-8589-59276a766c05",
            "name": "Positive Testing",
            "item": [
              {
                "id": "11258d67-f05a-4787-9d54-6f07f32f00d5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74b4f9c7-d825-4891-80c6-9288c7e8e38f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "00262fd7-9128-4042-a662-de60b9725c1f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c199bf65-a8c7-4b3a-963a-eee2ed709644",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ad5b8467-5ad3-42fc-bdc0-357db1aea8d4"
                    }
                  }
                ]
              },
              {
                "id": "aedb04af-9fb2-45e6-9c60-f496a1f7fafd",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "679157e7-5324-4e25-8a57-e04b169a1a72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d79a803e-0b25-4671-bd3b-2225f56abbd7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0f0f738-b86b-4248-a709-9a5771f25e39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "97c193cc-9e3c-4d88-a774-3ad0fa416eac"
                    }
                  }
                ]
              },
              {
                "id": "e14a1f19-99ce-4f80-8351-06b0b4dd391c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b96e72e4-3759-4628-bd01-f2befd568bec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25b6f574-c275-4b2d-b89d-3a2063b51de9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a8da03a-58a0-4d40-af1f-981fc4263efa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aa6d29fd-ac73-4282-afe1-8c539440527b"
                    }
                  }
                ]
              },
              {
                "id": "3246b607-a26f-43b8-8faa-a5fd4d0e4c8c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35a54363-beb4-4d72-93e1-17694b502d44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "701313e3-d39b-4fea-a214-0aa35a8b9fe1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a784ce1-25f3-4b2c-b0a9-cb29666647f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4857f84b-b7b0-47cf-ad2d-49838af63e97"
                    }
                  }
                ]
              },
              {
                "id": "d110ad8c-d7cc-4ca7-9de5-f234374b1a05",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8ab865b-eb4c-4831-afa7-d63c0ffec16b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e5bd35b-5e5e-4c49-a048-ed9e85ac4bfc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8f02321-6562-4150-9d8a-685425e4ba55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "515a58ab-a9d3-4c82-810a-931c6472f77d"
                    }
                  }
                ]
              },
              {
                "id": "1772fba6-2106-4937-98da-096e419413db",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2fec9f89-3a57-4c92-8479-dd8eb765b2b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6f5274bb-2b37-4527-8218-e8d2eac15026"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1caca46-ac2f-4eac-992c-60601d1cf38d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7c440a19-4d23-4076-9ed9-a6ccc7f9de92"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b7871db5-d664-4319-b8ef-dcef03f7f12f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dda9c5ab-2abe-4669-b12a-8a5e1e2e5c39"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "352716e9-4e34-4f78-9077-ee2e2a166a97",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "12d08a14-3724-40f3-89c7-f6c8aa2c3273"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b51f23d-8024-4b2b-8508-3cfce991efe6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1d2a822f-a961-4bf1-939e-6880e3e80d3e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6020829-174c-488e-a9c0-997ecc0de577",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62d8cba2-b1d4-488e-8bdb-e5ef4253c97a"
            }
          }
        ]
      },
      {
        "id": "88ef514c-fe89-410e-bffe-359400eb7dab",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "581b6ca8-27e2-422d-8d47-2dee32603436",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c059407b-c917-46cf-9208-04b565216237",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6826e395-2d31-4150-a641-f65c71b9401a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf84bb71-1416-4b73-8db1-1107fadcfe46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df839cd4-a846-4855-929c-bb83d1472d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec9d8e1-942d-4886-89c1-1ff4a46924fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f53c627f-4200-476a-8a00-05eb6c197243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca1e8ab-ddc8-4e65-9c35-cdd5cce097cc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3adc6027-7c9e-4d5c-9820-702ae8bb2049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "038612e2-c3b0-4119-8905-2516917de176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242d278c-c0ce-4c60-846c-ffcac3f2bcb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a562603-508f-4460-8ece-6f1f450c6f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1efbd38-3926-45ba-8a76-289392bb297d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfe8021-47f2-411a-8ee3-6dda94adf170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122a6212-6768-4950-9ef9-4c06f2c49ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51bb5d9-a4e2-4306-9b05-86cc4ee445f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4321802-9083-4fbb-81c0-0d2e8c003a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567812bf-352b-4657-9b5d-70eb105eb088",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0baaf9c-6664-4088-96ad-adb710b4776f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f8d5dc2-188f-4675-acfa-31fba923d3e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c04850-68c4-4a23-bff2-edf53490c526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "781616e8-ecad-43e9-9366-f2c62351ca30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a47c270-bf8f-4fd5-9719-51ed35fe38bb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9856aa55-7c39-4ec7-bcca-d5901953ed04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c148cd08-1f1c-41c3-b188-d57e3920c0f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55472b5-72c6-4b6d-bb66-4729fbbda5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9154105f-72bb-4b00-9af3-40c77616ed13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170c50fd-682a-4ec8-82d9-2c76bab2c1bc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bac3b7e-cd43-4a50-bbd6-b9671bd44ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea4e29db-8fab-4a7a-a314-3b9fd7aa1c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921feb59-4e15-4877-bc55-b3d026bd62e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a486cd95-3543-4214-a99c-49e5cefd8073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0683ea-cfe5-4109-b7c3-d348a7817db2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f861a9f-30d7-47fd-bb9f-7455c50d01fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7ba7bd-d38a-4973-801d-6763d8fc6eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5d1d58-3639-4008-9e47-e7543de99b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6eeba63-48b3-4cb5-924a-1f8242554861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd138c6-98e4-4f16-b1a1-0f7a5a903fef",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c578b5a-238a-4e28-9574-feed2ba933d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be784fd-e9cb-4d11-9302-6035eab01abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d3031f-e6ed-4f73-902e-14ea9c904214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "486cd68f-8132-4102-9e2a-868fca313d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15299991-0b8c-459f-87cc-a920cbb9ba46",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f5f4ac-9c94-4fc9-978c-571ba4dcdf7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1ff2ef-dbe1-4321-8b03-325363fa74ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06156a3-579a-4928-b00c-10351b7ee3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6baecdd5-505c-48b7-8f9c-cba4f45df784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eeccf25-fc9c-4049-aa65-f9b8ffcb0876",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e021a6ec-95e1-4c36-88ae-765b491dd026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc65b165-ed3e-432e-bc2f-82c0b34e9e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f5eb12-eb85-4b14-8b6b-36bea03890f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b9c204d-577f-43c4-b854-b70e17f30430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c843c9-2922-410e-9bd5-fa8bc7cfabd0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3adebf46-e923-4e01-9417-7859e05fa953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab47728a-8fad-4d79-bb95-b5adf17b1b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8fb5d73-d3b4-44a1-8560-b957e033c713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "34a93f85-2d81-475b-bd80-8474c7c0a06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260b4e6e-302d-4fea-a0e7-cc584871d128",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212aa40d-b5fb-4887-8026-44319c946e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8417234d-17cc-47e1-a085-4701ab9e0e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c2d56d-aa95-4679-bcde-a347cc6fad24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58e82c9d-427f-4d83-89b7-d3996dc6bbc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acf61ff-092d-42e9-ac85-39df150f8e3e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ea8b0e-22fe-4b00-82d6-8dd77f2cc402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb0f399-4205-4e59-92f3-b19087577645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5080979c-4ddc-49a3-a551-a5159cac4f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce63534-b54b-4661-a55d-bb0d1f778ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a967963a-d2d7-4ed1-a142-03704c0dc5f7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6647334e-aa30-4f7b-bff9-07a543580f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565ef635-eb3d-42df-a2a8-e89b3ba1b289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78e1c14-2436-4b71-bb39-2e1b395fd046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b66b8d1-d435-4561-b61d-58c3e378700c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41146f1-f6f8-4f6a-8124-a76d337979f9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa73f27-5ca9-4060-b98d-bdea47f6e828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc0bccd-1373-45fb-99cb-7cead4bb6e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f85b64-fcee-4b3d-a0a2-4402a457626f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ad55fb-8a06-4893-aa3a-6f9775c3752a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93496a33-0b1f-49eb-993e-e2fa9d22883f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f080cd-7961-4d57-a525-1d26d27ba936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a883ca-a43e-4c5f-9716-2558130f3178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3695f2-3c41-4293-96ba-214c5a477eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b92d6a-1749-423b-b31b-0ca4cb07e2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e8e2f5-c227-4f3d-8893-e340be5841be",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16ce2b3-7069-4ca3-9014-08b858d39913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c642090d-5f81-401b-8ab0-810af89668e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7346bf63-62ed-4ab7-94d1-be4d1f90edce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "91126701-e471-4f3f-ae4c-aacf91400d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81277c5-8d5d-4a5d-adef-ef66e8d5a604",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f206a8e9-8df2-435f-bb46-c853d9da68fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "712cc111-b36f-48c8-b028-259ae042781a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0051ea-7ba7-4aa6-9237-b0eb9eb091ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7fea673-1145-4b4d-b99d-d1ec23640c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c079453-72fa-4eea-8625-00cc3ef11cf5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4747968-3e1e-4788-9582-ed9fc4797186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0a4a0f-a937-41cf-b2e0-f8372622a003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db13b56-c8ca-4b73-9f5e-23229571d465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5c6f40-99c0-4416-b2cb-554f68d44cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e556f4-f121-4f29-8429-3917ea662c89",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de83247-4ece-4b82-82d2-631a29fbdfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b97e18-ba5f-49c4-8fff-b28a8f76f9a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d267f730-bd20-49d5-8f79-13da34d0d153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4023bb91-0c87-437b-be76-1e06565f11d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14811712-cb3a-4a25-a8c1-a1a8338af934",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0002f585-e946-4e5d-b346-e9f683a21623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b748db7-6060-4054-9e3a-121caf836d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fa9eaf-3a21-4603-8b66-8b07a594e1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e63a0acd-63b0-4d2d-b053-ba3d19b614ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c8fac9-ef3e-4803-91c8-6b33a5016bae",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cdb0524-cf7f-4586-8e83-8941965b53de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15947306-4f87-4320-a3cf-86fc6012e398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a596a1-78e7-4ce6-ba12-a21a8fae9d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f0ecf8-dec5-4b61-bd38-fcbbf1c00ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d181280-740c-4cb2-ad8a-d13de5e5585e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e79c50-b6f7-4ba8-8c6d-6785a14670bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc6921a9-8fb0-4d3f-a3ca-1bf844ea04db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265eaf5e-92bb-47e3-96e9-e8eb485cf5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "886481a1-586a-4b4d-9470-c52753c86cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9516563-6a99-4026-b887-489b4be8f55c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b051a8-5dce-4667-a1ca-910042250c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241211e8-6232-43eb-b005-4068cbb2e037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b956ad7-d6d9-4929-a4f7-f573f9721c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02709e1f-2540-4c2a-8b75-ab6933a9a151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c111d292-a698-4e85-a637-ae91845e1d17",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7091659f-3564-439b-9cbc-8df486dae298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b124a1-9264-474e-8e4e-056e9d0b87f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b747cd36-f284-47aa-ac83-23ec471b5081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83904a5d-36bf-4750-8375-3d86ca65432e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7438c3fc-b549-4134-ba58-20008ef77c0e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9555dd-1f30-4562-b914-a25962ed6bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830556c7-ee82-4712-842a-efe55c9c21bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7159894-8ee9-4a5f-9695-caf5a4291797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d333f621-7335-4a1e-af9e-f6d9167f5e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4464c5ca-2d1c-4dd2-8ea1-5e4a95072d93",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b0de03-da7e-4a8c-a21c-f14dbf45dbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b50f406-8d66-408c-9de3-4bbf4b1e6a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2514a689-816a-4cf9-84ff-d83db0ec7024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e38d9e98-0dfa-4612-9bc1-1c54917469aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fff3346-873d-44ed-b645-182ad9fe1596",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab331015-cf39-4b1f-a65e-8fcee59e8fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40fc8a83-0e1d-46f2-b5ec-54685f807a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2267a49e-773c-4b65-b087-fc407dd5ce8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aed8c2a6-1149-4330-8971-4bffad685fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd814291-0256-4e47-911a-ea26760f34d7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7faeb1c1-61d3-4a1e-828e-65d7d15daffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73651c73-0152-490b-b75f-2b3820e21527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320f6b27-bcf0-4c62-a102-d9cc0050d347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1facef1-a718-4577-9c5c-328a54a1fe8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febbe827-6594-429a-b3fe-da8828cbb12a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42dcf22c-16ec-497b-8401-2b5d337b2605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b26a88f0-0d85-47c1-88af-5dee222f386f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6917634-e9c1-4634-89ea-db90598d94b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3636114-baf8-4e46-9eba-37fbe0a1b934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb3f14a-22b5-457d-8ac7-289f1f5b3224",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb31d37b-98b9-4f65-be6b-e07d2bb74380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4a9560-6555-4aca-96ba-6db4f7c99943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90d18fd-a2b9-49f3-bbb0-7d3fec2295db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c81ebd6-5119-46a5-a3e4-60cfe6b65208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00fe0f67-c231-4d5b-beba-99a2eeff6ad6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e942178-f083-46ac-96dd-d9cdcee86e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ccc78c-a9a1-4c66-b0dd-8f3407ff321c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4b0612-7b6a-4a4a-bc05-b9effc6db559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cfc273f-a77a-472c-b650-84fcb96b03f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "62217a13-8567-4e47-8fe7-06f6a7d518a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "54214ecb-2710-490c-977b-d611e491881c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f128cb7d-1f7e-4ec7-82e8-255c446305c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "25e13225-0b67-4fec-aa6f-9799f37259c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b320301-0431-4873-8da9-35c8c16be669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c47b7020-3af8-4b16-a504-8c938884e696"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5db53aa-fd21-4307-bf04-7a52d70a79cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "833d7e0f-916a-435f-8fb4-d697864896fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70587d47-6a9b-4d46-9c20-def422375618",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae7b8832-fd7e-48a3-b938-33d102deee7b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb153103-889b-46d2-b5bf-e4d072ae86af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7654f4b9-a10b-47f6-bff1-19f8e52a1f32"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07304d10-81fb-4ad2-bdcc-e44d02710b67",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "73e53a1b-8940-4dc4-ac8d-f6b518403e59"
            }
          }
        ]
      },
      {
        "id": "501b9277-84d2-4f83-b6b4-019a5fa02f92",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "41a2de33-fe14-4189-b031-6b6cfbe062a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fdeec9e9-3e8c-47be-86ba-113dbacc23b5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "752a72ba-9db1-4cd5-8754-209c70d6d34f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ac2ace-1c5f-4a80-9e6f-404f0a1bd1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8c8e3a-a09e-45ce-af91-b1a4a0cc8c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e301cfb-443b-4acb-9dbe-0cefbab98968",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4569377c-fa76-435f-89ff-778f93d457ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363d1550-1071-4570-a955-c41eaaf79529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4894bb-4e2c-4e76-b6ad-4ad631cdae23",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0589f756-712c-4672-bc78-29480cfe18c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a9c7d97-0cce-4a21-8011-ba7cfc531785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe85c29a-40a8-4913-a7df-06a026cdd562",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "783f1e99-e712-43c6-aeb0-4dc97e7a1c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc36fcd7-cb18-486e-9396-bcdd5deaba55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1794a94-89eb-4b3f-b822-c2a693b158c2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268483c1-efc4-4bb7-8a6b-176485fb69c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04938649-3bb1-45bd-9595-a53daaae5fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c72c4c8-2a67-48d9-9fd6-e96bd6f898f8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a06be0-48a7-42a3-96de-7e630e77817a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ec2b5a-18bd-4818-b7a1-69e0657c0b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2665bf44-3b2c-46c6-9130-3300824db10e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edaf034a-181e-4680-a6b3-d483ec64e8f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d596a0-0f57-43a5-8f8e-aff501f84ecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb498d05-09d7-4c8b-b4fb-c002fb2f70d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef38673-4382-4816-b066-84a2a54d78cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f9a061-6287-4ff0-bf32-96eea67f69c0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359ddbc0-1719-4090-9b0a-5bdd551212ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e15f3b97-c8a5-4f91-8674-36dfecd02cc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98c6448-3348-449f-86e1-8bf5f791033d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58eaccb7-32e0-4b00-a3be-8c3916a0d7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a42eb2-945d-478c-9318-515bd6118642",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3e22bd-3a03-4016-af48-5f05089a2ae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad9bc176-cb11-4479-8456-075af47a17f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5357fb3f-fcbd-4678-ab08-9986eab0a6c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67091df6-71c9-45ec-9bb9-c3af0e260a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0080d732-f4c0-4d01-a02f-63caa69ef209",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7038a0-08c4-4fb9-9537-e153ad336b6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4199fe89-162f-4679-b56e-a4aee0edfc6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca337ffb-e5de-4cc5-993c-a72ba95ac88e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0277d1-c1a5-4cc2-ab4b-4f1d863538c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b168fe5d-227f-4660-9d25-ad5b677fda41",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fb5ee4-79a0-4915-a627-bd8d02142714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeeb5f9b-009a-4eac-96ed-f1509d1ac629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45171c5-7d52-46f2-8432-ad94683ff171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34956250-108a-4ef5-929a-3653eb4aeb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b441432b-1bce-4514-8724-f8ef7d057373",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d4d511-b7ca-49da-95a4-03c97612e0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83143872-890b-411b-a10e-1210519054ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "505f62cd-86b4-42c1-aa80-c2a4935fa44a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8867eb-b4e8-4067-a52f-adbbcb141b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50054703-9ada-4e85-9565-52f5e403a7d7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1ea1eb-e320-40f7-b210-e998b16dd595",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52e2c93c-6325-463a-a5fd-47bfe6c96d3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbd0cf3-3ef7-40f4-99f6-317d61da64d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b34e3a2-3f76-413d-8916-d19e0af4e311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3043d7db-53d7-4d4d-b016-30b58b0bb0fd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d20163a-6307-4ed5-80d2-e90ad156482a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c11e0d8a-ae25-44d8-add2-8a7b7d4a584a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c81580a-e7c3-4ae6-a4c7-0d58f60de182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db566b46-84ff-497b-a85e-25bb2086e65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680a66ff-4477-4232-8118-fa4f8a5de38b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ff7543-e984-443e-96a8-d5f1a1a4c5a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "175b7881-3f45-41c1-ba1f-86cf036714de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf387c8-137b-445d-ad0c-ba7cac755475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77f3b63-99c6-40a9-9ba0-91b4c468aed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c63f5dc-4acc-4e1c-9c06-c86e050b4158",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24780dcc-5909-4955-aa76-362e39cfdac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2473cb51-e462-44b3-ad1c-da3108bccc07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0525d0-c2d3-4382-b0d1-0f4e020b4141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33816bc5-aeeb-4506-af53-7ebf62190f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8bd4a5-236f-4aff-9bd3-23e150e8e389",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1293e876-8850-487d-b5fa-11eb170750d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b3a65b7-b389-448d-9ff8-8b8fd6af62f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c25abc-0a41-46c6-ad39-55f943d37490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f713e303-0811-44b7-9af8-3ea94312a9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49838a46-1c2a-4491-9f39-b174c7ae79d1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8329bd37-e710-40e2-89ba-f72f52659818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39ba025e-4977-4c44-9527-facbf9da42cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a9aaed-f6ca-488a-90b0-f9c9f689051b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7bdb763-103d-40e3-8cd8-7367cc6cfb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec7c6f8-ce9f-4c90-86c3-547f2808fa28",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc0e1c0-e9ba-4eb2-a9af-cce6374679d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9527076-ef6c-479c-9067-f36a4e7f635b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c089154d-ccf1-429e-9455-b0ecde7f907d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a5e44f-3910-493b-86b5-9e17712e7670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f87f30-7d8f-4bfd-bffd-b9ce618b2759",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d7d1ec-3b26-44fb-bdae-95c63dea60ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea1e6aa-876d-46dc-b068-ad1bb6d8a4ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "debe0227-fa70-4fd5-affb-4b188dc63436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09389366-451c-4628-b2bb-025e185d0377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622ce564-40cb-4c59-a8f3-ba565c5c443f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3133425c-45a2-43e9-9590-b5146ac050fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77de1db6-4554-4d64-bbe5-0a07306cf404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc96d07c-89f4-4a89-bd40-41ceb0485504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc7948a-4679-4586-b3e6-b7d3c822582d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61787880-e75d-454d-b25e-d06fdc1b041d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de23b2f4-47d7-42b2-9410-9bd6928b702b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8981d0f4-2997-4338-ab22-4208e37d06c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c098ca24-1333-48f9-8c4c-8c2a6e924f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56060d01-d56b-470d-9b0f-e90e739f5fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fbafa0-7ee2-4e2e-a003-84e38299eafa",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d5b0bb-b215-4bab-a34b-b4054e2746ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca48bfb-2515-4150-a08e-3d71c0952cf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e629aca2-0936-40eb-a2cf-fe8d99ae4160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f89b3e9a-38d5-4185-895e-38a43f7bb2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b1c766-d96d-414e-97df-5d2f33c7ff0a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db7a688-dab1-4c57-9d8b-c8ef47bf4887",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c4841f5-fd0a-4a6c-9090-02568fef26f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fe5384-a8f2-4664-81b2-731c27ad1aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b767a2dd-9561-4945-b437-492893318860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06968dc8-4e66-4d38-8bcd-a62a62dfdd80",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38214f6d-9cc0-49b8-9ac4-726a9f2b78b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51b693d6-bfa4-4300-adcc-9068ec953a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0f0900-872e-4210-b5f9-9bee362a83ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d0824f-2c2a-4bed-918d-d6a7bc943034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b5b52b-1d26-4d99-af08-7f177c62f262",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f69467e-6226-415e-9241-245220d12d8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0969877c-844c-43a0-a73d-1e530df9d74b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5009273c-7132-4c37-b8b7-7dee61e0df55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e37733a-a618-4fcb-a270-e3b96e879c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbba988c-c762-4659-9985-393f800c1e88",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf472bd-2358-4db2-94c8-347a64085435",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "896b1413-0793-4b41-96f6-cc28180f22d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55feb68-1044-4e0d-924a-83d818f7eb95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ea2a7b-2bef-4667-bd4a-5b7958459875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2938f5c-3f77-483a-911e-77a1eb29ceb7",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c714778d-41db-4a34-9c82-f43043269beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "633aa9c3-2cd7-4714-88f0-0918c4fbda83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6027576-fecf-462d-b001-d298a3f1b65c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eec8937-a880-463d-b54c-cfb681b6d46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c9948e-2bc9-4117-a9f9-0563d9de6b72",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0334a2b7-3384-4f67-8a2c-4b985138caa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdc09fce-3fb1-4394-9666-7078e20b8512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ecb8e2f-2809-45cc-9d07-746934db4097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c68e3f-0d83-422d-a7a4-92320e860a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cff7a20-d0d2-4f50-81ad-54077e4716f5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10cc538c-10d8-4be5-9372-e28cf26cf444",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e7bdf53-2af3-4d94-8c1e-c54c892668fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "106d7274-ee88-470e-8c4d-79d81d2ee779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a74493-e4c6-4c2d-afb6-e9517ecca3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b40eb7-fc85-4790-9865-498559011974",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b58843-0be1-475e-a245-de8fa72e6189",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "989586e7-bfec-47fd-a8a5-6a40469e9500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "437e73a6-7ee1-4a31-a182-1b45042d419f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42494e89-f23e-4fbf-ae3c-45bd0bfa8c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faee4730-896b-4769-aca5-2e83449cbc55",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0889791-280c-45ec-abbf-9810fc74bf18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36d84c30-e0a1-4186-ad58-c4b793e589a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9301b54c-dc49-409e-a3a0-abedb47ea9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06949466-20dc-47e9-8a62-a1cab740f474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880709ab-4e37-4749-9912-fc061ee8cdd5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd7a79c-6f2e-4214-8a85-ab619fe48535",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac1e6e7b-42aa-4265-a6a1-37ccc8d73f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f7ff87-f3a0-4cef-8b35-22d8ca3c34fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b89ace-0151-4e1d-9a1f-533ca29847bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096ff3d2-50bf-4559-ba7f-22fe24841e28",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bf06cd-e595-45bd-85bc-80e128a64899",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e558a28-21d9-4c41-acfb-374471284045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8813049c-7850-4b8b-a89d-3588b6cf5412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59410e59-9ebd-40e9-94f3-b8e75a320427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ed4e28-30dd-41b6-b7e7-7d3bc0dda7bb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c73e55-3d36-4d11-a9a4-cd2c1a81d84f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eacad842-4322-47dc-ae92-f21629f25ee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e71e335-ca49-4273-8635-dbc6b3dad6e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c3cb28-f64c-43d4-8dde-66a34e6f9a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563d722f-6e72-4070-812a-823caab1bdd9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd01377-5349-4ac4-afd6-271be099d961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e183720b-02e5-4813-b505-f0163a46ab40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5faf98e4-4a51-4b20-aa23-5d83ab79d977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b4b69c-67c6-4f73-8f08-be432fd17751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde602c3-3f76-4178-887e-f68f986ea28f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b77bf4-af8f-4f19-beeb-d36850f062e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a14d1b1-7a8c-4de8-b155-2ad06cdaed20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6b85eb-470c-4ff8-8881-adaab38f0dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d76caf-194c-4453-94cf-cc2d6c228e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f89576-b0e6-4519-998d-b0c21de184e8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af7d346-20dd-4405-a3bf-a098bd148d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99eed9f-0ee0-4f20-8020-901a18948391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd2be2c-8694-4aee-91c1-4ffb28811e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08e78954-eb2b-4c05-9e50-d2358f8219c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df89124-94b7-471e-8da4-7b6ffbdcfb79",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31b3d5e-d2c2-4289-a738-cc67d61b9979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b1850b-baa1-4703-8317-f80ad431bd1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d9f1ac-256b-4ade-bb06-a26520bfb28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1a1e91-8fa0-477b-b497-d36a32c1daec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25aff4f-5ef2-4327-ac52-21d517155c58",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc5473c-12ba-4557-ba89-2c276c3f44d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f899ca0-7b39-4fda-a346-217c96fc3981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "232e2049-c146-41b8-9f26-fcd1e5ef6331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848f96f7-d9ed-4949-b815-dc87edb81e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f50fe8-489e-44de-bdc6-84091275fd8c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2194881d-5b76-47a3-ae67-621459e92dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c1c55b-50b4-4b3a-97b5-eb45ee3ce7f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece568d7-a37d-4135-ba52-d06d19aead2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c77e1e-f739-4191-8324-b17ed57ec769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80c8c36-c60a-402c-ac32-cbfdd2a26bd7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9247aa4-9b34-4cbd-9df9-19f397069775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b107f4-4c19-4786-be61-5525ca6c903d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a029afba-acb8-4e4b-9ec6-e8a256849b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb2b5ab-05d0-491f-a6b0-2f925aa7afd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c94128-c9a3-4ea7-a3a9-26a3735129cd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b983ce73-2e0d-4e97-993b-349ce22b759e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "228e7ded-6082-4eba-a48f-772043614e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4da1273-741a-4d92-a2d8-757cd330841e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c971105-a62a-4739-bd89-76306ae72bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca46032-257f-468d-b583-2e00dbc21a76",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9222070-2837-4b87-89ef-1ca2111cba5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa16f5bf-b6b3-41f5-ad3a-e424b5f961f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa67d55-068e-4da0-8d4d-c507f8e7d2bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00980588-12a3-4247-ac8c-aa178fcd829c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3dc1cbb-9437-43f7-a7ed-024118271f10",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58a83f8-477b-4823-bc00-91ac19e550dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ee4403-21e7-4883-b1ce-06736cb8749b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d109738-3671-40c5-9ec0-8f5285f63e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286f5c44-f430-4787-bce5-21270a8b545c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afed7e5a-d3f9-476f-b461-0765a6738e25",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f0c863-32ad-4eef-8263-97be2440817f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf6f4e2-ad9e-44d2-8a3e-46667b6204f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d099ebd-4851-4555-99b3-4a60be7dd767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3197f608-486d-4688-9495-ed0468c2ad5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75915bb-c9b5-44d2-a086-43f6141122ba",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d131d94-accd-4289-9ee6-f9fe94527f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b035b9-6321-40bb-b5d8-7eee46151406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23125760-7a60-4e29-a3f8-14f4e70ccfbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a1e624-6111-4a4c-90a3-9f92f2469ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad377d6-dfbb-4357-9123-8819a309ddaf",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893a38e6-f869-476a-9eda-6c5cbc1a4ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7efc966d-89eb-483c-87e7-81b0516f2aca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc2e34a-ed8b-46aa-a931-edb03aaaeb42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93138007-36f1-44ae-bda0-4c6622bbbc7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dddc7ab-48ee-4305-b47c-3d89045c4a79",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bf75c2-4739-43c0-97c9-936b39b3f455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bff48fd-d796-4dd4-a1f7-121e27e0b6e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c8f7c2-2a56-4743-8fe4-7946362f16fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e545cea-92cd-4bc4-9279-cf113b3dddcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e89ecd0-7770-4baf-99b3-9fc3ec948b9b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6605b3-b62e-4b5e-bfde-10cdf6b525ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ffb7df6-162d-4c9a-b040-1ead5289bdf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b052931f-1cfa-43a6-990b-06c895be2394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558da3cf-373e-4ed2-9728-362fcf17197b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e034017-1183-4b44-904d-906b5200583f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26304354-c1b1-4038-b977-8139fc4da4a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ba1210-390e-4df7-a805-c36d7bf7a9f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de15375c-145b-4b6c-9ece-262d10848602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd73ce0-44b6-474b-88df-27222368f2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb31cf4c-e313-4e6a-b160-507ab4136478",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69109dc-8956-48a6-b872-91230b9cbfc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1cc0a85-490e-4681-b84d-13815d68421b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb474cf-896a-4ac5-a865-d079be2ad6be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac69fa5e-8c71-49de-94b5-476975cee328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a2c4fc-68b2-4a65-9d68-322c1185fcbd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2ac6ac-30e0-475d-a45c-e4e3fc69e302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d241e4c4-9e17-4a7f-9588-27247f9ec63c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c526213-c9c4-4fcf-8175-64d176f03628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43612b9-791f-4b1d-9bdf-6dba4e7447ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81006050-00f1-4161-be66-92be414ec4f8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4748e838-0d42-41e9-a900-eba5d0d4a228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6600bab-5bdd-46d3-85a3-d3f9dfe0672d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd247293-eba6-4de3-b5e5-07f136500dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3917d495-1d79-48e3-93a9-568322c4d41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3975be-c2c4-4c0f-9b0e-6af49b977809",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b3233f-d863-437b-a893-6c9b2fd9d829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8fade74-f638-49f6-9941-cba694f229fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9b0c4c-2eef-4408-8b00-3de7b406cb46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aaa57f0-dee4-43ab-8ea8-4ed5d4677843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547ea619-c46d-4313-8406-f0b11217e46c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c849ad92-6586-4ed5-b179-3c851bcff722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486af395-e19a-45f4-92f1-5984df1c9236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71893d33-1e1e-44a3-b01a-e6ed626a4036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3070addf-a5d3-483e-985b-292b9c6c3966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4388dce0-768e-4b8d-a071-79ae9b6d53ca",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19ce62b-ba29-44e5-a080-0c42189fae79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86efc1b7-afb7-4d80-859c-b1624c89671b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d00fcfc-6f8f-4c8a-9ab0-ade7aa5129d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ff31ba-75b1-4f35-9ce7-13a59e3db5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9d2b7d-d294-420f-9d94-6484dba4c0a4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bb9bfb-2fb8-4964-bb21-80ef27240c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04e18c4d-26d9-437a-8e1e-ce712ab846a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "095fee23-72ba-4a1f-b7e5-3f4c47320828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc48d73-a173-4fff-9cc0-48b439567095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f368255-5b33-477f-927f-4ff1d9dc9981",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12f6b04-b0b1-47e7-9573-d7c8269ae5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f7afa6d-d076-4e2e-953f-23bc30fee716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd8da76-42aa-4dce-9a32-c81b4eba392d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8914f0d2-3585-4af0-8016-b9648668da39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da055f4-de2e-46e9-a4a4-51d3afcfbe2f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a00a43-6522-4955-920c-c0a4e3cc4eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cda707f-1752-40a5-9cec-a47315002537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3018c939-38fa-4531-9d4a-98ac7c201cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d18fcc-ffba-4c6e-9d07-eda96e23f564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c11f5b0-4c0c-4c54-b276-ba8400b901dc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc2e2cf-d712-4581-a800-67987bb147b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209fe9ca-2957-427e-a8ba-9cbb73993691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83682d6d-f1a2-4dac-8f97-440b0281cffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a743cfc1-ff94-45cc-919c-dc0d41b4eb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb324a4e-40aa-479b-998b-9046a3724c11",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93a1f0c-dcfb-4430-b3e8-e9b2c5e2a625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b09ce1-10ee-42f4-b545-6d877f72ee2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f5b156-898d-45b7-a6d2-6dd660797228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def56a3e-c535-44fa-8e09-3af9553f27f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1db87f1-cb20-47d2-9458-78e795b4ea65",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb33ac5-b406-4a39-8feb-7594d88a081f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9396f9a6-869b-4f04-a9d0-c17ddcab9ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "805a87b9-d037-455b-89b4-2c01d40f4346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b7a964-f7db-4d0f-bbb0-32f5108b2dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38415cf0-fad0-42b8-b72e-2abecfe0a553",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe18f58-b63b-4943-ab68-d810a41048d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "668cd32d-937c-49c4-8a1c-fdcec1c34d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5e640b-373f-4ed7-8ac4-5dfbb704e6c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00cd1dd5-75fa-4de9-915c-20f25fe12843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb38b00-1acb-4abb-b5f5-903e24e89a72",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6a62cc-ad03-46f2-b70b-3f19f282dc10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "356a2800-5af6-40b8-ae5f-74823a142932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9178858d-02a7-4a47-ba73-6699737eaf86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b315d89-80d0-496c-b7d0-49aec9fc499f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78757f91-5853-43e2-b850-93cf35950e6d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f20cb8-f2c4-43cc-84d7-1817c9369a90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "287bfd71-45c4-4f87-aa07-279d3554d917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d1b54b-c4a2-4577-97e5-a4e41c4cc2eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b90255-9ac2-431a-bc60-a4d9225fe06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4876ebf0-3bf6-422f-a2d7-bcc640b82613",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8342207d-a054-4ba9-89b8-2af46a07e720",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f938f9e-b083-442c-a15d-295eda37d744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d548817-e9d9-4c23-8210-03904b31f871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a5e77af-32da-426f-b47d-f4a96498a745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6070aecc-37a9-498b-88f6-8b4b22140a6a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00094e9-94aa-489f-b44e-edbefea22473",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cad11bea-0328-4e18-87dd-ed7a51b7b30a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b21fcb-2505-409c-a18a-7347232dbef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1eab9b9-8a59-47b0-93c3-6d3bc940adf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c06fea4-abfc-45bb-9ada-7ddc0d1b7667",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba45074-ae02-40fd-af70-6880b4e69a6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23e0d6f7-9bbe-45e2-9b76-95ea39089331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc207c62-f284-496b-804e-3f67f2bb1334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c7ca847-4615-4db0-819b-52bc3ae81dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e25fff2-aa7a-483a-ae8b-fb011f3e9f54",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d75fee6-cf32-48c8-8e0f-cc1371feae28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a2bbb17-4ffa-4153-9f20-98a8118b55c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5567f602-16dc-4d34-8f5e-44ef5cbc5534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4541f2-08ab-4f26-9119-c4aaa8c3f343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72803d7-18c4-4f40-9129-f345cb038015",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65e9c8d-5026-4b4a-8396-18e397f51eb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97a26616-067b-4a14-8007-1481f43d887d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d70ef0a-a234-4b14-adf9-2c44b2dc2eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e831f80-aa54-4bc4-80c6-51613214da5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71cde325-ad4d-425e-9b3a-58857b7c6fa8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cf9904-2960-4109-951b-54913c105fdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a89018c-44dc-45a3-a2b8-87527ac24861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ceaab2-0b08-4372-961b-10878ad3e1fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa47fcb-5d15-46a5-a09f-a95dd2a306a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0069d2f-2845-45be-9074-ced4371ddf3b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16743308-4fa1-418c-9c61-a3fcbdd9b357",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85b0e48d-532d-41e4-bb5a-97c8f6a3cb2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43e302a-f3a3-4348-9095-6cc41c5a878e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d4e80d7-3691-44f0-96f6-d3d8f6e0139d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbfdc40-1194-4ee7-ba17-ff8841e7b676",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdce4774-8b45-42e6-9a92-529be4605170",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdad8a65-f7ce-4fe4-be9d-4267e2c72c36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9126f3c2-5697-4d6f-9978-d08b39c5b10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d06f3db-caee-4746-a526-7f6fedd23a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da86ebaa-6040-4071-846b-a9d85db99388",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23b69ad-07fa-4797-a855-8a195e0958ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcbcb675-b8b4-45cf-9509-2f68a8dbfbc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e099ad65-52a5-458f-9988-22cb4ad73aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e0f5897-434c-4a82-9ff5-4bdafd9ad6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e108ad0f-f690-492a-a894-ae63f3de204b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffce1cf4-23ce-4a24-bcc2-ab229248f351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ee7320e-86e8-4e26-8d07-3626907d6b8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e0bb2a-f5ee-4446-a201-b9ae62afd66c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130a48d3-329e-41cb-9ef6-13a043081886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2200c794-5642-4d03-8b6a-060f881a3aac",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71bda3ba-47ad-422d-8dd2-86118d01178c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3a112e7-662e-4c2d-8f5b-91e2f736b5a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b188d1-be5f-44d5-be48-1502da6ce749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6ae804-5dff-4cc2-be8e-da25deca39ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1033445-f0e5-4a1f-9b7f-16ed158f1eef",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e656bd-acf6-427e-8080-e37fe89ca843",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5553d855-cbd8-40d5-812e-3fe1983fe591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9394deeb-1c95-475f-95e2-cc5da7b0550a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe43f68-eb77-497c-ba9c-f714bf96c07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114a9390-b132-4303-bc33-5050832db8fd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee6d549-c609-4705-8197-413bb29ce16b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a75de02a-5823-404c-9822-949c2f060a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e27bd2-dd08-48d9-864c-12d4d077760a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1535f6-f211-473a-a336-5c2957a167a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef322c2-dd4c-4c42-be8e-3558e43105d4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4acbaaa-033c-4a1a-88d2-9c0779e1b6f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4375d17-ee7a-4595-a726-331960d11c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d94abf7-0903-4445-8895-cc862f1230b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95686c66-e964-41a2-88b7-2db2657fa201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2d2e4d-388f-4334-8962-c1ccb05d5b50",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74eb5613-d662-432a-bffa-a9c05819f832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9173dd82-216f-4a73-b851-c34eb3db2b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "681a6815-3980-42da-946b-6c20dc9857d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f88e91-4738-4c92-8113-707cb59de215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f8bf93-ddd6-455e-aedb-82311c9c17cb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca39bbe-c07b-4d77-8c62-c6762188db72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9790c7b9-cf33-4249-907d-6d6da8c28779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2b3e49-701e-4582-8b10-422ebb8dd43a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f4a9d1-bc27-490b-b7a8-83bd4b198e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe76faa2-2721-486b-b5cb-93863a2c191a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4cb8f1-279f-4626-b9f1-a3b289495aac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36d3c038-35de-4a34-aa64-7e313486ffc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67ac200-fb16-49bc-aa81-45eda82ec2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463e0f91-f98c-43b7-bd9d-901cec534583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ab691c-755b-4da6-bad0-ffd4a247d87c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49189ff9-8ce3-45a1-bce4-0c3446a8cb88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a9bedeb-bb88-4973-8e25-972c48dc4ec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5ba126-0c3a-48c3-8fc7-4807d0282895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567113e6-4087-46d6-b6c0-d891dcea7f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2734689b-04ee-440a-b06e-6d8b88350bfe",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a440edd-6815-41fd-945a-6f721fef643d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "879ebd74-deb8-44cf-8c3f-6ac9595e5fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd55b9a-2a5f-4399-8d3b-aaeeb82ddaf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1af0c32-ce9a-4b23-ab28-9ba85feb61b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfbf447-59dd-4e4e-bbfc-9f42b89c301c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e29bf5-2fd2-4c6c-b607-1b045ddc70fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aec59d0c-44ed-4b21-9379-b34096ac9951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bd1447-2029-4961-a95e-232071c99303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10f8bd7-bd15-4bbf-acfb-53af0a194b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e54b29-c677-475a-89d2-bd6ff1c6f757",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f988156c-406c-4274-8423-cb5b5a7d53b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2462812-68f2-4693-a3c2-86ef64f2859a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b99ced-b66b-419a-b80f-dd124f037c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "190fd811-8987-4fce-be3b-f67442ca36c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78238e97-b00d-4794-9195-61e5c4383bb2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6b9174-ae94-47ff-9830-15f2cc84fa6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4aaeec0-d724-4d74-baa2-4b43f3728d5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd7be09-349d-414d-b75d-f8297144ceaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21402b9-ea67-4d90-a7c5-b281829ff22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f375b52-5f68-494b-af74-979ff72df835",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0280069-c587-4500-960f-c213d206db48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b96ed3e9-1b1c-431c-ae85-b4e201eefbeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cecea3e-a494-4611-9ff5-c6fd18907612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5619cde4-f073-4b70-b819-02feb80d5cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc2756e-2a72-4784-ad04-6f45fd927a55",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18248cfa-67ad-42c1-89e9-0163df0def18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77a99d44-8850-4f42-adf4-9fdcc9fe7ad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadbb18c-1740-4c23-b40d-be84359d4935",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "125202c6-1b32-4da3-993f-177bcef5ae15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0ffa58-2c23-450e-a8cd-c66718326498",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bdd13b-93e6-4085-bf8e-1ac1e42e04e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1314475c-c4bd-45d1-9c2b-4dd359f21936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48815e04-ef47-4639-9fd4-65464f22c2fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f76cd447-dcd6-4353-8d4f-74d53dab0489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3414b291-7296-4b4b-a897-f3ad380b9be0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db03f7d-3c05-433d-8cd3-eb064cea3b07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7e6aa14-928a-40ed-a56f-81c8276c9d7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9472998-3c0c-42d7-942b-70e0fcedce66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eabbfb4-9182-4b74-a224-5f563564d819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a98343-e1d3-4299-b826-3cdd5c2252c8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d528dca1-7bef-4bf7-a1e6-e57907d01aa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad70bccc-1d39-461e-bf15-556f991fb064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b312f17b-646d-40a5-807c-0d075ce9a077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e628d45a-b1d2-4de4-96e7-a1a6f449b6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627b3fb2-7887-49cc-883a-4a3d9ef214f9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ccd598-6d84-4536-a419-5720de6fcfa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ad2c54b-6f66-4310-b345-e56c0c4f0d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e010d89e-7f5e-46e0-b15d-fa7e2e1644a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cad8987-5fa3-4643-98b5-b7f39a711e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c2f239-92ef-41be-b9bb-3146995248fd",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757d6b43-ed79-4f42-af0c-21899cc630ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8636caf-f8e8-45bf-b54e-bbf29e038513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b328d6-0e20-496d-a866-23226d6f1c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4851fdd-c600-46d5-b74b-3c760a19e47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0683d601-6229-442e-854e-6893fb3024c5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71457485-c0b3-47e0-93e1-0fa0b1bc9303",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5dd14fe-be6f-4488-ae85-6d30b57377cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc012267-a604-4943-83fd-ef43b0eb6a86",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf87d4b0-aa87-4836-bac9-a730e3f0d237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb126a5-80a2-4f2d-b131-6187ecf881cf",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d331eb-d9e2-444d-931b-244df1b57441",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d793c45c-4ba1-4247-8a11-a7ba4fd71eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edf1dd2-0508-447d-9c80-97fbba9910f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c20700-01b4-4f7b-b34e-cdc0c45bb175"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "739c7bd4-4e48-476e-803e-735069c57202",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d85492e-c64d-4ed4-9e39-e4787790026d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f01e4e6-630f-4fb2-8adc-b7ceef70e8e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ecb149b8-c721-439f-8cdf-74c19f006f30"
                    }
                  }
                ]
              },
              {
                "id": "0d3dcf1c-6456-4b10-9b11-4faead6094bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b8224e9-055d-46a0-bf86-42d7b35b9b39",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497c497e-3722-4950-9980-da76bdbe732a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e818ef96-9914-4035-8d76-75284825fa4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82416bd8-65b1-4a5c-9f6f-d1b85c3741e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07f705d3-a3c6-446a-a04c-e015cd98c8d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7571ca72-399a-4f1a-8a63-6361cbf135e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25c41d71-b025-4b3b-b19e-59969d4dcde0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d38c5f0c-b6b3-466e-8917-278f7d14c231",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c79ba46a-fd19-4a6b-89cc-421c47303d35"
                    }
                  }
                ]
              },
              {
                "id": "0452318a-2ed3-43ca-a36e-a4ff632fcd1f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5f7baa89-7079-4d86-8d28-b42f5b75be1c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcb44f0-18a2-4991-920f-fc1605117f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7319eca1-505b-4299-a821-b0a79daad978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3808ff0e-a04e-4652-aaf9-310e2f2ea23c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e9e2c2-1410-4446-a8d4-3984d01f43da"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cad8b08e-70ea-4f58-a225-34582d0d1463",
            "name": "Positive Testing",
            "item": [
              {
                "id": "32d9a6ca-8b1d-434d-a06b-089ca07042f5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7cc5b9d5-f921-4f2d-a012-2f56a65804ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "36411a0b-20bc-4826-a218-d4ee188d9a72"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2cc7302-2e24-40fa-b0dd-6c8a290a2a65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1df49aa8-6356-4ec7-aaf5-c09e643b80fa"
                    }
                  }
                ]
              },
              {
                "id": "c28dab89-c5a1-4575-b1db-2aca5aa140f7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "69793c1d-1f59-434c-b1dc-3a9f9136a76f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ddd77084-fb59-4ba0-80b4-a4a127edc582"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec30694e-e460-49d9-9b18-311bca3d3c68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95108bb6-4f6a-4bf4-a09e-5155d83189f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "252acbe8-05b3-43e7-bff9-ccf528a00225",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5e006a5d-42ed-42b9-aa92-0f9b3cd6b20c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb5ed60c-6408-466c-aae4-846046692ddc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ddd6213-c22b-4597-84c8-813cd8735b8a"
            }
          }
        ]
      },
      {
        "id": "983bc3eb-0204-43c1-878f-dc58c55cd41c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bce258a6-603d-48d6-89b4-51cb1590fb28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d7e753ac-ff06-48d5-8bc6-10f48ac39048",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b54050d-d508-40db-9697-839284d4f031",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddea0afa-6a1b-49dc-9ce4-cde9b3d5854b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "472788b3-01d9-4ea4-949c-7115aa4c9cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a91f1f-bb56-4527-970c-68e9d5ca9f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "824d9fba-b7bd-4a44-a17f-775bd5279667"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "966fa99f-e3f1-4044-98e5-effab938f2ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c42b2c3f-64ff-4daa-9cc8-f094057d6289"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "594e8045-2e33-413f-a286-02390b792d69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "103f80ab-537a-4857-a4bb-afb5dadf1500"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "428c028f-7836-4890-9400-064dee8e8bd8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2305b4e4-eb85-481f-ba61-2e9ec9cdd478"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78ae542b-88e9-4510-ae2f-adac853ac87d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee125922-2a88-4e5a-b7b6-94b9cc7b634e"
            }
          }
        ]
      },
      {
        "id": "052500c1-6262-4712-92d0-2c759e8c5757",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "85fff2c3-bbd4-4461-9a84-1457b7c1416a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d4ca1e8-dcd5-47dd-8aa0-ca89549b9576",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2cd18623-3815-479d-ad79-86f25c1a4a7d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7e4f5a-3182-43f4-9873-d620bd89cf11",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "743157c5-7870-4620-859d-29f970d92dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64105ff0-15ad-4a90-aa68-8e7bdc9df76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f16120e5-a20d-4b52-866e-a0d0a9afb285"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f1df4bc-42c9-4eed-8ff4-8a62ad90583c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c65b37c-2d49-497d-89b3-28e47d9d60ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "749ab672-358b-49a6-80c0-2b4cb709fa51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4474798-26bf-4961-99a8-313d889bd930"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cbd851b4-7eda-4c0c-9a41-9fcd41c2fd68",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "875feb87-f49d-4024-8045-250d8fcbfa75"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "572663d3-7447-4d80-acdd-5d7e10b83575",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a014b262-0a31-4caf-8c20-f4a1cf65ff5c"
            }
          }
        ]
      },
      {
        "id": "a04d281e-3572-4fa1-b4a1-4148d23c8311",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d2e38805-3312-466d-b490-502303236a0b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6c1e6ef4-6c92-44b6-90fc-65c25dc85219",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dd8a17c7-cfe9-4edc-bd5d-588120fc327f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab0680c-2e1e-473e-b90d-ee3d9fbb8e1b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95572d10-369d-4379-a4e8-5f2db71adbf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffe2a90-57ba-4767-83ab-c5f687b0f32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "809dac19-e918-4345-b0ed-363c4e2b187c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2d6a4a8-a8cd-4c90-8ff0-269251b7e57a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3401f8b6-8a81-41d1-8939-1fc6fc411810"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd8971db-1a52-411a-97c6-5fa49314d7ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a27fc4f-cfe9-4dd0-b263-e9e94c591a5b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b41b430-babe-4ae8-8961-e0f13411f861",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f894d8f9-0b5f-497c-a23e-627084df1f72"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2be735fc-3cc9-4854-a29e-4452c2720c6e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4545252f-4784-4ecd-a433-61b9cce897bc"
            }
          }
        ]
      },
      {
        "id": "037a5952-1d9c-45a4-96f9-572f82dcc01c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9344f546-25c9-467f-a785-4658aa594c24",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9344f6c6-b137-4f4c-ae83-80f3f6cedbc7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5980f9a7-d4bb-4973-be48-d534e02099fb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0dc60f1d-3808-4f48-a533-e960bcd84866",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "706cdac0-6084-4ba0-ade1-c992a418971b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 9.166666666666666,
      "responseMin": 3,
      "responseMax": 244,
      "responseSd": 24.785926267166396,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1686357587141,
      "completed": 1686357599157
    },
    "executions": [
      {
        "id": "9e1e0cab-9a29-49ee-bb06-907b4cd08ec8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6d700679-c849-42ce-86d1-304e73ecf18e",
          "httpRequestId": "25684c3f-27c1-483a-ac98-9f5952495826"
        },
        "item": {
          "id": "9e1e0cab-9a29-49ee-bb06-907b4cd08ec8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "24669848-4d1e-4607-adc5-50cc3b5f7aa7",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "b18fa225-18e2-4101-8326-e6e9697ce129",
        "cursor": {
          "ref": "b8d2a1cd-125a-484a-931c-f65f7f186f8f",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "869e099e-c9df-4eca-a85c-90befc5b39ef"
        },
        "item": {
          "id": "b18fa225-18e2-4101-8326-e6e9697ce129",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "46468500-adb5-46d9-a36c-e45d295b66b0",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "c158b498-d1b1-46f5-808e-b3f5003ca399",
        "cursor": {
          "ref": "d6ee31f5-e437-4010-80b1-419c3a57a279",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0c2ceafb-ef92-4d73-8550-01b0903b2c1d"
        },
        "item": {
          "id": "c158b498-d1b1-46f5-808e-b3f5003ca399",
          "name": "did_json"
        },
        "response": {
          "id": "1cefeef9-2ff2-42c5-9df3-9e6118bf1ec0",
          "status": "OK",
          "code": 200,
          "responseTime": 149,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac3203a-5ee7-47d5-9622-bb2793c5d3ba",
        "cursor": {
          "ref": "88fcbb34-faef-4cf1-bede-4ce3c999f03c",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5d7d8100-44a1-449d-bc1f-15d58b48547c"
        },
        "item": {
          "id": "fac3203a-5ee7-47d5-9622-bb2793c5d3ba",
          "name": "did:invalid"
        },
        "response": {
          "id": "2199a7a8-9585-46ff-a668-d6dddcb6d7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac3203a-5ee7-47d5-9622-bb2793c5d3ba",
        "cursor": {
          "ref": "88fcbb34-faef-4cf1-bede-4ce3c999f03c",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5d7d8100-44a1-449d-bc1f-15d58b48547c"
        },
        "item": {
          "id": "fac3203a-5ee7-47d5-9622-bb2793c5d3ba",
          "name": "did:invalid"
        },
        "response": {
          "id": "2199a7a8-9585-46ff-a668-d6dddcb6d7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485c1f08-69b2-44dc-a9e2-d28db98c738a",
        "cursor": {
          "ref": "54683bd0-b774-4441-8feb-989ef6ad2d90",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "069e2f20-b73e-470a-a0ed-36ff3fc1c1c8"
        },
        "item": {
          "id": "485c1f08-69b2-44dc-a9e2-d28db98c738a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ea99048e-ae2f-4f4c-830d-4d436039fce7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 51,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a573910a-7311-4804-bfbe-ab35ca936962",
        "cursor": {
          "ref": "cac69455-8ff2-4375-817e-82b0c8cec008",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d9ad2971-caca-4a18-a75c-d6f1a0e2ad08"
        },
        "item": {
          "id": "a573910a-7311-4804-bfbe-ab35ca936962",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "37addcc6-02ab-4b63-87c0-ae6f1eec171e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a761e0f-7593-487d-b1ac-5f96b905ea3b",
        "cursor": {
          "ref": "a48baf29-038d-4e3e-bea0-303192c79e22",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "107e2bbf-1f69-48fd-b968-9af3bbecdf98"
        },
        "item": {
          "id": "8a761e0f-7593-487d-b1ac-5f96b905ea3b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f6173c81-d85f-4725-bbd7-95eae3c63cbb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93661895-e282-457a-ba45-61078a00f3b6",
        "cursor": {
          "ref": "420d4d19-772d-49b4-8380-bb2d61641d59",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "224f51e2-459d-41b5-bad2-73cf7bf1efbf"
        },
        "item": {
          "id": "93661895-e282-457a-ba45-61078a00f3b6",
          "name": "identifiers"
        },
        "response": {
          "id": "957bafae-a697-474f-9ed2-d6d2aea50278",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabed531-bae7-44a4-bcd0-bc7da5323768",
        "cursor": {
          "ref": "29cb589b-68e3-4f78-b72c-42532425f557",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "36101f33-1427-4b0f-9a3a-46afa7250417"
        },
        "item": {
          "id": "cabed531-bae7-44a4-bcd0-bc7da5323768",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7ee54d2f-2207-4a6a-9863-4c5378fabba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbeb249-a6bf-454e-9a1d-3c0a507c3d29",
        "cursor": {
          "ref": "f22a665b-4210-4960-bed8-60cd02840e3d",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cf981dcb-5e22-4af2-963a-675a4f5f0b1f"
        },
        "item": {
          "id": "bbbeb249-a6bf-454e-9a1d-3c0a507c3d29",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "39560434-71a7-4504-baa4-2a212c7d42bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3999e2de-a5a1-4abb-adfc-1a742475cc90",
        "cursor": {
          "ref": "b688cc77-dccf-4487-afff-f7478d3f5baf",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bea2a973-35a3-4799-bc38-3d052a044b59"
        },
        "item": {
          "id": "3999e2de-a5a1-4abb-adfc-1a742475cc90",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9be55bde-7487-4c8e-ad97-aeb7b3881c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6abf5ba-177d-4b21-be43-9810e780ed3b",
        "cursor": {
          "ref": "4a24179f-cdbb-4f0b-95d1-88f0d5cab1b4",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7e3c6f9f-2b4e-43a9-9769-ca5961234427"
        },
        "item": {
          "id": "b6abf5ba-177d-4b21-be43-9810e780ed3b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7903640e-7b74-4d47-a3b6-8652886fc20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d8ed07-8f60-4990-bef3-60d18c6939fb",
        "cursor": {
          "ref": "00d467a5-19c7-456b-a5c6-5a647270362c",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5ec3a94f-aae8-405d-9a2d-67eac56c9a81"
        },
        "item": {
          "id": "c8d8ed07-8f60-4990-bef3-60d18c6939fb",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "489c6cd3-0a0b-457e-94d6-911b4f5ee7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0236759b-ae8a-4f45-9bf3-fcaa79a1c2cf",
        "cursor": {
          "ref": "35739ccd-9d61-49ad-bb71-ff940a783ff1",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "de8f38ab-bdf1-46ed-bec0-7b1ba0d77592"
        },
        "item": {
          "id": "0236759b-ae8a-4f45-9bf3-fcaa79a1c2cf",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "729d3677-1704-44ec-a29b-3a7761bef8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee0b6e8-8ea8-4ae1-92b6-ab5f8dd3aeea",
        "cursor": {
          "ref": "942cb514-3fa7-4582-a59a-41134ecd43b5",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d42f08a1-5139-4117-a143-d65841915c6f"
        },
        "item": {
          "id": "5ee0b6e8-8ea8-4ae1-92b6-ab5f8dd3aeea",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0e9837b7-8e23-4ac4-928f-9b63a81bde2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2255d5f5-6818-4f1b-be99-c5b02196684c",
        "cursor": {
          "ref": "8e4d8a1a-e134-400e-95b4-cada24e89763",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0c52cd0f-6e93-4af1-b25e-acf6e4742dca"
        },
        "item": {
          "id": "2255d5f5-6818-4f1b-be99-c5b02196684c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e3a53f3c-64fc-4bce-bdb5-b67945670197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a879b04-0062-4cd7-9aa8-c145f62c3489",
        "cursor": {
          "ref": "900653a1-2678-4147-9499-da0def90136a",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "35553358-b578-4841-ba08-f7efc47cb852"
        },
        "item": {
          "id": "3a879b04-0062-4cd7-9aa8-c145f62c3489",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "798f3b3d-7b93-404d-b3aa-76b095eb61fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a082bd0-8731-40f9-9a91-ca3faa890161",
        "cursor": {
          "ref": "f86d34de-10e8-447d-8ab7-d4c3e48cd2ca",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fc9d23a5-efbf-4429-a929-ce2baec5c324"
        },
        "item": {
          "id": "5a082bd0-8731-40f9-9a91-ca3faa890161",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f61bbcc6-0608-4b7b-9bd0-7740ff15e485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287e748b-0b6c-4e32-a82c-413a40061d63",
        "cursor": {
          "ref": "c95b16e8-d91f-4c18-a5ac-a7edc45e88f4",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "35729524-7a69-4066-8b17-97b150c382bc"
        },
        "item": {
          "id": "287e748b-0b6c-4e32-a82c-413a40061d63",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2756096a-2072-4bbf-9d73-a7e1cde5c2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b831f5-a81f-45e6-869a-859a588dc62b",
        "cursor": {
          "ref": "ebd075ae-3cdb-4ec8-b578-1bb6bd4537fe",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "30e5a1e8-d099-4df2-ba19-e00a5dcb57f8"
        },
        "item": {
          "id": "f9b831f5-a81f-45e6-869a-859a588dc62b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "00b35672-596a-4d94-866f-86f4219ee212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ad3a5f-ef25-479a-8441-6f9f54ab966f",
        "cursor": {
          "ref": "1707dc40-144a-430b-80c8-1e3538db9d11",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "745ef8cd-8304-41b9-a4b6-eb95092074ca"
        },
        "item": {
          "id": "22ad3a5f-ef25-479a-8441-6f9f54ab966f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "232aa4e8-2c67-46f1-92ab-eb0798f7353e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968bf72b-2dc1-4048-a82a-c411c6537885",
        "cursor": {
          "ref": "4f624f0e-df9f-4c7f-a37b-ef5ef535ff9f",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "17d74f56-0092-417b-9a1b-fcfe3956e0dd"
        },
        "item": {
          "id": "968bf72b-2dc1-4048-a82a-c411c6537885",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "aca2e92f-f265-4422-a14d-6ca662a9717a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6646a950-4cd0-447f-9996-29050b5e7e98",
        "cursor": {
          "ref": "98d817dd-6f5d-4908-9e69-2dd26760d79b",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d2975ed1-4fab-41a8-9023-720cd989b479"
        },
        "item": {
          "id": "6646a950-4cd0-447f-9996-29050b5e7e98",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5c13a079-acaa-4286-9133-b052104f22cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb67d5bd-b5ff-44bc-8e59-e7a1b2e63092",
        "cursor": {
          "ref": "d7bcea9b-63ee-480e-aff7-0ee49f7c1503",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d48a8d35-97f4-4f24-a5cc-fc64bb110cca"
        },
        "item": {
          "id": "fb67d5bd-b5ff-44bc-8e59-e7a1b2e63092",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0102096b-8e64-42d9-ad59-935e5c952ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e8401c-b54c-4954-a055-181d971e1a7b",
        "cursor": {
          "ref": "7381835a-6d31-45fe-97c8-4c80f4ffd181",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bac1ebeb-af38-4af3-b1b2-03ca6282a513"
        },
        "item": {
          "id": "c3e8401c-b54c-4954-a055-181d971e1a7b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "637c2d81-855e-4acc-85b6-ba43cc6fe12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310503e0-79d9-4851-ac47-b7fb6abe19f8",
        "cursor": {
          "ref": "55c8127b-b569-4bde-97cf-48308ca9c94b",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e56dee81-ecea-404a-a896-84b2148c835c"
        },
        "item": {
          "id": "310503e0-79d9-4851-ac47-b7fb6abe19f8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "36e9a65a-5be6-4b56-91f6-d7a6dbe326fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a175fde4-8259-4979-a93e-303a83635336",
        "cursor": {
          "ref": "a01ecf91-bfd0-48f4-8469-2bb2c0d77e42",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "dfdc7c6a-8f28-4e7a-8cc1-ed4f66f2c3c4"
        },
        "item": {
          "id": "a175fde4-8259-4979-a93e-303a83635336",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "26453201-50dc-4a98-9245-b4942dd00d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f05f31-c4d5-4eda-b549-de6665a0780f",
        "cursor": {
          "ref": "f407ac9a-c148-41d4-9b82-c3d043c61970",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bb112a93-6b33-4a8d-805f-e1f7f5e8f009"
        },
        "item": {
          "id": "30f05f31-c4d5-4eda-b549-de6665a0780f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "753bc93e-6044-4e2b-b601-d3016b669d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872f2c39-9cda-46c5-bca6-405f44625152",
        "cursor": {
          "ref": "936495f0-574f-4eb4-b890-08bb6926eb1d",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b74863f1-6e54-44e7-a8ef-67503023e7a2"
        },
        "item": {
          "id": "872f2c39-9cda-46c5-bca6-405f44625152",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "50af9883-1e87-4ed1-9964-ea637800ad7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dce9f83-55ab-4c81-b5f3-1ea506c870ab",
        "cursor": {
          "ref": "b1132832-a4c0-416b-af95-4eb9c3e6fa39",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6ff86b35-6a2c-4bed-9646-8fc0ca902974"
        },
        "item": {
          "id": "8dce9f83-55ab-4c81-b5f3-1ea506c870ab",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c1fc1f13-2e01-4546-ace0-ef231a5ccab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c934e4f-ece6-4ece-a0b4-eaf567b6b573",
        "cursor": {
          "ref": "4547bafd-ed67-459e-aa88-c7d5ea662a36",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c5c6bbc1-2694-4aef-a093-9619f391b389"
        },
        "item": {
          "id": "9c934e4f-ece6-4ece-a0b4-eaf567b6b573",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "14edb24f-1668-454b-abc3-5c0657912da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9046c2-e75d-49b9-8eb4-05938870addd",
        "cursor": {
          "ref": "8ea4fa5e-6a6a-44d0-88c2-b781f1726509",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5db20f0a-48fc-4da2-9b7e-aec332bbdcae"
        },
        "item": {
          "id": "7e9046c2-e75d-49b9-8eb4-05938870addd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "90a96dee-a900-42ba-8335-3134291f43b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f239a162-3a13-4845-98ca-6516d9e8e210",
        "cursor": {
          "ref": "a093862a-2959-4e8c-932a-089a7d0b29e8",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "200c3c14-1982-4d41-99e6-0ef28330f350"
        },
        "item": {
          "id": "f239a162-3a13-4845-98ca-6516d9e8e210",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0b5b471a-5994-40aa-ba22-fa707feae5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca05bff-b60e-414b-a97f-0cd0c3a8cf12",
        "cursor": {
          "ref": "a45533b1-3ef3-494e-bab8-218fbe5f2bc0",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0f829efb-7789-4146-8f4b-30859f9ce16e"
        },
        "item": {
          "id": "7ca05bff-b60e-414b-a97f-0cd0c3a8cf12",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "90e80750-8e3e-4c9e-8943-38688e5d05c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b668b0-7b70-48df-b89f-4f827a565d50",
        "cursor": {
          "ref": "527107fd-51b0-4cb3-8064-a02fa1b25eca",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7e52322f-d508-4d82-a6cb-112b0a528ca7"
        },
        "item": {
          "id": "78b668b0-7b70-48df-b89f-4f827a565d50",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "09854ec5-51b6-4b14-a7f3-0429bd22bf36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd5a138-9a7a-4ea9-9dd2-d0f28da3fbda",
        "cursor": {
          "ref": "bc7ac11b-907c-4eee-85e4-db21503d3a8f",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d511d195-160e-46db-af4a-27e18f76fb3f"
        },
        "item": {
          "id": "ddd5a138-9a7a-4ea9-9dd2-d0f28da3fbda",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cce9c055-6264-4e7b-8fb6-71f86f589f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d4fe82-e25c-464b-b116-082c392d69af",
        "cursor": {
          "ref": "d587471f-ca0a-4aa2-9c17-746324a04525",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "19611d8a-f224-4136-8356-95eed9f6d2c3"
        },
        "item": {
          "id": "70d4fe82-e25c-464b-b116-082c392d69af",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "05ff1d23-8f46-4395-9d8c-a36f490749ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52aca08-f2d4-48fd-b7a4-0e9b8bef8458",
        "cursor": {
          "ref": "69f40356-84c2-4160-9f32-8cefe1bf1ffe",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "aff015bd-f30f-40c7-b414-d788079741f0"
        },
        "item": {
          "id": "d52aca08-f2d4-48fd-b7a4-0e9b8bef8458",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4833691c-259e-4d45-92a1-b3a4671126de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01440a48-3ecd-4210-9d07-20d512df30d5",
        "cursor": {
          "ref": "cd1e14ea-9c5a-40c2-9cce-ff35fcacc083",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1558442b-cd35-4534-b0af-311d561df4f6"
        },
        "item": {
          "id": "01440a48-3ecd-4210-9d07-20d512df30d5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5c95126a-ff4b-4a02-9d44-c59b051d6c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa71a51-e0b9-4087-ab42-b596ea3307e1",
        "cursor": {
          "ref": "d3463d01-5534-4925-a096-f10451be7a31",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "730b3f1e-fa59-4ffd-9845-e56494b394fc"
        },
        "item": {
          "id": "7fa71a51-e0b9-4087-ab42-b596ea3307e1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6706ec6f-c509-4c32-8964-77dabb03b42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f211f065-7018-490b-a603-c22afdaeaa46",
        "cursor": {
          "ref": "ff195602-b9ce-4d89-bae2-11fbb7a79267",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3f950b98-7aec-45b2-bce9-74e3136b8334"
        },
        "item": {
          "id": "f211f065-7018-490b-a603-c22afdaeaa46",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ac7cde6c-1a9d-48a9-a142-f9958b74d33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78aa4178-a6f8-4dd6-9909-c1be95348442",
        "cursor": {
          "ref": "9874451b-9e0a-402b-991f-3516c16916a7",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a0089637-f147-491d-8fbc-8bc416fd5ba2"
        },
        "item": {
          "id": "78aa4178-a6f8-4dd6-9909-c1be95348442",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "09073890-2a92-4a30-a021-972444102c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be31855-dac4-449e-bd17-3dbd861ae850",
        "cursor": {
          "ref": "277c4f8b-aa55-4686-b00e-1cacdc1e15f7",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "62e50828-95fb-4a21-a648-77194ce74759"
        },
        "item": {
          "id": "3be31855-dac4-449e-bd17-3dbd861ae850",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b51b5c9f-39f6-4e8b-a5b6-8284eadff326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da686d6f-2bc2-488a-81d5-ca8ff53dcada",
        "cursor": {
          "ref": "14ae49f3-7f83-43ad-b0d9-e6f56365f4ce",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8576da39-33ae-4525-b745-bc0fa46a801d"
        },
        "item": {
          "id": "da686d6f-2bc2-488a-81d5-ca8ff53dcada",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3706ab98-7df5-4648-9ad3-dbffed3e994a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 12,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3a0e9d-1178-456a-b50a-7dc9c754065f",
        "cursor": {
          "ref": "2546c51e-e4c1-47dc-ac19-9d7a31a5c3cf",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "78797a75-921e-446c-a842-98d7cbcf805e"
        },
        "item": {
          "id": "5b3a0e9d-1178-456a-b50a-7dc9c754065f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cbe6a9da-978e-4864-8868-3ff39cf9c42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae97494-28d8-48b9-8a77-c7d3af2caedf",
        "cursor": {
          "ref": "9f0b4845-0735-4b00-95aa-d87a731ce6e1",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "28533c98-90e4-4075-9bc6-239e9a702825"
        },
        "item": {
          "id": "0ae97494-28d8-48b9-8a77-c7d3af2caedf",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c19a903c-40bb-4c52-9160-6ee45c94c7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacfd74f-d085-4899-b25d-b747e8e70287",
        "cursor": {
          "ref": "2533b633-55f6-4fcd-92e4-8817810794b7",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e3de8096-c884-4baf-afa9-21ebcbb3a4eb"
        },
        "item": {
          "id": "bacfd74f-d085-4899-b25d-b747e8e70287",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "678736eb-e24f-4816-a330-c50ddf39b5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd5759f-cc05-4cfb-88dd-fe8be166b56e",
        "cursor": {
          "ref": "fd9ccf36-3dd7-4537-8df4-48fd12af582a",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f23c06a7-9a8b-4052-bce6-eb1ed42bf01d"
        },
        "item": {
          "id": "ffd5759f-cc05-4cfb-88dd-fe8be166b56e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1bab2c0c-a6ab-4505-bd09-9656b60e7e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8071ab43-7cb1-4926-9a84-3db8ba42fcdf",
        "cursor": {
          "ref": "0e6b4b38-6196-4673-b36a-2fc6535933e6",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2dd4939d-c371-4504-a15c-1e92efa0568f"
        },
        "item": {
          "id": "8071ab43-7cb1-4926-9a84-3db8ba42fcdf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d1fb8469-d095-49ad-b69a-684fe933c225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29bd181-dc9b-4306-ba87-b5fb96b35dfe",
        "cursor": {
          "ref": "15a6c1cb-7198-4fe6-8dea-5508109e983a",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fd00a849-1448-4b3a-9077-463ebebb80dc"
        },
        "item": {
          "id": "b29bd181-dc9b-4306-ba87-b5fb96b35dfe",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7ca0b37d-3344-4708-b193-eb5e590b8060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90af3669-1d87-4b22-ba71-071a4281d919",
        "cursor": {
          "ref": "e96524e7-2bb3-4c32-807a-18bd7874f0cc",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "456b3dd5-829b-4d8c-b594-a14528ea6082"
        },
        "item": {
          "id": "90af3669-1d87-4b22-ba71-071a4281d919",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1a0df1f6-34dc-4ef5-a152-156ddae85956",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4bc9fe-ec7a-4d17-9911-57023652437f",
        "cursor": {
          "ref": "5d6b99c8-9f2f-4958-abd5-888872c3cc3c",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "db1d2ee4-f38d-42e6-8e68-4a3cc176801f"
        },
        "item": {
          "id": "0c4bc9fe-ec7a-4d17-9911-57023652437f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8cf074d9-5313-43d3-8552-bd2d36e92f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab8b618-62ed-496f-b974-2519233badca",
        "cursor": {
          "ref": "82e966b1-5594-459f-b190-42eb2cbd12c1",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cd325140-8f4e-4879-b994-420d178fb9b2"
        },
        "item": {
          "id": "7ab8b618-62ed-496f-b974-2519233badca",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "733d299c-9aa1-4810-ba6e-15e3df0fea96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0482e7-a832-4c73-bc62-b63c3685a1ab",
        "cursor": {
          "ref": "3dc60565-b711-4b99-a2d7-0dc84394ae6b",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7dfb60c1-6016-4309-b092-6f1a3e0b781c"
        },
        "item": {
          "id": "2f0482e7-a832-4c73-bc62-b63c3685a1ab",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0bb3fb6d-9522-4a83-a6df-209a239a5fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80b896e-7e94-49f7-9fec-f22c9f1bb791",
        "cursor": {
          "ref": "89a6f47c-ac92-4675-9c97-f04b895f750c",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1246713b-9aff-4fa9-bd5d-3f6d6b059a41"
        },
        "item": {
          "id": "e80b896e-7e94-49f7-9fec-f22c9f1bb791",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6dda953f-ee91-40c8-b893-b0219ec3ef5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9426b5d1-c0f1-4360-81b6-297ade04bbe2",
        "cursor": {
          "ref": "8cd36fa2-7363-4836-ae9b-afe2eee987f4",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e7f66e2a-8c91-41ee-aa41-3d6026a7d927"
        },
        "item": {
          "id": "9426b5d1-c0f1-4360-81b6-297ade04bbe2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e8c1a953-cf2f-41ad-a30b-c024e27cf578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a39fdc5-9ac6-42d6-bded-04a7ebd77503",
        "cursor": {
          "ref": "132d76f8-9f0c-4775-8310-cb77a5b7cf7b",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1274f2fc-58b5-4b78-b611-bc61f20052e2"
        },
        "item": {
          "id": "1a39fdc5-9ac6-42d6-bded-04a7ebd77503",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e11415ce-a7f3-470a-ad8c-7c93d34fb82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97e929c-b5a3-4055-bf4d-9680cd264330",
        "cursor": {
          "ref": "046c12b4-bcc8-4a22-9e0a-eb4b24b4eb0a",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "31ab18e0-97fc-43d3-b3d6-940a0145ae5b"
        },
        "item": {
          "id": "f97e929c-b5a3-4055-bf4d-9680cd264330",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7728438a-dfaa-42f6-8727-8d78b4641502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3e04fc-7328-4a59-9422-895b844ebce5",
        "cursor": {
          "ref": "90a1e604-8129-40af-9166-03249e1bcb0c",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fcdb2637-09ce-459c-ae31-39ffe4fc8078"
        },
        "item": {
          "id": "0b3e04fc-7328-4a59-9422-895b844ebce5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "295cfb07-2682-461c-89a4-80dc713c7b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679497cd-7c03-4fcd-94a9-818d2630696b",
        "cursor": {
          "ref": "b51caf4f-6e07-4cd4-8950-e24c1d8cca5e",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5a64c53d-fab5-49fd-93b2-10102ed7aacf"
        },
        "item": {
          "id": "679497cd-7c03-4fcd-94a9-818d2630696b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "86a051cd-88c4-4ec7-ac0d-61412d965cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2305c0a6-74f1-45f6-98b6-1b2263327395",
        "cursor": {
          "ref": "086ecfd2-efdc-4891-8d84-f1c606270b4b",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a32b748c-2372-4f75-9083-e9789f97ddaf"
        },
        "item": {
          "id": "2305c0a6-74f1-45f6-98b6-1b2263327395",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fd544b29-a47b-4955-b77c-e68baf8704ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d72b21b-0e3e-4df5-ba55-dc8bf4beb9ee",
        "cursor": {
          "ref": "e7fe3ff5-342f-47c2-aabd-fb8c16315a83",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "49e84e6f-1cef-4708-a07e-ccecf135940f"
        },
        "item": {
          "id": "0d72b21b-0e3e-4df5-ba55-dc8bf4beb9ee",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9b40439c-fa3a-4942-b527-dec1edcd1dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93034f30-7b38-4166-a567-958145cdde65",
        "cursor": {
          "ref": "fabd5b71-7d40-4195-b9e5-e1fb31fa31bc",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f0274970-c2ff-4d34-9ec4-b0181d309f79"
        },
        "item": {
          "id": "93034f30-7b38-4166-a567-958145cdde65",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "35d8521a-ee06-4e36-994e-0ae2ecf93d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cfa6a9-258c-4346-bbc2-f48f4268d863",
        "cursor": {
          "ref": "c8cfcc2e-c074-4bdf-b90f-0f4c926b0386",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0baf5c53-7c6b-4907-b674-9ede1fad0755"
        },
        "item": {
          "id": "57cfa6a9-258c-4346-bbc2-f48f4268d863",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ebba2db4-91e5-43c0-af1f-51917a34e62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f36a0b1-e9d7-4b46-9e8f-519c00edf9cf",
        "cursor": {
          "ref": "3bc02f84-496e-4a1b-96b3-a0409f181f4b",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1437f878-8e0a-4232-a529-2ccefbf17dd9"
        },
        "item": {
          "id": "7f36a0b1-e9d7-4b46-9e8f-519c00edf9cf",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "89ac4a0e-503d-4da7-bd1d-19f4574ff9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ae6486-7b46-4394-86d7-dbf21fdf122e",
        "cursor": {
          "ref": "b16ebdbb-c8f4-4055-9a04-ce76f0a552c8",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8b22ad35-5aa9-49d1-8706-99fcddf3786b"
        },
        "item": {
          "id": "e5ae6486-7b46-4394-86d7-dbf21fdf122e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5e471f3f-ace9-4eb3-a5fb-c04394782cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a436956-a485-4b38-b3c1-fa85549004cd",
        "cursor": {
          "ref": "c268d129-e616-4957-b454-ee67c75ee4c4",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f3cb083b-db03-4156-8b10-ba656da8df15"
        },
        "item": {
          "id": "3a436956-a485-4b38-b3c1-fa85549004cd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6ad3d4ed-598b-4a8c-9a90-c265d7c4740a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca84623b-204e-495c-845f-f9a76a61df93",
        "cursor": {
          "ref": "918f5642-ced4-4d03-9608-592060385f35",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bc7027ca-818f-45bb-a5b5-88f368fbaee4"
        },
        "item": {
          "id": "ca84623b-204e-495c-845f-f9a76a61df93",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "09b2a3a5-c620-4b3d-970d-67a8b6eecb0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b241de-342c-473e-80c6-060ef3584242",
        "cursor": {
          "ref": "b7aebb1d-abcd-483e-9923-6632c785f1fa",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7b6b67c4-7978-453f-af9a-8ba8c1d41062"
        },
        "item": {
          "id": "77b241de-342c-473e-80c6-060ef3584242",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "480c3952-c4d9-42f1-83c6-56439f1cc195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c0e527-8598-4c9d-9b83-c22d43627711",
        "cursor": {
          "ref": "acc54593-2549-4550-b4a8-8d8d4946aea0",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b294a358-c6e6-4c8b-a2d9-3bf8c82e1a82"
        },
        "item": {
          "id": "c5c0e527-8598-4c9d-9b83-c22d43627711",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0d15b7ee-dcb5-4ee5-85c9-6f049a25d6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360698a0-07e3-48a9-885c-057b626bd550",
        "cursor": {
          "ref": "8c988377-fb53-45c0-ad73-ebb81bff0322",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1f7bc327-0877-4abc-ad0f-24fde3393561"
        },
        "item": {
          "id": "360698a0-07e3-48a9-885c-057b626bd550",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f4bf8ec3-390d-40a4-82e1-ab812be216c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbf3754-3a90-4c69-b172-f847616a9afa",
        "cursor": {
          "ref": "2bee70d7-35aa-4b69-91f5-9f04e4312a78",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2c10c4b4-3fd1-4309-ac71-a9ef9f59d0e1"
        },
        "item": {
          "id": "adbf3754-3a90-4c69-b172-f847616a9afa",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "325316f6-40a4-494b-a48a-fd6d8a17e561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89868d2b-33f6-4836-9205-265d8e35a9c0",
        "cursor": {
          "ref": "77a7a82b-01ab-429f-afbe-1f719922ddf9",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "81493e70-d9c5-4752-86ca-8b3150b0509c"
        },
        "item": {
          "id": "89868d2b-33f6-4836-9205-265d8e35a9c0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "11278501-0d46-4a81-85bd-970a8394922a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782b99ba-d4b1-4d4e-8eb8-fe3f98092240",
        "cursor": {
          "ref": "48f3bf98-7256-4aaf-8181-6c216bca161c",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f12c40f9-f2e2-472d-9893-93c7eb0f796b"
        },
        "item": {
          "id": "782b99ba-d4b1-4d4e-8eb8-fe3f98092240",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9b3695ee-821f-49f4-a6f0-68bec9e51e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8e3666-9f9c-471c-8999-559a61d12341",
        "cursor": {
          "ref": "59bbadff-8885-46ec-92ea-c31e8530a419",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "900ba56a-8711-4fae-962f-54c9a6474315"
        },
        "item": {
          "id": "8d8e3666-9f9c-471c-8999-559a61d12341",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a6a8b413-94e5-4a61-b164-1f9d06f9bdf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285239de-0cd3-4d44-871c-c33707784af6",
        "cursor": {
          "ref": "61b78221-dded-4591-8f87-d94fb2e2b044",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e5a15476-a3d3-47ec-be57-c9c392ac9951"
        },
        "item": {
          "id": "285239de-0cd3-4d44-871c-c33707784af6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b7e228ba-79ad-45e4-968c-81104946bde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb27931-3fc0-49a2-9752-8f921a42e432",
        "cursor": {
          "ref": "444a8917-a89a-4232-bba6-ada8d2d51423",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ec48f790-2134-4bb2-b4ff-224a2fd436b8"
        },
        "item": {
          "id": "beb27931-3fc0-49a2-9752-8f921a42e432",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2fede9ee-1868-45a5-b45b-b6ccebac2655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dad87de-f2b5-4fa0-beff-80af8e8bc2d8",
        "cursor": {
          "ref": "83f4ca1f-7a50-460f-ac9a-371867fc9e48",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f43a598b-2613-4360-8174-808443592a69"
        },
        "item": {
          "id": "9dad87de-f2b5-4fa0-beff-80af8e8bc2d8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3220a8f7-6fbd-465b-ad65-360b8e5891ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bdce722-55c3-478f-a509-9a5d53caa30b",
        "cursor": {
          "ref": "c2eb2afa-9310-4777-9bec-e5de826a6724",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "026a1f5b-9706-4cb2-bc94-3af59a3a97b0"
        },
        "item": {
          "id": "6bdce722-55c3-478f-a509-9a5d53caa30b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "88e46cc5-88b0-46e5-b7b0-8c4e3d81008c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f40224-ba5a-4d39-a05f-22a28c9de620",
        "cursor": {
          "ref": "a9dc09a7-60a9-4f8f-934e-5c6b6db3c5d8",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "96e0d644-e506-4a6e-8002-dcbf7766daab"
        },
        "item": {
          "id": "55f40224-ba5a-4d39-a05f-22a28c9de620",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "06c99d07-54ef-49f5-a5c4-aa6b85ef40e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f808f29-f0c2-499c-a926-4f1c29b8279a",
        "cursor": {
          "ref": "24e59c87-a29a-41d4-bf18-8d5a34a16007",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0e3eaf25-7a04-446b-982a-22891e094598"
        },
        "item": {
          "id": "6f808f29-f0c2-499c-a926-4f1c29b8279a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e83ab27e-b3c8-4539-af9f-bcbd6958d65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd1f1a5-f82d-4aac-a622-e50c57e26c19",
        "cursor": {
          "ref": "4ba99c6b-7e25-4bdb-9770-5b4d2f461a23",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "94a4dd18-4bed-4ff2-9d43-cdb9bf8bb790"
        },
        "item": {
          "id": "9fd1f1a5-f82d-4aac-a622-e50c57e26c19",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "391acca9-78cd-40b9-85e0-993ee2ce7a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0caeccd8-98f7-47a2-b398-15f5ea98ae7f",
        "cursor": {
          "ref": "3120e5ce-fe1b-4911-a0cf-311df242e25b",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cfa4ed8f-7341-435b-b541-9fa742b82f18"
        },
        "item": {
          "id": "0caeccd8-98f7-47a2-b398-15f5ea98ae7f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1732fd28-99b0-46a2-be62-277c93e0eaa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61d4b08-11a3-4c37-8163-3dc6b92f33c8",
        "cursor": {
          "ref": "6b8fdb00-f9ba-490a-b1d8-84788c8ae131",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6c3ce64d-acb1-430e-8cf4-bd868800016f"
        },
        "item": {
          "id": "e61d4b08-11a3-4c37-8163-3dc6b92f33c8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3f4d2b34-3c71-466c-b241-d14141fd78b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10923a70-7215-4511-966d-1ddf7936e9d7",
        "cursor": {
          "ref": "df5387b6-a359-4046-a742-95e2c1ec1a91",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7332dae6-0357-4a1c-8ab0-f25c34ade574"
        },
        "item": {
          "id": "10923a70-7215-4511-966d-1ddf7936e9d7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e4e9557b-1e6e-48d3-89d8-98f6cee33952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d148ac-d124-4aea-af10-78adfdf44215",
        "cursor": {
          "ref": "8d5754d3-5415-4046-addf-4bb84c50b292",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d951d6d5-ae7b-4b11-9375-ac23113aadb1"
        },
        "item": {
          "id": "91d148ac-d124-4aea-af10-78adfdf44215",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "66a01304-679b-4bfb-a31b-c24032ee77b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ade21f3-837c-470a-b23d-25edb8ec0506",
        "cursor": {
          "ref": "f19d4e20-6b41-4474-915d-3d731d10e4fa",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "85ae85b7-5f86-402e-982b-57ee33badf9a"
        },
        "item": {
          "id": "6ade21f3-837c-470a-b23d-25edb8ec0506",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "643c2a9c-1dc2-4416-b449-92f735563f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddd8a81-7f6e-4045-b71f-fc52f9c62e94",
        "cursor": {
          "ref": "233b4dcc-7ad8-46ac-983c-9cc44a223aba",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "07121132-cbdf-4054-ac61-34ed7005122b"
        },
        "item": {
          "id": "4ddd8a81-7f6e-4045-b71f-fc52f9c62e94",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5349f4ff-0c32-4ca2-b549-178a23f6a47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627f75ae-6437-492c-9938-0f03c731abb5",
        "cursor": {
          "ref": "8650edf3-f05b-4645-90bb-375372c4e33f",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ddb3f831-5995-418f-8ac7-f0b9aa2d1e7b"
        },
        "item": {
          "id": "627f75ae-6437-492c-9938-0f03c731abb5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2826d6a7-3d85-48fb-b8cb-7c763264df2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ece2ab2-5a3a-4a50-a476-ca8b821b9c45",
        "cursor": {
          "ref": "9aaf1968-414a-44af-af90-f34387d45df6",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "33b89739-ca93-400e-bc87-a4affe865c67"
        },
        "item": {
          "id": "3ece2ab2-5a3a-4a50-a476-ca8b821b9c45",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "83f68b92-6c7f-44c2-90d4-3e2b9749787f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f9e0fa-5bec-4bb6-ae35-990c5c22753b",
        "cursor": {
          "ref": "9083d573-6317-4167-a9d5-8eb435ae1914",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "66cbd5d3-5f2a-4b79-bb73-f4624efd9934"
        },
        "item": {
          "id": "b8f9e0fa-5bec-4bb6-ae35-990c5c22753b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "da268ebc-ea1d-4a1e-9a5f-05cffd887e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1414ee3-3013-409e-be4a-d4e7b502aaa9",
        "cursor": {
          "ref": "76090c98-57b8-4827-849a-b89c828600f8",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4d952233-ef89-4761-bb1f-dc7b81590b2a"
        },
        "item": {
          "id": "f1414ee3-3013-409e-be4a-d4e7b502aaa9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "de1ebc88-49b7-4d71-ad7f-ae2fd650c3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa5af22-78d4-4c0d-b3e0-60b3b60d0366",
        "cursor": {
          "ref": "232eb34b-5310-47e7-aa71-8d4b1d412443",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e158e7ee-66b9-40e6-a200-27fc30776ab2"
        },
        "item": {
          "id": "afa5af22-78d4-4c0d-b3e0-60b3b60d0366",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a1872ee2-75fc-478d-b633-3fcd481e4192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7ca368-3a64-4d1a-b0dd-6fd86f3614c8",
        "cursor": {
          "ref": "8ac31b1f-4004-4039-96ca-3c1135c2a4e5",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7ec5c396-01bf-46c2-8f8a-f6266445f117"
        },
        "item": {
          "id": "ee7ca368-3a64-4d1a-b0dd-6fd86f3614c8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f32962bb-c095-4ab2-b01d-c1a5606903d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a605ae54-4e1e-489a-93d9-6417375ee6ea",
        "cursor": {
          "ref": "ef55d2dc-f6fa-4524-b6bc-acd6ed74183a",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6c6cbc19-d52b-42d3-9931-3e795cae7d13"
        },
        "item": {
          "id": "a605ae54-4e1e-489a-93d9-6417375ee6ea",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "eae9d3c4-b56a-430d-a2ae-d8504fe8c617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5fb904-8d7e-4466-a4b3-391e59563296",
        "cursor": {
          "ref": "3b7e4f84-e840-47b0-ac60-ed2541a241f7",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ecc34d0a-10ed-47e0-9146-a20ac5e9f9a9"
        },
        "item": {
          "id": "4b5fb904-8d7e-4466-a4b3-391e59563296",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "03b5859d-4638-4fa8-9f44-d30c7612ec54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef91c8f-e0b9-4a79-88e1-eff8ad4f76f4",
        "cursor": {
          "ref": "ba353122-41e9-4c37-b3bc-4cf73333bb14",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "00ff6aeb-e427-4d7c-8048-1c95a3823088"
        },
        "item": {
          "id": "5ef91c8f-e0b9-4a79-88e1-eff8ad4f76f4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "54993d47-1a66-4d16-b85f-219323aed8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329d927e-2ced-4fa7-9f74-08f6b566d3ad",
        "cursor": {
          "ref": "17d6c4f0-39c3-483e-b95e-d39582380f66",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0f61f288-3065-4450-bfb1-96505c10983d"
        },
        "item": {
          "id": "329d927e-2ced-4fa7-9f74-08f6b566d3ad",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "10b4ba9f-a31b-4dac-b00e-07aa6291d7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e32033-fb86-4426-84eb-d25619d79707",
        "cursor": {
          "ref": "86a085ca-0e52-466a-95df-7b33e1f1da7a",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "eca1f69f-2822-4a5b-926b-6ccabaab3c01"
        },
        "item": {
          "id": "65e32033-fb86-4426-84eb-d25619d79707",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ee157612-aef9-4068-9380-c1acafd71c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d7d551-c8e5-4f7e-8b8d-2a55dbf35130",
        "cursor": {
          "ref": "921e9a8b-4cc5-430b-b6bd-75241f222c70",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "66b92be7-47eb-4a28-80ef-1d552e0496c3"
        },
        "item": {
          "id": "f2d7d551-c8e5-4f7e-8b8d-2a55dbf35130",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "938970ae-af5f-4d89-ad80-68dcee0036c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310d0a16-6ff3-4955-bf1b-dd2c5822ce18",
        "cursor": {
          "ref": "af03d142-9f31-47ac-a53f-014b70c3d04a",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "54a38df3-7e9f-427c-855f-950a3a3bc762"
        },
        "item": {
          "id": "310d0a16-6ff3-4955-bf1b-dd2c5822ce18",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "430c333b-f9a2-467c-8bc3-66e60b416dd0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11258d67-f05a-4787-9d54-6f07f32f00d5",
        "cursor": {
          "ref": "ea3e295c-d923-46ef-99be-0fe640476149",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "067bf54d-24d5-4bd5-87b8-74104624e983"
        },
        "item": {
          "id": "11258d67-f05a-4787-9d54-6f07f32f00d5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "09f3cbad-c937-43fb-8148-73f7b1a5f894",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedb04af-9fb2-45e6-9c60-f496a1f7fafd",
        "cursor": {
          "ref": "bf7625b7-8d99-4bdd-b60c-cc66e18e903a",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "22e17b21-888b-4cd3-9b91-52f2163934c7"
        },
        "item": {
          "id": "aedb04af-9fb2-45e6-9c60-f496a1f7fafd",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c365fe30-864a-40e7-b54c-dc490dc1d4e0",
          "status": "Created",
          "code": 201,
          "responseTime": 63,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14a1f19-99ce-4f80-8351-06b0b4dd391c",
        "cursor": {
          "ref": "e575878b-1284-4d50-87ee-7e15b54d93a5",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "584dae98-7c44-46d9-99b2-6e742ef7cab2"
        },
        "item": {
          "id": "e14a1f19-99ce-4f80-8351-06b0b4dd391c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7d81385c-2425-4938-b3f7-2ba84140448a",
          "status": "Created",
          "code": 201,
          "responseTime": 168,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3246b607-a26f-43b8-8faa-a5fd4d0e4c8c",
        "cursor": {
          "ref": "e9f34776-f110-46c4-a113-18beb34aa1cb",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9d2f20f9-feda-45b0-bf1e-e7c2ec8b4b96"
        },
        "item": {
          "id": "3246b607-a26f-43b8-8faa-a5fd4d0e4c8c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e0262912-e94a-4eb7-a104-f98813618ce2",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d110ad8c-d7cc-4ca7-9de5-f234374b1a05",
        "cursor": {
          "ref": "e97ec670-d649-473e-8356-2cdf41e6b3cd",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a20e8ea8-eb6c-4920-97b5-b68a7389329b"
        },
        "item": {
          "id": "d110ad8c-d7cc-4ca7-9de5-f234374b1a05",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a0cbedf6-cd7b-43d8-8b72-4eb75a59fe8d",
          "status": "Created",
          "code": 201,
          "responseTime": 25,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "1772fba6-2106-4937-98da-096e419413db",
        "cursor": {
          "ref": "d8f32058-a6f1-4a85-a59e-c3e9e119710f",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "97c46583-8f87-41e3-a144-f32128836e0c"
        },
        "item": {
          "id": "1772fba6-2106-4937-98da-096e419413db",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "db714521-3e31-42ba-9006-8aced1233c58",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6826e395-2d31-4150-a641-f65c71b9401a",
        "cursor": {
          "ref": "5539615e-4f44-44e5-8df5-a483fee6456b",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "11f5681f-2b01-46f0-972f-ab6e33891555"
        },
        "item": {
          "id": "6826e395-2d31-4150-a641-f65c71b9401a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "87411ec1-7e55-4453-b706-2eaafc267e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca1e8ab-ddc8-4e65-9c35-cdd5cce097cc",
        "cursor": {
          "ref": "14285114-7361-4063-b17e-16c0360d7ae7",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ead777d9-727f-42e0-8ff2-ac80e2fdd1fd"
        },
        "item": {
          "id": "7ca1e8ab-ddc8-4e65-9c35-cdd5cce097cc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5cba4de5-a152-4852-ae25-b6923f066309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1efbd38-3926-45ba-8a76-289392bb297d",
        "cursor": {
          "ref": "04895467-1be7-4e47-8c6b-9a72297a97a4",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "48335f7a-9f16-453c-bb1e-80178403e51b"
        },
        "item": {
          "id": "d1efbd38-3926-45ba-8a76-289392bb297d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bfc3b6f1-02e0-41c3-8698-be2604d2c485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567812bf-352b-4657-9b5d-70eb105eb088",
        "cursor": {
          "ref": "24e8ebb0-e1d0-444c-9e72-e1346f253770",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8226e956-b6d5-4642-9a4a-6110dab42204"
        },
        "item": {
          "id": "567812bf-352b-4657-9b5d-70eb105eb088",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "88a30f17-61fe-4161-b782-e060887807c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a47c270-bf8f-4fd5-9719-51ed35fe38bb",
        "cursor": {
          "ref": "202dfe8e-46aa-4ccc-a850-de03b8713135",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "51eeaba6-cdf0-49bb-9310-1ff46389f969"
        },
        "item": {
          "id": "3a47c270-bf8f-4fd5-9719-51ed35fe38bb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "01933cce-1456-48b7-a9a5-40da28d65f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170c50fd-682a-4ec8-82d9-2c76bab2c1bc",
        "cursor": {
          "ref": "32a67c26-920f-4861-b2c8-200b0eeb0665",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b68f66ff-3f56-4c16-aa3c-48bbb1f5c40e"
        },
        "item": {
          "id": "170c50fd-682a-4ec8-82d9-2c76bab2c1bc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9d8b9b2f-e1dc-475c-81a4-e5d82c17a2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0683ea-cfe5-4109-b7c3-d348a7817db2",
        "cursor": {
          "ref": "604dc87f-9fca-460a-8512-248615d2ff93",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7b88bdcc-8a79-4d70-b79e-3ef61419c1a4"
        },
        "item": {
          "id": "ae0683ea-cfe5-4109-b7c3-d348a7817db2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ad979c5c-fe65-4f7f-aaaa-3aafecebf8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd138c6-98e4-4f16-b1a1-0f7a5a903fef",
        "cursor": {
          "ref": "167f0b8b-8bdd-46d4-8a6e-15997b93f6b8",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "24a80f2d-2c80-4c33-bf9a-d147e2c74e63"
        },
        "item": {
          "id": "8dd138c6-98e4-4f16-b1a1-0f7a5a903fef",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "15af84e5-2f1e-4617-9c55-a0b870fc97e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15299991-0b8c-459f-87cc-a920cbb9ba46",
        "cursor": {
          "ref": "6caae963-fa7f-492a-9282-4afa08d3a112",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b6b8cff0-9f21-4d0e-a6a1-91bf9147f878"
        },
        "item": {
          "id": "15299991-0b8c-459f-87cc-a920cbb9ba46",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "219e72a4-1f6c-4568-91bd-08e4e515198d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eeccf25-fc9c-4049-aa65-f9b8ffcb0876",
        "cursor": {
          "ref": "ad28a3de-267d-48de-8ef4-d11a073222d2",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7a7d42ac-d3ef-4bd2-bf93-83a7fb4aa3b3"
        },
        "item": {
          "id": "3eeccf25-fc9c-4049-aa65-f9b8ffcb0876",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "35eb8543-1ac0-4a56-bc28-4233a7c634bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c843c9-2922-410e-9bd5-fa8bc7cfabd0",
        "cursor": {
          "ref": "1d64347f-e108-407c-bcce-a66d43aa8150",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "218d37bf-5fbb-4293-8f43-4af31ccc56b5"
        },
        "item": {
          "id": "05c843c9-2922-410e-9bd5-fa8bc7cfabd0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2a469267-598d-4c79-848c-9b7fbff9c79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260b4e6e-302d-4fea-a0e7-cc584871d128",
        "cursor": {
          "ref": "1cf4662c-6296-4183-ad53-f469c2f13819",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4970f99b-4105-474d-93d3-203c55b0766c"
        },
        "item": {
          "id": "260b4e6e-302d-4fea-a0e7-cc584871d128",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7b183240-dd20-4c6f-b21f-ef1804fad93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acf61ff-092d-42e9-ac85-39df150f8e3e",
        "cursor": {
          "ref": "d10fffc3-61c4-4a0b-8732-00f1fcd9d961",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "33523138-44ec-40f4-a05d-7df57002b23b"
        },
        "item": {
          "id": "9acf61ff-092d-42e9-ac85-39df150f8e3e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "666a69b0-92f9-4058-bc4d-19935c2a7dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a967963a-d2d7-4ed1-a142-03704c0dc5f7",
        "cursor": {
          "ref": "2da3f69f-9e1e-42ed-abf5-0a754519d96a",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8ab8eb82-dbe7-43df-8ec3-9529e1627af8"
        },
        "item": {
          "id": "a967963a-d2d7-4ed1-a142-03704c0dc5f7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c88dae3d-7e35-454a-96a7-a4edfdb44d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41146f1-f6f8-4f6a-8124-a76d337979f9",
        "cursor": {
          "ref": "1217c233-fdf5-42b5-be63-2cfd5b15d9cd",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e2642e2b-2fc4-47ab-a807-bcfa80d2a75c"
        },
        "item": {
          "id": "a41146f1-f6f8-4f6a-8124-a76d337979f9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "459048e3-3d9c-435f-b2c4-62d4e5d101a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93496a33-0b1f-49eb-993e-e2fa9d22883f",
        "cursor": {
          "ref": "c29f0cc7-4fac-42f9-95a6-dd18110e4bd1",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "53052b27-ce39-47d5-a7c8-4d67618c6090"
        },
        "item": {
          "id": "93496a33-0b1f-49eb-993e-e2fa9d22883f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0f4f60af-0016-4bd1-8490-93efa3b55a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e8e2f5-c227-4f3d-8893-e340be5841be",
        "cursor": {
          "ref": "208146fa-ca7f-48c4-abbd-3617d54bf233",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "df2a6c68-d4d4-47ab-9e46-888859f20138"
        },
        "item": {
          "id": "e9e8e2f5-c227-4f3d-8893-e340be5841be",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "82cc4138-230a-465f-b914-f22a5727fb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81277c5-8d5d-4a5d-adef-ef66e8d5a604",
        "cursor": {
          "ref": "7826e7b8-8ba6-4767-8df5-13a250acf239",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9c07502f-baa1-4d42-a810-e960bc29f33b"
        },
        "item": {
          "id": "c81277c5-8d5d-4a5d-adef-ef66e8d5a604",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "26a4aac3-16a8-4446-b9a8-7817ea6e126c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c079453-72fa-4eea-8625-00cc3ef11cf5",
        "cursor": {
          "ref": "114426fb-d4cb-4136-a1d0-a323214e5269",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "88155228-bb05-4c79-949d-092ae4fd101a"
        },
        "item": {
          "id": "8c079453-72fa-4eea-8625-00cc3ef11cf5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9546d772-65f8-4515-b108-36bb4638349f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e556f4-f121-4f29-8429-3917ea662c89",
        "cursor": {
          "ref": "57695da6-4ddb-44d8-b3a9-dbd7295f036c",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "abfead7f-9a48-474b-96e2-021f60f0d209"
        },
        "item": {
          "id": "54e556f4-f121-4f29-8429-3917ea662c89",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "06eef207-226d-4a03-bc58-0c17b234f6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14811712-cb3a-4a25-a8c1-a1a8338af934",
        "cursor": {
          "ref": "691b32df-0ced-4d6e-a123-78840679a011",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e2c98f47-8172-4586-b940-9b72e950a400"
        },
        "item": {
          "id": "14811712-cb3a-4a25-a8c1-a1a8338af934",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dec242ea-cc13-4bf2-94e1-0f157b27b34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c8fac9-ef3e-4803-91c8-6b33a5016bae",
        "cursor": {
          "ref": "79e1e00c-e303-449a-b819-d9dc2b0f71cb",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "63045cee-7e29-414f-a710-a1ff7360764c"
        },
        "item": {
          "id": "01c8fac9-ef3e-4803-91c8-6b33a5016bae",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "eb23d843-9677-49e4-8fb4-e199a9fd27d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d181280-740c-4cb2-ad8a-d13de5e5585e",
        "cursor": {
          "ref": "e81aa97d-4072-4518-87f1-51d5e1cb8058",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0d0e83b6-531b-4004-b710-c9fa976c07fb"
        },
        "item": {
          "id": "5d181280-740c-4cb2-ad8a-d13de5e5585e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "55a648b1-dc82-4751-a635-af64fa52a69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9516563-6a99-4026-b887-489b4be8f55c",
        "cursor": {
          "ref": "c7a7cf9a-81ce-40dd-9aa9-f92aca3f17a3",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0ed683a7-f059-437b-83e2-2f009d318cf0"
        },
        "item": {
          "id": "b9516563-6a99-4026-b887-489b4be8f55c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "71fd2fa2-c0e1-4ced-b288-c956d1e46818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c111d292-a698-4e85-a637-ae91845e1d17",
        "cursor": {
          "ref": "ee86ff25-e3e3-43df-bed6-0002eff46eb7",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8919f399-fbc1-428c-bd2f-f8e7d3f0adb6"
        },
        "item": {
          "id": "c111d292-a698-4e85-a637-ae91845e1d17",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b564af87-54d5-4cef-934f-9e004077dcc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7438c3fc-b549-4134-ba58-20008ef77c0e",
        "cursor": {
          "ref": "004520ad-a96b-4092-a2aa-8ab815e01f1d",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1b8ba5f5-d21e-4c0f-9789-8bfc66551b9c"
        },
        "item": {
          "id": "7438c3fc-b549-4134-ba58-20008ef77c0e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "579b4987-3052-4daf-bbb9-606b7d976f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4464c5ca-2d1c-4dd2-8ea1-5e4a95072d93",
        "cursor": {
          "ref": "487f2825-9097-4493-91c5-a5eab0cfa48d",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "122e4805-5e88-422f-8523-8fe5d9150441"
        },
        "item": {
          "id": "4464c5ca-2d1c-4dd2-8ea1-5e4a95072d93",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d41e88e9-d804-4557-8665-995951cb3b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fff3346-873d-44ed-b645-182ad9fe1596",
        "cursor": {
          "ref": "ea623270-d088-4ff7-855d-b55addf2d0e4",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6b018883-55a7-4c60-80d0-d50fec37d26e"
        },
        "item": {
          "id": "4fff3346-873d-44ed-b645-182ad9fe1596",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "058e97bf-71ab-41df-8b6d-d12972954182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd814291-0256-4e47-911a-ea26760f34d7",
        "cursor": {
          "ref": "b91bf08c-9c9b-4d82-b3de-e4f43669aabc",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c6154288-2e62-4190-ad81-9a26b70b1e52"
        },
        "item": {
          "id": "bd814291-0256-4e47-911a-ea26760f34d7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c3f7eec5-b1e1-4390-bd0a-898399afab80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febbe827-6594-429a-b3fe-da8828cbb12a",
        "cursor": {
          "ref": "95167928-9bf5-4097-820d-7015ef705903",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a8fa0f0d-caf6-4a30-b0c8-fbbe5a85fc2d"
        },
        "item": {
          "id": "febbe827-6594-429a-b3fe-da8828cbb12a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8e534529-4d64-47b1-a691-30e0b48e0e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb3f14a-22b5-457d-8ac7-289f1f5b3224",
        "cursor": {
          "ref": "b21e338c-14cc-4ab0-84bb-0313ce3c144a",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b202cdf4-a286-41a1-88ab-871abf7d9ee1"
        },
        "item": {
          "id": "cfb3f14a-22b5-457d-8ac7-289f1f5b3224",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6bad61bf-1673-4cb9-abec-c6c18e50af65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00fe0f67-c231-4d5b-beba-99a2eeff6ad6",
        "cursor": {
          "ref": "54e52abd-b118-4337-9c2a-c99ac3924f12",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "41a1803d-05ce-4796-89b6-d7329ee7142f"
        },
        "item": {
          "id": "00fe0f67-c231-4d5b-beba-99a2eeff6ad6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e79664a6-855b-4e15-ad18-3546f7148a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54214ecb-2710-490c-977b-d611e491881c",
        "cursor": {
          "ref": "b67f8688-490e-480f-8b67-c5271befc02c",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "05ea36da-254a-4802-933d-1338238c49e0"
        },
        "item": {
          "id": "54214ecb-2710-490c-977b-d611e491881c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c2e26708-0303-4394-a044-6ecedb5bf139",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752a72ba-9db1-4cd5-8754-209c70d6d34f",
        "cursor": {
          "ref": "d02559f1-461c-4117-9350-752bc25cd615",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c909a8c9-9c3b-473c-808d-586847639d93"
        },
        "item": {
          "id": "752a72ba-9db1-4cd5-8754-209c70d6d34f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e6975072-cb7d-44e8-ba3a-ab3f60561644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e301cfb-443b-4acb-9dbe-0cefbab98968",
        "cursor": {
          "ref": "f40159ea-2aee-4558-8d33-63dac69d8aac",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "37cf1efc-3db2-414b-b74b-29dca4c983b7"
        },
        "item": {
          "id": "1e301cfb-443b-4acb-9dbe-0cefbab98968",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cf007764-70ef-40bd-9141-690fbf266bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4894bb-4e2c-4e76-b6ad-4ad631cdae23",
        "cursor": {
          "ref": "46d63122-3df0-4d77-853e-d8d6cc72c30b",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ffeaca38-7d87-46ca-8db8-a7884e5f7d47"
        },
        "item": {
          "id": "bb4894bb-4e2c-4e76-b6ad-4ad631cdae23",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4361863b-bb8b-4ba2-a867-171362f0892a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe85c29a-40a8-4913-a7df-06a026cdd562",
        "cursor": {
          "ref": "36c38265-298d-4f0e-a476-421a1b98892a",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "48cebfdf-7f02-438c-8e37-ea4c34637a14"
        },
        "item": {
          "id": "fe85c29a-40a8-4913-a7df-06a026cdd562",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b5b9760f-94fc-4213-a01f-294f63ccee0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1794a94-89eb-4b3f-b822-c2a693b158c2",
        "cursor": {
          "ref": "3ae39bea-423f-4c3e-ac54-3af6dc156060",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a02c03d9-82be-4697-b900-01d338668361"
        },
        "item": {
          "id": "e1794a94-89eb-4b3f-b822-c2a693b158c2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "33955476-6d20-49cc-82bb-dc4a7521439b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c72c4c8-2a67-48d9-9fd6-e96bd6f898f8",
        "cursor": {
          "ref": "7e45d52d-2b79-4354-9cc7-802f3fbacbf0",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "381277d6-36e7-4f98-b733-d04c8d95ba69"
        },
        "item": {
          "id": "7c72c4c8-2a67-48d9-9fd6-e96bd6f898f8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f46bc47b-0a04-4879-881b-3d6ea0cfb1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2665bf44-3b2c-46c6-9130-3300824db10e",
        "cursor": {
          "ref": "b8ce4b0d-1a26-4455-afd8-22db4f4c8ad9",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0c6e4bd8-2fcd-4e8b-85d2-5214ce13a053"
        },
        "item": {
          "id": "2665bf44-3b2c-46c6-9130-3300824db10e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "46b88bc4-6ef3-43b2-84bc-2c1243cb7707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f9a061-6287-4ff0-bf32-96eea67f69c0",
        "cursor": {
          "ref": "b347db7e-08a3-4835-a998-64cc3e1f1934",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6a117df6-909d-422c-bac2-6c0403cb5b4b"
        },
        "item": {
          "id": "81f9a061-6287-4ff0-bf32-96eea67f69c0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "88f3ce11-7093-4acc-ac34-7b20dbfdb9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a42eb2-945d-478c-9318-515bd6118642",
        "cursor": {
          "ref": "56226c05-6073-46ed-b97d-054b7f25fe55",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c93da8c7-bcc4-478e-a02c-009e5db2edeb"
        },
        "item": {
          "id": "74a42eb2-945d-478c-9318-515bd6118642",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d68bb34c-e1ae-469d-b50d-af5b24e440f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0080d732-f4c0-4d01-a02f-63caa69ef209",
        "cursor": {
          "ref": "1151e29a-f863-46a4-a669-fe01d9c8e22e",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "168b276e-91ac-409a-98a9-3f72f2654f4e"
        },
        "item": {
          "id": "0080d732-f4c0-4d01-a02f-63caa69ef209",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ebd40801-1db8-4e16-b820-783b5086aba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b168fe5d-227f-4660-9d25-ad5b677fda41",
        "cursor": {
          "ref": "e178ea11-a9f6-4807-9773-1759ab18b042",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6db160ad-c942-4c2f-b36e-66f8e5a9a5e4"
        },
        "item": {
          "id": "b168fe5d-227f-4660-9d25-ad5b677fda41",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f4619d24-12df-47a2-8f2c-8da6f18e6bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b441432b-1bce-4514-8724-f8ef7d057373",
        "cursor": {
          "ref": "9b89265c-c297-4c86-b6a9-8c46b96b6d08",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2c14fce5-9235-4680-9a0e-03f6ee59fa24"
        },
        "item": {
          "id": "b441432b-1bce-4514-8724-f8ef7d057373",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "039f6d5a-7cb6-42dc-8e88-69cb7f0aef31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50054703-9ada-4e85-9565-52f5e403a7d7",
        "cursor": {
          "ref": "d7c9494a-f772-4355-912a-40a428848302",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "40916d22-569e-4175-b81c-f213fa7c241a"
        },
        "item": {
          "id": "50054703-9ada-4e85-9565-52f5e403a7d7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e3ea8f44-157a-4497-a5fd-c320ec8d5169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3043d7db-53d7-4d4d-b016-30b58b0bb0fd",
        "cursor": {
          "ref": "653c0b1a-8e67-49bf-b93e-49be08e87f9b",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1615bf17-52b5-4427-ad19-453541442787"
        },
        "item": {
          "id": "3043d7db-53d7-4d4d-b016-30b58b0bb0fd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0ed1c9ea-ab62-4852-bab7-4e7ee4a45606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680a66ff-4477-4232-8118-fa4f8a5de38b",
        "cursor": {
          "ref": "f2307f63-6492-480f-8e4c-7fab18d137c2",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "dbe98ad3-bf1c-41ca-8784-818e925c892e"
        },
        "item": {
          "id": "680a66ff-4477-4232-8118-fa4f8a5de38b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9408fc5b-7a23-4182-87b2-bfbcc3f22386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c63f5dc-4acc-4e1c-9c06-c86e050b4158",
        "cursor": {
          "ref": "d5cdab1a-be26-4014-a20a-832e632d565e",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b7e96658-96b7-4548-a70e-e53a713bfd43"
        },
        "item": {
          "id": "4c63f5dc-4acc-4e1c-9c06-c86e050b4158",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1e629623-9fc3-43b9-9505-5863c7878060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8bd4a5-236f-4aff-9bd3-23e150e8e389",
        "cursor": {
          "ref": "d010d7b5-b618-4c8e-a8f0-1b72a215407e",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "43a77dbb-e841-4556-a7c0-830021ed0b0a"
        },
        "item": {
          "id": "9b8bd4a5-236f-4aff-9bd3-23e150e8e389",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bce29b90-b1c7-4888-be2a-83be28448360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49838a46-1c2a-4491-9f39-b174c7ae79d1",
        "cursor": {
          "ref": "458cb8e1-c64d-476f-8692-557868a8ea6e",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "148809cb-0698-44d9-b8b3-28e20fca2cbd"
        },
        "item": {
          "id": "49838a46-1c2a-4491-9f39-b174c7ae79d1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "28a5c1d3-b1b9-4898-8667-da56224d53f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec7c6f8-ce9f-4c90-86c3-547f2808fa28",
        "cursor": {
          "ref": "04292696-d2c5-45d4-93ca-9cb58b35b71d",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "994a74e1-9311-4457-8bff-cf635ab3e970"
        },
        "item": {
          "id": "4ec7c6f8-ce9f-4c90-86c3-547f2808fa28",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "aa80f9a9-8e14-42a6-84fa-d69de4fcf101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f87f30-7d8f-4bfd-bffd-b9ce618b2759",
        "cursor": {
          "ref": "00d4bc9e-962b-4a54-8df7-7e9a679c7b61",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8934dc26-d6fb-42fc-ba9a-9365e5c7cc05"
        },
        "item": {
          "id": "d8f87f30-7d8f-4bfd-bffd-b9ce618b2759",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "95cb5ec5-c972-413e-b707-c56b3d72a925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622ce564-40cb-4c59-a8f3-ba565c5c443f",
        "cursor": {
          "ref": "a6b14678-be0a-4cb7-9395-a3430fab17e0",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "be93a422-c1b4-4bfe-8ed8-6f64f2a903d5"
        },
        "item": {
          "id": "622ce564-40cb-4c59-a8f3-ba565c5c443f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d1c82657-d725-4685-a0de-a5ff91a6dacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61787880-e75d-454d-b25e-d06fdc1b041d",
        "cursor": {
          "ref": "5eed0fbd-edaf-47b3-bd29-06d3034849d0",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ca15b6f3-d618-4f49-aaf1-653f7c02450e"
        },
        "item": {
          "id": "61787880-e75d-454d-b25e-d06fdc1b041d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4aabd4f1-1618-4977-b2a5-c559f82d4f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fbafa0-7ee2-4e2e-a003-84e38299eafa",
        "cursor": {
          "ref": "96abca96-dbe6-4318-9ad7-96fc771eabf0",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8e9d733f-9742-4126-9e95-3d02c5d19d71"
        },
        "item": {
          "id": "34fbafa0-7ee2-4e2e-a003-84e38299eafa",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d3415205-392a-4b24-87d2-9572accb9bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b1c766-d96d-414e-97df-5d2f33c7ff0a",
        "cursor": {
          "ref": "1eee1d5e-97c1-4144-bc95-0e83f65e9c2b",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "06797a36-6f0c-4acd-b06c-6063adbff066"
        },
        "item": {
          "id": "71b1c766-d96d-414e-97df-5d2f33c7ff0a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2dcf223a-bbc8-4aa6-9444-9510d06aa785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06968dc8-4e66-4d38-8bcd-a62a62dfdd80",
        "cursor": {
          "ref": "c4bd7b72-a06d-4136-b692-8d694f886c68",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e5d58068-e7d7-45f7-98b4-e232ac46591b"
        },
        "item": {
          "id": "06968dc8-4e66-4d38-8bcd-a62a62dfdd80",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "10ef9446-9ae6-4394-9e6b-06056d3e8129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b5b52b-1d26-4d99-af08-7f177c62f262",
        "cursor": {
          "ref": "18d68a78-8bbb-4f68-aa10-1d543189dab4",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "db7ee186-ac88-4ef0-97bf-ef3b57ad3782"
        },
        "item": {
          "id": "67b5b52b-1d26-4d99-af08-7f177c62f262",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7709bc61-ddab-41a1-bd37-375525b626c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbba988c-c762-4659-9985-393f800c1e88",
        "cursor": {
          "ref": "64a25d49-5760-4dc6-91bf-68cf2dd0f535",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "16edea0c-b2bd-435a-806f-dec9b59cd77d"
        },
        "item": {
          "id": "bbba988c-c762-4659-9985-393f800c1e88",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3530769d-4790-4ccd-a984-bc5c40b3f83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2938f5c-3f77-483a-911e-77a1eb29ceb7",
        "cursor": {
          "ref": "7341b063-3605-45a2-b7ef-b0448fb5b5c9",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2609192c-3d4a-4c0c-8de2-7a7652114352"
        },
        "item": {
          "id": "c2938f5c-3f77-483a-911e-77a1eb29ceb7",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "00a86abf-7d99-49ae-b52c-e0c010a23ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c9948e-2bc9-4117-a9f9-0563d9de6b72",
        "cursor": {
          "ref": "18747b64-9c81-40a1-8f55-55aa1e9774d7",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8c888442-4756-4222-abd9-0fd665a43e06"
        },
        "item": {
          "id": "06c9948e-2bc9-4117-a9f9-0563d9de6b72",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2c122ec7-2522-49b4-84e6-c4666b764066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cff7a20-d0d2-4f50-81ad-54077e4716f5",
        "cursor": {
          "ref": "8b454c7f-454e-4991-affd-5384942fffa9",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a54b007b-2223-4419-8510-5df9304886db"
        },
        "item": {
          "id": "8cff7a20-d0d2-4f50-81ad-54077e4716f5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1254cd4f-aa35-4d07-b69d-f9ec6978a684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b40eb7-fc85-4790-9865-498559011974",
        "cursor": {
          "ref": "9d31157f-7694-4f52-8a05-360b904cc0fa",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "478ad78a-1f8e-4e3d-8f1b-46bcb55d788b"
        },
        "item": {
          "id": "99b40eb7-fc85-4790-9865-498559011974",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "44b1037e-355a-44fe-a6c5-1c214df50fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faee4730-896b-4769-aca5-2e83449cbc55",
        "cursor": {
          "ref": "e138ec3e-1709-45a9-85af-5af083dc0d10",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "356ca4b4-9360-4d68-9ba4-9d3516ccf56d"
        },
        "item": {
          "id": "faee4730-896b-4769-aca5-2e83449cbc55",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ff7aa152-192d-4a76-9037-0a196ba3c177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880709ab-4e37-4749-9912-fc061ee8cdd5",
        "cursor": {
          "ref": "10050e30-c1e9-4b5f-a92a-dec7cdccb4df",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0deb2fb0-9bd6-45c8-add6-d15ee68d6920"
        },
        "item": {
          "id": "880709ab-4e37-4749-9912-fc061ee8cdd5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d792009b-e505-409f-a825-942fdfef67b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096ff3d2-50bf-4559-ba7f-22fe24841e28",
        "cursor": {
          "ref": "1844d164-d1a6-452a-aa9a-53749f18a9a2",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5d32f8b3-8a37-41e3-8cd3-04d088861dec"
        },
        "item": {
          "id": "096ff3d2-50bf-4559-ba7f-22fe24841e28",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4aaffd51-89bf-49fd-b0b1-9f93ed66f5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ed4e28-30dd-41b6-b7e7-7d3bc0dda7bb",
        "cursor": {
          "ref": "436f3eeb-2087-41ac-a415-12e03d907dda",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8806c17b-0f73-4281-9a80-5644529c015a"
        },
        "item": {
          "id": "82ed4e28-30dd-41b6-b7e7-7d3bc0dda7bb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "294c9620-38c9-4049-9d9f-f90c1b333fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563d722f-6e72-4070-812a-823caab1bdd9",
        "cursor": {
          "ref": "ac99365b-633a-4baf-8db7-0a98068fe390",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "78e8da1d-8f03-44bf-bbf9-0abcc24cab29"
        },
        "item": {
          "id": "563d722f-6e72-4070-812a-823caab1bdd9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a124ae11-133d-4c30-b4f8-940819f4a83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde602c3-3f76-4178-887e-f68f986ea28f",
        "cursor": {
          "ref": "8b13de32-8f11-466a-9c7b-72f9ed0a0ca2",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f9815b4f-0398-47a0-b339-964e306b3bcb"
        },
        "item": {
          "id": "bde602c3-3f76-4178-887e-f68f986ea28f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6504aac5-d1b4-4f3d-bdbe-5201ecb9059f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f89576-b0e6-4519-998d-b0c21de184e8",
        "cursor": {
          "ref": "74a7ecc8-fbc4-4b6e-ae46-46bfe8e7158e",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "96389d1f-3081-46f2-8421-f9e429300cea"
        },
        "item": {
          "id": "f7f89576-b0e6-4519-998d-b0c21de184e8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0f0bc88d-df2c-4182-9c11-06805fe73586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df89124-94b7-471e-8da4-7b6ffbdcfb79",
        "cursor": {
          "ref": "f7f055f1-7079-4434-92f8-a1a6964cc708",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ccbf9e6f-12ca-413a-b8e6-eb19255dec85"
        },
        "item": {
          "id": "3df89124-94b7-471e-8da4-7b6ffbdcfb79",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "696f64e3-1c95-4d7b-bc62-703071c1981b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25aff4f-5ef2-4327-ac52-21d517155c58",
        "cursor": {
          "ref": "f08506e7-9d92-4de0-8f77-40fb42544c10",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ff908c5b-be1e-4377-9c24-6c1789ed1409"
        },
        "item": {
          "id": "d25aff4f-5ef2-4327-ac52-21d517155c58",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "32b74631-3909-4c8a-9eff-9587596e7e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f50fe8-489e-44de-bdc6-84091275fd8c",
        "cursor": {
          "ref": "41d25d77-9178-4b3f-936f-216760d10149",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "930afa3d-c734-495a-80c4-bf960c6736e7"
        },
        "item": {
          "id": "d5f50fe8-489e-44de-bdc6-84091275fd8c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "05020c5a-17cd-4d57-9caa-195fc02e726e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80c8c36-c60a-402c-ac32-cbfdd2a26bd7",
        "cursor": {
          "ref": "e81d42d4-764b-4c4e-90a7-bef0f14b741c",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "30364d18-96b7-4bd7-a147-e0fe2b3702d5"
        },
        "item": {
          "id": "f80c8c36-c60a-402c-ac32-cbfdd2a26bd7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "abe29511-54ac-48ff-8e57-3a1525e8e2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c94128-c9a3-4ea7-a3a9-26a3735129cd",
        "cursor": {
          "ref": "44bf4e33-3982-461f-a97c-7513be73015a",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "28b9f5e8-4809-476b-99b8-f5d64e3f12c4"
        },
        "item": {
          "id": "21c94128-c9a3-4ea7-a3a9-26a3735129cd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "35416efe-21e7-45e2-8d61-45eb6b77d2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca46032-257f-468d-b583-2e00dbc21a76",
        "cursor": {
          "ref": "caf3fbb3-d5ab-4f7b-85c8-bbfbac94512c",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "47d889ba-84d0-4d4a-a98a-65796d36a746"
        },
        "item": {
          "id": "4ca46032-257f-468d-b583-2e00dbc21a76",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ff55c0d9-65d2-418e-89ff-ed2a5e74c512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3dc1cbb-9437-43f7-a7ed-024118271f10",
        "cursor": {
          "ref": "1ba48737-9ad6-4179-abce-e97a0bab01f2",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9393ab84-6bad-42e5-b876-3e78e714e41a"
        },
        "item": {
          "id": "f3dc1cbb-9437-43f7-a7ed-024118271f10",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "23747953-2bba-47c7-8c0b-618cca29735e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afed7e5a-d3f9-476f-b461-0765a6738e25",
        "cursor": {
          "ref": "cc02fdb6-b599-4181-ba41-324b186449e8",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "79c2d777-ebe2-431c-8267-e5fd9d6e42b1"
        },
        "item": {
          "id": "afed7e5a-d3f9-476f-b461-0765a6738e25",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0376a3a8-fe5f-4263-af36-4fa052c05241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75915bb-c9b5-44d2-a086-43f6141122ba",
        "cursor": {
          "ref": "a00e9f79-c6e2-4468-a920-2e01d39786c0",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "324e4c45-3baa-4a85-a932-2e691df6dbf8"
        },
        "item": {
          "id": "e75915bb-c9b5-44d2-a086-43f6141122ba",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5df32bf5-826a-46da-83f3-1d44e734e548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad377d6-dfbb-4357-9123-8819a309ddaf",
        "cursor": {
          "ref": "6fb26bec-4b38-4b7c-9224-e8f619aff3d7",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c07ff3d8-85f2-43b6-bfc0-89c96b28524d"
        },
        "item": {
          "id": "dad377d6-dfbb-4357-9123-8819a309ddaf",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5665bf6c-c099-4f6b-9d8c-fe0f158bcd1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dddc7ab-48ee-4305-b47c-3d89045c4a79",
        "cursor": {
          "ref": "a16638f2-9611-43c9-b797-5dbfeb83aca7",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2c064408-8657-41c5-8964-cf44fbc9aac4"
        },
        "item": {
          "id": "3dddc7ab-48ee-4305-b47c-3d89045c4a79",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0914a1a7-c2a6-4008-91b3-737007c320d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e89ecd0-7770-4baf-99b3-9fc3ec948b9b",
        "cursor": {
          "ref": "1b0474d4-66a8-4d21-b303-4c2e4fdc3aae",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "751cfc63-e6cb-4110-a870-d7c324f670c8"
        },
        "item": {
          "id": "8e89ecd0-7770-4baf-99b3-9fc3ec948b9b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b3df5bfd-5714-4dab-b567-951cb4a90fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e034017-1183-4b44-904d-906b5200583f",
        "cursor": {
          "ref": "cd4cae7e-c7cc-4597-b194-96623418cd93",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "658c46c4-1c1b-44b8-b8de-3a233ed4b58f"
        },
        "item": {
          "id": "8e034017-1183-4b44-904d-906b5200583f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "caccd32c-d2a9-4cc7-a77b-094c48155642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb31cf4c-e313-4e6a-b160-507ab4136478",
        "cursor": {
          "ref": "8000073d-d7ad-4068-8cb3-e69471752929",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "275cc578-6a38-4e24-8806-e571d0715262"
        },
        "item": {
          "id": "bb31cf4c-e313-4e6a-b160-507ab4136478",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "cc5bfddb-6221-4966-8a68-201d14fa084a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a2c4fc-68b2-4a65-9d68-322c1185fcbd",
        "cursor": {
          "ref": "fa37708f-fe03-4ba7-ad07-8c9bfcf2ddd4",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ffb54028-68b1-437d-a31b-dcbc6b21cab5"
        },
        "item": {
          "id": "d7a2c4fc-68b2-4a65-9d68-322c1185fcbd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3bb7feb8-b3db-4c14-8c34-c6ac473f001c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81006050-00f1-4161-be66-92be414ec4f8",
        "cursor": {
          "ref": "adb70ea9-dbdd-4d60-bfed-b4d290dcea4d",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5430d356-614e-412e-bc71-1787deb6b1ec"
        },
        "item": {
          "id": "81006050-00f1-4161-be66-92be414ec4f8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4111355c-8784-40da-a260-9919d7e61502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3975be-c2c4-4c0f-9b0e-6af49b977809",
        "cursor": {
          "ref": "f4b369cf-9cd4-4a8d-beef-cf463804b894",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "546d30c3-8ea1-4ddc-a794-2444e8d98221"
        },
        "item": {
          "id": "bd3975be-c2c4-4c0f-9b0e-6af49b977809",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b9164f02-0634-4368-b0a3-2f5a49313375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547ea619-c46d-4313-8406-f0b11217e46c",
        "cursor": {
          "ref": "6be7220b-04af-4682-966d-8ea4db0b1ec9",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ffeda436-d874-4990-9ce3-e5171c415382"
        },
        "item": {
          "id": "547ea619-c46d-4313-8406-f0b11217e46c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bab75eb8-7302-4be1-a1a1-6a895a01197c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4388dce0-768e-4b8d-a071-79ae9b6d53ca",
        "cursor": {
          "ref": "fb051ef8-2b5b-47d7-bd8d-3b8334867b2b",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d7832cb6-1081-47c6-ac02-c03016feb1a6"
        },
        "item": {
          "id": "4388dce0-768e-4b8d-a071-79ae9b6d53ca",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "245155f7-7d76-4c8c-97b9-3e2eec63d2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9d2b7d-d294-420f-9d94-6484dba4c0a4",
        "cursor": {
          "ref": "8dc8647e-3a23-48b6-990a-59767235633d",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b3a921c7-4952-4405-9a3d-51040b686e0d"
        },
        "item": {
          "id": "1a9d2b7d-d294-420f-9d94-6484dba4c0a4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7e209be8-16ec-48f5-bff3-e8752bd1186e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f368255-5b33-477f-927f-4ff1d9dc9981",
        "cursor": {
          "ref": "3f8c41b6-d3fd-4dee-bef5-36ba8c8bf804",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "858772a5-a838-45cf-831d-52c3f3c76fca"
        },
        "item": {
          "id": "9f368255-5b33-477f-927f-4ff1d9dc9981",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "de7c9f42-fe03-4835-b6b9-04cebb7c1cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da055f4-de2e-46e9-a4a4-51d3afcfbe2f",
        "cursor": {
          "ref": "4d647da3-c701-4e90-b7a3-b027c1d93d48",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "36d87bdb-271a-4395-83ae-fe04021a8687"
        },
        "item": {
          "id": "0da055f4-de2e-46e9-a4a4-51d3afcfbe2f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "02731e9d-3f43-4611-9d8f-3ebdb35f89e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c11f5b0-4c0c-4c54-b276-ba8400b901dc",
        "cursor": {
          "ref": "2ecab2f4-ecfc-4393-a8a7-d658ba5d5223",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e9fa7a62-e453-4094-b389-db5a741def49"
        },
        "item": {
          "id": "9c11f5b0-4c0c-4c54-b276-ba8400b901dc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4b4d2b54-7bb3-440d-a911-01e154408666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb324a4e-40aa-479b-998b-9046a3724c11",
        "cursor": {
          "ref": "2292268b-4d7f-4026-bbd2-6a8e54b33bec",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7f0cfb2e-47a3-43af-8428-17c682bf46be"
        },
        "item": {
          "id": "fb324a4e-40aa-479b-998b-9046a3724c11",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "706840a7-7d46-4075-a2a1-799ac47f4836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1db87f1-cb20-47d2-9458-78e795b4ea65",
        "cursor": {
          "ref": "0e0f01bf-244d-4547-bb31-b094815a9c94",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4aacb938-9cf6-4482-b2fc-80425ffb3dbb"
        },
        "item": {
          "id": "c1db87f1-cb20-47d2-9458-78e795b4ea65",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "94f7e202-6a70-44b4-94fb-8d28614d115a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38415cf0-fad0-42b8-b72e-2abecfe0a553",
        "cursor": {
          "ref": "911fd342-3eee-428a-883d-199a1f32417d",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "61d4f96b-8ef0-4191-885b-a7543b446e5d"
        },
        "item": {
          "id": "38415cf0-fad0-42b8-b72e-2abecfe0a553",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "231b991e-68d0-4f4f-87a9-cc918b4085ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb38b00-1acb-4abb-b5f5-903e24e89a72",
        "cursor": {
          "ref": "6831ff39-da17-486b-b69a-314c624dcd9c",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ba3cd8b7-0f23-4e3f-ae2f-8c17dcd1bc28"
        },
        "item": {
          "id": "8bb38b00-1acb-4abb-b5f5-903e24e89a72",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6bd76e99-8501-403c-8704-96b89bb9cabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78757f91-5853-43e2-b850-93cf35950e6d",
        "cursor": {
          "ref": "bf06f9e4-2d5b-44b1-a6b4-3d9f1c173614",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7a4658c3-ad60-4273-afa2-28deed597310"
        },
        "item": {
          "id": "78757f91-5853-43e2-b850-93cf35950e6d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "625f2139-e176-4a8b-a46c-423372836b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4876ebf0-3bf6-422f-a2d7-bcc640b82613",
        "cursor": {
          "ref": "e80c2219-a1ca-4ff9-8005-8bfe5c657b17",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3cb04eba-2f03-483b-acab-4f28fa49b753"
        },
        "item": {
          "id": "4876ebf0-3bf6-422f-a2d7-bcc640b82613",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c77cf91a-9ad4-4bf3-ad20-e6f1675177bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6070aecc-37a9-498b-88f6-8b4b22140a6a",
        "cursor": {
          "ref": "f0deeaad-292d-430a-8438-cabc043dd3b5",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "becd0004-83e7-4983-b80c-8b351bb57bec"
        },
        "item": {
          "id": "6070aecc-37a9-498b-88f6-8b4b22140a6a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "db07507e-de1b-4079-a7e1-eaf094fe5350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c06fea4-abfc-45bb-9ada-7ddc0d1b7667",
        "cursor": {
          "ref": "cdcba07b-acac-4f84-b06e-062261e08b33",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "19c928e8-443b-4441-bcdf-5598e92fb834"
        },
        "item": {
          "id": "8c06fea4-abfc-45bb-9ada-7ddc0d1b7667",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b3c6b01a-66be-4618-b12e-c8b3bc03464b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e25fff2-aa7a-483a-ae8b-fb011f3e9f54",
        "cursor": {
          "ref": "5effdf40-b1c8-418e-aeed-ed942ad0c238",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9361b0a5-0968-4a05-b2ca-1d8e6a944051"
        },
        "item": {
          "id": "0e25fff2-aa7a-483a-ae8b-fb011f3e9f54",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "469bf552-0895-4a9d-a8c8-7eaab4369542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72803d7-18c4-4f40-9129-f345cb038015",
        "cursor": {
          "ref": "a58b992d-cb3c-4407-a7ed-7197eb6b371f",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8f29551e-542d-4012-88a0-24c6f2add1a5"
        },
        "item": {
          "id": "f72803d7-18c4-4f40-9129-f345cb038015",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b166bbde-b684-4253-b587-56b0c2c921b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71cde325-ad4d-425e-9b3a-58857b7c6fa8",
        "cursor": {
          "ref": "497511fe-55c1-4855-872d-c5fdb6539f8e",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4c952734-2c2e-41c4-9842-cebc914b78e4"
        },
        "item": {
          "id": "71cde325-ad4d-425e-9b3a-58857b7c6fa8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "453ac1f9-3d87-4927-93e0-b198fa6cb3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0069d2f-2845-45be-9074-ced4371ddf3b",
        "cursor": {
          "ref": "cf130b8b-7389-4b14-9291-e82f06036cd7",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1bfcd504-05ce-4a6f-ab92-cf6358e21c0f"
        },
        "item": {
          "id": "b0069d2f-2845-45be-9074-ced4371ddf3b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4929040e-9485-49cf-8a2a-e42b849f706a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbfdc40-1194-4ee7-ba17-ff8841e7b676",
        "cursor": {
          "ref": "a1f4dc48-b098-4806-9186-ff5b6a3e768e",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "97d8fd54-09e5-4e4b-a32a-d00185d868de"
        },
        "item": {
          "id": "dbbfdc40-1194-4ee7-ba17-ff8841e7b676",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "10714aca-97c4-4ce8-a462-95be19350518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da86ebaa-6040-4071-846b-a9d85db99388",
        "cursor": {
          "ref": "30026fb4-d6a2-4b22-a03d-01be18b0a591",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c64d18bd-2889-4caf-98a5-b004a90be4fa"
        },
        "item": {
          "id": "da86ebaa-6040-4071-846b-a9d85db99388",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8afb955e-fd21-4de2-be34-9f2d0dc50107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e108ad0f-f690-492a-a894-ae63f3de204b",
        "cursor": {
          "ref": "ba4e5d8f-380c-43fc-bef8-52d496cedc8e",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8e593b5b-1f84-4c2e-9618-034192944491"
        },
        "item": {
          "id": "e108ad0f-f690-492a-a894-ae63f3de204b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "06bb7169-5edc-4702-9653-daa4b70b1725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2200c794-5642-4d03-8b6a-060f881a3aac",
        "cursor": {
          "ref": "f1392cea-1f40-43a2-8efe-5e2c9f5a3a4c",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "eb46afb7-239c-4023-bb2f-93cb5883a253"
        },
        "item": {
          "id": "2200c794-5642-4d03-8b6a-060f881a3aac",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6aa46845-df60-481d-9f39-dcff4ef6b515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1033445-f0e5-4a1f-9b7f-16ed158f1eef",
        "cursor": {
          "ref": "72146806-5082-4532-8f45-aac507957f0d",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "91fc1e21-c30f-44ea-b681-a230735b8a8a"
        },
        "item": {
          "id": "d1033445-f0e5-4a1f-9b7f-16ed158f1eef",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "064315ba-0af5-48e8-a393-90832f1d85cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114a9390-b132-4303-bc33-5050832db8fd",
        "cursor": {
          "ref": "ed88e21e-41da-492f-8a21-5ae8580d9c0d",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f6e2c78c-3184-44d9-ada6-1b32a655b03f"
        },
        "item": {
          "id": "114a9390-b132-4303-bc33-5050832db8fd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "84693743-9aae-4859-9358-98d717067fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef322c2-dd4c-4c42-be8e-3558e43105d4",
        "cursor": {
          "ref": "baf907cb-9c4f-4e64-b18e-4d21427f1a98",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2a158cc2-fd7d-4bb8-bc68-09daf530b098"
        },
        "item": {
          "id": "1ef322c2-dd4c-4c42-be8e-3558e43105d4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "dec059d8-3ad1-4ef7-9b15-22a4c139b2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2d2e4d-388f-4334-8962-c1ccb05d5b50",
        "cursor": {
          "ref": "5f2f4648-cc00-401d-8785-d13f427bc6c4",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a5bc48c0-d35e-4dda-96cd-87cb97a0763e"
        },
        "item": {
          "id": "9e2d2e4d-388f-4334-8962-c1ccb05d5b50",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "428b202b-2f08-49d9-adbe-5fa061dac901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f8bf93-ddd6-455e-aedb-82311c9c17cb",
        "cursor": {
          "ref": "818f721c-a36a-48d0-82d9-bf9973711916",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "866a0bb3-1be4-4235-a964-0bfa0153cc7d"
        },
        "item": {
          "id": "b6f8bf93-ddd6-455e-aedb-82311c9c17cb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d1278c41-ed7f-459e-b188-6cd1b67f46f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe76faa2-2721-486b-b5cb-93863a2c191a",
        "cursor": {
          "ref": "e479f069-db84-41ca-abea-40c0535c74ca",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3e6219aa-13c8-4d7b-8b8f-575c25916c3d"
        },
        "item": {
          "id": "fe76faa2-2721-486b-b5cb-93863a2c191a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ef0ce544-821d-4211-9f8f-991cb47bab71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ab691c-755b-4da6-bad0-ffd4a247d87c",
        "cursor": {
          "ref": "2d963336-0893-473f-a029-4d7494f8e29e",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "88db629b-e69c-4ae6-bf77-59ebfa45370f"
        },
        "item": {
          "id": "23ab691c-755b-4da6-bad0-ffd4a247d87c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a7a0d79b-5139-4a22-9e05-af0f58104111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2734689b-04ee-440a-b06e-6d8b88350bfe",
        "cursor": {
          "ref": "61aab15e-7103-4b3d-a898-af0af6146771",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "89b8b831-1efb-4bfc-b8ad-4915de813b7b"
        },
        "item": {
          "id": "2734689b-04ee-440a-b06e-6d8b88350bfe",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7917ec84-2089-4edb-9f47-14658df1b0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfbf447-59dd-4e4e-bbfc-9f42b89c301c",
        "cursor": {
          "ref": "dd675cc2-b1c9-40b3-a582-6861b8093faa",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "baaebe7d-ed4e-4715-b03c-cdc507e18224"
        },
        "item": {
          "id": "abfbf447-59dd-4e4e-bbfc-9f42b89c301c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "07ddbf27-c976-45c6-be99-fd6a86175cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e54b29-c677-475a-89d2-bd6ff1c6f757",
        "cursor": {
          "ref": "4b67087f-1c42-4042-9a21-74bb6e09cc09",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5a80db23-e702-4ec1-9bd5-0296e9aa85be"
        },
        "item": {
          "id": "52e54b29-c677-475a-89d2-bd6ff1c6f757",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1d80ef16-5161-4771-b213-69e61f029362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78238e97-b00d-4794-9195-61e5c4383bb2",
        "cursor": {
          "ref": "a7383c70-2483-4c4a-9377-c8c4daf81c2f",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "cbdab2c4-8348-4e14-aa24-6cfb7bacd39a"
        },
        "item": {
          "id": "78238e97-b00d-4794-9195-61e5c4383bb2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8dc2e4fd-2870-4ce5-8a32-bde69d3b1ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f375b52-5f68-494b-af74-979ff72df835",
        "cursor": {
          "ref": "86175958-117d-4976-b7de-4cb87e3ca6f4",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "59dd9bb9-f12f-48a0-aaa8-f5b1a862a039"
        },
        "item": {
          "id": "5f375b52-5f68-494b-af74-979ff72df835",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ee1cacc9-0a73-4f01-98de-593f9f997391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc2756e-2a72-4784-ad04-6f45fd927a55",
        "cursor": {
          "ref": "5a25224f-2954-43f8-9aae-40ba740a8d53",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "19687640-d60d-4293-8b7a-af7da72e4930"
        },
        "item": {
          "id": "1cc2756e-2a72-4784-ad04-6f45fd927a55",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0ace426b-0021-495b-aeca-86d0789dface",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0ffa58-2c23-450e-a8cd-c66718326498",
        "cursor": {
          "ref": "eca39316-5521-4b3e-9e93-ba90ae2ca11f",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4cf55977-0cb0-4bed-845c-937949792bad"
        },
        "item": {
          "id": "ca0ffa58-2c23-450e-a8cd-c66718326498",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "72e3ba8f-1e84-4342-ad83-ec8e349c71e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3414b291-7296-4b4b-a897-f3ad380b9be0",
        "cursor": {
          "ref": "85536d76-a6d6-4bd7-8096-92f9ca399e08",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f64da524-e3aa-4f9c-9471-f844814bd734"
        },
        "item": {
          "id": "3414b291-7296-4b4b-a897-f3ad380b9be0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "948606d6-3ea6-413d-b139-df2555e7df5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a98343-e1d3-4299-b826-3cdd5c2252c8",
        "cursor": {
          "ref": "6f13374c-d233-4deb-913f-f7ae4acb4a28",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "52bc9bf0-8735-441f-98c0-584f39c05242"
        },
        "item": {
          "id": "b7a98343-e1d3-4299-b826-3cdd5c2252c8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f8aca369-1ef8-4132-8c13-1e84772fd9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627b3fb2-7887-49cc-883a-4a3d9ef214f9",
        "cursor": {
          "ref": "7a834061-4bcf-4816-ae26-c967a3876e3d",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f8099234-bf39-45b0-8126-2cc38c4abcc5"
        },
        "item": {
          "id": "627b3fb2-7887-49cc-883a-4a3d9ef214f9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b7ff8c96-560b-4441-bb01-745c37a4cdf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c2f239-92ef-41be-b9bb-3146995248fd",
        "cursor": {
          "ref": "a8df48ad-0484-47e9-80e6-97f325c0a5f6",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bdbb21a3-b76b-4c63-8546-b5729e7080dc"
        },
        "item": {
          "id": "b8c2f239-92ef-41be-b9bb-3146995248fd",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "583daec2-4816-4e20-a46a-3b1f5a42d17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0683d601-6229-442e-854e-6893fb3024c5",
        "cursor": {
          "ref": "6e3c8f6f-6c17-42c8-80f1-9cc43ddc643b",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7dc77bf1-f2fa-458f-869f-a4bd9fb9769d"
        },
        "item": {
          "id": "0683d601-6229-442e-854e-6893fb3024c5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3280c3bc-a45f-4459-adba-7b1b50257ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb126a5-80a2-4f2d-b131-6187ecf881cf",
        "cursor": {
          "ref": "613b9db5-fb61-4917-a5ae-a9d71aaca0f2",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9f807aec-8aa4-4efd-adbb-ad735b34c82a"
        },
        "item": {
          "id": "4fb126a5-80a2-4f2d-b131-6187ecf881cf",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3c880737-cff6-4687-ba8b-695e32e8b643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8224e9-055d-46a0-bf86-42d7b35b9b39",
        "cursor": {
          "ref": "2bbcabd7-3cbf-42e3-b3e1-307365a18d0f",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a449a601-0a85-4845-89c0-6d8e82d6675c"
        },
        "item": {
          "id": "6b8224e9-055d-46a0-bf86-42d7b35b9b39",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "91df2e36-a09f-44b1-a948-70421c9f6bfc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7baa89-7079-4d86-8d28-b42f5b75be1c",
        "cursor": {
          "ref": "be965555-2760-497d-be63-2f88271ab29b",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d9ade275-c4e6-400e-addf-a897a9a899e9"
        },
        "item": {
          "id": "5f7baa89-7079-4d86-8d28-b42f5b75be1c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "891d11ad-abbb-48cc-a355-cae722fc1864",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d9a6ca-8b1d-434d-a06b-089ca07042f5",
        "cursor": {
          "ref": "0c9de684-1172-476e-8c68-260e817207bd",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "be815131-8e9d-4068-8324-7341f4781cc8"
        },
        "item": {
          "id": "32d9a6ca-8b1d-434d-a06b-089ca07042f5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "44118c50-3a2a-47e7-b916-e60889f44b8d",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28dab89-c5a1-4575-b1db-2aca5aa140f7",
        "cursor": {
          "ref": "8a452138-89d0-4186-8a5f-537e916e76e7",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3be4a0d7-af6f-4c73-b903-d44c37eb4d13"
        },
        "item": {
          "id": "c28dab89-c5a1-4575-b1db-2aca5aa140f7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ed0c9af2-56ba-4057-a09c-baba450b77c4",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b54050d-d508-40db-9697-839284d4f031",
        "cursor": {
          "ref": "a7b39db6-ec35-4586-866a-e2ddc3429a4d",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ed4fd0c2-1b8a-485f-95cb-675eee401791"
        },
        "item": {
          "id": "1b54050d-d508-40db-9697-839284d4f031",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "97049271-a083-4bbc-a75b-93bbef7453a3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b54050d-d508-40db-9697-839284d4f031",
        "cursor": {
          "ref": "a7b39db6-ec35-4586-866a-e2ddc3429a4d",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ed4fd0c2-1b8a-485f-95cb-675eee401791"
        },
        "item": {
          "id": "1b54050d-d508-40db-9697-839284d4f031",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "97049271-a083-4bbc-a75b-93bbef7453a3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd18623-3815-479d-ad79-86f25c1a4a7d",
        "cursor": {
          "ref": "3e040745-2800-44f3-beb7-b63f0175648c",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f212386f-e5f9-4ccc-88b5-c9e410faef1b"
        },
        "item": {
          "id": "2cd18623-3815-479d-ad79-86f25c1a4a7d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c748e1c1-7d26-4b7e-b2bc-e1f9d07614df",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8a17c7-cfe9-4edc-bd5d-588120fc327f",
        "cursor": {
          "ref": "38905d0a-30d3-4098-b012-f47533b9967e",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3c77bffe-e830-4d1e-85ea-322d9a15242a"
        },
        "item": {
          "id": "dd8a17c7-cfe9-4edc-bd5d-588120fc327f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "79635d2b-08dc-493b-a97e-d15c1e97c561",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}