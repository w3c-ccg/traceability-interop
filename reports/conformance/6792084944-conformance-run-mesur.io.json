{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "527a2836-afe5-4909-ad3c-df0783f98753",
        "name": "Clear Cache",
        "item": [
          {
            "id": "203f6010-acd0-41da-aa69-aa773cbb7458",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7c6313ba-f055-4036-aa6f-c2eb4e7360f5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fc799f02-565c-469e-aa27-7cfde110ed90"
                }
              }
            ]
          },
          {
            "id": "fb045700-8788-4192-ae01-66cdc4cfc770",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "34c4b6cc-1ae2-4386-8ec6-78787b88cbb6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "71a8cb3e-44af-406c-b37d-2d7c03f650ee"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f3f56684-7686-4df6-b66b-7a1ab23809a3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ab98dc68-263f-4ab7-84a5-dc21da3fa8a1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e34a962e-cd88-4b18-afd5-4ffbf818bd28",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5760bf11-cbbb-4657-9227-5dde97350729",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3fb7ea5-48ba-4d18-a673-0fc3e52b1769"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6701626d-4218-4eb2-87b3-ed767e904b8a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b43debe6-32b9-49ee-8b36-026f908e258c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a85fafaf-d552-42d0-9188-05d2be25acc7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff2c1510-802e-4230-9b70-5364d58151fa"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4dcb638a-2962-4c00-874e-59b828266807",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f2f45dbf-6088-4176-89a7-4cd08fc7cd57"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3fc9076-cb58-4d34-a26e-b1b93f80cae1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5a27d00-244b-4e3b-8d41-7add679d9e8d"
            }
          }
        ]
      },
      {
        "id": "895d2e3a-75ff-48a8-a928-fadaf6c3b763",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4b63a592-256e-43b0-ace3-e026bc911594",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eceaa4ba-e67f-4515-a414-c26d6119bd6d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "10df2512-9468-42cf-a25e-e8875a580b20",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e8cefc-0955-497e-b4d9-65f81fd469fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17606875-a349-4d96-8d3f-1c016c04e2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42be744b-a949-4e68-b7eb-ff4d1eef0509",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319560a2-12d6-4099-b7a9-f940ad527d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "308a7980-7ba8-41db-90da-aff3f3ce8ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0b340a-9dc9-4dad-a7c3-1ba37d408841",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5184ef0d-bbc6-4dc6-b925-cb0b27d68e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab38aa4b-bc1e-4041-a70c-cf51041c7390"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4bbec138-0c96-4a31-8ede-4419f3382fe3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d1dc52c-6dda-4636-a8a0-94150fa1818d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea956052-298c-49e4-bf7b-e80d58d9efb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d51b78d-17ff-445c-b151-7e3667171073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff86d93-7009-4fd1-a527-07b5919a09af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a9d106-07bb-4c9e-bb59-2c5c07827600"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "51b346ec-7ac8-4007-99df-2133e1914ff8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e6ebfc6c-ab6e-4223-ad40-660ec61f7b5b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cb7783e-cc7a-4dc4-94a2-1053552b3dc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "eee3a550-bf35-4106-ae55-f02e4dcc286a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a0bb95e-0bdc-40c5-a4a3-e9038cfeab64",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4a8c39a2-01e8-4550-8808-1c0a69a37909"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04477436-28cd-403a-8d9f-5ed79e17c447",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4da9252-4227-4557-987c-33499929486a"
            }
          }
        ]
      },
      {
        "id": "d8975a41-98e0-4f76-9547-1062e51cc80d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5a6850b8-712b-4615-8d10-b2f60b8d0b82",
            "name": "Negative Testing",
            "item": [
              {
                "id": "117fc255-05d2-4c59-b660-716ade61fdb2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "08a5131f-24c8-4b74-8db8-0da22a28b116",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80eb09c-05ac-4a9c-a023-aac29b62aebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4a7ed2-de82-4985-9628-341cf440376d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981e10d8-5d84-4f97-ac23-6dbcda799d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cc4defa-d383-4f31-8eff-3ed1d2697a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a58865b-bd86-4a37-be7b-c4201456e263",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0765024-a357-4e5c-8d29-4feff3d230b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab3d6f8-a66c-46a7-9bbe-a5a649557159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5ea390-1210-488a-87f7-bacf371de82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7388ef6-63b7-445e-8749-498f990067ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76fb717-323a-4607-b874-f183bcb5eedf",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf436a0-00c3-4ec7-b806-f5a1c4057c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10f820c-095e-42ad-9c08-46a96db5cbc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15ac0b6-627a-47af-a7c0-5154cf5ee4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f4b8469-3bf5-4a0d-aa9c-db16dfb017d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cd661c-7003-4b80-8319-c6ae25a1039a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c57887-c354-4432-8bb3-00710cfc755a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05e2968-4833-4a62-b72c-437c7c45f71b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ffcadd-208b-4226-8b72-e6718a46f247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "408ca9bb-17f9-410e-87f8-8e4d8ceb6212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2143b92-b9cd-4fe3-95fd-c36af824c5b1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30329e93-2395-4173-bc6a-88bd2062215f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "688ac953-d5af-427c-a8fa-472b954c8e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fa0908-a243-4422-bc35-f53ea14ce196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09eccf2a-eae5-438c-b77f-c6a1a2a7a921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c38337-d457-4211-a86c-593c091f3161",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0af5c23-c7bb-4eed-9674-dbcca96a93df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe855e38-4254-46fb-8889-902561ffc1c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a00ba54-b629-446d-88dd-e0c13ecf6663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfa8393a-15f6-4201-b121-a7bc3907dbc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9122d592-7a1e-478f-8a72-ea3889d7f715",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac33257-7353-4ae5-bc63-4abf543db78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abab1e3d-22f5-4b14-aadf-9fad0a010330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cfbbee1-bda0-49f0-8e3a-3e389230a3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7734923a-6cec-43c5-816c-6f0ee9a98bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a24c4a7-f295-49ae-a987-0ad5ca799d3d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be050ff-8bf4-42c1-a589-d9dbb7116230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3292baca-7c82-49c3-b8d1-070e4a87fc49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197082c1-b618-4cb6-9647-0a26c36606e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d9761d2-4f6f-4668-b007-f6b8a21e5409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aee3a79-b7b0-4c79-b055-6d7f428fa0e4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387fa03c-46fe-48a6-a57d-aeaaeabd9399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f20508-cae2-4ec7-9e07-2b4b451bda57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af89d9dd-22f5-47f8-a6f0-940c145fbfc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3961655-0979-4a08-a13c-9e8d10533d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a9c65b-5041-42d6-812a-6a37c1676a7c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f103dd2-aa91-4eae-8131-e60591e9e20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e050211d-043f-48c6-8ca5-c45431634b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35dc09d3-12b7-4492-bfa8-a9f59ec627d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb820ce7-ff19-410b-9570-a8c986611ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5361df-2653-458c-bc40-aa8823a3a394",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc294c43-23c2-45d8-9566-05dde0fc2789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a717d4-4710-4bca-8745-89235919aae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328cd344-6b81-4e59-97fb-de6dabcb3c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad8a95e1-c26c-4f11-8fa2-0e9e0cdce491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c416c83f-0152-4078-a9e0-fa4a0cb825bd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c01a59-8af6-4ed5-bf2f-2404f84a6f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9de20d-87d8-4f6a-a72e-8084a879cf2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0cde59-ab53-4d39-b35b-535d4fab8b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "417007e2-afd5-4e81-99bd-ed94b8b21fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7a02d4-fe6c-49be-93fa-c00ec075d815",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6109e5-0aa1-47fd-aa42-d3f9d3542c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07229bd-5474-4104-83cd-64e5a8c83a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01239894-4d59-44fd-93fa-61d4ec27ff95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "523aa312-427f-48de-ae13-9bf603b2d859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3860d267-7e9b-4ce1-9f86-121e6bd11374",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7369e737-3d13-462e-b0bc-b23fc8a29539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5902743f-32b2-4142-be9e-df36d7ca1e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235e4b9f-b2db-4ee5-ac2d-c91fd00b8336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "936b60fb-678c-44cb-a249-d8604c8c3285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aab4a6f-a60e-4ecd-9c8b-7306b381da98",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cfe55a8-7916-499e-b552-d9a382564640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37a87d7-a75d-4013-8473-7eb55f18cbad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acfa270-accb-4a0c-9134-27b16ca9d811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0088d773-7aec-4c55-8204-f9db11fdd9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ef97c6-b8bf-4852-a9ac-e252f41bd83a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656f786a-814d-4897-a4af-0559abfe63d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "375550b4-6625-44e7-9eb4-36d307e86d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286415df-9cfa-4186-8cb3-c5da59e0a879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1e1ec12-8c2a-467f-86d6-9e43ba1efab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c86d74-e6bd-4e5f-8369-d1635b83d1a2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccefa60-da97-4c91-9566-d4160ee26c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b87e66-40b9-45fe-9263-d90179b093d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f92252-5866-4798-b087-f51b16f633f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56200f10-4ba8-47c8-a4bf-f310791a8541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd0840a-94af-4c84-8b10-7de59657b144",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf39af0b-14a2-4734-a821-5f96f4966aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e20b8e-63a7-4d22-acbd-64085344cc20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90a5406-6b47-4cc2-89a9-75b12ffe4d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "76ff6c6d-1fdd-447c-b03b-157955863f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8bf2e2-4435-4da8-8bcf-e312b9ddbb0e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4172b68b-33fc-4c55-928f-9817141387ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d18442d-9cf0-45e1-966f-2a94326c90b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ef96bc-7f8c-42d1-81fb-6087e6027132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47a2a74d-f70a-4cda-a35a-4d81e46afed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6263e8a7-1582-4253-8cb8-86c0c3d99ec4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05229377-6821-486c-9298-c7a81fe50b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a01ce3d-68b3-448c-9887-95d31b0ef46e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b704492-d442-4f19-bf90-d10f9c4cfd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef25e5cc-5431-4e34-a730-592f6c3b4b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7008ee07-24e2-4963-b71f-e78e83b79f1f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5928749-7292-4011-bd8e-397904de98b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225d3068-248d-4d6e-83c5-73bc3b52b615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7883b75-2bf7-493c-b73d-67394d4ae316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd80d4d-35f1-472c-abd4-7a019e1bf75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a962cdd-d964-4a56-9aad-4d7327cd3bef",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b78604-3902-4ffb-99f4-578e948b1a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f41ddf-b0c8-42b2-8f86-0c7853a5f02b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124c10b7-d869-4eab-8084-066aa922fd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "914b8045-df10-49eb-9033-6813b14a64f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455a590f-b530-46f4-8342-ff28edaf6410",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c49975-a1c5-4d32-a71a-40ece08de25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00ad623-10d9-4db6-8c28-6fd14c07c35b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98afead1-42b8-4d94-ac35-304289fdca12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "34b47ad6-d3e3-41f9-a539-7d526b3df590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88782491-d4fc-4ecd-9bdc-67d135761cd8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f7c9ac-4886-4a4a-a134-2bbfd14963e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992c4ca4-eb29-47c3-b1c0-cfd711fd4ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d2c338-ead8-4ad2-8be0-0d18b0fb91fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f76bff2-f698-4ed0-92ce-d2f9816f7f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24869c25-74ff-4e30-8815-e4009d65f7cc",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5519b2a-0c30-4b20-82ed-e01f2be18e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80001808-6d8b-4c49-b4f7-85d5e7721343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc361338-5f1b-4e06-8fb5-7103b92e2a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff82419-eb6a-4639-8328-c2c54f1c6be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1180c0-d436-42d5-9ddd-68c22991500d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12a6c32-5f2f-4230-bed1-9587faf25c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e3b636-4252-41d0-bae4-7e315d2f71ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09cdebdd-11e1-44cd-9b78-7a4ee1dbdec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2700246-c261-4d07-a0c8-4be7181eb3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9fe269-5b8a-4c5c-bf72-bce47b948b24",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4dbede6-8d3c-462e-920d-ff962abd2bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7a39b0-1495-4da5-8fc0-6047279549cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5729d5-f6ab-4c2a-888e-544e2250c027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2112a5bb-5ea3-4816-b557-e866d9019e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a461ca9-ce63-44d1-9aa1-00cfd511afef",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d94735-0a70-41df-bb7c-bae0006ec567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2ee1e6-2a8c-4ae6-9430-ef74a98e9ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8131b9-31a9-4398-b9de-2ec2afeac11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61b77075-5a85-457b-9e54-41c5ce64cb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8c5141-8b78-4445-838b-04d345af1dbb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8fc3f5-1991-4207-bdf1-1cf982564902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd4e580-1ee4-40b3-8633-7700c862be50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9aebba-0b97-42bd-891d-8a1dd9f57a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0886b999-7a7b-4d19-98a6-584cfae2e57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7692174e-7ccd-4c56-87d0-1ea9f046a65c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e14639-95a5-4b67-ab78-598c4a54cd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65084ed8-9cb0-446f-8839-b356f27dde3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20cf63c2-a8ff-4040-a0df-71ef61947998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "12792be0-9aea-4704-8208-fa9f6f1a863f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04abdf7e-b57d-44f4-80ec-fb4633710b05",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fe4435-53da-41e5-9a3c-dabbd2fbd66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62411c2f-b308-4ac3-b668-1e4549a3011d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9160f8d-41f0-40d3-82e4-e7b53a3cacc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f3e66d2-603b-40ee-8fa5-4d183c51ff0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa57955-947b-46dc-b153-d49e74a3bb4d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713e5411-b7eb-4d27-a48a-43e23046a169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d09515df-446c-44e0-a05f-cad3bab77ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d74e5e-8983-4188-8a74-dcee1abc0f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6238a80f-7e84-4aff-9f30-51ae783410a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed43a6bb-ed2c-46c6-b49d-07e97738b5fe",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7380b63-8e69-4927-b069-00987968071c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf704c8-09e2-444b-bf18-763ea0778994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f247f7-34ab-44c3-8581-c3f97550032b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3bf66d3-c98c-4983-a70f-63ede315d195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816ab312-7e1a-4bc8-851d-f4a263c568f5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8de4eef-a339-4f86-b493-ddd1ba2d345b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf10a78b-8a11-41b4-97eb-925ef139290a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bef0fb-a235-421c-bd41-e8a7fafa5c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23c4109f-e7ad-4800-b386-db71de9772ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8aff447-9482-46c5-a356-b4ad1a39540e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e9c770-4cb2-48bc-a573-605268f819d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f871cf9-9abb-4250-83e0-1b9e064906f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9665b5-a565-40fa-9541-071c8a918375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4cbdc6d6-dc69-45a3-8ae6-d7693870b4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235d7ec4-cef3-45ce-9dac-81afc67d6b76",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88a8a81-d254-4c95-862d-b41c9df02976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "397b773c-a2ef-45ac-a024-44133a8d10b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955fb062-6c54-43af-931b-676e4b981393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30826c0e-0b78-4e7a-9231-0d68e02ce88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cdb0b0d-4049-4311-a9ee-a5b5150136f5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d742a15-115c-4468-8705-d45781035b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060d93e1-431a-49c0-94e2-570d093282e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d8fb57-ae06-475f-b826-576c69f7ecc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1740967a-c47f-4b97-b9e7-a9bc7ca799be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6cc231d-5160-4ad0-b375-9f3640ba738d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb35c02-19a4-4374-8422-8ea495c62d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb88de05-2dd4-452f-9a72-35c6f743a381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52065e42-f1aa-4f8e-9e94-b562b74f6672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0443693-f53b-4698-9cc8-f7fee5f0a6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20127d7f-58f0-4d8d-b315-f62e2a14da71",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7276bc-34dc-4c9a-b696-a89e48173087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6257ceab-9ebb-4455-8bb3-7b0aa77b5ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15676fc5-c75f-4051-a412-6e0dea106b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "34cfe8da-cbed-4d98-8fee-050d973efadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fab22b-1913-4301-aed8-6a0935076303",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96057e5c-408f-48ce-b8d7-e46ffb89dcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5dedc30-dddf-4d88-aec8-9b1c0800eff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cfa671-128c-47f6-a3ba-6d1b15884358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e251ede1-87eb-43d6-9084-9d69341bbdba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be895cec-100a-4bba-9922-9e56035881ec",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21954a9-7589-4acd-820c-4aa50ad5dd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a8b231d-77a0-4b21-9387-e08354853459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeffa66f-f2f5-4607-b027-c3ed54c10dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "308185ac-0bc8-4768-91d9-cac3c5286c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e600115-3945-49ac-aa9c-7200f96bc193",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7fe3f35-92a6-46ca-b36a-dbd074bc92cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1edfce-c7c6-46ae-ad23-603052ceeeb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3873455-8224-4f5b-9bb6-7a43b596e0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "50e4deb6-f1eb-4b02-bdc5-8643c9c155f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cda7e3-99cd-42ff-9733-a1d1200ad5a5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dacd593b-f7e7-42dd-8aa0-de99c6dee0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62173fd9-dddc-47e6-85cc-c5f053d1a485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071bbd7c-d778-464d-bb27-15ab6d4d012d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a2d7db-5c84-4ed7-ba3f-1937b415545d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042a95b5-f325-4f0c-af9f-2dc2f61c757b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50af5354-6ee6-4503-83c4-88b2a1359f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65de5856-f70e-4dbb-9ded-4adcd806ddbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c844fe1-cf42-4a4e-9068-bbeb6c3944a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5933a9d2-cac2-4280-b6c2-4a0a75b4c752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9789d41d-e94d-4603-ab07-fb0855601149",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b541de8-bc29-4095-b432-17b8a8dc2d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8162aa8-8d8c-4b33-8434-0b934176d03c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d36de2e-1667-4103-9df3-2a339a22f049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "05707318-82be-4ced-bf29-b8d0a014d3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2976224-98b1-44c4-98e6-b65d04fc3aeb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352ed175-b490-4a8e-9cf1-a5517cfc8a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d392cb-76a9-40bf-aeb6-ba2683e738e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf410dd-7a8e-49a1-8da4-ea305fe16003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "075d4d5c-553a-4043-8171-f6f595662f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a957ecf-1fe2-419a-b583-65a919e876d7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ff719e-38d5-4045-85e6-e23975ac15fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0868048a-62bc-43d9-a144-d3b41b8c722a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc89e50-a701-4782-8e35-5b22ad301b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a568942-99f6-4647-8721-8865faaa371b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f5b932-3e15-418b-8d57-63d129ca9abc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "928b80b9-316e-4f2b-a68a-422441e42b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e63dc91-7cd8-46b8-8812-5b24d3524457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e9b754-7aa1-49c0-95f4-234aefa7952e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70b1ad95-09e7-4265-9140-990c40bd71c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4208e6-b489-4b13-8092-3ee5a7a53b9f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6f9923-ca42-4f55-9256-227f33b4ce9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce4b534-dd24-48b0-88c0-4b8051c2ba74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c963694-9864-4d16-a630-7cc1437d1c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c17f95-3d3e-4e61-bf22-1a1aa07edb38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191b7a44-c6e5-446c-b27d-d44bd7ca649d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fc0107-72c9-4bce-9b60-051d061a96c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee655f0-e55a-4ef3-bb26-21e7166da9c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeac94b5-87cd-4581-8983-1509ab7be285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9028237-bc25-4555-9141-a9d55d25397d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3370ae25-f6e7-43cc-bda5-9a2960d88843",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a028c520-f481-4c6e-a941-0b10e36a4cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a37e56f2-ffcf-4dc0-a415-e8e9064d0957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004952c2-55f4-4459-b39f-fb6b0ac58993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb87fe3-278d-4e4c-9188-b58dd61e8dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ffb1c9-6751-47c0-83a1-89d5bc4210a9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398968b4-3035-4cdf-b15e-a8fbda2e3c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744c56ea-6adf-46fd-a6c1-77cc787f9778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aebaf84-523b-4246-b060-54fd7f847c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8ff83a-bd6b-467e-9466-5f5ae1f5672b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a0ef9c-3c63-492f-a204-f4579ddbd025",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33aced62-bfcb-472b-b5ea-3aad519746ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e692283-c015-4f39-bdd6-0a7279642847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d2139e-e07e-4fdd-8371-1df1ce6ff668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b40afb43-9191-4ff5-996a-2d134af58d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f6fb6d-2ac1-4904-a26c-b47da3809e38",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bc44f7-dadc-4e6e-a20d-3a7fcaeb25de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f60802e-28ac-4672-ac16-a12a60e3db4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd72cce-f02e-421b-82a9-79d111a2651d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a35d6e14-ef9e-48ff-bec3-d0eee61aee20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ead2db-5d3c-4715-a3b1-b576c9113295",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8950f4f-3bd2-43a7-a5c4-95e2a145ac82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62dc6d0f-6d43-4b02-bb84-0a20c9ff5e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed38a6e-05e0-431f-aed5-5b782d519a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a22f129-1662-4520-872b-bd870ff3e02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdd01cf-f062-4648-acce-5869623b6f51",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea2ebc7-5441-4737-b158-3e445012da7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6f4126-2c4f-459a-b5b4-f5e0e20c464a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffe7de4-1bdf-4de9-8ad0-2d286b2dc744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5b720983-b869-493c-8eea-0421e19a62c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fbdf74-7a16-4cd2-b33c-3cea9aa96864",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432ca97a-8078-4573-8c2d-7cc56d9d383d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4972a739-aa53-4e7b-a35d-d6d11660cc8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c29cbbd-6cb6-4382-bd06-60688021583f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "db52d56a-6ade-4645-b217-ebbbfbc3d938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f42bc7-4bac-46a5-a482-4345cc901834",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6e5dc6-9e11-4428-96d2-d66c8921e232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "187d68c8-f4e6-4a93-8c5d-744073f8a9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f26aee-5eb9-4b15-aabe-61ce835fb1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "13e1702a-405d-4298-a3ba-b1e5dbc263be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d133ddbf-e0ea-4f52-9013-6c73a68bc2fa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c657fba-c9ad-44ab-8564-4f376ece921d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f664e9-b050-4435-ab35-58ba0ea35c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94344a4c-7c62-4396-81d1-31e91cc0604b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b84c4fa0-5496-49a6-a679-6f3277a8c465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bae869-7fb9-46c9-b264-02c59a39481d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c60da7-60ca-4441-895b-21e987f364b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4805ae1-30bd-4944-8a5e-aece6e205bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f193f11-5c18-4e36-8c7f-a02400c2ec4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "95e17e30-265b-4f82-ac96-1bd988a47563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb585bc-cc6c-49d3-9400-c2434a6510bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a27e320-7933-4859-aadc-f862c7e3d508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc960ff-c9c6-4ddc-b755-01f8869a992c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4cfb81-4592-46cb-a1a3-6aa645e39170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5916070c-eb40-4d7e-a4e8-dc369dea3264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99833399-c564-4b40-a153-83df434cc2fd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fea1fdc-47a8-464d-997f-85ab5b185e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d82a624-ccd8-414f-90ee-2feaa3e00d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d059a6-a6b4-42ac-9e01-715111bd959d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebea2d18-a8f3-482f-833e-4d0d1ab2167b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2dfed84-9366-498c-a2a1-58586dd215e9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73512f00-089c-4db8-8913-9c2d3faee649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20624df6-055f-4705-8c12-3fcb6ac4b87c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97054fad-ba8a-4b3c-a7e0-686802c1777f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea146079-44fb-40d5-9c83-2226c9f868de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633d0877-5d21-4491-95cb-4e69b4161adc",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d971f47-e039-4ff7-9bab-bd788a2c76ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6952f067-d6c3-41e3-82f4-eac1bb5178a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63e74a7-6154-4a62-85ee-3b24dc60896c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "110d658d-1fa0-4af9-976f-466852b88be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b69aa7-ab69-414c-8301-31f5ed59b9ad",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d540f8-2fe8-43fe-b005-12fdc367fc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183880e5-c4f2-495d-b478-26ef4af10556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b86084-b4a2-4e80-bbcf-3e8369fa3dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "956e52b3-417c-4c2f-a336-1a397f5bcef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6876acf-ba09-45a1-8d52-6ad13cdb67cb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc3c283-9060-42a9-b911-21e7790e5ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f3db84-ffad-4d98-8748-31fd26b95181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c709ec7-8aa4-4e50-91c3-851edad327ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d5bdc8-3376-430e-860e-33c4d2a443e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6892a72-9cbf-4d2e-9900-e844e03798be",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872814cc-be34-4d16-a329-6f56728dec83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a91d64-bcce-4ec2-9963-0e57847c6e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ceffed2-e3a2-499b-be69-f11058f27627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17af345c-3e88-4690-a451-b40b3bd502a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef76b4b-ee36-40c9-b175-835724f58b18",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962765c0-b48d-4666-a33c-5e5c1ee84f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c9910fd-311b-45c6-8eba-3c720434d89c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef56e07-12cc-4457-88e8-0d7611589785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a84ea02d-95e4-4b5a-91f5-7daf4fe0d301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e956566-14b0-406a-8eda-d1c34ab9a2ef",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924371c0-ad14-400f-b05e-6aaafbfec287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a6c36f-30c9-46a4-9d98-f8516cc0c93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ccb20f-aaf9-445a-839c-d7114c100e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c436bdf-370b-44ce-8cd5-267d31a1cd70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b812fc9-f66f-491c-bffc-5f119843e8da",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638af42e-e9c4-4c86-9ac0-e03467846c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba16635-cead-4bcf-8448-d122946c1c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a063ddc7-9173-4ff5-9fc0-092c10b6d4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6853fc9-f723-4f0e-990c-ae638a608c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317d6e1a-e4f7-458c-94f6-c2aac8f39b98",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8031f5-d048-4744-93f0-3362647a850b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a8f37f-f18f-41cd-ad39-12cd778e21b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79668ffb-5228-4ed6-98c6-20e246168a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3adf61-f19b-4793-8bfb-9f320883f894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c53e1b7-244b-4ea7-964a-a49adfdee0d7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33fa2c4f-6e3f-485f-b3fd-d574c95ab7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff5c438-aeed-4f58-ac00-8ea3963d750f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e38ff7-991b-443c-ac7b-7302cde3eaa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a94ba31-198d-4c54-be99-b32abb1fbaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7f7157-b89f-44e5-992d-f11985801c87",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8003abb-7bf3-4d68-bd03-f78e107d1602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5be2ac-1733-4f2f-b641-34753ef6cef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1100b32f-d4f6-4fdb-95eb-74e3a4f05728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "306d950e-93f9-4b53-ac09-bde221e92c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123d4215-472a-49b2-b193-b72316ba6612",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586f9687-e287-4ac7-a411-d4e849577a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca3f25d-00c6-485e-8263-c01ecff32d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788cfc85-258f-4884-a61d-6dcc877b0a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e4fc173-ae2a-431e-bbdc-2cdb9a86ca19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ebb468c-6dd5-4053-af1a-067df4ef0f22",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd7e102-6bbf-445f-b6f6-b742abcfaa13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b341f58-db21-49d8-bcd2-dd6a86a0b60a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281794cc-c27f-4a4f-9309-a91df8ed4859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e133e533-850b-403d-a1da-d25fac3063ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a36603d-9e6f-455e-b670-26e4ea99b33b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc2e8c2-df21-4990-b761-f3e2b528492d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9967cbec-071e-4855-8a99-7b50db5b9156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811fe65c-129e-4288-9ada-4ce069289d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c76eb112-a473-4467-88c1-c728cbede795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe4b9a3-e2c6-49af-bcd8-07f3795bbf70",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b926696-27ef-410d-a44c-e5a6490cf5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf01bf0a-b11a-49a3-ad62-379f384afdd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44cf9d72-beb2-429f-a433-f008d64f388a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94214b3d-7c78-4f9f-9971-d53af2889640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b91ba23-54e0-45d5-a238-f7f34742709d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e745400a-8745-452f-8f69-a47910f867d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d87adda-3fdc-4dbf-8eef-0b377730d3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69cdc453-e49d-404a-bd9a-9113ba02319d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15aa6c77-415f-4046-8b73-6b8f253315b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31825a57-63e1-4a5d-ab2a-367dd51a7130",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78d3b20-5bce-4525-8ac2-c2231937941e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8b7a3e-fadc-4e2f-af1b-ac4444d4b6fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836c2fb5-a119-4f76-a19b-0bf6ed79f3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66b55970-ee4f-4e2f-81c5-612461c9de24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1868fce5-ce42-4527-a0c5-6ca5ce86f32f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1720e54-8aad-4951-a3c5-f437da6802f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf429c3a-a486-48c4-b6ef-2dc86fb89833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9e9ec4-53d1-4a7a-8f53-26d7becbdcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "06b81fce-3be8-41de-913a-9599fb2d7b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c548a4-952a-4755-a321-44db3d7fcf84",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b75f174-fe21-4157-bbad-35aea76a8311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea2dbe2-24f3-4689-8ac0-97e2d4c439a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb025d91-c9e0-40ce-bd60-efc85ab72e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "946f1818-b715-4a00-bff8-4ba48f7c0cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6960eef-e24e-4b11-b43c-94cc36407d2a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcad304-219f-40d6-90e9-73e5912eb777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2304fc-1449-4df7-9b2c-fc1f3d000dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203e9fdd-25a0-40c2-ad17-09e42fc22c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8a23f4-6d44-4a17-bc1c-866d50a8ec50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020e4b15-dede-4e65-9866-4138b3d91fd5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d28aa3-945c-45ae-be11-57f01033e2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6583d0c6-cd3e-4bc0-a322-be7f21fb79ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7b5901-795c-46f1-8f69-55e340a51e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08b3863d-3a5a-4ab2-adb1-dade51980527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a7799f-0804-42be-a372-8d4d26f59750",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a784d7c7-a537-4054-ae8e-77fc10291348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "585e519f-1b74-4c9f-89e8-f6bcf48eb940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89a98e2-c1a7-42d7-b091-9a67b6ef1814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d006c251-9930-4edd-a2e0-90630cd88a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0cf4e2-e952-4179-85bc-d0cd50ac67ed",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ed0b9e-e9ad-4d7d-8231-63366356949c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b904de43-1603-4f6a-9dd0-96b1af88e8fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1412188-d21b-452c-a48c-00d75f46abcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee782191-1c79-4d3c-a203-be5fb5263061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a67621c-79af-4135-8d06-f454d26e7fe5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a202805d-0d3d-4cee-9bed-1729328a8b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163ce93a-8ca5-43cc-bd38-38ed6acbd1d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a48b241-7320-4bf7-8c77-0675604e63d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c950b23c-d98c-489b-a311-9fe329236fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da554a95-a591-48be-a916-a3523b8da130",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd191892-ce40-4772-ba1e-24911e831dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243c71a3-020c-404d-b8cf-6b72d543d439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b99a25c-7f21-4e1f-8eb7-1cda5acd0dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef22445-3859-4bba-afb9-99bf83422d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010d117f-8988-4f16-abf8-6189d871945c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d518f6c5-efcf-492c-880e-181b8ef7279d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1238dd87-ec42-401c-8357-3565eabf11db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c3f67a-8c48-48f1-b36c-7bda4c1d22f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b21e37-d106-44b7-aed0-9c87b09e7c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e25054-c20c-4007-93c3-90829b113cc1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9906097-f0c9-44b1-b3a3-c1eeb4402475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a921d77-32e6-463f-abff-3ba524e15231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db995667-0ad3-4939-a2d7-99c253b44731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c267a4e6-4872-4521-a578-0ba3b639e71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25e7248-b8d7-4c6e-ae7d-99342950c716",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34b577c-c2b9-4c99-a7cc-5cfc9607e89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0607e8f5-3375-4eb6-be8f-3577b8742900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a32155-83ab-4f4a-9cfc-063286d782aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e203795-4e98-4b63-98a2-08a094723579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18fefaa7-aa42-426c-8d33-856a9c68d084",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7ee450-026c-4a81-8511-97193709a700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9975b082-a137-4013-a833-b7aa390c8a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c7c9c6-6a41-44d5-835e-3cf6240b9e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7795524-7815-40df-a054-72549aa4c935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a21673-210f-4898-9f14-da59051506e5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069507b1-902f-4760-b024-360518e1cd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3ca6c989-aec2-4a3b-97e3-cfa95e6e131e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1892638c-68a4-475f-aab4-2a2ac57477e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b43ea2e-b230-44c0-bc94-85131cb5379e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "57795e2d-3ed0-4065-9b40-c1f2d8065983",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78d15936-9857-4843-8797-398f9d13bd80",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebfbfb2-b3d9-47be-8a3b-9ed9f52c078f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "608a8618-832f-4d98-acec-cb9530ad1d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec2e4c6-20d9-476b-ac0f-14d69cfb2804",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c74ff33c-363f-4542-921d-4bef15659f9a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "264a7bd2-afff-4353-b7cf-60a88363239e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1fe3fa0f-1bbe-4729-bf81-b2e96c77bbae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba51d9a6-a9d9-49b9-9d81-899c61ad1e47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c01eafe9-e7a5-4ffd-aa15-e3ef5b0197f7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7bdf6e52-9de1-4e13-a013-0e965959da2d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f91aeff4-6dc8-4207-9f1c-8b528ea97597"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c5ecc9e8-8c74-46b3-927e-75179f4e0f52",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "26fc105f-d452-4e0f-826e-facfee204229"
                }
              }
            ]
          },
          {
            "id": "d871950d-75c0-4d0c-a63f-b4c47496a355",
            "name": "Positive Testing",
            "item": [
              {
                "id": "81088218-dc81-4094-9c1e-a92998fc8c96",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e6de092a-f572-436a-8c9c-98c9603c2f9d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1d10fe-7d6e-4834-b6ff-acafbe033e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6cb40a18-a803-449b-bb1a-f9d0c5871037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32171f5b-d028-452e-af27-4bcd8ffb3673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40cb23ec-3f2b-4880-a655-1b20872f873b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dba2308f-ce5f-4868-b9e4-3ef59d73a9fc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fce8ee1-21c2-4671-a78e-48043743309c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba08a6a5-1c2e-4473-9e1d-c9564003eae7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d58cebc3-072b-489f-a7e4-5ff9b8f02251",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1a27961a-30e9-47da-b003-460ef0e8cbb3"
                    }
                  }
                ]
              },
              {
                "id": "5c0b9cef-4986-41da-8f21-b08967fdc71d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d43c5219-c22e-4edb-a0cb-ce54ace44f66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5eb480c0-84ec-4c72-8ff4-bb388464383a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3683b487-bc2d-4d74-aa87-78494fee7cd9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8353ea19-a4c9-4dd9-a83a-aad4c89ab712"
                    }
                  }
                ]
              },
              {
                "id": "9d14d5e5-9cf6-464a-b497-02e669e85054",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "868dc554-65ce-4e20-8605-64fd8081082f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6d373bd7-cd2d-4327-a962-a110b587a21b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8d651d2-669f-496b-8903-8fa77f93b05b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cb304d81-9b84-4fb4-94a0-3b2326927140"
                    }
                  }
                ]
              },
              {
                "id": "e79b0464-2fe8-42ad-956e-68a63f39a88b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "795276cb-d880-4031-8d9e-00d870b6b842",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0fffa8d2-b11b-4f95-a642-62aeb1739426"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df67ea1b-d622-4513-bc70-b6c8313c57f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "15383e7c-4fab-4c6c-b318-f47cb58a46ad"
                    }
                  }
                ]
              },
              {
                "id": "0cf52900-6189-451e-9032-48a347d972dc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a40eb11-5de1-4ff5-8416-e71c8aebe07d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3ef2216-2b5e-4eda-b62d-003f186cf32f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e92a026-46ca-4fb6-8831-77cb7b19a274",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4e7739a6-d2d8-4d41-a738-20c97d033078"
                    }
                  }
                ]
              },
              {
                "id": "4c46e50e-d313-440f-951b-e0c92fcdc4b5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9375ed90-b4cf-4582-b78f-482689f295de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54dc51b9-4df1-4e94-839a-670ce5feb0ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f23865e-007d-4352-b399-8a1105982cbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b224e56e-8a01-4876-a0f5-b50189ce96a3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "75a831a6-d3b7-4127-8f6a-809b4f7dea48",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0de7716b-1338-47b2-84a2-d44415c0aa53"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e4ad32be-aee8-4bf4-ae2b-df2d786b22ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e114fd48-b8fd-48e3-9900-689d5224ce3f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4938a800-63d6-4bc3-83fd-4529996d309f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "762a2bb1-b519-4933-a45d-3ca4b222d276"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87468d00-2020-4e63-bfd8-0b701590f4e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "40989ddd-8c7b-4fcf-a1bd-fc4a29423ada"
            }
          }
        ]
      },
      {
        "id": "bc90e954-4e5a-4f99-88df-d0983ba9cb61",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1dff0476-cbf2-49a4-8cbe-ca8675714e0e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc1becad-7516-460b-8b8c-d434aaebce45",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3674f361-6961-4fd6-81dd-178cbdac3fd0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d240b414-64f1-47f9-bc9d-be08b20d135c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262fc39a-81ed-49c3-8abd-cfceb53e66b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f60978d-3713-410c-97f8-85f2242a85a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "593f179a-1ca4-41f3-834c-99786ce6e01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb60156f-d987-4c93-a496-738e6d5f90ae",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b4dbc0-8554-4d83-89fb-4ba6a37296e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fddc7c2f-2e8d-4b82-a139-69814e5ab4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508723bf-2d60-4ef0-b35a-fb8ad466ab75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e90d516b-a79c-42a8-b814-29193e6bba46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8490787-20ff-42f8-a28b-d657ad11e595",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db93e0f7-8127-43fb-a6e0-07ab680b6c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14ea62a-d8c4-4e1d-bfc1-3819a7d05f53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507c05b5-0fed-449c-8df2-aa080d4a1fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff493fc0-1715-4389-80d3-bbea9cc4aaa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8fac7c-f2b1-4098-aca3-72f3aa68755e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ba5c9f-f3fa-43f9-bb7b-af92739755ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d66e0f7-76fb-4285-b7ff-9c54075f3703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c639856d-a955-4e1e-a6dc-7901f3c96e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "585aad26-4936-4707-8b04-9efbf7f17026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae889f4-cde3-4632-abcc-5280e863e229",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c27c37-266c-42c8-84cb-8633c67b265b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb76bda-6b93-4a45-aed7-c155666262cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a7959b-a600-463b-85ab-b438535d06c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5f2d43-5293-4afe-bc2a-ea2e4aa59131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc314054-2e36-4cf0-8abf-ede06899c6ff",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285769a4-9998-4244-8255-ab80e81535e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd1f91d-2de0-449d-bfa8-879d55dc19d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113d9230-48e7-4da0-b485-ff5eb2e9f10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d821a8fd-e6da-4a6b-9167-e097c05d766e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3379c1-e8dd-4f16-9ded-b1a244c22b34",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb38e7b-69e0-4a8f-94ed-9258d58557bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf98f3d-84c9-48cb-92a6-7c19b80d8bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d597c1d2-a383-48bc-89f3-d9177a6366a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed20130-ba49-4c8d-b174-73e089003761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e736be13-3043-4136-a66d-3dc1a06cbd5f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801d6059-eef4-4a3f-8366-1ea826d9771c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae71aad-7e76-4d42-ac90-b466cc215e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79defdf3-72a7-4eb7-999c-e1f0a685416e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5f58ed-8d7b-4dff-884d-b3c700d998f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5f689a-2266-4ce5-b439-56e6f2ea5dac",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a52921-dece-46b7-aab5-a1818c04fcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6def4f24-0cee-42d8-b147-2ceb00bb4ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe065bac-7272-4e0a-b1d8-d191cbd5ae20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b069a6b-177e-4847-a882-4ce370a42950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c934ac80-bd66-41b0-afd6-e29cd636c85f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64afad12-dfc9-44c1-9c76-5c3266b6ad36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e70b0944-9791-4410-aed5-905c7f62edfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31acc9c-18d9-4580-8fa5-4370f148cc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "114172dd-a3de-4e4e-9b31-730f6460c0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369be46f-7bf1-4b55-917b-bfbe36a6b5a9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f191a5b-8751-4fec-a6cc-95ac29d02185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "758cb499-1277-487b-b2c5-9cb412fd521f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8348185-9cca-4b91-a1ca-097bc5fdcd8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c7635e59-09a0-4543-bb21-57d06e50fd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc83a39-ebc8-4560-a1ef-86bd33f3b4ad",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafb347c-0ef7-4974-a3b4-b2e0c56ac7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e55d21-884a-404e-a684-ba7684bc892b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44ef3d8-3b31-466e-bb55-62a9266c5c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43affd1d-3906-42bf-8c01-0ea4dbd67a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79824060-239f-436e-95db-cbbe58fb2cd9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3418c7-990a-4dcf-a181-0aee1af7a1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03f3a1d-0676-4717-b6c3-938a03addb60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e83ed1-4faa-4d03-919f-69c536a39ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c417c70e-ad81-44ba-8f4c-c292746ee256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203bf8f1-6ca5-4484-9115-ec17ffe26e9e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16882d04-5d0f-41d8-a792-0c192232f7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4496339d-b17e-4f4d-b857-126e837c6b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d94405-36c2-450a-b370-c1f561797c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9364d3-9d15-410d-808f-343cc417ed44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878f93dc-0c05-4a1c-80f1-6c094c0f145f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc2ad94-1768-4fe9-9277-f5ba66a2fc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d548f5b8-c209-41fe-af65-2d2c6950f3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5f551e-f7ee-4ad8-adf1-6e9c582e6347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a4a130e-3738-43b9-9122-5aec46115901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d631645-a3a5-453f-a164-4ff5b509194d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bc93c4-aa34-4769-af0e-064fa6b07f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b5b740-e544-43a6-9ef3-6632500d6ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f6c8af-cee2-467a-a08e-b0c97df67a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "92f50060-bf31-41a5-a9b9-c2f9caacbf91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea3c288-96bb-474a-91b7-b72894e08240",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccbc6b3-105a-4075-ad13-bf77e3e071de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3e0367-8a67-4645-bc81-c5072aa6f29f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f0e6d2-3276-4efe-a36b-31665dc4582b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9325fce7-34c8-4938-a99f-351ab8519093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6259820c-5394-4eae-b7d4-ea8967cb0e45",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad99f6a5-5870-48b8-a226-29913d30b0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed947cc-71e8-45cd-9c2c-768f8eac0adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4044131-49a6-4b29-9de2-370ff15ca55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d39496-2c1f-4376-9c31-77cf556d5e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ed161a-27d6-4e75-94e0-9c1d15c404ed",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a05187-d22b-4a5a-895c-da9e06dddfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953cc601-9a41-4811-b812-eb689af045ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a90d4b6-9126-4c8b-abee-b9b728239738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf6c6ceb-f1bd-40b2-9da7-74403a5b6b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0078b17-daf1-4a31-8e32-bd23e7ebc483",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90f5040-2da9-4ec8-864c-a441ea579cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6fd2b9-f0a6-4a58-88db-842bffa9b019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a899db69-95c2-474a-8ae5-cec035bfa8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "170d95c5-f17e-48c4-9783-914e209b2149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3456eb92-24c5-4828-bd15-3a777b47493c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e0522d-7462-47cd-a3fd-f337b2b280ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf697c2-2206-43a9-9717-8452c11d5eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f617bab2-89a1-45e1-a169-3c19e7500af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e5d7861-c57f-48c5-b6fd-591a4bcf96c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554fe354-19e2-4116-8392-bb3742c16999",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376597a5-5bf7-43cd-b182-6d6c85e62bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537ae87b-8514-47b5-ba20-ae68f04502b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256b2959-c9c4-4894-bb58-49e533b6f60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f285cbc6-79b2-4dd5-9922-53f98080b5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02fc5889-0bc5-4eda-b809-4c65978a81ec",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465305a0-3ee7-4489-9ed2-c13619d66a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd59f91-9ed5-4db6-ad9a-aa6698698bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f607b0-cae8-42dd-9b0f-529e29521450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfbd1ee9-e113-408d-9112-e1a7f5853b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a817e3-0d3d-4cff-b993-b7eb4e96aec0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9268067-140b-414c-91c4-48074bb8cf67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b510ef-05a5-4702-9aa5-aa00c4d0d2ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c1b69c-4bb6-4dd5-aac9-c956b327fadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db525bf5-96d4-43a3-8723-45d42eb78519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9625f270-db4c-4391-9f35-c1925245d1cf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f1e39b-249d-4f23-84bc-fcdb21d97d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9bfa4f-cfe2-4f70-94d9-adc326b82d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cea573-259a-420a-bb7c-02c9db26a219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e04dddf-782c-46ee-8ee0-721f8f786b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf0fd7b-2bf7-48cb-a3ae-2e2d9494c074",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60011f8b-2b18-441a-9ba3-5e364bd64f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "560b2628-0986-43c4-9791-3a29f0c37bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1fb4f7-273c-4e82-b950-b01cb718d19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "794b0a26-478f-490b-af9f-8b1c7c1829ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3daec6da-919d-47f1-bf76-61992389673b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ddfb945-e827-497e-ac22-0450307a7491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d8991e-7400-4d29-98a1-c4a6e80f5230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08216869-f27c-4e52-bdc0-bf19d1e2a337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c7397c2-1ac9-40de-a06b-a180965759ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a702fab-81ff-44cd-8ef8-e0c0dc39ac16",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb964fcb-2937-45e2-9c83-4e61d0c9655c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22069ce-b2e2-44c9-beb2-2d59048789c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63850e2e-cf91-4a21-88a4-3e5914f3b936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24a1054f-0945-4c66-87d3-5a336d20ef05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4725f7dd-2d27-4812-9922-709e2c8bd688",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d5846b-37df-49eb-9d37-e9d7aa4ef9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd7f8d0-2708-48f0-a4bc-aa1a902b12a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19022257-b531-4b53-87dd-772d1cf41e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd281c15-1703-420e-ade9-010a07e9d7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18dc449-083b-4e1e-a05b-055f694823c5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185aaef7-17cf-414d-a18a-74ef6af158bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975fcefe-d733-4f2f-a757-80773d5294f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6e9e19-b2e1-4975-998e-2fbfae393f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "585dd49f-e3dd-4b62-bea8-bc5607c44b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d75ec34-8d84-4029-904f-e1d6f6ea1287",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e9f0cd-b468-4d1a-a832-f7802c02c4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f3badec-2c9b-4014-8d97-d3f718935db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341aa9e1-e6af-4f6f-87aa-9b2d8cfa05c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dfa6625-a494-48d5-aee7-4deb21579b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66898348-f528-4181-a835-96e9ccf357f1",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb538b99-cfb6-4f62-8eb7-1d1dd4bff294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ed3859-1d89-43c7-bb5b-e251f4f919b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ef222a-74c6-4f5f-b6f6-b0a6a9d72f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48aeb7d0-3adb-446b-9cfd-b63c408f4717"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1af287c2-eff6-43f3-a30d-f81d5db415ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6e39b30-2713-4091-afd1-caa8addbc046",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917b13f4-291a-4e73-8fcf-a6ce730459c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8f04b8-91ba-4828-8fba-20ddde5c5fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e28d559-7aa2-46f1-b342-ea673e9d80cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c547ea9-de5e-474e-9691-31b11e8269b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c3830b3-33bc-4ced-b799-74ef990963af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d150d881-ef68-4d8c-a45a-bf837b8367ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e352696-c441-41a4-b463-19009301aedc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38f1cf32-c321-4498-bda0-59340d16513a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97a21acc-51eb-49bd-bf15-d69fe4d3b660",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2251bceb-e860-43b3-9b53-f46135bba416"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a213af0a-082a-4a3d-b900-b76685abe8fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a4b2898-4891-48dc-8563-e208099075bd"
            }
          }
        ]
      },
      {
        "id": "2f6aac41-5cb8-457a-9450-ef40bf86c4f2",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8390e9f6-a85d-40a1-b8bc-28f9dd3a0eda",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4dd968bc-b0fa-4b8c-940d-4d45394eb701",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "920417b9-c0fc-4e08-8edc-6226d31db8fc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a6ed57-0c56-4a98-8627-3998686a3d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77e417b-7103-497f-8eb1-b6c552b8dfa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9853e86a-f37f-4f36-9a82-f2590f9aeba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "025b4101-8d6e-4324-adbd-77147cdc6982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac41c6c-af94-41c3-ac3b-1acaf706c408",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a5741c-1d4c-4dd1-b38d-87026cb6837d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529db1b2-0be7-439d-a84a-51c5f967833c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa25ea81-de17-4c2a-954d-13b151f091d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "efbb58a5-1a03-4763-b7bd-34166d6819d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069b1338-8394-46f7-8030-b2f99b972817",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043423a7-a4cb-4cef-bb9e-067e0270fef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d058c9b-3e73-4036-8b9b-1c19fc49dfab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c4339d-2332-4a50-a54b-c6686bccdf2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc275b8f-3dec-4697-8146-6ee40d9ab7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6d1ee2-414a-4e4a-a3a4-0ac5ee2d14db",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d216e4dc-9926-4165-b431-aa0ef79f49d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee489122-e09e-46ba-a09c-dbf4ee7f2c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad0d0ed-e534-4732-bb7b-5d9252b61750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af61787b-408b-4c53-afc6-1061a853b24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefb35b2-ad67-4fcc-a617-13fe7256f36d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd061ef8-085c-4da6-8c8e-009bbe072cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be38f4f-39b5-43e6-b317-f157b28f61fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81e9054-2679-481f-9127-a1017eb8f79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "422d1f79-f2a2-424d-a024-c57775f00876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a10fbd-a393-4195-854a-f240e3915ae0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afe74da-f870-4396-ac95-6cd25cb67b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7d7de7-efb0-4821-9fb4-a07c8e6f80a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c15ee3-f73f-4f59-9e86-5bcb9cbc7465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7836cec6-847b-4e93-9739-fe6281ae720a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59835e36-7382-47a8-9bdf-47d9d0ece9e1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964fa82b-9e58-4162-b029-30258ec1a6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2415a4-8805-4d10-bae9-1c4d7d9211d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527c8744-c9de-4106-97c9-8ce4a0cfd4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "effd8446-efd5-472b-b84c-501eaa62707e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cfc5a5-50f2-4783-b8aa-6a9a258efec7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2967dd5-5b80-4f7b-a4c0-ce31d6340d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2777e67-b747-43eb-b32e-4811ba5ca23a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc824f4-3214-444c-aa7f-792110ba621b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20068713-751d-4c3d-804f-74304d7b8910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be72ec7-2e1f-4fc9-9c78-90927993e002",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e1c5f3-9a34-4823-98c5-04a995541513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ca1199-bae6-42aa-b5fe-c8bfbb1253c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1c5916-cf73-47bd-a4df-0fd9e25d31a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c22b431d-2647-40a7-a6c3-7f9484aa6304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694af502-e368-4b7f-9a92-fc4b15d38c78",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87e6d62-09e3-4622-a410-cc5ef190db9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36a73fb-0318-4125-880d-045b1b9e1d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51db7c03-5eef-4ae2-99ef-09d5ecc76e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6fe8b02-71f3-4309-9e7e-9a19239ae057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38333dc2-ebbc-4c04-8c2a-4f0fff43c8cb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7de48f-edd3-45bf-b3d1-3fbd8760c102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb6482a-bee2-4c9d-b25c-aba1042c36cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28678b90-5d59-4089-b48f-6d8bcbb448d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a5a3b2-c39b-4c6d-81c0-eb0207777dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075ddbc5-bbf8-409a-8dfe-50c0d364c24f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf3a699-2825-4dd9-8ebe-42f7b48a6614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da3b225-7f23-4dd8-b383-978ccc57dbf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a56d9f4-9f2f-4444-8b6e-0fb0cbc70259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13dc1105-f4a1-4c88-a132-6e2a8f0f058c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba523495-864d-4e1b-a54d-0f0ac7e7dc52",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f963d8f-fb17-45cf-a034-292e1a7ee6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95e0fdd-a102-47a5-822d-c87decf03a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c85fb84-cd6c-4722-be51-f0d1b259ddfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac70308-5e6b-4752-99bf-bfb8c9b12f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0693cd33-cf13-4bfb-b342-f1ffef31144e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e478cbe4-119a-4882-913c-0d3b444f8ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6feb6be4-5ad8-4835-95c3-203033443178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0bbaab-1cce-478b-8868-a04bcd357032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3fd8f0-5499-4b64-9b0c-781a26e6c226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeca8feb-ea99-4ea3-9710-b7d4c3f4b700",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "192b5aab-f22c-4415-a4b2-f27aa3ab654d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "195fbeb9-720a-4c49-a8b1-1c31b7e42339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b778fa2e-52e5-4429-9535-cf33c338ed0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f5f23cc-0f17-4b4d-9c95-91336b5386ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe06f7a7-3314-4309-a004-26ac05429d66",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00708ea0-a82b-4a1e-bed0-c1a8c88181d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68c6c89-10c9-416a-a8a2-da4df533a078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c4e914-e98b-4118-af52-76a3bf3960c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "33590660-37d7-410d-9c8c-d124e746fddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a71da1-6074-467f-83ce-33498edb7351",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf68a1bb-a536-49c4-944f-eb99d9d277bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1362f7bb-0bbd-49a0-89d5-c422405972a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4841afac-f888-4b4b-acb7-cbe18fe4b2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7028104-2f3c-476b-8104-3a6c6bbb5e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0bfc6b1-4cec-4f97-ab57-b0577a76e262",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2a2a90-4905-4b28-bae3-6ae59146b7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a6940a-b94a-4428-a662-e027d233f3c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92a6e47-5242-4ed1-80d7-fb01dbbc3706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "07a92bb2-e2b7-441d-978a-52a24c64e87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8d12e8-66c2-45eb-942d-afa20a102a18",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f481460b-cf90-46ea-8be9-dc8e8bb39ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b50f0c-928c-420b-81cd-ff0c30f5d71f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a80de69-8a8c-4b18-9ae7-a7fdd9784a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2df85c4c-327a-472d-8c32-268013debe17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8706c98c-e80e-48c1-8fb2-73a681e79e2c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9f85e3-33b6-41d7-b672-efa523523328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf9029a-928d-486a-84f2-f0a1d3ade402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482b511f-ee6e-4a26-9a83-ac7c269217dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8339e49d-ba99-4cdc-bf2d-994bf548d6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfc9653-cf5c-45a0-b17e-3dc1922184de",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0fcfb46-1451-4c54-ba58-063eef93f255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad4c791-3eaa-4a9a-aee7-e033bf90ff13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8662aa9-f7c5-448b-8508-2143e4cb45fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "318c30ee-c0d2-400e-9ee4-e15d1ab0cdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abdb413a-8528-4b89-99e0-2816d535808b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb503418-535f-4255-99dd-174adad5acf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4af89df-2e77-4a8d-a38a-ea51ba58c4dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edbf742-5800-469b-b48f-47ad00a15231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce25d3b-8be2-4db8-b4d8-5171b6472558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ae8a7c-59ab-4d8a-b0d3-ffd034c8ffb6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc7aa44-815d-4062-b308-c5ebe432d2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c720fb-a9f5-4f23-a1e6-0aa2a9c6afcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f08b5e-f191-44c6-a292-3cf38e525d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1711d538-69eb-4ed2-b31c-e2c470b3ec3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6dd09cf-6c08-4a16-9bd9-90d018721db5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ad5291-d1cd-47ce-a547-d3f61415de63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430aa85a-a721-43a8-9bd3-60c0bc909381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b407d7b9-fb3b-4181-903e-0db0c90a82eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b518df55-104e-4644-b937-a912656425a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2636e1c8-27f2-4e78-be3c-6553074ee07a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2a26a5-0225-4843-a349-b0b881391dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a072b1be-cd97-43d6-a9f0-1a1ffeac3f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc80300-3071-4f20-aa57-c2d7d466d3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93c49636-9fad-4514-a582-50c08c946af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf91ebd3-b4bf-4ea5-b32d-e054a5e88e59",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b9e1c4-9170-478a-894d-b8f7a604af1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a899b84b-4d81-4e7f-9430-68923bdf8019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b6c876-8feb-4345-b3c4-a0d92b110c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "377d81e2-f22d-4eef-97dd-909c1e1cc025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5bfefe-e9a4-43d0-8008-812393f4c1ba",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a22ba38-b919-4d8d-ba79-82c99758f2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc9527e-d253-479b-a45b-194a9ef5b893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc42c81-7e5d-4830-a68a-237c4fcdb2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ca7b1f-b6d0-4d34-817b-898fbaa2a721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7019b21-933e-43a1-88ee-9ff5cbfa7b08",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46cf6c2-d918-47cb-8236-868e476b1805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ea0596-f4f5-4184-9bde-8a86499b673b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21011e70-f95f-417c-9455-85f39bea12c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a95d9d04-ed4f-4306-b7de-e3a1724d9700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee430dcd-9157-412b-83ad-9e7c3cb0433d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a56fd4-9d60-40a6-b825-e0242cd17470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0fe1dfa-1259-4459-8ce9-e6c3c8e9023f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21c57b3-e759-4a05-b4c6-b8d1ed2ce28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "deff124d-6f31-45fb-88f4-e5d7bfa71ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d79e08d-bbab-40f4-8c98-0bea099a09f4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abe6173-30e1-4a1d-b30a-87ba5ffb0673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb99cd7d-828e-47ee-80ee-12e58f916b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3413b9fe-c976-4b45-8401-4292179097b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a233064f-3812-45ba-88af-8e2633cfec6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57d0009-37bc-47b3-93c4-cdcc4ec1fc36",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e7095d-ca49-4e5d-98d8-bfb87dd69a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38961cf6-9afb-46c5-ac8d-a2d87e24d415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4df873-ea87-4cbb-a589-539aef6c9ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e37bd0e6-ea9b-4abb-9499-18e87c123b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8b2daa-693f-42f5-a008-9a10e23e79de",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bff8e37-1f51-49ec-b65d-89360b49cd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8812b0-1029-42ef-b750-f5c67c77b2a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb814485-41be-4378-aeac-b83d4819947c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93074004-1457-4f0a-9316-9ecf106fc687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b6f72d-56fc-43a7-9ff5-4db61ed8bc13",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5659cbd0-64b0-4ce8-8d35-eb2695c15add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8506d6-f699-4b93-9033-82d4f7b8a1cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0a4317-5b72-4a04-9d4d-139e21de86b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6dd32de-2d75-4c37-8102-b6a05c1d3e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db5f602-9826-47d6-b1d1-1af8e37f2c79",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df590efa-d242-4318-a046-724e34641639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1e8f48-0eb4-49f7-ac0f-1311693bcab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5488915c-b2f1-4b19-b53f-dcd9acc1f8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22efbe7d-4d58-4b84-9c27-603629efacf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a39304-98f6-417d-bc73-b7d1a8168c01",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d422eacc-a7c1-46ed-b7fa-8172b6ec488d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f682873-7ec7-4565-98e1-dc8d7c1a2753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116da1e4-0f9c-4b57-bfb5-5afb98b91744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce8c3963-dafd-40de-8037-4c0e7de0a728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2a796b-9ddf-4e52-9f45-ab4117a82833",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df52e30-0937-4a15-8825-839e582b5622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a397a9-a3c8-43bb-b8be-e0022e9f4fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22183ea6-483c-4505-8f78-e4181261803c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd5e00e-fe01-4b26-b0cb-f1ab8c06ca30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6d5a5a-2dfa-457f-acc8-e5f2dd45e576",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d02be8-a9b5-4b3b-a9e6-4ad298f3c7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554e35f8-8e43-4326-b412-e7306bc0ad20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172d6775-3a96-4ca3-967b-1249019b1e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53e9bc91-f6c2-4c8a-bd49-9294a2c61ee4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4015584f-bf06-42aa-936e-db9123283af6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6ce4bf82-6a70-4524-a962-4442939fce48",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e64531-1ca8-4780-a589-12aa22deecf2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "abdeff33-65ce-4dcb-b8f4-04b5e8466e13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9e7ce1-c6a4-4650-b5ec-06f1b628f239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4712974a-0b25-4b1f-9323-dc2009aea3f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e83e4914-9e24-4459-a1ea-32268d9282d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6956eb36-29b4-44a7-80d2-380c81d8907e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3db2758-ce48-4233-82fd-e6814c3f02ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f18fa72-a6b0-4178-ba6c-a3bb36c0d17e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7742d33-32d6-42f0-812c-4501b36065ef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "debb41b8-3e8a-43aa-a567-ff2876edc262"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab0197a2-5cec-4511-9c1d-33a170bf0c96",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e921f68-3ad4-41d2-915c-9f80676504de"
            }
          }
        ]
      },
      {
        "id": "09cf69a4-672a-4c0d-a988-79b67fc86d52",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6152a0ce-d150-4414-94cd-b3e970edb136",
            "name": "Negative Testing",
            "item": [
              {
                "id": "824a4082-20e4-4dd8-b662-3e5c5b516712",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8b50191b-7a22-4ba0-a1ea-9b1cb0b71529",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "155df024-66a5-41cc-bce3-c4760d757070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1b1679-1ea4-4329-a9cf-3e0047d1fed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3818c2-417f-4a13-ad36-3d922f4d5dac",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c98e96-ba4c-4711-877e-829537444260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb0b502-076a-4ffe-963a-14ae0761ea16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a0aa55-a537-4933-b7a5-f26bd3e3930e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45960d78-1458-45d0-a435-96d21f177293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a9bbf6-8529-42c0-961b-2ef9b7394cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc40b72-7006-46fe-9a32-0a01ac136efd",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1956c1c-ba7e-4078-8b3e-ed980bb90154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8baf74c-9248-403f-a421-5135ad3cf611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ebd87f-a20b-451d-bb02-7169f815b93f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061f8f6f-99b2-4896-9d2c-e6c688602979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79feb2cb-8722-489d-b4e6-eae27664a68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de4f76d-c0af-4c02-aaf0-d993e8ef4cdf",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51856038-4923-465c-8a71-64d382483c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54152e3-9d7f-48e2-8397-0e941c59b48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bd9985-b065-48ee-b2ca-387b0f557b6f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63360891-bb85-49c6-af67-62b85f0e3e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a180dab9-7636-43ef-9d0b-d179328e9733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fde9eaf-447b-4ca7-8049-5d150a195c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5abd4b29-6913-4e03-af0f-995614d49b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6862ad5f-0ef6-429a-a601-54fd9256e292",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9412b8bd-741b-42a3-82c1-22e08704197d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ad5cc6b-0f73-462c-a85f-89ebc5cd3f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb489e1-d651-4c27-b944-2c2813a111c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53fc6b35-9f0d-4927-95d2-dcf42d844de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64172338-5961-453b-8ed7-1e22bde44d76",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd7ec1a-8058-4490-9f0a-4c3ca60b48a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e007833-6c8b-4b78-a6d2-af7f729a9df8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21955527-fee5-44cd-8ca0-b49ee9948565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e32a9c4-218e-4864-adc7-3136e3ac12b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f3a59c-2bd0-4b92-9fcc-1ac290ab1b26",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ed5f17-5813-44ea-a502-59a74ffc6863",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a57add3-1e93-4077-862e-29f664d49685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "834ac354-00ae-434b-8bb3-ce414c76f417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5032ee7-1ee1-4a79-88f9-a3bed3a4901c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdc4bd0-d4e1-46b0-8e62-638ef06ebbbd",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aecd216-e81f-4e7a-b025-1485a39e2fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "439784c6-f1cc-4484-9f4e-11e86e5a8b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a9f5a1-d4e4-4c67-a81d-c49f2cbba78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cac7f67-6089-4649-9263-b4c6abdbf44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2b459f-97ac-40fd-b848-cf1e0dadb163",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f9d015-396b-4111-bbd6-f8d8e2d53a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27fa829f-3c60-4c55-a582-f432a14eadb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92db8f45-629a-4239-8d3c-0dfed685c8e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d353e906-0dae-4bd4-989b-3742e15f29bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d8d955-8d7c-4483-9853-3bb1fe6d539d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976ca7f0-816d-4cd5-b0d3-ec6f069b7af9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6828c15a-5789-4745-9ab6-e30ec0195d91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c062429a-e1d6-4729-b618-c51c66a5e610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ef20b6-8a66-4a4e-85e6-604f652c81a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797f3ca4-89ad-4b35-8de8-80ed3e69f987",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c700bd09-bc79-4cdc-be9f-50101978688e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adc9446d-243b-4a08-a0da-9fc06b39906c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7e401d-b147-4439-bdc7-b03f5b606f43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eec6129-a8d7-4b42-a1e0-6e172f991215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf76471-b56a-4ce5-a992-313faa9e24c1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb55bd7e-b4c5-40cc-80ab-d81cf266da1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3bc37c4-ec61-4f13-9dee-13816909015d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb3cea6-85e2-4c2a-81ab-80c3ecb4628c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23048609-8bfa-4649-a3ca-dfcac648d9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc58235-89b4-4f85-8b08-bec3af90a012",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a5daea-9203-4655-bf5d-bd822b2dff8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f221e77-5c66-4551-a7d8-a7630b9867f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c2da55-ccb7-45f7-b34d-309c64c774fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de26d6ed-fc18-454c-b501-998324b621ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29288db-10d7-4062-af94-8a154377526b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418bde8c-e80d-4eff-b7d4-cf2c63948c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c9a7c2-342b-4f44-95ce-7b0b31a14d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f388c3df-c12f-4fb3-a956-a8753d374754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dffcb7b-7ddf-4b8c-8154-b2c9c02e877e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04680aa-52d6-4376-86de-79e79d2adb45",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205691ab-0300-49c3-9c37-792184e8e949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fcd3ae5-88f0-432e-90c6-b448839daeca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b23f71c-43cf-4c47-94d5-b6a5a5ed659c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cedc668b-1d79-4529-bbac-d76856275e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69eb44b-3507-43fd-8197-f6ae74111d2b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030dc332-96c5-46d8-9c6e-20089d1d55d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394bf39b-a51d-400a-ac8e-a025aa67cb49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7422aabb-2776-4024-a419-de634bc41c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61a0672-1134-4eee-b626-1992c5101691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65db3477-d250-449a-81e6-6db04a5235f6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9508b8ee-182b-488e-a7e5-68eae591f784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f016a3d9-49ce-41c9-8247-c23426866845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bd7ef9-c2f3-428f-9b58-bd90fb45eac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c721a77d-49b1-45b5-9c61-f2d64f3bd9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4caa8e6-95f2-4d1c-86f4-965061b9eb6a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a74a420-526f-4d74-b227-246855188b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90c6734-9fdf-42f9-8701-af425d962ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca04d69-f575-4f19-985e-f86842ad1a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f939ea-cdd1-4e91-b982-447d1c7f39c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f223a34-8d08-4a4f-a802-1ed5e32223db",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be15af9-5e56-4611-b050-d5f6e6a2196e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb88ecdf-060c-4ade-b456-3b41141babe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94aa9b71-6be9-44bf-9f11-16362bc73ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9ffa14-7018-4849-8988-e41c95865713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82460d6c-b74d-4f94-9ad8-cdabc4718d7f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b489cd3-01e8-40ac-b08d-84f2da3dac82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f233a7-79a0-4443-a3c7-d83b7676c9a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94717955-bad3-4053-b6f3-f4f9455dbb94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe66efe-c5ae-490f-a207-1ce5fe1b5cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ef8113-7fed-4edd-9e9d-b93f022df36e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f878048a-03ae-4b53-9bce-ccae186ebd21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd2b4e9b-8ec4-453f-adac-9d99e0f6d28d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdaa8048-12bb-4938-9204-6c786689389e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f432da7b-bee9-4721-8fc2-071af62af561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41459ba-71bd-44c0-ab54-582642d42569",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33d3c41-baaf-40db-b681-7072694bf876",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6885eabe-2211-44d3-8444-25bf619a9b7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d0cddb-e863-425c-90af-af46a8552769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d957367c-15fc-4652-8447-daf06a542787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd71ec2c-63ac-4a23-aa86-61da1c26663a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5709704-efc2-42b3-8c2d-1bb6a754829d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3f59516-db6d-49ad-8690-d0d30d1e71c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26097fa-84e4-4a8f-837d-26960b0ea938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a69ed8-1710-4d7f-bb8c-77c6dd636110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559c3648-4c2b-476d-bf53-1d1a4d4a0802",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2a8171-2df5-476f-a459-750841ed7a75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41e56451-6aeb-4498-9d02-2fff6cdc091e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe5ef5b-26f5-4df1-a1a5-87cacaccc496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2d48e8-3f18-420f-aeb8-44598e895220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046a9760-2ed5-40f7-bb22-713c114814da",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b261efa-f4b0-45fa-b824-b080675bec5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7072fe8-0a8a-47c5-85f9-410fb4753c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b99d385-321b-4a6d-8018-b378e806acb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b206d1-384a-4493-81ff-9b0ad8695e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f4399d-a995-44e3-90fc-20b9ce23c903",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b80d7b-b45b-4673-9230-52d591475a11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c4c50da-cb38-40a0-b765-0562035c6f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f734ddd8-44c6-42b3-b397-42435a1a9252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b3c39b0-2c6c-42a1-9082-0e990fa3f416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01bb3e8d-42fe-479a-9b9d-76f595204334",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb1e818-650e-40ab-b5e9-7455bcd55cdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20493987-5ca6-4b70-8d73-cda530253488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10d48b1-b6ac-4b00-b126-f16274a34f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d11f4c49-e7eb-48ee-b9ef-1f26959a2e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25245d72-16e2-43fa-9e96-3ef8aa9c5e93",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0930739e-8aa4-47fd-93ee-ddf548e23df7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb4527ec-7dda-4aa4-bf9f-a90df98504a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb980b8-3e91-4e63-87ed-6960ac8ed0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e168da-0b4e-4834-8540-4f8cffbb5cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c947d797-20ef-4044-81a0-c98e64954401",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f91e8a-ac93-41a3-a99a-c560928118ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bbdefae-c25d-4002-a292-eaf53122df23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "002cf0ec-d681-4f02-b858-838dec16caa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca955b20-2c90-4b9c-bdca-f732b257259c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6ab770-c038-439b-8c49-41722668f841",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c2d7b7-e982-48f1-a248-2cbe876ddb53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc37f914-3351-4f33-86e8-2aa0bcbe5f68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e269643-4d7f-4c4d-931f-4cffe01e4d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab044c4f-3075-4f52-a1fb-904fc6090078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23ce326-5f65-4a14-961a-80bf08eeacf4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ea3032-9268-4fe1-ad58-14dd905b49cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "285d6e83-a57f-4347-8c4c-e6e03639abbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "221b92b4-a3fe-406e-ad6f-433040fc7fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a69b1bb-5c53-49e5-8d9a-6183fe62ea44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52eb99d2-54ba-4e3f-945d-781e4fb3a653",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0030a29-c7b7-4802-8c0e-5c879863d8c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "863a0fe6-a0ac-489e-8141-d7c3da9281b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e7388b-d162-4bf1-a60f-546226e60493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf18214-2392-499f-81d2-9dc1fde423bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1f0bc0-0128-413d-8785-7f0334395b7c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269f92bf-7450-4489-a8bf-781b04fbb085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6424821-31da-4220-a25d-b3e9cd1cd791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa99099-aeb5-4630-88dc-75b7ffc359b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6bda6ac-92b0-4558-8dbf-86021ffe72e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15330c6-7ebb-4351-bd3e-e99f01d0f3f5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fd29da-065b-4110-930b-da1821a9e3a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a07cfe8f-c420-40e2-9dba-804fb5018178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c663bc-fbb1-41e7-a82f-60a77e5a98b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b146aa8-573e-43cd-a6f3-fb2797fffd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f9c028-9dfa-401a-b9a6-6df5bd5d17c2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da99447-de52-4e42-9b0c-2c8eb451ac35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f9e097-afc0-458f-9b54-2babf578f96f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "432aae04-468e-4685-af6b-172f0f9df6e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ab181b-631e-4bb6-8c00-015cbdd3041b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1ebb5f-5076-4edc-b664-14135e4f49de",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9debea78-a453-4d27-846e-051fde6ad743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9677ec8-0ae5-4f48-941b-3bffde6dc1e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea546c0b-e074-42ee-910e-6eeca56fa0d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cccafabd-b3df-4e9e-974f-5224d656bb37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0c8231-09f0-49b6-bba3-50929814b7a6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff276fb-b301-4d8b-aac2-a5aa7f630ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69263734-ccc1-42d9-9ed0-685d8c44e499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3203ea-1dec-41e8-a68a-ee8025f75fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df1f131-2518-442f-8f08-7675fc0fb79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7984e2f-e127-40e7-a877-561404ae12f8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d7553c-6137-4239-85ad-b5df3cd75941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4272bb57-938a-47ab-80b3-bcf038e7b0de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef060550-9912-4871-8f5b-aa3de7746d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd1668d-7407-4fef-90d0-b531f0e47682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e8fb7e-2697-4210-8d45-de8ede577506",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d36465-a267-4c88-9f01-df9f5cab3dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "268ae3bb-f288-4fad-b80e-c7fb8ea56e29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44404eff-bf7a-42a5-a1e6-89cfe6cc4898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e02261-464d-474d-8c3e-f1be7e1efb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d2420f-e9d7-4dc1-aedd-bb11dbafcb94",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72c5b28-f052-4610-97dc-2c35305a185f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a1854f-30f3-4217-9ff8-6096b0694428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "952eaa33-9f14-4aa7-b60a-a65e3cbac40c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c49c7eb3-f6c1-4752-abb2-529a3d9c271b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf2ea90-76d2-4e1a-9b44-15a8424883cc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9749f2-2c6a-40e8-9975-8bb2811c53b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe78a889-78ea-417f-a713-7c1d9a331a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a905d347-26cc-4e5f-9211-17cb45309b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa42c84-caa4-4fef-8efa-307f06f3910c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f63422-b2c7-4ab5-a1a0-bf6ecb50ccf4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c165ecd6-9dc5-4270-a9d6-50277e795dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ebab7f2-71c8-4c90-af50-1756da6d259b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd71e36-3b0f-4499-8a51-b270907dea22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c51da8dd-abd2-4402-a5f2-d77407d44639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd9a83a-9cd8-4e15-986e-100112335126",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec4046d-3b5a-47fd-9317-585c9606e2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2650befb-e64e-4c30-8d96-83bf6daa33eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90478b8-a903-473d-b90d-1508c02dd9ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2330783e-0744-4a9c-a25b-17cbbaf07a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4088f201-bba2-4147-abe2-74355143c872",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21534d77-f8ef-4eab-8dc6-99a054102017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "916a6399-70ba-45a5-ad52-ad611baec5f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6b036f-8419-4134-849f-94b0cd77685a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad942b1-48df-4782-b8a0-5e9df4772547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001dce14-910b-4117-82f7-14121546486a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8d7bc8-f22b-405c-b6a9-91bdb82d6e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1a99de-f486-4d4a-a255-23e180d5878e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afafce3b-a9b7-4c6b-b99d-f0a2a3f1aeb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2ec780-29e8-42df-94f7-279298465c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d437908e-ab0b-41f2-8d40-9b7c30ba84a4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1ee040-58ea-4345-85fd-51bf1747b371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6972f91-7dfe-4b43-b495-fbef3f861a2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe352505-3138-42c7-9389-e8c399263f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b803f313-a993-4fbb-bd0d-a2712ce25de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe81faa-c2e8-4a2b-81f0-934d5fbff656",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2caa7bee-6dcd-4cd5-b547-7498d86e493f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf549ce9-f24d-4081-86ab-333d74ff5a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b22b9d-f1e8-4340-9051-dfe74749f6da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8090db01-cac3-4e4c-8152-614544a01e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341db305-26c3-44c5-911e-f39c3816d877",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d4df88-0b69-4950-a55b-7522a1c8d2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59a87ed-e056-48a0-a703-2e177aa4fd2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a724f8cb-03fa-42f8-a569-1c543e295213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9977d042-5666-4efa-b1f2-5545e9de3bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb2f143-44ec-4917-a3e7-2037893c4eeb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ab7f9e-4650-43da-a6c0-d955d7445f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d27ce5a9-97e1-4702-89fe-e5563be1103f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9399edf0-e405-4081-940f-6d66f33cef95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5f5e40-9041-4e47-b114-0a77000a44e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0b853f-bc16-4c71-bf3f-192be0991235",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7631904-926f-45c0-8db7-c6cfae41ee19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f8911fc-a685-4ce2-b794-6164da49c82a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "879949a3-a363-4c19-b15c-5531fafe5361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a563f4d-f276-4d51-bbae-31b9936e9cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f163da6-85b4-43bc-b0db-279b3a025aa9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f96d868-153f-4360-9fc2-0275b22db34f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0190c3-f3d6-4a4f-8496-99b2965bba4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "007098d9-3588-4861-840f-ec256cbd6638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fec0756-e3aa-4cdf-8de4-7988b1031f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41bbfc49-5138-4f5f-8da6-f0ee68380b89",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254a774c-bff3-40c7-9f34-1fc2eb4f3de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14328f2e-c1d7-4a66-bd16-b8dfea437888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2128f4-3899-42ed-8d5d-5d52f7140d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41b9189-474e-498a-a4f0-cc4042e63c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ba163d-48d3-448d-bb77-183fbc44d62b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82094ac0-e52c-4911-9c13-f9ea7a0c4a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a944688-1a23-47fa-82cf-2df94a5b5507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b82df3-a564-4ded-83dc-49669ee46dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12609273-e488-4559-a34d-d955cfc9b5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc376737-909c-42cd-a47d-c103c9d96fa3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d988aac-08c2-4576-b3ad-f1715db45a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b899ee7e-71b1-4b8f-ad60-1b7d6aea0af1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7f00e3-b07b-4212-9cdc-34a5a537b5c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762699ad-dfca-4751-8199-70d464070a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677e0579-4dd1-41bf-a3f7-6707539e149d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f19c01-610b-4633-9dcc-a7cdfb1be00b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c420465-035e-4928-a8aa-c5100b8458a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a46ba0a-4ee5-4552-bf1a-0fd3f7fb1758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24ac7c9-8765-4af4-ba2f-d87ef3ab2d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622c48c8-8a25-4f20-a98a-fc990dbef5f5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8ddbf2-867a-4a9b-aed4-98d6a92458fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0725af7d-efea-4124-a7a2-e9c001fedcf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5aa3738-28a6-4d8c-844f-b8f96a01c96a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74cf4c36-db25-4042-87cb-6c81dbcf4572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5693a9d-59b9-4c31-9fd6-f1fe70b51098",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4130645a-043e-4b4b-81d5-a16b5ca4e0e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c422cf-bffd-4ca6-81d8-474dde8dffd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc48657-c816-4e87-b05c-1a3f1f43844d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d686081e-84f9-4335-b4ac-fcca5d845668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0514b786-7b75-421b-8eb4-3a23c955383a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54352f1d-3d3d-4dd2-8f9b-d68731f61375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e19af10c-543f-4dc6-b22b-d96cc68482dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7fd4ab-2e03-4475-9dd6-8c71782d060f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44600189-b5ba-4531-a73f-302febfe853b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4811a1-6f81-4f0b-92b2-93dd944687b2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb33e18b-f414-4950-9a91-0085fa27ae69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9becbd46-972a-4745-b338-ce98cac672b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea139ebb-c5cd-434d-8c59-9a83ce4320db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd57753-4db6-475d-b73f-74cedb89c98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beafaac6-bd8f-49d6-badf-75e676eabf55",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267f9d68-1a22-4bbf-80b4-5b2e8d0fed84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6d3dd0-dc3d-4bdf-ab9d-e57f27402de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1431a5d1-d7ab-4102-af09-357e67290add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4432cc74-06b8-4f42-aa75-21baddffb5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac2b266-c926-40ce-b841-4ca7e278f380",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3782a5-8744-4567-83f7-e3fb09b4a48d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40ce3cf2-0f25-4436-8721-8e88f0fb6ce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce86f46d-f95e-4a6d-a896-f0a351651926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d211bd98-f79c-4346-969a-45faa0ae5479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83ebbfc-24f9-407a-9bec-aca75638fb31",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb25188-f896-43c9-939b-3b50978b6f71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea579475-3bf3-4d33-936c-a6a80ea2eaef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41566d30-e6f4-468e-ae59-8cd8032c3b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ebf37d-0198-470e-aefd-4aa30964d6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32be3a18-93c5-408e-9213-7bb2cf9da646",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ec0253-0519-4c8d-81a6-566c8fddbdbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3d13399-9344-4571-805e-108b1dfaa931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17977b4-8b88-45e6-ba12-e784ab96d5a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f18791-76c1-4b3e-81e7-f85452f49a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad538d8-5d4c-432e-a9c7-4953badcf9fb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911fa7a6-4682-4398-8fe4-8809e478c0ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a2e5ae8-9f76-42f0-91f4-40ba8c319a6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817dfbf9-6cfa-41a8-9463-edf193e56139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa9ec169-0154-4770-bdfb-e59154333b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1e52d7-3881-4a03-8fd1-a53ace8838a5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2756f568-026c-4ef5-8b16-f888283838b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd7a1ba6-62c6-4eed-829d-04171c6557fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "582b3878-b4c1-4b82-b1d8-07575d7004be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "404bc313-5b3c-4daa-9787-7540f5f8db57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c82951-216e-4332-bd4d-e0edc14b73c1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124d8a40-2f4d-4798-94af-e93b1fea731f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c21c9f6-f5b8-40df-be1c-c3e2ae2fbc1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeae4eda-c3f3-4d8a-ba71-070a481c8aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88687103-57a9-4fe7-a7f1-44d463aca46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd38fc29-93a3-410b-ba54-b957be3cf809",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02fee416-fd3c-40be-9c1b-c8173f118d18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d32d59a1-46ea-47f2-9e83-bb469d0478df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ad3fdb-9a78-437f-bb29-4114a43b5d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cede9fc0-fd7f-4830-b7c8-782e14605555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5627d02b-43e0-4ebc-9fa6-7eda62b7fdc5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2728f55d-10ec-40a3-ad26-238ba2bf493d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aa0323b-d8bb-4bca-a7d1-556431261cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e5de5e-b2a8-4045-8ff7-ab994d86bb11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "801fd090-97d7-481e-a7ac-31930cd2cfb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24611eed-0955-4eef-8213-0422f9492d9d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f81b182-a499-4cec-8740-ef4f525040f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9787bda1-2206-4e3f-8cdb-ad287d8cd6fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4c9c47-23c8-476e-8fc3-79954e5d1df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a37362-24f6-4f15-84c3-166ba0184af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72054ada-d7e3-41ee-80c5-8ab03d9834bb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255592d2-8d4a-413e-804a-f94266cc6bcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25722314-b2aa-4e25-ac3c-ef04d4c7fdc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a9960d-6d46-4f28-97c8-e3a27924b078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18dd2e0c-bc4d-4baa-a0f1-ff51e1337f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de0051c-9adc-4c43-a232-88c06a784a47",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d25755e-6c0d-4ac1-ae00-da71abddbc8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f811000f-8c20-448f-ae61-55eddb684e44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7aaf4f-a16b-456b-836b-1b5fcc23f731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab7973d-605a-46f1-8c16-d52c23bf8e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3e5aa5-f0f9-4add-b06a-21e3cf8f53ad",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940edab5-20b5-4f68-a303-454227c78c9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13164e3b-5a25-4b88-938b-4f2ef4a02f0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c115879-627b-46b5-81a9-8041bb8c71ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd0fe46f-203c-4a8d-91c7-15748e907877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d43235-e48d-4d25-a025-7210a018747f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f550e40-eb46-421f-b527-836780eec639",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67d77c0e-9d8d-43c7-9c00-8080e4c52b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6262ffa-6016-493a-9b2c-2c40587481af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1138f513-9732-49c6-b2d1-080aa2d7b8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22571c36-6610-4154-9429-218305e51ff8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476a0eef-1d1c-4b5e-b5eb-2c674574de6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "714cc20a-b7f1-44b5-b7f8-72e74678c6bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbc304b-4182-40b2-a90a-d90bb3fd15bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a92c1b-fd68-4c39-a7a8-3bb6401307a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72650d3a-634f-4d65-bf2e-3c3b244cfcb4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef502dd6-9f03-439c-ab4d-3bb928629a79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b986324a-1ac8-4050-832a-b69321fadc80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "658f3c72-dbea-462d-b7b3-e736e3f620ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61d2ae1-a901-44ba-924d-cd74dadce7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25211875-a465-4a64-8813-358c36b96fe7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be26d140-f6a6-461d-be17-d1ed88133d6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b639df7-26a0-4168-9cf1-e5834e29ef44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c73e6d-c6e4-4739-b86c-a6c3cbeb1997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca0b157-e953-4d53-91f1-1d7b67dedb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a117eb1d-7f1d-4815-be35-25cf03dea4b1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78474194-e434-471a-a89d-488b23fceeef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc7885ec-1a7d-45e0-9afa-c3610ca27235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce6e167-b2e6-43a8-98a4-23801020d23f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ac7f2c-3543-42bb-abe7-cab8acbfa3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a604f210-cc6f-4fe5-aac7-72b5d51c7b83",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00b01dd-50c1-4aa5-8954-5b461b19bcb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82123ad4-be63-40cf-9d17-eca646a48161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cd5fab-a8c7-4a9d-9657-4f91170c66ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1438f92f-a191-410c-ac72-74dfa3da848a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a634442-3f01-47b4-b029-ce45526b618b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5481602d-bbfc-4171-9682-fddd25459cb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59fe2604-9482-4590-a5db-b74d81b0fa2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1655fac-3b71-4b08-b178-69fa1040466c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bca8914-42f9-472a-8865-503a96504ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf83a7e-fa2f-40d4-a0b2-38230852b4c9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f84eb5-f68d-4c21-95ef-f0da1c799a6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e170a0e7-9784-4f43-aaab-0e3e5afc325e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28dce36f-1a05-4ffc-9c3d-ad17c046f46d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a121892d-de7d-4630-8814-dc00f179cec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb6a445-f52e-40b9-89dd-ecc3ffc249f4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0b700f-0c2c-4eac-857b-d12bf52c1172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c90a212b-0c20-4622-ac42-2c41dc162638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f682f786-5c12-4e09-ad50-d8b8eb866285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93dd3525-d156-4bfe-a2c6-4372ee37b764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786634c4-f56d-44b2-ae26-e8e294509541",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02faa8f0-2c28-43be-8835-a683dca93d0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9472586d-2fc0-44b1-ade6-0c395e6f4f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c93a4f-3f31-4930-afcc-f406c50cd286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1705aa56-f3be-4dd3-89e3-35a31d02ce60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb5b02a-c3ac-4381-8657-76537345b352",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f48253d-cfa3-4d63-a9f3-0d5698666dff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e427d492-2a35-4347-a440-bfb903afd75b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4000626b-aa87-4d4c-a5cc-7afa80b38e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "791578dd-abf1-4658-85af-2ee200050fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a834d0c-bb85-47ad-992d-8f75903f5c17",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4234afe5-fd0f-40a6-9134-faa5fc4a1e64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aba5ea1e-6dc1-4ec2-aa44-1901f9925124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d124e73d-b966-4f52-905f-1d89fee99f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8a8e33-b635-4d10-8b69-1aa73c6f9d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044f6ea3-f594-4fbd-a541-584a678e57a5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909c8c72-61bc-4736-99c6-3280b1c9bc04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "919f8e90-3ed1-4894-8ccc-94d92f041e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a40052-a390-410d-affa-a662a4696f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef23882f-e5b5-4f02-ba09-4c8c9de3c0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581df221-403c-4842-8ab8-560cc1afe0a3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209ca969-f20a-49ff-9bd5-9b954e23fa08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca6dcbef-fe83-44e3-b282-4aeb49a9fbb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35eda6b-da93-42b2-85b3-49569bf65c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7ddad3-eda9-4d4d-9507-ec5f6b7c431b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98ae681-b929-470e-b35b-a535e4198043",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62bf612-a9a7-4285-8299-a591d20a4fbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "164b3de8-763f-4778-8f07-eed6e57ae0bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b2eba7-8697-4fd5-a14d-2e4d55ce20ec",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b3e40e-c7b6-4315-87f4-b9c3d9759d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ec0e19-af10-435b-881a-b8b46de95f2a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b0092f-3e6f-4970-89ac-6f7fbef501f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8ce1008-e317-42dc-a872-1d0bfbe2d573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edea392a-440b-4b8d-9422-f9ed1808026f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea5a9fc7-cccd-41b2-91ed-e47c8bf58551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99a6b09-342d-4489-801f-637e827da525",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5cba4e-6e8a-4fa7-8efb-4aaa727b9666",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9a12165-c413-4e8b-bc93-1755396d38e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdc7b1e-e1ec-4c48-b2d0-42e8292f1763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0808f962-a3aa-4fb6-8d63-d990e73e6088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c596605-4ee5-42bc-9ee7-feafe8194690",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba6ca11-7def-4bac-a866-d6c9df09a888",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e30bbb0-8440-40cb-a62c-8e2b70c5243b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "561b1dd8-bbf7-4da2-b814-7ec60afabda1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f71fba8-753b-4665-a620-0d3778aa99f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f225f2a-b806-46f8-a565-c9b3639f06da",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c0129a-4d52-4377-bb3b-f8650f25804f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "242dd6d1-441e-487e-9128-ba7d59015242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1c7a8b-3e19-47ec-9d47-5d021cbdf474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b252b229-66ea-4368-85b8-21ef91b5d670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4529bff9-9720-4e51-85f0-716f02a1a5d8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427542b4-82e6-4108-9141-29abe24155e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b82eec86-b48a-4099-8594-cf198d5a1750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7faf82d9-5363-4cb5-b1ca-cbf93b8d22c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "506e1ade-6005-4b98-8e45-e7b86292ea5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1467d7cb-58ea-4a87-b7ac-d64d67cba934",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3414a5-9a5c-42c2-a3eb-f668318f6df1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58dd4935-03ff-4106-84d7-ee2c52b188a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "970df1aa-269f-4b70-a62c-7ec36f22881b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d9dd1a-bfdf-47a0-b9b5-e97a227e81fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2c6942-c571-4ef0-b85b-b5469f1b2dde",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913e74d9-3d18-45a8-a09c-e8115dbfbca7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2803912d-f5e7-4a0f-b578-711f0f1e4822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "408ecc2a-4001-46e8-b4a7-7ca6fbec7d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac85bdf9-7529-4eea-be51-e9e666f3a9ad"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06fd7047-a44f-4c32-9063-9246f29a6dfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5519ddd7-c491-4165-9cb9-c6d1125ff332"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aee26fa1-a112-40a8-b23c-e040cb5d8ccf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75533e18-de82-4adf-8802-f9d4a87a853a"
                    }
                  }
                ]
              },
              {
                "id": "b6056d2b-6c5f-4868-9623-ee4c92b1dfc1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f4bdbaee-71cf-42a4-a9b6-186caa29a26e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69856d1-1cdb-4af6-bf9c-bfa6326b16d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f77adaa4-0779-4c59-b1a7-ebf9b4840573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c584bb24-cc63-4366-ad78-5f9c3d5d3ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f07dd832-2486-4ce1-9f4d-5f0ac63c055c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0dc69b6d-a920-4aca-b44c-dc1da89a91c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c6ccbe5-e3e8-45e5-bdf7-d25b74608d36"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18c203bf-bd45-4247-8f08-074cf4fc4ed7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2f62171-fdc2-4449-a7d5-2b0ddd976b62"
                    }
                  }
                ]
              },
              {
                "id": "7e0a3ea8-be32-4356-b7a9-be95f3969cd2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3d07c4d6-133b-4ead-a214-50c47b890037",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc05b5b5-f666-4e44-a658-8db90a281704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8e55ecb6-0599-4005-9ef3-bd11ca868c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b057d13-41aa-401e-ad65-cf19d14e8278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24993c8f-78ba-4858-b9d9-ac6cb2721f50"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9ce6af3c-9ca0-4498-b32e-3792883142d2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "10f561ef-e65c-4020-8844-fdb5e6898115",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81d1bd6d-f47a-4d2a-8244-cb3cf4429c87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2685fd23-7711-4478-9b2b-95b8d4c6002f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7833dac-7e4d-4754-ad83-75bcc0824df6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "043cc335-d603-4ba6-abdb-18f3d2cb979a"
                    }
                  }
                ]
              },
              {
                "id": "3fb38e70-9f3c-4649-93bd-93c4905d0420",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bcca1ea-c51b-48ad-997d-3d48b497ac84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "28311114-afec-4436-816b-c28f639b7be8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c76482a9-a4c0-421a-823b-e61b7917df65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ee5ac3b-35cc-4d18-aca3-8fb8d6931a41"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3248f242-c95f-4ddc-adbe-624248cdc0e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "114136d7-3cc0-4cab-9884-a82599a09caf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ada24f61-29dd-4086-8190-8729c5705b40",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d89e2880-b883-4722-8562-43bdca153af3"
            }
          }
        ]
      },
      {
        "id": "d8d501fd-573f-4e2c-ba0a-ba1305a87f0f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1d4e4e75-7c6a-493d-b90e-21673c9c1221",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27852331-ecf9-4711-8429-5158a4a7f8d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2789c19a-8e09-463b-9294-0769f5b7a2f0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d97fd14-d2ad-4225-9e23-bfce266942bb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a25da0bd-4edc-469a-8f34-c1a5e5ede152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "219bb896-84e3-4afd-bfc1-e8c9edb20f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8df642e6-08a2-4f1f-8bbd-36cd04e2cbfa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbb73d33-8938-46b3-bc68-b0fafd0f7735",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e5dc297-516c-4c8c-892b-906c184af5c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "215bffe6-325c-4e72-9c11-d35656d5fa72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f92544c-367b-4237-89f5-50e01f4809b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e231a59e-1926-46bb-ad77-6687c9df2713",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3853168d-db25-4769-b9fb-3beb0fed1b9d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "617d7ac4-2c68-41af-8bbb-f52a5bde3b4b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c08fbf2-0729-4351-b0a1-6480923ce191"
            }
          }
        ]
      },
      {
        "id": "e64ec639-bcbe-4a7b-8164-579d227ebbe8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "802e0455-961c-4ea7-811e-db38fdb8175d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da56d7e0-ba2c-4258-94a2-417fddef4b4f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "98f4f627-19ab-416c-8dff-4349cab8e0ba",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08fbbf0-b741-4fc2-9d87-a6e1ed6e6a77",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "589d8ccc-6d9b-47b2-bfb8-b3589471041b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a5e482-96e3-465e-a315-2151089b129d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37dee8ca-7434-4604-b849-9e225af96630"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcf48a48-1160-45e9-9489-fa3b9a85b379",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c715c98-69a5-48d9-9200-7f3122e0112a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "808cef10-29ea-4df5-b0fd-f17396b2289b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "142e32f6-86d1-40c1-b880-a0fb3a57c747"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2558372-9db3-4324-8dd2-8a2b633423c3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "29cad20b-9f09-4218-b519-399a93220888"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0aedcd6-0439-4059-ad53-93745ce3b694",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6dbb0078-52c3-4520-b579-c07b8877450b"
            }
          }
        ]
      },
      {
        "id": "00d5c486-2b39-4fb3-8f5f-83348e1f02a5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9ca161b9-3d67-4368-a3d4-fb67728d56b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "907318f0-4319-49f1-82e1-c4762f4bf652",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b4e16e39-5534-4ba1-a50f-2da1a970c7b3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e9efc3-2607-4207-bd49-e65151de5839",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "343c853f-6f5f-4266-9794-5be0c7a0cb85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc2b8e6-e638-4f47-9c0b-d873057c6ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7fedb050-7f4d-420c-b2b9-cf88f5548402"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3826e0d7-3f10-4255-8286-9e14b401b958",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ad290f0-89d2-4ab7-b7b7-dd4fba2372b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54378a18-36dc-41c4-b4eb-e627de1df487",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5b73ec6-a063-4ca2-a56c-303c2abbc8e4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9630e8bf-287a-4151-9fb6-39d9db650b8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b7745e13-d29a-4955-99ec-9eebc16f9e42"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6fe7b0cf-3ab8-470e-9ffb-1b41adea9f14",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af1d2bf6-3597-47ef-9c25-4d8b2d6360e1"
            }
          }
        ]
      },
      {
        "id": "84bd8e8b-cc04-4d9e-b819-adbbc3cc42b3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc2a53d5-2885-4ac8-b7b7-fe9bfc7c6087",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04c0b589-e758-4d4d-8668-623aa8293221",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5709e0ca-93ec-4c6f-846f-6c3c9db0638f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8fcdb5be-956e-41c4-8e96-0fd291ee75e2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe2a0d35-6b80-4d25-8b64-391f6aa635e2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 69.44210526315791,
      "responseMin": 6,
      "responseMax": 235,
      "responseSd": 22.26855975276813,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699403651802,
      "completed": 1699403680885
    },
    "executions": [
      {
        "id": "203f6010-acd0-41da-aa69-aa773cbb7458",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "dbd287a8-2998-4d43-af6d-4f19ef8b2c63",
          "httpRequestId": "233dbe36-64a6-4993-b9e5-fdb9266e5a40"
        },
        "item": {
          "id": "203f6010-acd0-41da-aa69-aa773cbb7458",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "694f70f3-048b-440a-8a4a-8b3904847c90",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "fb045700-8788-4192-ae01-66cdc4cfc770",
        "cursor": {
          "ref": "518f2087-8d57-4ca2-9eab-055fe2b41b96",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "325faa25-7c7c-412c-b2ec-0e9f5f1f0844"
        },
        "item": {
          "id": "fb045700-8788-4192-ae01-66cdc4cfc770",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "49560afe-9dba-4ede-9d75-5d8bf891dda2",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "e34a962e-cd88-4b18-afd5-4ffbf818bd28",
        "cursor": {
          "ref": "efc6b2d6-360e-421d-a657-362acd18035c",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "10e6474c-d476-4985-b5ca-9fba3c4468c7"
        },
        "item": {
          "id": "e34a962e-cd88-4b18-afd5-4ffbf818bd28",
          "name": "did_json"
        },
        "response": {
          "id": "82f895d0-701d-4ee4-b294-f4aaaf2e7649",
          "status": "OK",
          "code": 200,
          "responseTime": 220,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10df2512-9468-42cf-a25e-e8875a580b20",
        "cursor": {
          "ref": "a2d2eec6-bd75-420f-b358-8e18e9f93828",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ac3a4d4a-1c5c-4feb-89fb-d3b8757d4dfc"
        },
        "item": {
          "id": "10df2512-9468-42cf-a25e-e8875a580b20",
          "name": "did:invalid"
        },
        "response": {
          "id": "9d28c6c6-e57e-431a-bbaa-693de0147275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10df2512-9468-42cf-a25e-e8875a580b20",
        "cursor": {
          "ref": "a2d2eec6-bd75-420f-b358-8e18e9f93828",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ac3a4d4a-1c5c-4feb-89fb-d3b8757d4dfc"
        },
        "item": {
          "id": "10df2512-9468-42cf-a25e-e8875a580b20",
          "name": "did:invalid"
        },
        "response": {
          "id": "9d28c6c6-e57e-431a-bbaa-693de0147275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42be744b-a949-4e68-b7eb-ff4d1eef0509",
        "cursor": {
          "ref": "665fa770-af37-4449-ab2a-eecc2ed104c8",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0564e29e-1815-4709-8640-64fe74b314e4"
        },
        "item": {
          "id": "42be744b-a949-4e68-b7eb-ff4d1eef0509",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "16d81ae1-c73b-4276-bc99-4a4a2c45dc84",
          "status": "Not Found",
          "code": 404,
          "responseTime": 170,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0b340a-9dc9-4dad-a7c3-1ba37d408841",
        "cursor": {
          "ref": "562fa641-ca2d-4b8b-833a-b6716fd34a69",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "25f60e36-6f05-410c-a852-dc1c1215ad89"
        },
        "item": {
          "id": "fc0b340a-9dc9-4dad-a7c3-1ba37d408841",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "842aaf8f-c94b-4971-b7d8-5a912707ba35",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1dc52c-6dda-4636-a8a0-94150fa1818d",
        "cursor": {
          "ref": "dafb11a7-701c-48aa-b0ac-7968300611da",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2ceaee5b-edec-44aa-9fee-1719810a8c95"
        },
        "item": {
          "id": "5d1dc52c-6dda-4636-a8a0-94150fa1818d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b30e5c13-5b45-4f2f-ba1a-80786bcbc120",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ebfc6c-ab6e-4223-ad40-660ec61f7b5b",
        "cursor": {
          "ref": "86de0a45-8895-4a8e-965e-46f14e1221df",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "be960cae-f573-44ba-8475-0f75340ca34e"
        },
        "item": {
          "id": "e6ebfc6c-ab6e-4223-ad40-660ec61f7b5b",
          "name": "identifiers"
        },
        "response": {
          "id": "14f0ea9d-f6f7-4427-8f3f-ae72e943e734",
          "status": "OK",
          "code": 200,
          "responseTime": 218,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a5131f-24c8-4b74-8db8-0da22a28b116",
        "cursor": {
          "ref": "ffaf90a9-60b5-4dba-a905-8adb7cea4891",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3698ec9f-84e4-496b-a753-c6d90eafa187"
        },
        "item": {
          "id": "08a5131f-24c8-4b74-8db8-0da22a28b116",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3c4285c8-cceb-445a-8361-d3b78222a64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a58865b-bd86-4a37-be7b-c4201456e263",
        "cursor": {
          "ref": "e0865530-f493-49b6-960f-25c104440a16",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1524033d-69f9-4c54-89f0-da48a99b7db6"
        },
        "item": {
          "id": "1a58865b-bd86-4a37-be7b-c4201456e263",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "fdad29c8-b882-4fe3-9d18-7e390d2a786c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76fb717-323a-4607-b874-f183bcb5eedf",
        "cursor": {
          "ref": "9167b063-3b48-4c2a-b085-9a1caaf866a3",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3c65302a-3f00-4552-97a7-a5140b548e76"
        },
        "item": {
          "id": "d76fb717-323a-4607-b874-f183bcb5eedf",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2408bbef-8207-4406-bc0b-eec6ef69a1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cd661c-7003-4b80-8319-c6ae25a1039a",
        "cursor": {
          "ref": "f813b6f6-5f20-4503-a5d0-a859bc477877",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4483578b-dd5c-4d2f-aab7-3e8cfecef79c"
        },
        "item": {
          "id": "18cd661c-7003-4b80-8319-c6ae25a1039a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3e488d97-3b66-40ee-ae92-b714cb281485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2143b92-b9cd-4fe3-95fd-c36af824c5b1",
        "cursor": {
          "ref": "d59bad21-8f0c-41a4-905e-0c86bc693b18",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "695c5ddd-d803-4c20-ac63-23f3c23c573c"
        },
        "item": {
          "id": "b2143b92-b9cd-4fe3-95fd-c36af824c5b1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3b7961bf-7188-4e28-90f8-1bf4e4fb0d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c38337-d457-4211-a86c-593c091f3161",
        "cursor": {
          "ref": "8038d9e4-5cb6-49b3-929a-8ce68af1d61b",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "88918a31-98f3-452e-9d48-da10bb45b091"
        },
        "item": {
          "id": "39c38337-d457-4211-a86c-593c091f3161",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "01bd6bf9-1c53-446a-8a14-35af4285fecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9122d592-7a1e-478f-8a72-ea3889d7f715",
        "cursor": {
          "ref": "29d11a32-eadd-4a16-8d31-f6ab6a1ce537",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ada4d23b-f6d5-49aa-9f30-20a281e18a3c"
        },
        "item": {
          "id": "9122d592-7a1e-478f-8a72-ea3889d7f715",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "70e494c0-2dbc-498d-bf40-7e262ab086c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a24c4a7-f295-49ae-a987-0ad5ca799d3d",
        "cursor": {
          "ref": "190e3e4a-c3ea-4d75-8b9c-2e00de8fa37a",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a639ca11-89c4-44a9-9620-ce76ccea8de9"
        },
        "item": {
          "id": "0a24c4a7-f295-49ae-a987-0ad5ca799d3d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "443add26-bb2c-4b76-a24f-d165915aad42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aee3a79-b7b0-4c79-b055-6d7f428fa0e4",
        "cursor": {
          "ref": "6894a7a3-ac51-413e-8319-b175df8159cc",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a7f71220-dd3f-4f7c-a700-ce2e9e1abea8"
        },
        "item": {
          "id": "3aee3a79-b7b0-4c79-b055-6d7f428fa0e4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9af2f8f3-3c80-4215-8cbe-a80b1325ee41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a9c65b-5041-42d6-812a-6a37c1676a7c",
        "cursor": {
          "ref": "4c882ed1-174b-45ee-bd5e-3201a2f137cf",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ca9915eb-e348-4602-99c0-53a89e74aa7a"
        },
        "item": {
          "id": "67a9c65b-5041-42d6-812a-6a37c1676a7c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "28c76339-759e-426b-a588-b5ddfe492c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5361df-2653-458c-bc40-aa8823a3a394",
        "cursor": {
          "ref": "c14de44d-875c-486d-bc81-840e8a8f9aac",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d9323006-95c5-44ac-ba7d-bfe970209f92"
        },
        "item": {
          "id": "7e5361df-2653-458c-bc40-aa8823a3a394",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "04f91f90-11fc-45b9-a0da-d1ec7eab59e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c416c83f-0152-4078-a9e0-fa4a0cb825bd",
        "cursor": {
          "ref": "df393770-4b8c-4353-8c07-5b2c91d0ee39",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b4e77962-ae5e-44f4-b799-c92e34c370b5"
        },
        "item": {
          "id": "c416c83f-0152-4078-a9e0-fa4a0cb825bd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b614df7a-b94f-4d31-a134-fd188d1165e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7a02d4-fe6c-49be-93fa-c00ec075d815",
        "cursor": {
          "ref": "62e8bf57-2c06-476e-b3a2-9f5f470ba872",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4573fed6-9933-4fea-98ac-6a741e8653e2"
        },
        "item": {
          "id": "1f7a02d4-fe6c-49be-93fa-c00ec075d815",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "39aea53f-4152-40f3-bbf9-a690126f747e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3860d267-7e9b-4ce1-9f86-121e6bd11374",
        "cursor": {
          "ref": "a04e54dc-fc04-4a6d-8f2a-c6ae32b1d3a9",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2afe1bdd-1474-4bee-8ccb-c086319b2cd5"
        },
        "item": {
          "id": "3860d267-7e9b-4ce1-9f86-121e6bd11374",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0c9374c5-2db3-46a9-8b2c-4029fd23153e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aab4a6f-a60e-4ecd-9c8b-7306b381da98",
        "cursor": {
          "ref": "e24c0b88-50fd-44fd-bbcc-75403c2e83ba",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1324d9ad-339b-4f76-a57f-7e7145b3f8fd"
        },
        "item": {
          "id": "0aab4a6f-a60e-4ecd-9c8b-7306b381da98",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f4ad6c44-7449-4ab0-a9e6-4abdc81be429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ef97c6-b8bf-4852-a9ac-e252f41bd83a",
        "cursor": {
          "ref": "9070be9a-08c1-42cf-a12a-32c84035349d",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "86df37a2-acab-4a39-84e8-acc3c320857c"
        },
        "item": {
          "id": "d5ef97c6-b8bf-4852-a9ac-e252f41bd83a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8f906aa7-6ddd-45a1-809b-c85ae8e3eb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c86d74-e6bd-4e5f-8369-d1635b83d1a2",
        "cursor": {
          "ref": "88de841e-50e4-4dd2-93a5-0e9bf37af03a",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "75255061-7ae1-41fa-b662-76735e9c790c"
        },
        "item": {
          "id": "78c86d74-e6bd-4e5f-8369-d1635b83d1a2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6a802c49-b642-4204-a659-d4a4d4fa40c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd0840a-94af-4c84-8b10-7de59657b144",
        "cursor": {
          "ref": "54d5c42f-b50f-455a-be3a-b8bd88d38e3d",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f28c85bb-896d-4e3b-9033-4e839b3eca81"
        },
        "item": {
          "id": "4fd0840a-94af-4c84-8b10-7de59657b144",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "16eb31f3-2202-4a23-b2b8-39b5ae2abf86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8bf2e2-4435-4da8-8bcf-e312b9ddbb0e",
        "cursor": {
          "ref": "f8fd957d-a01c-47dc-a255-6db1057552cc",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b823b6ed-3334-4dc4-bb33-681e746ae77a"
        },
        "item": {
          "id": "fe8bf2e2-4435-4da8-8bcf-e312b9ddbb0e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9310afc6-adff-4a61-92c2-b709eb35a553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6263e8a7-1582-4253-8cb8-86c0c3d99ec4",
        "cursor": {
          "ref": "7a990b85-546c-4453-bcf5-4c914cf5d53e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b76bd896-c8e6-46f9-b75b-03b77d577fab"
        },
        "item": {
          "id": "6263e8a7-1582-4253-8cb8-86c0c3d99ec4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "907d1e5e-1bc4-40ab-bcdc-15a356664d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7008ee07-24e2-4963-b71f-e78e83b79f1f",
        "cursor": {
          "ref": "aa95e84e-a8be-41f5-931f-1c42eb972a3a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d7458d3e-40c0-4e70-a2c2-ea2b87f09f0f"
        },
        "item": {
          "id": "7008ee07-24e2-4963-b71f-e78e83b79f1f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "de58cf5e-c9ea-4f23-918d-14b768b05cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a962cdd-d964-4a56-9aad-4d7327cd3bef",
        "cursor": {
          "ref": "a1941941-f272-42df-ad20-cf5a6c65b940",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5529064b-ad36-4466-83f0-641662d429d8"
        },
        "item": {
          "id": "2a962cdd-d964-4a56-9aad-4d7327cd3bef",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7792c3a4-ff3b-45de-8ab6-f70615a64ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455a590f-b530-46f4-8342-ff28edaf6410",
        "cursor": {
          "ref": "43992bde-016f-4417-b909-1f720479731d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1457dd4f-948e-4833-a9e8-edccff03eeb5"
        },
        "item": {
          "id": "455a590f-b530-46f4-8342-ff28edaf6410",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "797b0104-6b6d-490e-9b99-c7027678fa07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88782491-d4fc-4ecd-9bdc-67d135761cd8",
        "cursor": {
          "ref": "c1b3d108-af57-4ce7-b7e5-9ea996646cbe",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2ba14ecc-6d17-40d4-9f97-05901d1391a4"
        },
        "item": {
          "id": "88782491-d4fc-4ecd-9bdc-67d135761cd8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b4faacef-3b67-4ae9-bece-995332bf9c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24869c25-74ff-4e30-8815-e4009d65f7cc",
        "cursor": {
          "ref": "a7350ec6-0826-4fe9-9273-60f474a5da8c",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1061c6e3-1ef5-47ee-896c-39206d1a2483"
        },
        "item": {
          "id": "24869c25-74ff-4e30-8815-e4009d65f7cc",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4fc11095-903c-4424-8f19-7fae706d890b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1180c0-d436-42d5-9ddd-68c22991500d",
        "cursor": {
          "ref": "f24222e6-d91c-4e5b-91c5-cb035920941a",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6fb155a5-8891-41a1-bf6d-4eea1e41c8bd"
        },
        "item": {
          "id": "bf1180c0-d436-42d5-9ddd-68c22991500d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "48be8fe5-00a0-49b9-89b0-59fa07b60135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9fe269-5b8a-4c5c-bf72-bce47b948b24",
        "cursor": {
          "ref": "801d374f-080b-462f-9d8d-6b0c6da96205",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5f0ac68b-6b2d-427b-90f3-fa0102e231bf"
        },
        "item": {
          "id": "6d9fe269-5b8a-4c5c-bf72-bce47b948b24",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d337032b-19bb-4ab3-a05f-c3bf91208a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a461ca9-ce63-44d1-9aa1-00cfd511afef",
        "cursor": {
          "ref": "94f08f6c-e838-46da-9334-b0ec14b00ed8",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "84450453-626e-4d2f-aa19-13d133850626"
        },
        "item": {
          "id": "8a461ca9-ce63-44d1-9aa1-00cfd511afef",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "30806a07-17a9-45cf-bfc9-f4c4d0f0c2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8c5141-8b78-4445-838b-04d345af1dbb",
        "cursor": {
          "ref": "fda54dc2-b650-4eb9-a42e-614fbb9923da",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "21d16b70-9a20-4c5f-af4e-9f3a0a67967e"
        },
        "item": {
          "id": "1d8c5141-8b78-4445-838b-04d345af1dbb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "db11a4be-459a-4b68-81d4-74de7c3e902f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7692174e-7ccd-4c56-87d0-1ea9f046a65c",
        "cursor": {
          "ref": "f0351232-1e9e-4353-8d27-5331f5ab9dd0",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c3f60bc1-aaab-4284-a3e0-1753491b8cd6"
        },
        "item": {
          "id": "7692174e-7ccd-4c56-87d0-1ea9f046a65c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "dfdc7c14-c78b-4369-b2f0-61bcf50d5a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04abdf7e-b57d-44f4-80ec-fb4633710b05",
        "cursor": {
          "ref": "b6c9e2d0-acc9-4363-96a6-092024b62315",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d5b64564-e6c6-4800-a13d-149ed78fb5d7"
        },
        "item": {
          "id": "04abdf7e-b57d-44f4-80ec-fb4633710b05",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0397b9b5-969d-479d-866f-1d3ece06e49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa57955-947b-46dc-b153-d49e74a3bb4d",
        "cursor": {
          "ref": "c0a0cb99-e3a4-4ba9-8f44-2e1374aca467",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b107b18c-df1a-414c-996f-39522a504ee1"
        },
        "item": {
          "id": "8fa57955-947b-46dc-b153-d49e74a3bb4d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8801f793-7d7f-4368-81fc-88d4a02e51cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed43a6bb-ed2c-46c6-b49d-07e97738b5fe",
        "cursor": {
          "ref": "4f3e63fc-e01a-4432-b7f5-84f01e94622c",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2b98a2f4-ff86-4b77-b966-c737b06c1a79"
        },
        "item": {
          "id": "ed43a6bb-ed2c-46c6-b49d-07e97738b5fe",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "aba17a4e-83ee-4c2d-8011-7aede3aeb7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816ab312-7e1a-4bc8-851d-f4a263c568f5",
        "cursor": {
          "ref": "eecca535-6e15-480e-8a03-e1511d1c4448",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b168584b-b996-4d35-b75b-ce2d6d1df5f9"
        },
        "item": {
          "id": "816ab312-7e1a-4bc8-851d-f4a263c568f5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "87aa612f-6ce5-407e-9766-750ce2cb65fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8aff447-9482-46c5-a356-b4ad1a39540e",
        "cursor": {
          "ref": "508109d3-745c-45df-8ffa-a16ff0da9637",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7ede7c28-0ec4-4cd1-9c53-a67b4f1f0c86"
        },
        "item": {
          "id": "c8aff447-9482-46c5-a356-b4ad1a39540e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2dd2559e-7513-4910-896f-70d362504bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235d7ec4-cef3-45ce-9dac-81afc67d6b76",
        "cursor": {
          "ref": "3e282d38-df52-4952-b79d-552ae24f49e3",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9795a38f-6b0c-47d3-a626-2c6d09b19312"
        },
        "item": {
          "id": "235d7ec4-cef3-45ce-9dac-81afc67d6b76",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "35ada51a-32a4-43a8-b7d8-94d24aecfae1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdb0b0d-4049-4311-a9ee-a5b5150136f5",
        "cursor": {
          "ref": "62122e88-9e18-4c7e-adf0-806633f25107",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d347b32b-a91a-42d8-b0d0-cc1eb558f0ce"
        },
        "item": {
          "id": "0cdb0b0d-4049-4311-a9ee-a5b5150136f5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "88e23838-b3ad-4775-9989-bfc7427ea494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cc231d-5160-4ad0-b375-9f3640ba738d",
        "cursor": {
          "ref": "343bed36-a01a-4ca7-8194-09af87c9455c",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "169730e5-ac07-43bb-8950-ded73b27052c"
        },
        "item": {
          "id": "e6cc231d-5160-4ad0-b375-9f3640ba738d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c5cf2ad1-c25d-438e-b526-de08408ada4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20127d7f-58f0-4d8d-b315-f62e2a14da71",
        "cursor": {
          "ref": "c926f13f-4739-4561-a329-a4f41c639692",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fd3da172-5633-4a35-ad21-048a3d0983a6"
        },
        "item": {
          "id": "20127d7f-58f0-4d8d-b315-f62e2a14da71",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "46f4b7e8-fb46-4a2a-8386-c7cd6369f080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fab22b-1913-4301-aed8-6a0935076303",
        "cursor": {
          "ref": "ea1aa2fc-641b-4dc6-be42-15686d52beca",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "83d72ea3-3105-47a8-8283-9fd2cf6da6cd"
        },
        "item": {
          "id": "81fab22b-1913-4301-aed8-6a0935076303",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5e971460-f7b9-44a1-b888-de1cb6f729a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be895cec-100a-4bba-9922-9e56035881ec",
        "cursor": {
          "ref": "a1b9c910-52a9-4a54-bff5-b5f80895a72c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e8681a9b-c7f5-444f-9f0b-203604df8ccf"
        },
        "item": {
          "id": "be895cec-100a-4bba-9922-9e56035881ec",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c6edcc07-c18f-411b-9fb7-49efa62652f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e600115-3945-49ac-aa9c-7200f96bc193",
        "cursor": {
          "ref": "d49b1f44-9ece-469f-a28c-4d9f639b18df",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "19aa29cd-c780-4a8b-ae29-d326fc1083e7"
        },
        "item": {
          "id": "7e600115-3945-49ac-aa9c-7200f96bc193",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "659dc0a9-6563-4f32-b2e7-347cea6a0218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cda7e3-99cd-42ff-9733-a1d1200ad5a5",
        "cursor": {
          "ref": "9504f1a1-73a5-42e4-a2d0-d055e2e3630d",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b7059691-121f-47a5-806b-3d71356e6c24"
        },
        "item": {
          "id": "d7cda7e3-99cd-42ff-9733-a1d1200ad5a5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c209cb4b-ca32-49ad-9b92-debbce2e61e8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 78,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042a95b5-f325-4f0c-af9f-2dc2f61c757b",
        "cursor": {
          "ref": "f7272595-7cee-4684-bd6b-fb744988a82b",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f9e6333b-2576-488d-ab4d-801210f60a0f"
        },
        "item": {
          "id": "042a95b5-f325-4f0c-af9f-2dc2f61c757b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4ac10897-bfa2-4450-9895-c7197d4c2cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9789d41d-e94d-4603-ab07-fb0855601149",
        "cursor": {
          "ref": "d76e8c55-97f5-4d5a-b471-871f1020c7f2",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d4f7aa76-6f5c-4447-8e71-8174f61651bc"
        },
        "item": {
          "id": "9789d41d-e94d-4603-ab07-fb0855601149",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c427883b-3403-48eb-88e0-821acb002fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2976224-98b1-44c4-98e6-b65d04fc3aeb",
        "cursor": {
          "ref": "ea5916d8-9df1-4422-b86a-d167f6f74515",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a2558400-fb8e-418e-83f2-075da8ec3bc6"
        },
        "item": {
          "id": "c2976224-98b1-44c4-98e6-b65d04fc3aeb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ff2a3d11-dc8c-46cf-8d04-088f5f86da0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a957ecf-1fe2-419a-b583-65a919e876d7",
        "cursor": {
          "ref": "d9b7aec6-6251-4b80-aaed-9012679bea09",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "72ef8e25-468c-4b8d-969e-b1480993f7d4"
        },
        "item": {
          "id": "2a957ecf-1fe2-419a-b583-65a919e876d7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f92be0ed-9ff3-4498-a400-f617b7697097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f5b932-3e15-418b-8d57-63d129ca9abc",
        "cursor": {
          "ref": "9a1a1a8d-70c8-42aa-9f4b-8be2f1deb0f7",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c1d1c5b0-69a0-4b56-b3ed-ae485df2ff7d"
        },
        "item": {
          "id": "b6f5b932-3e15-418b-8d57-63d129ca9abc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cc20e550-da69-4805-93fb-2377190ecc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4208e6-b489-4b13-8092-3ee5a7a53b9f",
        "cursor": {
          "ref": "44c370a8-8ab1-450f-950f-f88072470b8a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "90da9e16-6e25-4fdb-b198-b66014cbf684"
        },
        "item": {
          "id": "7b4208e6-b489-4b13-8092-3ee5a7a53b9f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a974aa5d-33e7-4145-8440-05d7a3c0d678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191b7a44-c6e5-446c-b27d-d44bd7ca649d",
        "cursor": {
          "ref": "ea4ec72c-6500-4047-a71a-609d415b224f",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d4b56942-67d5-431c-aa19-e16d05004039"
        },
        "item": {
          "id": "191b7a44-c6e5-446c-b27d-d44bd7ca649d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8e5aed67-2e17-4f95-b69c-e37d77810bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3370ae25-f6e7-43cc-bda5-9a2960d88843",
        "cursor": {
          "ref": "e02d4f43-e5f3-4dc4-b6ef-0ba2687a470e",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "285c1ebc-18c1-47b8-b131-76bc512345bb"
        },
        "item": {
          "id": "3370ae25-f6e7-43cc-bda5-9a2960d88843",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2c82323c-b322-4a86-a357-885cb6073a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ffb1c9-6751-47c0-83a1-89d5bc4210a9",
        "cursor": {
          "ref": "a9b45268-dc1d-4fff-abc8-6f2d7b18673f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "24f311bc-b290-4031-beb2-36f63bcc1021"
        },
        "item": {
          "id": "89ffb1c9-6751-47c0-83a1-89d5bc4210a9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ad449ee0-0621-46b5-8700-761e6a9a778c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a0ef9c-3c63-492f-a204-f4579ddbd025",
        "cursor": {
          "ref": "e74833b2-3934-4306-9a21-415e2f338035",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "626d7cea-b2e3-4238-8502-3764cb3f42ab"
        },
        "item": {
          "id": "54a0ef9c-3c63-492f-a204-f4579ddbd025",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "919cc541-43cb-44dc-a79a-16da1fab97b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f6fb6d-2ac1-4904-a26c-b47da3809e38",
        "cursor": {
          "ref": "6f0f461a-838d-469e-8160-7ab01859c45c",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3b8a6189-2b19-4473-b242-c1de26cf2843"
        },
        "item": {
          "id": "93f6fb6d-2ac1-4904-a26c-b47da3809e38",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6d8b20f5-1e1b-40dc-83b0-ac70051f191f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ead2db-5d3c-4715-a3b1-b576c9113295",
        "cursor": {
          "ref": "56d3ab50-56fe-48f7-86e0-09513bcb90f0",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7664fbea-63df-420d-b776-2873559e91e9"
        },
        "item": {
          "id": "a3ead2db-5d3c-4715-a3b1-b576c9113295",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d5eb15e0-dc00-4abc-bdbb-a8977da45069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdd01cf-f062-4648-acce-5869623b6f51",
        "cursor": {
          "ref": "017086af-a475-45ac-8ed0-9d160a1caf9f",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a3465c83-0808-41f0-855d-6d740dad6e9a"
        },
        "item": {
          "id": "5fdd01cf-f062-4648-acce-5869623b6f51",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1e4cd5bc-2324-4be2-be86-f7b0362873e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fbdf74-7a16-4cd2-b33c-3cea9aa96864",
        "cursor": {
          "ref": "b5b73ca0-5f73-4a3d-8fff-5a2ac4451ead",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c13e0619-1f32-4df0-8882-7786b479a547"
        },
        "item": {
          "id": "07fbdf74-7a16-4cd2-b33c-3cea9aa96864",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b6a1281a-d7b6-4d5b-a109-bef69b6af492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f42bc7-4bac-46a5-a482-4345cc901834",
        "cursor": {
          "ref": "9a1a1b5a-aa05-4d2e-b366-b77b6b112da1",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a8f2e283-474e-4151-99ec-e22eb6fddd42"
        },
        "item": {
          "id": "a6f42bc7-4bac-46a5-a482-4345cc901834",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ed6b2fda-fcce-46cf-a5ef-1cb8e7d026d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d133ddbf-e0ea-4f52-9013-6c73a68bc2fa",
        "cursor": {
          "ref": "7d7a8155-cfac-4fcd-b4c5-715077b1c8a7",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "106082c3-97c5-4d78-a51c-0b0e2ec23cd1"
        },
        "item": {
          "id": "d133ddbf-e0ea-4f52-9013-6c73a68bc2fa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ec8e47cc-341e-468e-8be6-74c269003993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bae869-7fb9-46c9-b264-02c59a39481d",
        "cursor": {
          "ref": "c333bcca-0a22-492e-9822-7761478e4bb6",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1469a0cf-919c-41d2-b28f-14797c52ce67"
        },
        "item": {
          "id": "60bae869-7fb9-46c9-b264-02c59a39481d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8c291341-4dd9-4869-9991-b54a61b1c488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb585bc-cc6c-49d3-9400-c2434a6510bb",
        "cursor": {
          "ref": "f477288b-0811-407e-9c2d-2eb7234b7c89",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5ba93ac3-3857-4f52-8f22-efd913e57605"
        },
        "item": {
          "id": "9eb585bc-cc6c-49d3-9400-c2434a6510bb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "324bfdf4-1d10-4bf3-9217-6cd8c886ec8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99833399-c564-4b40-a153-83df434cc2fd",
        "cursor": {
          "ref": "e4246978-927d-4591-859d-8a18c03679c5",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "91889691-775c-4473-bcd5-1e1b8660da5b"
        },
        "item": {
          "id": "99833399-c564-4b40-a153-83df434cc2fd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8eeb9d1e-11fa-42bc-8620-392e81f86bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2dfed84-9366-498c-a2a1-58586dd215e9",
        "cursor": {
          "ref": "d7d00dae-05f1-4cab-a199-e82338c8946e",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fa7954d1-439c-43b4-9508-35aac8404f1f"
        },
        "item": {
          "id": "e2dfed84-9366-498c-a2a1-58586dd215e9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "af0b56df-2cb2-442d-a249-2ed26a159b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633d0877-5d21-4491-95cb-4e69b4161adc",
        "cursor": {
          "ref": "6f87dad9-f69e-4b57-93ef-faf49fb11e0f",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2d83b1d4-cd7f-47b7-a550-28c04a07f6c1"
        },
        "item": {
          "id": "633d0877-5d21-4491-95cb-4e69b4161adc",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f1de97eb-0c0f-43b3-9f3e-6af2b8a98afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b69aa7-ab69-414c-8301-31f5ed59b9ad",
        "cursor": {
          "ref": "b96fb490-7bef-4e6e-b401-3b11654c39df",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e5ea9094-7779-456c-97fb-f85ea0fb49e6"
        },
        "item": {
          "id": "02b69aa7-ab69-414c-8301-31f5ed59b9ad",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e4932615-ee8a-4036-87de-fc9efa0c9b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6876acf-ba09-45a1-8d52-6ad13cdb67cb",
        "cursor": {
          "ref": "4f246fcb-c8ea-422b-9eea-436c554d90a8",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "71cfa6fb-65bc-4323-a1c5-7ecf36be1078"
        },
        "item": {
          "id": "c6876acf-ba09-45a1-8d52-6ad13cdb67cb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fa438e78-572e-44af-8766-2bba203efb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6892a72-9cbf-4d2e-9900-e844e03798be",
        "cursor": {
          "ref": "18a8b323-2977-4f29-aded-b2fdf5c2ea7a",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e9729c2a-5348-442c-a9f9-1f10ca5f7629"
        },
        "item": {
          "id": "c6892a72-9cbf-4d2e-9900-e844e03798be",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1917cdfb-43c8-4638-8c61-a81afd3baf0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef76b4b-ee36-40c9-b175-835724f58b18",
        "cursor": {
          "ref": "a6706470-e72b-4cb2-817f-4b545022cb45",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6b7f22a5-4747-4c2e-95fe-e27a465776cb"
        },
        "item": {
          "id": "aef76b4b-ee36-40c9-b175-835724f58b18",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "32514593-5338-4f93-922b-a96d78e2f540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e956566-14b0-406a-8eda-d1c34ab9a2ef",
        "cursor": {
          "ref": "403a1f55-b926-46f1-b392-158f467653ec",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5243b337-fe9b-4861-8cec-15c3b27b8f4d"
        },
        "item": {
          "id": "2e956566-14b0-406a-8eda-d1c34ab9a2ef",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "46bedb65-5d5a-4a95-8b5d-0620d8c0bbfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b812fc9-f66f-491c-bffc-5f119843e8da",
        "cursor": {
          "ref": "b37d29e9-357e-446f-80d1-aed20fd86d95",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "668b17b0-bfe9-420f-ad1f-0ed690ed680a"
        },
        "item": {
          "id": "3b812fc9-f66f-491c-bffc-5f119843e8da",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fd595e48-c373-43de-bcab-d09f04338bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317d6e1a-e4f7-458c-94f6-c2aac8f39b98",
        "cursor": {
          "ref": "106c2747-1447-4047-bf83-332f696f9f07",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "30ad9048-9840-4c14-bd08-7c9c340387df"
        },
        "item": {
          "id": "317d6e1a-e4f7-458c-94f6-c2aac8f39b98",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0547c0a5-5347-4be0-9e93-c8f0cc37a821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c53e1b7-244b-4ea7-964a-a49adfdee0d7",
        "cursor": {
          "ref": "ad42e151-a18d-4b24-8e0d-c1b5b16df581",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "83c0a224-1357-4b04-a0f9-d9742c52a737"
        },
        "item": {
          "id": "9c53e1b7-244b-4ea7-964a-a49adfdee0d7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3a5d3756-d5a8-45a5-afcb-f99d0090acd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7f7157-b89f-44e5-992d-f11985801c87",
        "cursor": {
          "ref": "12985f7d-cdf8-4d3d-a0c1-091bd32e1ea9",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "27e6a144-504a-46b2-a126-8e1b916e5ac8"
        },
        "item": {
          "id": "0d7f7157-b89f-44e5-992d-f11985801c87",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "62a7a948-43bb-412d-abb7-4e0958252b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123d4215-472a-49b2-b193-b72316ba6612",
        "cursor": {
          "ref": "7a26b6a3-1490-42bf-973e-f8f69169fdda",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b57ebad1-4914-440b-b1c9-bdfcae068a66"
        },
        "item": {
          "id": "123d4215-472a-49b2-b193-b72316ba6612",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fda84713-f373-478f-af83-cd30eb063396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebb468c-6dd5-4053-af1a-067df4ef0f22",
        "cursor": {
          "ref": "5043ebf3-e07b-4da5-b95c-9d57567d8392",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2bcdfd3c-0c35-4ba8-98b6-6618f06a6077"
        },
        "item": {
          "id": "3ebb468c-6dd5-4053-af1a-067df4ef0f22",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d1f461a9-b584-4c78-9571-098f196d25df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a36603d-9e6f-455e-b670-26e4ea99b33b",
        "cursor": {
          "ref": "8e6d4ff7-590a-42ca-ab46-c5e9f6fd2cfb",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8c55def2-f42a-4eb9-a858-f1a6ec093483"
        },
        "item": {
          "id": "8a36603d-9e6f-455e-b670-26e4ea99b33b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "65826485-2a07-469b-8cbe-667f65486fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe4b9a3-e2c6-49af-bcd8-07f3795bbf70",
        "cursor": {
          "ref": "a34fd52f-7f27-48da-9bf5-8a2ce189e984",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f6758802-a4d8-417d-b9b1-794f8a99f775"
        },
        "item": {
          "id": "7fe4b9a3-e2c6-49af-bcd8-07f3795bbf70",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b27fc3cc-2121-49d2-bf73-bdb08f950ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b91ba23-54e0-45d5-a238-f7f34742709d",
        "cursor": {
          "ref": "5f946fb4-9f1d-4005-bd46-350151500b8b",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3661c27f-2cda-4d22-80d9-18dfdd07fbb1"
        },
        "item": {
          "id": "7b91ba23-54e0-45d5-a238-f7f34742709d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "21e5767d-6ce1-4cc0-8237-98a3f1673c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31825a57-63e1-4a5d-ab2a-367dd51a7130",
        "cursor": {
          "ref": "2a38b39c-f429-482b-98a2-18fd5d87f0de",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f2d3ec95-c063-45bd-8c5c-41e68b73da4c"
        },
        "item": {
          "id": "31825a57-63e1-4a5d-ab2a-367dd51a7130",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "faabfab2-0a30-4af9-a1c4-70fee64d3933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1868fce5-ce42-4527-a0c5-6ca5ce86f32f",
        "cursor": {
          "ref": "50ef27fe-1993-4ba5-8440-ccfb2fe5557e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "46cdacce-aa5b-4055-880d-0185a3d45cf5"
        },
        "item": {
          "id": "1868fce5-ce42-4527-a0c5-6ca5ce86f32f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c8fdc1dc-2b91-43e8-af45-8b53ef9ebbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c548a4-952a-4755-a321-44db3d7fcf84",
        "cursor": {
          "ref": "4b171daf-527a-4865-8316-dfb6d4174b67",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "805e14e4-9ec3-42dc-9df7-af08e383b4a1"
        },
        "item": {
          "id": "83c548a4-952a-4755-a321-44db3d7fcf84",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "44329ac7-c3d5-4b73-9b8b-120edd446329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6960eef-e24e-4b11-b43c-94cc36407d2a",
        "cursor": {
          "ref": "f2eafb75-99bd-43fc-b5dc-5481b709ecab",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "97b37e57-367b-40ce-a11c-a7065cf2910f"
        },
        "item": {
          "id": "b6960eef-e24e-4b11-b43c-94cc36407d2a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "110088de-4a60-44bb-a124-ebbbc27b829f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020e4b15-dede-4e65-9866-4138b3d91fd5",
        "cursor": {
          "ref": "98564abb-6f71-4031-acdf-85ab66935129",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f08478b6-3e3d-4f7b-aaf7-e392a6a44dd3"
        },
        "item": {
          "id": "020e4b15-dede-4e65-9866-4138b3d91fd5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bf852e48-6acf-4079-8a8f-f29256114ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a7799f-0804-42be-a372-8d4d26f59750",
        "cursor": {
          "ref": "8e3890c7-bd3d-4d3a-9936-760830b114e5",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6f5eca6c-4a5d-4f56-8e60-14130da736de"
        },
        "item": {
          "id": "c8a7799f-0804-42be-a372-8d4d26f59750",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f6866fae-defb-4ec9-978b-7d85b94497d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0cf4e2-e952-4179-85bc-d0cd50ac67ed",
        "cursor": {
          "ref": "d4aeab4e-8df4-418e-8f29-0ec73588d3f0",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ed162105-3558-4eaa-986c-d36e3c8bacf1"
        },
        "item": {
          "id": "cb0cf4e2-e952-4179-85bc-d0cd50ac67ed",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "090dfe8f-bfa2-4001-8ae2-65876a3b60e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a67621c-79af-4135-8d06-f454d26e7fe5",
        "cursor": {
          "ref": "f8b0692c-5b9c-475d-9eaa-139a5c86424f",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "02ac886b-b949-4ab3-8aad-7d87d522376a"
        },
        "item": {
          "id": "9a67621c-79af-4135-8d06-f454d26e7fe5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8f8ab743-ffc1-4b1b-aa9b-240a01cedc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da554a95-a591-48be-a916-a3523b8da130",
        "cursor": {
          "ref": "208809d1-159b-4af6-88a4-c0e7b7b1b9ae",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c9024aee-83b9-4947-ba87-d1bd13f0f2fd"
        },
        "item": {
          "id": "da554a95-a591-48be-a916-a3523b8da130",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "be8d224d-da8b-44fc-9ea8-3ac09d159775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010d117f-8988-4f16-abf8-6189d871945c",
        "cursor": {
          "ref": "d33cc969-8371-48a1-ac85-f7aaabe585fb",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ead0dfa8-6223-4c67-9f18-c069fa2e0ce7"
        },
        "item": {
          "id": "010d117f-8988-4f16-abf8-6189d871945c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "62069fd8-17d3-4ff7-8778-f28b29978fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e25054-c20c-4007-93c3-90829b113cc1",
        "cursor": {
          "ref": "0100753e-882b-48ac-bd36-51bca96f11a2",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "76ec0904-9e21-4be3-aa8d-b56a191e5823"
        },
        "item": {
          "id": "e3e25054-c20c-4007-93c3-90829b113cc1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "687ff978-4f82-4f49-b04f-559e3c430061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25e7248-b8d7-4c6e-ae7d-99342950c716",
        "cursor": {
          "ref": "cce55e7c-d3bd-433e-af7e-da4f4433227e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "15ba2f6c-da0b-47e4-b69e-9f4b648d01f0"
        },
        "item": {
          "id": "a25e7248-b8d7-4c6e-ae7d-99342950c716",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5197d60a-a5ec-4b4c-aa65-b485b8863fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18fefaa7-aa42-426c-8d33-856a9c68d084",
        "cursor": {
          "ref": "326f95c6-19ad-45f9-87ec-12cb4ae027ca",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8e24ea05-8acd-4ec7-83e7-0b416e0d7ffa"
        },
        "item": {
          "id": "18fefaa7-aa42-426c-8d33-856a9c68d084",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "bfd46c8e-8cc2-4d0e-989a-8160a0d9835f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a21673-210f-4898-9f14-da59051506e5",
        "cursor": {
          "ref": "ce945db2-a5b9-49ee-9aea-b2e06355211b",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "86b0df1e-9986-4774-b9df-3ec411cc57ee"
        },
        "item": {
          "id": "86a21673-210f-4898-9f14-da59051506e5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a01343de-0299-48e8-bd9b-ac5c06b70ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d15936-9857-4843-8797-398f9d13bd80",
        "cursor": {
          "ref": "b8452832-9d89-4bb6-bb7a-0959e7468f49",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6a0662fe-4fdd-4e40-8b93-68a63d535372"
        },
        "item": {
          "id": "78d15936-9857-4843-8797-398f9d13bd80",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9d87b782-383f-4e6b-a59c-64489c2a8c50",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6de092a-f572-436a-8c9c-98c9603c2f9d",
        "cursor": {
          "ref": "8c865f9d-95d4-4251-989d-8c3a7193ca1b",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "953b00ad-5a97-41c4-9b6c-17c345908bd0"
        },
        "item": {
          "id": "e6de092a-f572-436a-8c9c-98c9603c2f9d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "499f5f72-7ca4-4e35-a842-0d9428bcd05a",
          "status": "Created",
          "code": 201,
          "responseTime": 103,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba2308f-ce5f-4868-b9e4-3ef59d73a9fc",
        "cursor": {
          "ref": "641fef8d-6e1c-4067-a819-ecdf4bdfb600",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6fbd992c-2255-4047-8024-e18762d13f6a"
        },
        "item": {
          "id": "dba2308f-ce5f-4868-b9e4-3ef59d73a9fc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "054111d5-d8ce-4f7e-ba2e-21ef5d255955",
          "status": "Created",
          "code": 201,
          "responseTime": 235,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0b9cef-4986-41da-8f21-b08967fdc71d",
        "cursor": {
          "ref": "76fcaf6f-ad28-46db-a2dc-ea4d391d3935",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "89df10a5-9d24-43ef-a279-ae316cad268c"
        },
        "item": {
          "id": "5c0b9cef-4986-41da-8f21-b08967fdc71d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3f09b2a5-f18f-409f-8539-c940dd3d40d8",
          "status": "Created",
          "code": 201,
          "responseTime": 116,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d14d5e5-9cf6-464a-b497-02e669e85054",
        "cursor": {
          "ref": "639bfb99-e2c4-43a3-ac94-1d007681deed",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1937007f-41af-4172-9ecf-df2006a4a2af"
        },
        "item": {
          "id": "9d14d5e5-9cf6-464a-b497-02e669e85054",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ef6ead9e-ed25-4988-9081-6dfa0af934ef",
          "status": "Created",
          "code": 201,
          "responseTime": 92,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79b0464-2fe8-42ad-956e-68a63f39a88b",
        "cursor": {
          "ref": "6f4cfb4b-851b-4f46-a001-c58a19540145",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "283de5f3-ac58-423f-8b83-56d90bb04b8e"
        },
        "item": {
          "id": "e79b0464-2fe8-42ad-956e-68a63f39a88b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a9733346-4f00-45fc-9a6b-92e020246713",
          "status": "Created",
          "code": 201,
          "responseTime": 95,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf52900-6189-451e-9032-48a347d972dc",
        "cursor": {
          "ref": "cab220b8-7b4d-4614-a25d-1f6f9c0fc117",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "03c4c3d6-b5cd-44e2-b560-7933c2b3055b"
        },
        "item": {
          "id": "0cf52900-6189-451e-9032-48a347d972dc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "eb94b87c-d183-4fc2-ad29-160f424bf8ad",
          "status": "Created",
          "code": 201,
          "responseTime": 87,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c46e50e-d313-440f-951b-e0c92fcdc4b5",
        "cursor": {
          "ref": "c1fb9bdf-0d6d-466c-b9ae-534dca97e51e",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b75fc81e-b661-4222-98dc-1c57ecf5be00"
        },
        "item": {
          "id": "4c46e50e-d313-440f-951b-e0c92fcdc4b5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "538a7021-bfaf-41b4-81ec-959fe9b6fcfe",
          "status": "Created",
          "code": 201,
          "responseTime": 90,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3674f361-6961-4fd6-81dd-178cbdac3fd0",
        "cursor": {
          "ref": "157a80dc-dd56-49f5-8055-e31ce37083ef",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "bf3f1213-11d2-4bc6-bc55-565b92484ed1"
        },
        "item": {
          "id": "3674f361-6961-4fd6-81dd-178cbdac3fd0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4dbdc8e2-b179-4a46-813e-16abbc452763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb60156f-d987-4c93-a496-738e6d5f90ae",
        "cursor": {
          "ref": "d5de9a11-baf5-4c87-9640-8aba2095b256",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7933ad61-d4b6-42f5-afd1-2b3441a0f2a3"
        },
        "item": {
          "id": "cb60156f-d987-4c93-a496-738e6d5f90ae",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cf9c8573-95de-495f-839d-e7c306a22dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8490787-20ff-42f8-a28b-d657ad11e595",
        "cursor": {
          "ref": "0493f49d-a794-49bf-8ba9-c89964a5007e",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7407a025-4bee-4d52-8217-b2cdad26af12"
        },
        "item": {
          "id": "d8490787-20ff-42f8-a28b-d657ad11e595",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b5afacc9-c4f9-42f9-b3ca-946d1964aa59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8fac7c-f2b1-4098-aca3-72f3aa68755e",
        "cursor": {
          "ref": "df643e46-7d8b-44d5-b0c1-2ec6fced5949",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "72c7d77a-615e-42fc-893d-379192472411"
        },
        "item": {
          "id": "1c8fac7c-f2b1-4098-aca3-72f3aa68755e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8ad99ca8-2716-4474-9d26-8bf1bed9a7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae889f4-cde3-4632-abcc-5280e863e229",
        "cursor": {
          "ref": "79755ba7-3033-4321-b915-737ce654be4c",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "60980cf8-5c67-498b-85ff-f1c623e02e8d"
        },
        "item": {
          "id": "dae889f4-cde3-4632-abcc-5280e863e229",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9ee8b8f8-5b71-47c2-9aa9-29dbbb33a377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc314054-2e36-4cf0-8abf-ede06899c6ff",
        "cursor": {
          "ref": "3e74d613-4713-4b24-9a2d-fa7a57bb569e",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "52cb5f60-e089-450a-8549-7db14c8c1680"
        },
        "item": {
          "id": "cc314054-2e36-4cf0-8abf-ede06899c6ff",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "832a5450-4ad0-44f0-afe2-727f168662b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3379c1-e8dd-4f16-9ded-b1a244c22b34",
        "cursor": {
          "ref": "b7512aa5-b18d-419d-83c5-68bb7c93d461",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "62984394-3f00-42cf-b92e-a24c50b322c5"
        },
        "item": {
          "id": "be3379c1-e8dd-4f16-9ded-b1a244c22b34",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ae15e133-a2a9-4cfc-b18a-c1c27e2e4753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e736be13-3043-4136-a66d-3dc1a06cbd5f",
        "cursor": {
          "ref": "523e67ba-b25c-4602-8ea3-81c701065bcf",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "672956a2-3909-4f6c-8fa2-835b015d47b2"
        },
        "item": {
          "id": "e736be13-3043-4136-a66d-3dc1a06cbd5f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e3151098-580a-44a7-8214-ca46290d94e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5f689a-2266-4ce5-b439-56e6f2ea5dac",
        "cursor": {
          "ref": "41d122a8-0d5c-49e9-bb8e-229eb7e8f68f",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "117db224-4365-418e-8657-1f8803bdf74a"
        },
        "item": {
          "id": "0c5f689a-2266-4ce5-b439-56e6f2ea5dac",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fc422045-a147-4bd3-87af-e1ad6c4d8828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c934ac80-bd66-41b0-afd6-e29cd636c85f",
        "cursor": {
          "ref": "780c3e93-874f-47fd-971e-ff2be4e85c78",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "085f17c7-6f9c-47f3-ae8f-01c2bd08ea4c"
        },
        "item": {
          "id": "c934ac80-bd66-41b0-afd6-e29cd636c85f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9010f0a2-a635-4982-b25b-79a06d793fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369be46f-7bf1-4b55-917b-bfbe36a6b5a9",
        "cursor": {
          "ref": "4688a36b-9c65-4d20-b80f-26488d159563",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b77e59b8-87ce-4233-b4b2-fb72f8c5182d"
        },
        "item": {
          "id": "369be46f-7bf1-4b55-917b-bfbe36a6b5a9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7e3e8fef-6046-49ac-83d3-2bf2fb202df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc83a39-ebc8-4560-a1ef-86bd33f3b4ad",
        "cursor": {
          "ref": "3a95b923-b058-491b-8221-b1ecc78a2e63",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "31a87c5f-8f7f-4afc-ac5b-4431674c9a1a"
        },
        "item": {
          "id": "dfc83a39-ebc8-4560-a1ef-86bd33f3b4ad",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0a257f13-bd6c-41a0-8066-2b17597c71f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79824060-239f-436e-95db-cbbe58fb2cd9",
        "cursor": {
          "ref": "24a44661-20ed-4d2c-819f-b2e1f6add51f",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ba2a9a96-f220-40ac-8275-9c93a2c67ace"
        },
        "item": {
          "id": "79824060-239f-436e-95db-cbbe58fb2cd9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "902d3789-45bf-4d68-8f7f-dd1ef6ebcd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203bf8f1-6ca5-4484-9115-ec17ffe26e9e",
        "cursor": {
          "ref": "cb8eea07-96ed-4316-9040-99304478d2ce",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c856d02e-bc2b-49d4-ab3f-ab211eca4086"
        },
        "item": {
          "id": "203bf8f1-6ca5-4484-9115-ec17ffe26e9e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "21a43fe5-41da-41b5-8e7e-6f9343285b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878f93dc-0c05-4a1c-80f1-6c094c0f145f",
        "cursor": {
          "ref": "5f04d75c-9c80-4b9d-95e5-5e8904cfc464",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "39ff9b71-416a-4165-83b8-521cf779edd6"
        },
        "item": {
          "id": "878f93dc-0c05-4a1c-80f1-6c094c0f145f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d7bf6023-dc88-4bb1-934f-43d79174d843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d631645-a3a5-453f-a164-4ff5b509194d",
        "cursor": {
          "ref": "b54fcce4-9771-4b7f-914a-ba426b36ee84",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bca32f70-6e92-4bd9-80f7-7951e0929b3c"
        },
        "item": {
          "id": "6d631645-a3a5-453f-a164-4ff5b509194d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "31356eb5-5e81-4396-9bc0-925eebcea65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea3c288-96bb-474a-91b7-b72894e08240",
        "cursor": {
          "ref": "77f1a00c-725b-4367-ba6f-d00a061454a1",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "078340de-46fd-42ad-b205-c32e83cd5f1c"
        },
        "item": {
          "id": "6ea3c288-96bb-474a-91b7-b72894e08240",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "52b5b9be-704f-493e-8e4b-155a1a8d54a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6259820c-5394-4eae-b7d4-ea8967cb0e45",
        "cursor": {
          "ref": "dee2e90c-5b32-45e9-a089-10efc03c83ad",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d0b08815-6214-47c7-9724-aae9d43da81b"
        },
        "item": {
          "id": "6259820c-5394-4eae-b7d4-ea8967cb0e45",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "aca03568-4eb4-4484-b27c-a3d8aab16f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ed161a-27d6-4e75-94e0-9c1d15c404ed",
        "cursor": {
          "ref": "98c61d44-8b9b-4d8a-a9a5-89cea188991c",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1f19cdb5-deab-4d61-bbb2-3e817b7b4b2a"
        },
        "item": {
          "id": "c1ed161a-27d6-4e75-94e0-9c1d15c404ed",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "92611790-d698-48a7-9e15-85ac8288503b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0078b17-daf1-4a31-8e32-bd23e7ebc483",
        "cursor": {
          "ref": "c3adf73e-1467-4800-bb21-e32fed78c2ec",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8e7a9536-6dca-4cfa-9a4e-8dfab17862c0"
        },
        "item": {
          "id": "a0078b17-daf1-4a31-8e32-bd23e7ebc483",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c9175896-074d-4470-b1cc-78646d7497c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3456eb92-24c5-4828-bd15-3a777b47493c",
        "cursor": {
          "ref": "e3b28e32-c7e4-4307-b7b9-68e88c9941a9",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "83c34112-17f5-4e9b-b9a5-b0098404ba0a"
        },
        "item": {
          "id": "3456eb92-24c5-4828-bd15-3a777b47493c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0371556c-1def-405f-aa77-51fba02ab158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554fe354-19e2-4116-8392-bb3742c16999",
        "cursor": {
          "ref": "63d432c8-ff94-4cc7-8804-396318250a16",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9657c357-c2b3-45d1-819b-ffe50459c7bd"
        },
        "item": {
          "id": "554fe354-19e2-4116-8392-bb3742c16999",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5e7fe800-1245-4419-9bea-6dae69ad81d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fc5889-0bc5-4eda-b809-4c65978a81ec",
        "cursor": {
          "ref": "f8f45fc0-d4e8-4248-89bc-ef7f350051a8",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "17465ad9-f412-4a3f-9c33-c34b69d74421"
        },
        "item": {
          "id": "02fc5889-0bc5-4eda-b809-4c65978a81ec",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "672e7b18-c7e1-40d3-9474-b13179b1829c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a817e3-0d3d-4cff-b993-b7eb4e96aec0",
        "cursor": {
          "ref": "66c634c4-0471-482a-a967-340067fd4b83",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8e975f69-9a11-41db-83b6-ef010bbf3c3a"
        },
        "item": {
          "id": "25a817e3-0d3d-4cff-b993-b7eb4e96aec0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "542ca056-aacd-4ecf-85ab-ec313eaf59a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9625f270-db4c-4391-9f35-c1925245d1cf",
        "cursor": {
          "ref": "1eb691d9-29f4-4d58-9b18-4c25f15d8b83",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2146c74b-c270-42da-a474-c45b65a331c4"
        },
        "item": {
          "id": "9625f270-db4c-4391-9f35-c1925245d1cf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fb8abc16-a3bc-4d74-ae23-59e673c49c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf0fd7b-2bf7-48cb-a3ae-2e2d9494c074",
        "cursor": {
          "ref": "47082901-dd28-4300-8180-9045e481b910",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "37c9a99f-64cb-495e-9557-a33d39c1cd3b"
        },
        "item": {
          "id": "3bf0fd7b-2bf7-48cb-a3ae-2e2d9494c074",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f93ab63f-0d3d-4187-b11f-ceae71b97767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3daec6da-919d-47f1-bf76-61992389673b",
        "cursor": {
          "ref": "cf3fc755-079a-4c93-a264-a4dadce4878e",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "80526146-779e-4ada-b6f4-9d29d7645b0a"
        },
        "item": {
          "id": "3daec6da-919d-47f1-bf76-61992389673b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e40a6cbd-c160-4dfc-8e8c-17f2f58032ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a702fab-81ff-44cd-8ef8-e0c0dc39ac16",
        "cursor": {
          "ref": "a97f8324-e6bc-46c1-b042-ede524541cf1",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dfb07862-1b0d-47f9-8877-753a1e19337b"
        },
        "item": {
          "id": "7a702fab-81ff-44cd-8ef8-e0c0dc39ac16",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "57490644-289c-4bc1-b1cf-c21f05437782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4725f7dd-2d27-4812-9922-709e2c8bd688",
        "cursor": {
          "ref": "9a9903f9-6ad7-43b0-934e-105f80a2dbe1",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c9a889d7-907a-4423-ae1b-9b084d21d59d"
        },
        "item": {
          "id": "4725f7dd-2d27-4812-9922-709e2c8bd688",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f8310f58-14ad-4c7d-a48d-cb401224a1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18dc449-083b-4e1e-a05b-055f694823c5",
        "cursor": {
          "ref": "8222b239-15d0-436a-b924-808c55bd551e",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "678e17b2-3ab5-4041-963d-68f40094c4f9"
        },
        "item": {
          "id": "f18dc449-083b-4e1e-a05b-055f694823c5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6a9708ed-1432-49b0-80ea-28af3c8d4bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d75ec34-8d84-4029-904f-e1d6f6ea1287",
        "cursor": {
          "ref": "9014a5fc-8298-42db-be47-d0a03c9a661f",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c768d3db-1a9d-43ef-b07f-e911b6a76c36"
        },
        "item": {
          "id": "5d75ec34-8d84-4029-904f-e1d6f6ea1287",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1e55e464-a09f-49c4-bd04-497a16861e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66898348-f528-4181-a835-96e9ccf357f1",
        "cursor": {
          "ref": "b92c3c9d-53b6-4e0a-8ea4-0000c40b2d4d",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f930f1cd-573d-4c95-a7f2-4a8626f2ff74"
        },
        "item": {
          "id": "66898348-f528-4181-a835-96e9ccf357f1",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "dec24394-178e-4888-9296-b2ea0732f08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e39b30-2713-4091-afd1-caa8addbc046",
        "cursor": {
          "ref": "1c146f26-42d1-404b-b487-99f9435edf55",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3ee334d1-6aee-46b3-9fc1-0c02ebe37711"
        },
        "item": {
          "id": "e6e39b30-2713-4091-afd1-caa8addbc046",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d71a572f-b37e-4546-9d93-37375970242b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920417b9-c0fc-4e08-8edc-6226d31db8fc",
        "cursor": {
          "ref": "db9a86d1-6483-442e-ac42-0581dff66ce4",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8fa23eb8-5765-4101-9c47-c7e95b89fd5b"
        },
        "item": {
          "id": "920417b9-c0fc-4e08-8edc-6226d31db8fc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6a740fcf-b1e1-4837-bf68-4e0ef616da3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac41c6c-af94-41c3-ac3b-1acaf706c408",
        "cursor": {
          "ref": "9befd63f-dd8d-429e-8abb-120d800403aa",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "df638045-3149-4721-b014-221e74480796"
        },
        "item": {
          "id": "9ac41c6c-af94-41c3-ac3b-1acaf706c408",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2ccafa44-7511-4c48-b3e5-501824e08c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069b1338-8394-46f7-8030-b2f99b972817",
        "cursor": {
          "ref": "8bcdba85-2218-4e25-81e3-fa946c79a9e8",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9a70db7b-33a9-482b-bfee-8b90597b31b4"
        },
        "item": {
          "id": "069b1338-8394-46f7-8030-b2f99b972817",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "46641a3c-e801-4678-9945-6fd207da38b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6d1ee2-414a-4e4a-a3a4-0ac5ee2d14db",
        "cursor": {
          "ref": "6d898016-c18f-4d13-aea7-180fe16ba54f",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "19d9401a-dc3c-4bee-8b96-6e902ba14523"
        },
        "item": {
          "id": "9b6d1ee2-414a-4e4a-a3a4-0ac5ee2d14db",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3c8f817a-cc09-46ba-bc18-36e9d118b3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefb35b2-ad67-4fcc-a617-13fe7256f36d",
        "cursor": {
          "ref": "6afc3462-fc5e-46e1-9862-b061bcf0cd73",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "070a3c8c-61cf-4192-aa7d-6288afd62bc6"
        },
        "item": {
          "id": "aefb35b2-ad67-4fcc-a617-13fe7256f36d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c3c8b43f-5d9a-4c06-b0bf-07c50af96e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a10fbd-a393-4195-854a-f240e3915ae0",
        "cursor": {
          "ref": "341afaec-d42a-46f4-8f2c-4b891b5d7e27",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "11418189-e434-4ea8-9173-4a8c20c011c2"
        },
        "item": {
          "id": "b2a10fbd-a393-4195-854a-f240e3915ae0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "635c69a8-87e3-42de-8765-cf7f5dcbb067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59835e36-7382-47a8-9bdf-47d9d0ece9e1",
        "cursor": {
          "ref": "cf842a0b-0377-496d-8236-ef6943819ef3",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a96b55b5-8ae3-452f-9852-75b1517acf90"
        },
        "item": {
          "id": "59835e36-7382-47a8-9bdf-47d9d0ece9e1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1bc3bac8-b868-4c43-89af-e2988d21dbf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cfc5a5-50f2-4783-b8aa-6a9a258efec7",
        "cursor": {
          "ref": "349bb2f8-e0f8-47b4-a709-8cb97d926dd3",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "be3d9cea-5a1d-4620-837a-3f0713bf32a3"
        },
        "item": {
          "id": "e0cfc5a5-50f2-4783-b8aa-6a9a258efec7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c1f27ab1-1c06-4949-9232-8cfaa26ce766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be72ec7-2e1f-4fc9-9c78-90927993e002",
        "cursor": {
          "ref": "c9460aee-1c71-4869-8a71-40dd99e7e3ae",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ab7486fe-0d1a-4d99-8bb0-d70af91ec6fe"
        },
        "item": {
          "id": "0be72ec7-2e1f-4fc9-9c78-90927993e002",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6e4f95fa-ea60-4e30-a6cc-ad0b8d572f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694af502-e368-4b7f-9a92-fc4b15d38c78",
        "cursor": {
          "ref": "55455bd2-ed10-4aaf-b21a-d63d98f081bf",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d9540e34-a949-49e4-9890-e272308e7db1"
        },
        "item": {
          "id": "694af502-e368-4b7f-9a92-fc4b15d38c78",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "388d0d28-ddfd-4cd3-b08b-3d080176dc5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38333dc2-ebbc-4c04-8c2a-4f0fff43c8cb",
        "cursor": {
          "ref": "3665b68e-47a0-4b10-9f01-05848a0f0442",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7fdc9acb-e5b3-43d2-b1ee-4450e44460c5"
        },
        "item": {
          "id": "38333dc2-ebbc-4c04-8c2a-4f0fff43c8cb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "37d40b62-a222-464d-9ef4-9d735782c199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075ddbc5-bbf8-409a-8dfe-50c0d364c24f",
        "cursor": {
          "ref": "1fa4f57a-32fc-4cec-b5e4-e1b158156aad",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f13a9bc3-02b5-45d4-a690-c85b07de69bd"
        },
        "item": {
          "id": "075ddbc5-bbf8-409a-8dfe-50c0d364c24f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "98ad164f-c1c6-4ab4-b038-84693f18c1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba523495-864d-4e1b-a54d-0f0ac7e7dc52",
        "cursor": {
          "ref": "eb71c9b7-5fa6-46b7-bac5-10301b7309df",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e9bcc219-5910-4dd2-bcff-a3c391d8d136"
        },
        "item": {
          "id": "ba523495-864d-4e1b-a54d-0f0ac7e7dc52",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "730d20f4-d426-4b51-870e-468ee10ea938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0693cd33-cf13-4bfb-b342-f1ffef31144e",
        "cursor": {
          "ref": "d30886f1-df87-4e3b-9f2e-a0efc7ccb032",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "105cf8c6-453f-4ee6-b124-c63d5665b5aa"
        },
        "item": {
          "id": "0693cd33-cf13-4bfb-b342-f1ffef31144e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e356ca76-c11f-4d70-b80c-a31de21f4494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeca8feb-ea99-4ea3-9710-b7d4c3f4b700",
        "cursor": {
          "ref": "32d9a77d-1448-49af-879a-1eccce48ac30",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "868e9b02-b1eb-4b94-9d24-e018ccec3eb0"
        },
        "item": {
          "id": "aeca8feb-ea99-4ea3-9710-b7d4c3f4b700",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d58c6078-8645-44f1-bfdc-9ecd6015f00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe06f7a7-3314-4309-a004-26ac05429d66",
        "cursor": {
          "ref": "d2083d64-57ad-49c4-9cef-2ef23ae3f77f",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c46ed91c-89e4-4cd0-8591-1d2f26fb3342"
        },
        "item": {
          "id": "fe06f7a7-3314-4309-a004-26ac05429d66",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "063647d6-0c67-4545-b7eb-6d49a50165ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a71da1-6074-467f-83ce-33498edb7351",
        "cursor": {
          "ref": "f18dfa19-4dd9-4a53-a5dc-f9ad2ec9a543",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "34f841f2-5f41-4826-8347-ef1ef6638e4c"
        },
        "item": {
          "id": "05a71da1-6074-467f-83ce-33498edb7351",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5033cea9-afe2-4647-8cce-457a5a444bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bfc6b1-4cec-4f97-ab57-b0577a76e262",
        "cursor": {
          "ref": "9fead16d-5726-4a6e-b3b6-efd25a86cd09",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d1444bee-0b50-4bb6-a0f8-72767970bb89"
        },
        "item": {
          "id": "e0bfc6b1-4cec-4f97-ab57-b0577a76e262",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a3838914-150b-4544-a253-bb1f58b54686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8d12e8-66c2-45eb-942d-afa20a102a18",
        "cursor": {
          "ref": "73db51fd-0757-4e9f-9b9d-208bb2d770e7",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9e69f9e7-76b5-4bb6-9ee4-390824a6a311"
        },
        "item": {
          "id": "9a8d12e8-66c2-45eb-942d-afa20a102a18",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6c360af7-5aa3-4e1c-92f7-4982f9e399b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8706c98c-e80e-48c1-8fb2-73a681e79e2c",
        "cursor": {
          "ref": "4032cef4-9a16-41f5-beb5-f1a6b05417c8",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b51c4be6-6b8d-418e-bba2-64b0315417da"
        },
        "item": {
          "id": "8706c98c-e80e-48c1-8fb2-73a681e79e2c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c387108c-6bdf-4e3e-b931-bba0e6f16864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfc9653-cf5c-45a0-b17e-3dc1922184de",
        "cursor": {
          "ref": "1a873fc2-33b0-42c5-bc70-ac5ee4b68004",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3f9f7ae6-0001-470e-a38d-e057991d45a6"
        },
        "item": {
          "id": "3dfc9653-cf5c-45a0-b17e-3dc1922184de",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4381a8e7-21f2-4ef8-8d60-1cf9e2cb6ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdb413a-8528-4b89-99e0-2816d535808b",
        "cursor": {
          "ref": "5d04ffd2-7324-4a47-bb14-106ab62560f2",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "412793c3-1840-420d-9ed3-53a05ca30741"
        },
        "item": {
          "id": "abdb413a-8528-4b89-99e0-2816d535808b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2f8a7964-88fd-448b-bf09-28a802e3c39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ae8a7c-59ab-4d8a-b0d3-ffd034c8ffb6",
        "cursor": {
          "ref": "5c7524b6-afef-460e-bb88-36b96818432f",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "27c1d626-0fa4-4e8b-9724-8515d6e15725"
        },
        "item": {
          "id": "f1ae8a7c-59ab-4d8a-b0d3-ffd034c8ffb6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "92ea8632-2e56-4fbd-aa3b-d07c33c64c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6dd09cf-6c08-4a16-9bd9-90d018721db5",
        "cursor": {
          "ref": "5b90d836-61d4-4535-8725-e420c9cf3ec6",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4e86dc32-afeb-4064-8f2d-6a48eff14d88"
        },
        "item": {
          "id": "e6dd09cf-6c08-4a16-9bd9-90d018721db5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8aa0c25e-5ea7-4740-9159-432565b825b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2636e1c8-27f2-4e78-be3c-6553074ee07a",
        "cursor": {
          "ref": "fe0c20ee-2a00-4f98-bf64-f261e713b84d",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "84a6260c-b0ee-454b-b29c-783a2f44c0f2"
        },
        "item": {
          "id": "2636e1c8-27f2-4e78-be3c-6553074ee07a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "849d90ac-4107-4262-9638-9529392edd98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf91ebd3-b4bf-4ea5-b32d-e054a5e88e59",
        "cursor": {
          "ref": "e8095af9-93a5-44bc-b599-b7db5156f9be",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c72d7737-7693-4375-b1f4-6285d57f8b3f"
        },
        "item": {
          "id": "bf91ebd3-b4bf-4ea5-b32d-e054a5e88e59",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7e8c2b0b-4ca7-4113-943b-8c0e47787894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5bfefe-e9a4-43d0-8008-812393f4c1ba",
        "cursor": {
          "ref": "dc00eebc-fbd1-4da8-9add-4bcc92afc351",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7190df9f-bf05-4ed4-b5df-7249c5eac30c"
        },
        "item": {
          "id": "be5bfefe-e9a4-43d0-8008-812393f4c1ba",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b80b48fc-ec1e-44b7-9130-8d020e113de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7019b21-933e-43a1-88ee-9ff5cbfa7b08",
        "cursor": {
          "ref": "47e0d571-6fcf-47d7-96a1-2237a785d86c",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bc24c85a-183d-497d-8cfa-28ce0a012a31"
        },
        "item": {
          "id": "b7019b21-933e-43a1-88ee-9ff5cbfa7b08",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6fe818ff-d1c5-42e8-a260-17909aabc748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee430dcd-9157-412b-83ad-9e7c3cb0433d",
        "cursor": {
          "ref": "06b115bd-427d-49b6-bd42-ae8b2b398d1f",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "76a55d92-7807-496f-960d-57bb66dddc48"
        },
        "item": {
          "id": "ee430dcd-9157-412b-83ad-9e7c3cb0433d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "812b25a8-72aa-4c06-b94c-6bacf245762c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d79e08d-bbab-40f4-8c98-0bea099a09f4",
        "cursor": {
          "ref": "3d9b88f6-126c-4e32-9e99-667aab66d3d1",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e7df1649-7776-40eb-9715-f080192dae4e"
        },
        "item": {
          "id": "2d79e08d-bbab-40f4-8c98-0bea099a09f4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6875f843-bfe6-4f59-8053-6b13a233158c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57d0009-37bc-47b3-93c4-cdcc4ec1fc36",
        "cursor": {
          "ref": "208c19de-0d6c-4403-8287-071e374e893a",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "78cfe338-7f6c-4461-9530-09d3f8e591e7"
        },
        "item": {
          "id": "d57d0009-37bc-47b3-93c4-cdcc4ec1fc36",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c34a4249-8705-42f8-8007-125e6fbb75e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8b2daa-693f-42f5-a008-9a10e23e79de",
        "cursor": {
          "ref": "b3f5720f-3ae7-43c0-aafa-bc5d1655f2ab",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0bf42930-7eee-4448-bdde-6e638a6d917d"
        },
        "item": {
          "id": "8d8b2daa-693f-42f5-a008-9a10e23e79de",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "41bb297e-1a1b-4ed7-9b96-626d002ffb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b6f72d-56fc-43a7-9ff5-4db61ed8bc13",
        "cursor": {
          "ref": "1829ad25-297a-4205-a478-31056722e757",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ee894692-02c8-453b-823a-1d5e5828feca"
        },
        "item": {
          "id": "72b6f72d-56fc-43a7-9ff5-4db61ed8bc13",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d97d9c2c-7e46-4afd-bd67-f2122549695c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db5f602-9826-47d6-b1d1-1af8e37f2c79",
        "cursor": {
          "ref": "8904ae6c-0058-48df-979b-67ff90015345",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "89d41c08-94a0-4f6f-a900-b1160d102b7c"
        },
        "item": {
          "id": "2db5f602-9826-47d6-b1d1-1af8e37f2c79",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "11ab94fb-31e8-4d0b-a33c-0a50b85ea0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a39304-98f6-417d-bc73-b7d1a8168c01",
        "cursor": {
          "ref": "a82da06f-5196-4770-8654-681f23c648c2",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a8a5e1b8-5f07-4327-84ac-1cd0ac55f4c5"
        },
        "item": {
          "id": "12a39304-98f6-417d-bc73-b7d1a8168c01",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0a274232-245c-438c-b56d-983909317a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2a796b-9ddf-4e52-9f45-ab4117a82833",
        "cursor": {
          "ref": "d13427fd-21b2-459a-beb8-acf16e2f69f6",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8e3c6035-ade9-45fb-acbb-338cbb3930a4"
        },
        "item": {
          "id": "9f2a796b-9ddf-4e52-9f45-ab4117a82833",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9a8ab619-a007-4052-bcc4-198880803779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6d5a5a-2dfa-457f-acc8-e5f2dd45e576",
        "cursor": {
          "ref": "ef2bca40-1904-4a83-9b63-dc3bf71996e8",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7a6553c0-e1b3-47d3-8a4e-4738c0c6910c"
        },
        "item": {
          "id": "4d6d5a5a-2dfa-457f-acc8-e5f2dd45e576",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "577983d4-ba50-46af-a9cc-18b1bac7109b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce4bf82-6a70-4524-a962-4442939fce48",
        "cursor": {
          "ref": "944cb3e8-6728-4733-b93e-dc79348287b7",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "900059e4-4643-4c22-bf6c-68f2bc1c8254"
        },
        "item": {
          "id": "6ce4bf82-6a70-4524-a962-4442939fce48",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7c20e8b4-9b1e-4c57-a2ea-7cb3011994c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b50191b-7a22-4ba0-a1ea-9b1cb0b71529",
        "cursor": {
          "ref": "1ee200c8-5ba2-45fb-af65-55383fa180c3",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "49611f78-a76b-49f8-9472-fd83e5a41e6b"
        },
        "item": {
          "id": "8b50191b-7a22-4ba0-a1ea-9b1cb0b71529",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5ee068c5-5920-4518-b5b3-188e4c969826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3818c2-417f-4a13-ad36-3d922f4d5dac",
        "cursor": {
          "ref": "299d4516-b786-4e53-bcbd-55f13915ee24",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9350398d-2a7c-4f68-b61f-828592280020"
        },
        "item": {
          "id": "fc3818c2-417f-4a13-ad36-3d922f4d5dac",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a42a5203-8239-4149-ae99-4315fe132b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a0aa55-a537-4933-b7a5-f26bd3e3930e",
        "cursor": {
          "ref": "3ed44bac-5659-46ce-8bc0-8bb3bf8f6ab8",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f5d10529-23fc-4957-b757-e28457ea3d13"
        },
        "item": {
          "id": "61a0aa55-a537-4933-b7a5-f26bd3e3930e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3211b688-40b6-45b3-a844-336f01eb8a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc40b72-7006-46fe-9a32-0a01ac136efd",
        "cursor": {
          "ref": "4d55ef79-e118-4ce8-99ed-084008b5d740",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "dff84bd6-4029-4237-95a1-7cef811fbe73"
        },
        "item": {
          "id": "cdc40b72-7006-46fe-9a32-0a01ac136efd",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e266a745-9ca8-429f-b5c2-8409a8ed7121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ebd87f-a20b-451d-bb02-7169f815b93f",
        "cursor": {
          "ref": "c4e646f1-9e6c-46ff-8f05-5bfdcd03cbf0",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fb2c5283-b7a9-4913-8868-c57bc945caea"
        },
        "item": {
          "id": "95ebd87f-a20b-451d-bb02-7169f815b93f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b5926744-2665-4b80-99a7-b267b4804d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de4f76d-c0af-4c02-aaf0-d993e8ef4cdf",
        "cursor": {
          "ref": "662eaf98-b72b-4166-81cb-3c9a3d29031e",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "69457b54-5a5d-4a6f-ae59-eec6fffb2a56"
        },
        "item": {
          "id": "6de4f76d-c0af-4c02-aaf0-d993e8ef4cdf",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "18d3b22f-0169-46aa-9da6-63c807cf547d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bd9985-b065-48ee-b2ca-387b0f557b6f",
        "cursor": {
          "ref": "f2089ef6-2d32-4e0e-97e9-d980c07736e5",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "488c942e-7289-4d12-9ebe-c6b6b50c6954"
        },
        "item": {
          "id": "18bd9985-b065-48ee-b2ca-387b0f557b6f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c88febd1-6397-4b54-8f5d-fae0802f7848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6862ad5f-0ef6-429a-a601-54fd9256e292",
        "cursor": {
          "ref": "c4c93bce-0e82-477b-ad7c-c8d6854e9801",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c96345bb-42d5-49f2-b760-9d287bb2c9c7"
        },
        "item": {
          "id": "6862ad5f-0ef6-429a-a601-54fd9256e292",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ff71ec7b-3112-499d-a045-41e2b0ab54f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64172338-5961-453b-8ed7-1e22bde44d76",
        "cursor": {
          "ref": "b571e5e5-3b27-4170-8c08-ae64ec46023a",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "09c5d842-130a-460f-8b47-14dfbb693570"
        },
        "item": {
          "id": "64172338-5961-453b-8ed7-1e22bde44d76",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9f33ff43-759e-49b7-a1d4-3fe8d75d2925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f3a59c-2bd0-4b92-9fcc-1ac290ab1b26",
        "cursor": {
          "ref": "44119eaa-16b1-4920-ae11-cb1f44c1718b",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0eadd32e-bd43-4631-9dc3-07d8b0a35996"
        },
        "item": {
          "id": "98f3a59c-2bd0-4b92-9fcc-1ac290ab1b26",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e937135e-3c0f-406f-8499-b67d0cb2c141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdc4bd0-d4e1-46b0-8e62-638ef06ebbbd",
        "cursor": {
          "ref": "27fbf8eb-8fdf-4ae8-80de-103bbb85e2ea",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4d0211ee-fe61-4d6c-b824-57aa4b7fcd6a"
        },
        "item": {
          "id": "6cdc4bd0-d4e1-46b0-8e62-638ef06ebbbd",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "398022d2-4d1a-40f1-8c26-8175d3ae26b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2b459f-97ac-40fd-b848-cf1e0dadb163",
        "cursor": {
          "ref": "120a92cb-69fa-406b-82ef-a2843a37f86f",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b21e7415-029a-46dd-9130-c79d55256f52"
        },
        "item": {
          "id": "7c2b459f-97ac-40fd-b848-cf1e0dadb163",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0e6ff628-538e-47c5-8eae-42c98b8e9cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d8d955-8d7c-4483-9853-3bb1fe6d539d",
        "cursor": {
          "ref": "6ed71437-098c-4c48-89e5-cafc1edf2679",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f85b3c88-94b8-40b4-8609-b1f7ddf3ce23"
        },
        "item": {
          "id": "a0d8d955-8d7c-4483-9853-3bb1fe6d539d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c925012a-3184-4af3-a3bf-be50fe5dadcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797f3ca4-89ad-4b35-8de8-80ed3e69f987",
        "cursor": {
          "ref": "2c16bcd9-108f-4636-9437-928dba1d7a4d",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "aa1199d2-eeab-48af-bcdd-53518620e160"
        },
        "item": {
          "id": "797f3ca4-89ad-4b35-8de8-80ed3e69f987",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e2ebb28f-00b4-440a-abef-50ff2f6776af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf76471-b56a-4ce5-a992-313faa9e24c1",
        "cursor": {
          "ref": "0dfa5efa-74ad-4e48-8839-1119d7a89824",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a107eec4-2c0f-4b0f-adfe-bc921e49d664"
        },
        "item": {
          "id": "4cf76471-b56a-4ce5-a992-313faa9e24c1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "cb3ffe99-4541-46a9-911a-7049c811089d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc58235-89b4-4f85-8b08-bec3af90a012",
        "cursor": {
          "ref": "cf0ba5d1-7ba6-4d74-881f-0216d6ae8c85",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c63e3e73-fe22-4f4d-b4ca-5402e882826a"
        },
        "item": {
          "id": "afc58235-89b4-4f85-8b08-bec3af90a012",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "63d73127-b3d0-48c7-a443-90c869debf35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29288db-10d7-4062-af94-8a154377526b",
        "cursor": {
          "ref": "32e84f50-ab57-41f1-b277-21cc02b8abe6",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7dcb50f0-c950-4493-8135-e1f3c46863e3"
        },
        "item": {
          "id": "d29288db-10d7-4062-af94-8a154377526b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "30743f53-8c47-4a4c-ac71-ee514bc5116c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04680aa-52d6-4376-86de-79e79d2adb45",
        "cursor": {
          "ref": "5bbea29b-165e-49e2-9e38-ba2f5a4daf59",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a553538c-fc0a-4091-8472-0fb0cfe52761"
        },
        "item": {
          "id": "a04680aa-52d6-4376-86de-79e79d2adb45",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "09de82d8-1bf6-466f-80dd-de4e5db09c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69eb44b-3507-43fd-8197-f6ae74111d2b",
        "cursor": {
          "ref": "c38d7ba8-92f8-4a9a-9c54-73bbef025eae",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "75fd58ee-41e0-4bed-a225-0b7f5e456108"
        },
        "item": {
          "id": "a69eb44b-3507-43fd-8197-f6ae74111d2b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "717e3766-20fe-45e4-a74e-69ef7d3d364a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65db3477-d250-449a-81e6-6db04a5235f6",
        "cursor": {
          "ref": "17ff148f-d09a-4bf5-8ec6-5b29bf86b4d4",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b5f3ff4f-9a27-4fce-9f6a-e7f4106591dc"
        },
        "item": {
          "id": "65db3477-d250-449a-81e6-6db04a5235f6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b5ab6bf7-b7bb-42a8-bd53-4ef5514cfae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4caa8e6-95f2-4d1c-86f4-965061b9eb6a",
        "cursor": {
          "ref": "efcd7cf2-a333-4023-a41c-1f0582781b97",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4109a26f-c55e-49a0-8717-68f0867bbb91"
        },
        "item": {
          "id": "c4caa8e6-95f2-4d1c-86f4-965061b9eb6a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a783017d-e390-444b-99c9-c1a6c5026653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f223a34-8d08-4a4f-a802-1ed5e32223db",
        "cursor": {
          "ref": "92903626-b096-47d6-ae07-8d257af2e2ee",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2ac81d8c-b350-4753-baed-c58e42ae276f"
        },
        "item": {
          "id": "4f223a34-8d08-4a4f-a802-1ed5e32223db",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8a2c84b3-1f21-4146-84d4-10a581b5879e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82460d6c-b74d-4f94-9ad8-cdabc4718d7f",
        "cursor": {
          "ref": "2cf2ea48-af35-443f-afbf-ad8492ffe796",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f7df5316-a3d1-4bbe-99b7-855e7a3cac87"
        },
        "item": {
          "id": "82460d6c-b74d-4f94-9ad8-cdabc4718d7f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "617bf31c-fb4c-44d9-8659-746034e5c399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ef8113-7fed-4edd-9e9d-b93f022df36e",
        "cursor": {
          "ref": "bf99f1af-eecf-4103-a928-6af764c8f8d1",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9abcbe03-df7f-4c18-aa7e-04dcfa565667"
        },
        "item": {
          "id": "92ef8113-7fed-4edd-9e9d-b93f022df36e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ba529a6c-3ada-4350-840d-07d6974ef8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41459ba-71bd-44c0-ab54-582642d42569",
        "cursor": {
          "ref": "d64ba9fd-4eb7-4b08-b511-50a3a41d9cec",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "cc054734-7b18-4e4c-ab69-39e599b5ac70"
        },
        "item": {
          "id": "e41459ba-71bd-44c0-ab54-582642d42569",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "01625784-12e1-469a-a5ad-4b41419fb5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd71ec2c-63ac-4a23-aa86-61da1c26663a",
        "cursor": {
          "ref": "8ea4e2f1-e574-44fb-aa1b-b79af40ecc71",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "951d4829-4499-479f-8321-0475f2e16a12"
        },
        "item": {
          "id": "cd71ec2c-63ac-4a23-aa86-61da1c26663a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0c2235cc-2b6a-4880-9359-d2d0355c9c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559c3648-4c2b-476d-bf53-1d1a4d4a0802",
        "cursor": {
          "ref": "6f0ea0b3-c1ad-43e5-b3c5-8e1737710e87",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1cd5f13d-b853-4269-9601-aa11729a7931"
        },
        "item": {
          "id": "559c3648-4c2b-476d-bf53-1d1a4d4a0802",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8b722f4a-4d88-464f-8f4e-45a30b58e47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046a9760-2ed5-40f7-bb22-713c114814da",
        "cursor": {
          "ref": "ae76f55e-7bc0-4a47-aba9-3236b0f3fede",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "21b37dc2-01e5-4000-ba90-eb8966063a1e"
        },
        "item": {
          "id": "046a9760-2ed5-40f7-bb22-713c114814da",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b6c3eba0-1fd0-4966-97d3-09ef30a639c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f4399d-a995-44e3-90fc-20b9ce23c903",
        "cursor": {
          "ref": "2db75a7d-34b6-42d9-bd33-54fd10466a6c",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "47d756aa-9778-40f5-a3da-cfd0cfe30232"
        },
        "item": {
          "id": "36f4399d-a995-44e3-90fc-20b9ce23c903",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f2266cfc-b0b3-4df6-b721-56fc1b841006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01bb3e8d-42fe-479a-9b9d-76f595204334",
        "cursor": {
          "ref": "1571a502-9e06-49d8-8149-2bea7801c7f9",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "cd3ca04e-af30-4125-8424-22581f899b9e"
        },
        "item": {
          "id": "01bb3e8d-42fe-479a-9b9d-76f595204334",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "751ed18a-12a0-4854-a874-7311947204dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25245d72-16e2-43fa-9e96-3ef8aa9c5e93",
        "cursor": {
          "ref": "cb2ee3d8-42da-43d2-9b66-56b496764c43",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a8e8fdb7-9f54-41e3-a5e5-da8bb4bd099a"
        },
        "item": {
          "id": "25245d72-16e2-43fa-9e96-3ef8aa9c5e93",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b5b9305f-5194-416c-aba5-ac6df8313e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c947d797-20ef-4044-81a0-c98e64954401",
        "cursor": {
          "ref": "37da7c39-fa18-4626-a87c-2c52cedc7a89",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6dcbac9b-56e2-42df-b07c-9f87029e9660"
        },
        "item": {
          "id": "c947d797-20ef-4044-81a0-c98e64954401",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a2eef964-f72d-4583-9c1f-d1c28fae7740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6ab770-c038-439b-8c49-41722668f841",
        "cursor": {
          "ref": "d9632435-9be2-4229-92c0-4c7a126d99cb",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "85c222f2-7903-4307-a1a3-530b5f564b51"
        },
        "item": {
          "id": "cb6ab770-c038-439b-8c49-41722668f841",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c4e137d4-1aa4-4173-aca3-f8c9604ce2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23ce326-5f65-4a14-961a-80bf08eeacf4",
        "cursor": {
          "ref": "c77676d7-f485-4d73-b35c-fa256d7d3c4f",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "388e7f12-d7c3-469a-a136-b50509ff6b6a"
        },
        "item": {
          "id": "d23ce326-5f65-4a14-961a-80bf08eeacf4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "334f3f57-97be-440b-b426-95a00f9350d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52eb99d2-54ba-4e3f-945d-781e4fb3a653",
        "cursor": {
          "ref": "1b82c8b1-de55-4ae7-9806-01f0adf3c4f3",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c7d22969-e915-4f6b-9790-1044294bb85d"
        },
        "item": {
          "id": "52eb99d2-54ba-4e3f-945d-781e4fb3a653",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a3808a70-dbcf-43c3-ae0f-dc1cd22f0866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1f0bc0-0128-413d-8785-7f0334395b7c",
        "cursor": {
          "ref": "73cfc7c9-3fd8-4a7f-901c-f8352b952863",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8f83aa51-469e-41b5-874a-61f54e4b6b3f"
        },
        "item": {
          "id": "1d1f0bc0-0128-413d-8785-7f0334395b7c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c04a5f56-15fe-48a3-a0d0-72ab2abf0ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15330c6-7ebb-4351-bd3e-e99f01d0f3f5",
        "cursor": {
          "ref": "e41bb3eb-e708-430c-962a-ceb7e0d420ab",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b0fd3309-2b7d-40be-ba6c-1b9a5a66964e"
        },
        "item": {
          "id": "c15330c6-7ebb-4351-bd3e-e99f01d0f3f5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "01f19299-230d-431d-a62d-444da697ad70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f9c028-9dfa-401a-b9a6-6df5bd5d17c2",
        "cursor": {
          "ref": "50bf1b62-431e-4ffb-81c5-bc0f7455a593",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f20c8316-c862-4c7a-a8d3-a98c5b93cbaf"
        },
        "item": {
          "id": "57f9c028-9dfa-401a-b9a6-6df5bd5d17c2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2d03ebab-8c20-4573-814e-6e6d14ebb2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1ebb5f-5076-4edc-b664-14135e4f49de",
        "cursor": {
          "ref": "95e8af62-a91e-4d35-ad01-c612879459dc",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "35de1a3e-5e7b-4d32-938d-27fc3a709f05"
        },
        "item": {
          "id": "3a1ebb5f-5076-4edc-b664-14135e4f49de",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0fc4d451-8aca-4343-a338-39e27e97fa36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0c8231-09f0-49b6-bba3-50929814b7a6",
        "cursor": {
          "ref": "d40d028c-3c54-43d9-86e5-0290dbcb4805",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "235e3fad-ce71-41c5-9c13-958e02209b05"
        },
        "item": {
          "id": "4d0c8231-09f0-49b6-bba3-50929814b7a6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "43531fc8-8ee0-43f6-af8d-219a32ea2d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7984e2f-e127-40e7-a877-561404ae12f8",
        "cursor": {
          "ref": "1234fe52-c319-4384-b207-66a38808d9c6",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "02e90c66-2c82-4b07-b1a4-c8053e2d1531"
        },
        "item": {
          "id": "f7984e2f-e127-40e7-a877-561404ae12f8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "eb594f54-e3fc-4568-b2fa-6934b592e978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e8fb7e-2697-4210-8d45-de8ede577506",
        "cursor": {
          "ref": "d2757bfb-a528-4eb3-a859-aee0c7d6a165",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f49f286e-13a0-4bf5-9450-9b62edf90451"
        },
        "item": {
          "id": "e5e8fb7e-2697-4210-8d45-de8ede577506",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e4b8a41a-ca1e-483b-adf1-084f9b5ebb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d2420f-e9d7-4dc1-aedd-bb11dbafcb94",
        "cursor": {
          "ref": "bb11f7ea-2617-4da0-aa90-6274bd486c23",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c551b78f-d5f4-4f26-a140-156a182f723a"
        },
        "item": {
          "id": "45d2420f-e9d7-4dc1-aedd-bb11dbafcb94",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4d2b6229-f4f1-4285-b578-7d98fc476173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf2ea90-76d2-4e1a-9b44-15a8424883cc",
        "cursor": {
          "ref": "5970a86d-cc1a-4ca4-ad35-89630de5f3e7",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6cf67486-5f59-498c-8588-fc094902b653"
        },
        "item": {
          "id": "daf2ea90-76d2-4e1a-9b44-15a8424883cc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e95930c3-6138-4f07-b773-cbcd11242335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f63422-b2c7-4ab5-a1a0-bf6ecb50ccf4",
        "cursor": {
          "ref": "740ac2b9-c597-4acf-b747-26356e837203",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d386c625-1afa-409c-ae2d-662c14d8c1d8"
        },
        "item": {
          "id": "16f63422-b2c7-4ab5-a1a0-bf6ecb50ccf4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7ca4f907-4e00-4642-b0ec-41d18ad9ea12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd9a83a-9cd8-4e15-986e-100112335126",
        "cursor": {
          "ref": "70413150-fbb6-41e1-bd9f-c4d85e958944",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "56b02c54-a5df-4563-8522-073053f6b9a4"
        },
        "item": {
          "id": "dcd9a83a-9cd8-4e15-986e-100112335126",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e9f5ee91-4fb4-4359-9031-a5939e481c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4088f201-bba2-4147-abe2-74355143c872",
        "cursor": {
          "ref": "814622ac-2f71-43c6-b40f-c36fd4a30f36",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b22677e2-dd72-4ad8-91c8-3a4c77c33dfe"
        },
        "item": {
          "id": "4088f201-bba2-4147-abe2-74355143c872",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f3498c8b-0acf-4314-b743-c83c15705b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001dce14-910b-4117-82f7-14121546486a",
        "cursor": {
          "ref": "09298111-dfb7-4c12-8b69-593dc491feac",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0a459c57-2d7a-45fd-8813-fdbd836102d7"
        },
        "item": {
          "id": "001dce14-910b-4117-82f7-14121546486a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3818db59-0922-49dd-878b-cf404e91c7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d437908e-ab0b-41f2-8d40-9b7c30ba84a4",
        "cursor": {
          "ref": "b8d2921f-4c06-49fd-a859-47362cf771ee",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1e6f0d93-3fd9-4a60-8480-a908ee4e16e9"
        },
        "item": {
          "id": "d437908e-ab0b-41f2-8d40-9b7c30ba84a4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4800395f-0dbf-4352-9075-a5ba901daac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe81faa-c2e8-4a2b-81f0-934d5fbff656",
        "cursor": {
          "ref": "f33b58c6-efa9-4d65-ba83-22b653279183",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5df806e8-b0e5-4692-aeb0-82fc023ee563"
        },
        "item": {
          "id": "3fe81faa-c2e8-4a2b-81f0-934d5fbff656",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c14c5bd1-189e-4045-890b-78de27f86e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341db305-26c3-44c5-911e-f39c3816d877",
        "cursor": {
          "ref": "f979fc25-f424-49cc-bcaf-c518fcfe37b2",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "78f2b688-1641-4c95-9c3c-ee085587604e"
        },
        "item": {
          "id": "341db305-26c3-44c5-911e-f39c3816d877",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0c9fc4b9-6b3d-48ce-a408-8ea74e78a7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb2f143-44ec-4917-a3e7-2037893c4eeb",
        "cursor": {
          "ref": "508b46c3-e3b7-485b-a5cf-e0cfdf111e8b",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5b470bab-eb54-4d3e-84c5-4181c6b615c9"
        },
        "item": {
          "id": "dbb2f143-44ec-4917-a3e7-2037893c4eeb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "194fe4f5-312f-48d8-a977-e6a5818c32be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0b853f-bc16-4c71-bf3f-192be0991235",
        "cursor": {
          "ref": "79946d77-b2f1-4d59-8885-a2b51a77a95f",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fa94092e-8f63-4884-aa0e-ee811f6a9fdf"
        },
        "item": {
          "id": "fa0b853f-bc16-4c71-bf3f-192be0991235",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8379a452-e572-4d0e-ac7c-989d90750d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f163da6-85b4-43bc-b0db-279b3a025aa9",
        "cursor": {
          "ref": "a37053a9-3e4c-478a-b30a-390fe544fe5b",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "57b6c611-5eac-4055-827e-9fd36fbe1584"
        },
        "item": {
          "id": "2f163da6-85b4-43bc-b0db-279b3a025aa9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "09dfaeea-9a79-4ef4-a8d5-7fc43f81624e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bbfc49-5138-4f5f-8da6-f0ee68380b89",
        "cursor": {
          "ref": "95111930-d8c6-4f0d-8ee8-11b4dc5207ee",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bda64159-81c9-4803-bfba-ab945af0c87f"
        },
        "item": {
          "id": "41bbfc49-5138-4f5f-8da6-f0ee68380b89",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "eb8b9da6-3f7d-41ba-a272-343039f3aa01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ba163d-48d3-448d-bb77-183fbc44d62b",
        "cursor": {
          "ref": "9f9efc32-22f4-4c27-9b54-3d1690e8f1d5",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c89a40d0-b4ae-40a3-b83f-da81f5359dc2"
        },
        "item": {
          "id": "e6ba163d-48d3-448d-bb77-183fbc44d62b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b3570c77-acd7-44a8-ba26-de400a5efa50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc376737-909c-42cd-a47d-c103c9d96fa3",
        "cursor": {
          "ref": "89e020f5-efae-4736-b308-47ed661389f0",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8a5c27be-5264-4bdc-8b34-dab8bd7ecaa8"
        },
        "item": {
          "id": "cc376737-909c-42cd-a47d-c103c9d96fa3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "748aac5a-dd1f-42ac-9cae-1e46b4df6cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677e0579-4dd1-41bf-a3f7-6707539e149d",
        "cursor": {
          "ref": "0b0472f0-aefc-42e5-89b3-0145cba8b809",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "64d36de1-2902-4ebd-bce6-25c40ba6aaf8"
        },
        "item": {
          "id": "677e0579-4dd1-41bf-a3f7-6707539e149d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b38c6f52-4b4a-4ff0-8748-6edbcaf64d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622c48c8-8a25-4f20-a98a-fc990dbef5f5",
        "cursor": {
          "ref": "2f4049c5-94ca-4d6c-811e-35f76008bffa",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f2ddd91f-3ae4-47fa-81c3-e54c5e5c7e86"
        },
        "item": {
          "id": "622c48c8-8a25-4f20-a98a-fc990dbef5f5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d7c0776a-5a12-4593-b708-7e32852322b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5693a9d-59b9-4c31-9fd6-f1fe70b51098",
        "cursor": {
          "ref": "e12c3c83-b3bd-4c41-9814-3cfe43300738",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2742749b-be48-411a-bd2c-decee6afa6c4"
        },
        "item": {
          "id": "a5693a9d-59b9-4c31-9fd6-f1fe70b51098",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f7ddc125-cf08-4d7c-94de-3a519b0946be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0514b786-7b75-421b-8eb4-3a23c955383a",
        "cursor": {
          "ref": "71b843b5-9afe-438f-88f6-a11cbe5b4c42",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ff91947f-ccb2-4df9-9410-24da0663699a"
        },
        "item": {
          "id": "0514b786-7b75-421b-8eb4-3a23c955383a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ea379ba3-4264-41eb-8ab2-8edc18024304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4811a1-6f81-4f0b-92b2-93dd944687b2",
        "cursor": {
          "ref": "388dacff-29d0-4ac0-b82e-c61dde2996fe",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ca939fc3-b636-4cc1-a6da-a3d57458f291"
        },
        "item": {
          "id": "1c4811a1-6f81-4f0b-92b2-93dd944687b2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d7f57e29-df8b-4b60-9204-add0356166a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beafaac6-bd8f-49d6-badf-75e676eabf55",
        "cursor": {
          "ref": "3fdc48c1-bc01-4c76-8415-003d5846f8da",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fdf1f105-b98e-46d7-98f9-ba27cbe58556"
        },
        "item": {
          "id": "beafaac6-bd8f-49d6-badf-75e676eabf55",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "368e3f61-1e7f-4e50-b45e-768872ac8acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac2b266-c926-40ce-b841-4ca7e278f380",
        "cursor": {
          "ref": "8a22c408-8bbb-4e95-aaec-66db47b768a8",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "58f4bc17-9c4e-4f1b-be8d-f339cf0f7ca6"
        },
        "item": {
          "id": "2ac2b266-c926-40ce-b841-4ca7e278f380",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "020e3e34-dbff-4452-846b-b82a4a5b2607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83ebbfc-24f9-407a-9bec-aca75638fb31",
        "cursor": {
          "ref": "a3f1aba8-5c1e-4018-a87e-5226a8b0488a",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d969f3f7-af8a-4bb8-b1ad-0113ef3dd4aa"
        },
        "item": {
          "id": "a83ebbfc-24f9-407a-9bec-aca75638fb31",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3a028e16-dbb3-433c-b933-d78451492c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32be3a18-93c5-408e-9213-7bb2cf9da646",
        "cursor": {
          "ref": "f0608da6-bd08-43d9-85ee-6a91653d39be",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "eb775724-8d99-4607-a7a6-eb7d88978166"
        },
        "item": {
          "id": "32be3a18-93c5-408e-9213-7bb2cf9da646",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c92deed0-f94f-4cd2-add1-0d3c4fdfdb50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad538d8-5d4c-432e-a9c7-4953badcf9fb",
        "cursor": {
          "ref": "fa531115-1bb1-4b04-ac13-8bb3c640e8ab",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0a11af68-505e-43c4-9782-7d0696729f2c"
        },
        "item": {
          "id": "7ad538d8-5d4c-432e-a9c7-4953badcf9fb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "945b47c1-2886-4687-906b-3b950d3f6dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1e52d7-3881-4a03-8fd1-a53ace8838a5",
        "cursor": {
          "ref": "88a19e3e-f689-470f-b5af-1218ca160f5a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "aa9b4576-24ba-47ea-9fe9-fb7702d5a5d2"
        },
        "item": {
          "id": "ab1e52d7-3881-4a03-8fd1-a53ace8838a5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ee40607e-5e5d-4773-911d-0290b1066df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c82951-216e-4332-bd4d-e0edc14b73c1",
        "cursor": {
          "ref": "22b0b14e-f81b-4feb-80af-bd551049a100",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5a86b66b-741f-42f9-9345-51b7c0fb0325"
        },
        "item": {
          "id": "a0c82951-216e-4332-bd4d-e0edc14b73c1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "48494fa0-f2dd-48d0-b133-bf88c9348cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd38fc29-93a3-410b-ba54-b957be3cf809",
        "cursor": {
          "ref": "d80e207e-adf3-4b1e-9a4c-e1c5bb9acd5b",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "80a7113e-313f-4934-9ada-c0ca62db0e2f"
        },
        "item": {
          "id": "dd38fc29-93a3-410b-ba54-b957be3cf809",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7e347bb3-4d52-4fef-9497-19077d5d737c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5627d02b-43e0-4ebc-9fa6-7eda62b7fdc5",
        "cursor": {
          "ref": "0818247c-f257-457b-a792-5d7b37b48de7",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "177d1440-a1e8-41da-a638-df1019bed867"
        },
        "item": {
          "id": "5627d02b-43e0-4ebc-9fa6-7eda62b7fdc5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a04c0241-fcad-4853-b955-a5c9f609ee56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24611eed-0955-4eef-8213-0422f9492d9d",
        "cursor": {
          "ref": "1a2e1d13-24d4-4646-b5fc-df52d578cc03",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8baf84f2-0586-44c3-8cc5-932d305eb00b"
        },
        "item": {
          "id": "24611eed-0955-4eef-8213-0422f9492d9d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1c4e6af2-6a50-48a0-ba81-a5460a3955a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72054ada-d7e3-41ee-80c5-8ab03d9834bb",
        "cursor": {
          "ref": "d61a7f42-6e04-48c9-8724-cf0e95e714e5",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "9751fe6f-fb6c-4f41-866d-490fad6d4dbd"
        },
        "item": {
          "id": "72054ada-d7e3-41ee-80c5-8ab03d9834bb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "91c6edc4-594e-4899-8c19-e467c5a9d100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de0051c-9adc-4c43-a232-88c06a784a47",
        "cursor": {
          "ref": "2c352e26-1779-4c99-b2e5-40f1841eeb8e",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0dda280e-60fd-4fec-a57d-a861188ac9ce"
        },
        "item": {
          "id": "0de0051c-9adc-4c43-a232-88c06a784a47",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7986409c-f87b-482f-af6d-f28069dcb7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3e5aa5-f0f9-4add-b06a-21e3cf8f53ad",
        "cursor": {
          "ref": "4db5bc06-07a9-45ba-8573-7eadc9e3552a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "34305f04-74e4-4d01-89c0-28c7a6bc1555"
        },
        "item": {
          "id": "6c3e5aa5-f0f9-4add-b06a-21e3cf8f53ad",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1d140e48-f6dd-4905-94d5-13b7433cf60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d43235-e48d-4d25-a025-7210a018747f",
        "cursor": {
          "ref": "910dba59-8f41-4009-aeeb-ad5cb8102881",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "98a06d98-b49f-4144-b230-979d52ae2e1f"
        },
        "item": {
          "id": "02d43235-e48d-4d25-a025-7210a018747f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e70eb38b-b787-46e9-8d52-63b9243f147e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22571c36-6610-4154-9429-218305e51ff8",
        "cursor": {
          "ref": "f7765924-3a9b-4891-b5d8-e6d78998db96",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a429178b-6072-4a18-ac8c-f91cc76f52da"
        },
        "item": {
          "id": "22571c36-6610-4154-9429-218305e51ff8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "59713992-dec8-4d57-9f60-5e05750a306b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72650d3a-634f-4d65-bf2e-3c3b244cfcb4",
        "cursor": {
          "ref": "005e83da-1086-4597-8110-27d2ce232916",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "607e6f3a-c8f8-4a8f-b217-7773bc2ad2d5"
        },
        "item": {
          "id": "72650d3a-634f-4d65-bf2e-3c3b244cfcb4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0ff95205-6eff-41ce-9ba2-1e151c987810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25211875-a465-4a64-8813-358c36b96fe7",
        "cursor": {
          "ref": "da37ec03-c533-447a-9152-da60014a519d",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6c75042c-c4af-4786-9060-e508346a47d9"
        },
        "item": {
          "id": "25211875-a465-4a64-8813-358c36b96fe7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "edda9a62-b997-479b-9666-644dd9180f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a117eb1d-7f1d-4815-be35-25cf03dea4b1",
        "cursor": {
          "ref": "915d3dff-e0e2-4371-bb80-621dcad19280",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3dc0475a-ca73-4fe3-afb8-a7116f96b778"
        },
        "item": {
          "id": "a117eb1d-7f1d-4815-be35-25cf03dea4b1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f6cd10f3-c52b-4d55-9793-b69026f55184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a604f210-cc6f-4fe5-aac7-72b5d51c7b83",
        "cursor": {
          "ref": "0bf3ed7c-4ab2-444c-912f-3d164c443c25",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d4a49a7a-27e1-4b61-b8c3-5b6950ff748f"
        },
        "item": {
          "id": "a604f210-cc6f-4fe5-aac7-72b5d51c7b83",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fe6316d1-65d9-4e49-aadc-b5f6fb3d2c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a634442-3f01-47b4-b029-ce45526b618b",
        "cursor": {
          "ref": "11471dbc-d18d-4f10-9e46-ab12861848a7",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c3b8fd72-5fb3-411f-a77d-1a693d698541"
        },
        "item": {
          "id": "0a634442-3f01-47b4-b029-ce45526b618b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3a7ea3fd-b78a-42f2-93b3-4ce704eb7d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf83a7e-fa2f-40d4-a0b2-38230852b4c9",
        "cursor": {
          "ref": "6661247c-c40d-40c6-91c6-299e43513b1d",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3e0860ca-165c-4121-b5ec-8c16de83c8fd"
        },
        "item": {
          "id": "3bf83a7e-fa2f-40d4-a0b2-38230852b4c9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b7e87f4d-580c-4c2f-9dc5-b45f05287a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb6a445-f52e-40b9-89dd-ecc3ffc249f4",
        "cursor": {
          "ref": "f97e2f3c-21da-4fe4-86b1-ff0db69482d4",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "8f01e1b5-938c-4aea-afa3-02773c1c8edf"
        },
        "item": {
          "id": "abb6a445-f52e-40b9-89dd-ecc3ffc249f4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c76fe554-2b0e-4302-bba8-2921a3ffd1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786634c4-f56d-44b2-ae26-e8e294509541",
        "cursor": {
          "ref": "c2d66e31-7fe9-4e68-9654-c9fa95e4f85d",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a7d50fad-5752-4e59-9248-acce711f9baf"
        },
        "item": {
          "id": "786634c4-f56d-44b2-ae26-e8e294509541",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fcc08154-1ce9-4ac4-9bb6-63bad50f8d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb5b02a-c3ac-4381-8657-76537345b352",
        "cursor": {
          "ref": "5707fb33-adf9-448e-b490-bf999b6d429a",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "fed95612-54f6-4628-a737-e55a459659b4"
        },
        "item": {
          "id": "1fb5b02a-c3ac-4381-8657-76537345b352",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "295c9e1e-e3d4-4891-9bba-cae32651558a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a834d0c-bb85-47ad-992d-8f75903f5c17",
        "cursor": {
          "ref": "b23009b1-1740-4e3b-a751-808e37c324ad",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "4115f00c-d755-4c29-ab16-9425eb2d131d"
        },
        "item": {
          "id": "6a834d0c-bb85-47ad-992d-8f75903f5c17",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e8d12e07-40c5-46c8-9862-ad3d486ea4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044f6ea3-f594-4fbd-a541-584a678e57a5",
        "cursor": {
          "ref": "ac23399b-6e60-4771-9535-dc9183d8409f",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "1d66822c-78d0-40c5-b530-660510911031"
        },
        "item": {
          "id": "044f6ea3-f594-4fbd-a541-584a678e57a5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "98c3dd45-37f3-45c2-81bf-35fd1ab68ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581df221-403c-4842-8ab8-560cc1afe0a3",
        "cursor": {
          "ref": "e903130f-56fd-4621-b0c0-bdce987eb29d",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fe106bb2-7b0b-4e1b-b53d-a6eaa2ff76ea"
        },
        "item": {
          "id": "581df221-403c-4842-8ab8-560cc1afe0a3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "04f7c25f-fffc-4d47-b96a-d27f09f4f22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98ae681-b929-470e-b35b-a535e4198043",
        "cursor": {
          "ref": "ae23f051-e0a8-48db-96b0-3173cfa40f96",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3c209c21-f29a-417e-9b67-d8886cd54b72"
        },
        "item": {
          "id": "c98ae681-b929-470e-b35b-a535e4198043",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3e32a9da-f0a8-4c0c-9720-f90c62910c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ec0e19-af10-435b-881a-b8b46de95f2a",
        "cursor": {
          "ref": "2daedfb6-9f48-47c8-bbdc-2b01a6de1c26",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "79f3856e-8ad3-4986-83c2-6af5c6f7418d"
        },
        "item": {
          "id": "f7ec0e19-af10-435b-881a-b8b46de95f2a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "dcac2992-89dd-4d0e-9684-aadcfe18f82c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99a6b09-342d-4489-801f-637e827da525",
        "cursor": {
          "ref": "dd7fea9c-2552-4aa8-87c8-dac420d42691",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "294651ac-4eec-4b09-a75e-b857a4697665"
        },
        "item": {
          "id": "e99a6b09-342d-4489-801f-637e827da525",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "78ee5b46-0058-449c-ba19-1c847fba7143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c596605-4ee5-42bc-9ee7-feafe8194690",
        "cursor": {
          "ref": "fdb2bffc-f6ed-472a-9b6b-ee33cb7ec3a5",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f756638c-62a3-44c2-b09e-d0383abed79d"
        },
        "item": {
          "id": "1c596605-4ee5-42bc-9ee7-feafe8194690",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fa7f1cc7-dc53-41b4-a82e-c44a351282f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f225f2a-b806-46f8-a565-c9b3639f06da",
        "cursor": {
          "ref": "0a35e92f-2052-41ee-bbfb-7e09cf0422c1",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8c51736e-2ad7-48c7-b85b-064ccf9160fc"
        },
        "item": {
          "id": "9f225f2a-b806-46f8-a565-c9b3639f06da",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "85d827ea-c035-4708-8af9-9a106faa2aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4529bff9-9720-4e51-85f0-716f02a1a5d8",
        "cursor": {
          "ref": "5bbe3809-20ac-4dec-9b20-966ce546904b",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "98209e49-5f3e-4845-b3d9-11b76538666c"
        },
        "item": {
          "id": "4529bff9-9720-4e51-85f0-716f02a1a5d8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d984b49e-d77a-4f31-b51b-f0088c2e6cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1467d7cb-58ea-4a87-b7ac-d64d67cba934",
        "cursor": {
          "ref": "b406e4ec-5334-45ea-a5f7-1e089268c318",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c56ff1ff-45bd-4b2e-9367-ec767b81859f"
        },
        "item": {
          "id": "1467d7cb-58ea-4a87-b7ac-d64d67cba934",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b7da01e6-8cf6-4379-aa53-aae07004a8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2c6942-c571-4ef0-b85b-b5469f1b2dde",
        "cursor": {
          "ref": "cf5c4b39-8a9e-491c-9815-25243e53ec10",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a3f0c74e-dbd1-4ada-b303-ccfe3a59bd34"
        },
        "item": {
          "id": "eb2c6942-c571-4ef0-b85b-b5469f1b2dde",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "401260a5-ea75-4647-a12f-6fd58ceef977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4bdbaee-71cf-42a4-a9b6-186caa29a26e",
        "cursor": {
          "ref": "43a5318f-1a67-4ba2-a214-2af9b7f11ef8",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "3aed3d21-5206-406d-90f9-69f45c5abb89"
        },
        "item": {
          "id": "f4bdbaee-71cf-42a4-a9b6-186caa29a26e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b519473b-c33d-4135-915a-4771d6841156",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d07c4d6-133b-4ead-a214-50c47b890037",
        "cursor": {
          "ref": "dc9be8ef-5376-4712-8b7d-0e93821af87e",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b310d46a-80d7-4f16-aa49-af1bf724cd8d"
        },
        "item": {
          "id": "3d07c4d6-133b-4ead-a214-50c47b890037",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e65db027-6d0b-4438-8126-c293fd69233e",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f561ef-e65c-4020-8844-fdb5e6898115",
        "cursor": {
          "ref": "d5f3ca18-543f-4d7c-8e94-ee5203faaad9",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6b35dc39-6b12-4103-bb67-9bf7b8ea05a0"
        },
        "item": {
          "id": "10f561ef-e65c-4020-8844-fdb5e6898115",
          "name": "credentials_verify"
        },
        "response": {
          "id": "254167e2-1f0f-4fca-8cb1-4856af2d4c25",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb38e70-9f3c-4649-93bd-93c4905d0420",
        "cursor": {
          "ref": "48cabd3d-3efd-4ca7-9e78-3cb82ca522ad",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8256461a-09b2-4aa9-a53f-9a182b337bb9"
        },
        "item": {
          "id": "3fb38e70-9f3c-4649-93bd-93c4905d0420",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4f013486-663f-4842-aa31-9da1836f9960",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2789c19a-8e09-463b-9294-0769f5b7a2f0",
        "cursor": {
          "ref": "c0c8d9bb-902e-4d93-bc7a-a0cc764d4eb6",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6bab98f7-de4c-4b86-88ff-171671d89c95"
        },
        "item": {
          "id": "2789c19a-8e09-463b-9294-0769f5b7a2f0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ef525789-ce39-4304-a14a-0bc2edb61dd4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2789c19a-8e09-463b-9294-0769f5b7a2f0",
        "cursor": {
          "ref": "c0c8d9bb-902e-4d93-bc7a-a0cc764d4eb6",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6bab98f7-de4c-4b86-88ff-171671d89c95"
        },
        "item": {
          "id": "2789c19a-8e09-463b-9294-0769f5b7a2f0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ef525789-ce39-4304-a14a-0bc2edb61dd4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f4f627-19ab-416c-8dff-4349cab8e0ba",
        "cursor": {
          "ref": "3d1fe17a-2f5d-457b-b67b-5e6f5f07ad5c",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "41559ecd-2ccc-47ae-8764-75db54de43a7"
        },
        "item": {
          "id": "98f4f627-19ab-416c-8dff-4349cab8e0ba",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8203edcd-301e-4c28-b4c2-98e339c24d2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e16e39-5534-4ba1-a50f-2da1a970c7b3",
        "cursor": {
          "ref": "2a9d4b48-9b7b-4e9e-a19f-6056cf540689",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "c6659051-38e3-4f94-b59e-ab28b98600a0"
        },
        "item": {
          "id": "b4e16e39-5534-4ba1-a50f-2da1a970c7b3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "de765d7a-3243-4759-b3b4-6ed01db77e61",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}