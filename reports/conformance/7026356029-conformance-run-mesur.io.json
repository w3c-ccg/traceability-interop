{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c7b6e57b-ede2-4f34-be27-ee32ddbdab6e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "722c245c-92f1-4e22-a491-60cdbc29a376",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e4792931-5a9d-4d05-8982-262e90f1ef24",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "753b8162-a7ba-497c-8b4b-43c4ddbd5c5a"
                }
              }
            ]
          },
          {
            "id": "756c077b-d600-48ec-b5c4-5c3a07425258",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "93b42a3c-0ce2-44a3-922c-c74a352193a9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "489acce9-dd09-404a-afd5-b111812276ef"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e4992740-ecc9-49c3-9a63-eae1fbc23454",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "68a94d40-f245-4c9e-9270-daea377dbdc2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "458d5f2c-ad3d-419d-9423-8955ac22ecd4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87ebac90-6bb2-4a95-a64e-959f70d41624",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "609d9ce3-98f8-47e6-8eb0-f88963981e80"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "15f41678-de2f-4611-99fd-879f50ac5b88",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1d362927-07d2-40dd-96c2-74eb654a5ebf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "465ddee3-ed6c-4585-b2b1-2b95ac910328",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e53f9075-56e5-409f-992d-0a8496342eaf"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "306e3586-8255-4a61-a742-6aff626faf18",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7912d361-4daf-4fcd-b6a9-1e4a11e542e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d76fc2c4-1856-4ad7-8e1d-b19d63541a24",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3d689b4-e3f0-48da-9222-35e4d4025777"
            }
          }
        ]
      },
      {
        "id": "7d70c803-b13f-40d5-bc15-53a2aa07558d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "077d6f9b-2669-49c4-a468-3f6404b6a842",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3167928f-2018-4c0b-a266-6dc55be410c7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "af9737c4-873c-413d-a03e-2deacabb8103",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975877c0-a4b0-4967-85c4-a2a2b58bf523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "203b09e9-5992-4a02-b92a-83df1bc2854a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc40862-82c2-4872-acb1-720934648f35",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd1e40a-5028-4ac0-b54c-ac650fb222d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "582f9ea1-f17f-4025-91d9-fd111087e730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eab2ca0-2b10-4057-9336-6199312c88aa",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ce572c-f26c-447b-bea6-9059a12e8cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "283c6503-33f1-482f-98d0-aecb92525ed3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "44a305dd-821a-40fa-a6f3-2c54a59561ce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "203e1a38-eceb-4fec-9c40-e7307087fe01",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7183b8ed-60b6-4610-a9a5-4b88c63f98a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9db8241-9c5c-4924-9c7d-5eeb413fb8fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287ec2ce-96e9-4d40-8553-f7d232830206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c03e1ef-33b1-4361-bc46-8b3aacd94025"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d75b59da-48dd-4367-8a0b-759733cc9032",
            "name": "Positive Testing",
            "item": [
              {
                "id": "75a60a23-c8f9-46bb-934e-e6f4f6af00cd",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "941b6312-2142-4a2a-a77d-9cf3c1efa770",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9cca36f5-68b4-4d93-ba24-7c7922b73db9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36edcb26-41a3-459d-a856-045e72d12bbe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "081e3272-25ab-4660-a998-e3b55578c0fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a489970-0ef4-4c94-a798-48f8e6ed271f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3c55eab-bbe0-4534-a6ef-33d291b4b70e"
            }
          }
        ]
      },
      {
        "id": "c2943b8e-540a-4912-b262-70f7ec3a27a5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "07f0df5d-7b5a-479c-a821-60de24ba231f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d177632-0d39-4b77-9beb-07255cb44376",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a192442a-8300-4b36-8495-7b80db2dc792",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef4f614-80e6-47c0-91cd-bb955cce62f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fbbfc7d-4e29-4b7e-90a4-69367c00d848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be97747d-26a4-4a76-85d9-ef1a51e1874d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60c0f0fa-fcad-4bf9-b228-8d6f5f21cbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c456de-1466-4568-902f-d8755e7034eb",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea714b5-7f75-4666-9d6d-c702549fc4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b42a04b-0b43-4c87-b8dd-de7f5b32d234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f08ac5f-728f-4d09-8aa3-d20d81bf79b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29d04e50-dac1-4a24-8b97-cd64306d6cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073da898-84f6-49e2-86be-fb035fafab61",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87abbbfb-5d1d-40e4-a63b-b63573414179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d337c5e9-b578-478c-91df-132c27707ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ef5e3a-75d7-47c6-984a-f3d08fe6da6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0737488-9fff-410d-bfd5-9c3203270df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acef0b9a-a1d8-4ef9-9463-8941fcea2270",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984a1bcf-05aa-4063-933d-97d59594a09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984a440c-8abe-4a17-9d63-41068ae4743d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890caa90-b6ac-45cc-84dc-08914973d922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd5cfb8c-a2e6-4c2e-b40f-cace46fc707e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520d6337-39ac-4252-a836-8d2562f5f050",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67b5453-1947-4013-b6f3-cf9c9cdea67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4f57d4-20f7-461c-877e-6e5c548ea4ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914f0eb1-9c02-4570-b1d3-ecd9bbacfdc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78570910-8d97-4d53-9f10-4e6bec47606f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4751c1b5-dcd7-4949-9564-0443b52e3d07",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c57d38e-1d4a-46cb-96df-f33231eac4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa8a240-754b-429f-8909-49d93cab02f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf20108-c5a6-424b-a98c-3861cac7aaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1b22319-90ef-472a-a2af-5149a3465503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b2e4d5-3446-4f10-9c6e-267d154885b3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed64924c-861b-4261-9ed2-4c26b4459fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60317336-1aba-4c15-b02b-c0b5f45ca415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4885b027-53da-4965-acd3-2dfa109677b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "773f26eb-2638-4346-9d32-9e849a15d0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df07b47-5dfe-4c9b-bf71-15f4769e1741",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9624ffe1-5755-46b8-9936-628e3c0ef25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52cec006-7e31-4188-8df2-1b7df86ca8a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6873be5a-65f7-4dde-9d78-c8d52796796b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8496c546-0ae5-4c3c-98a8-2a29960d794d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341f0ed3-5cbd-4de9-b47a-3f821cd7f4ac",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9ba427-1ede-4834-b592-1867cd1a474e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a52b9414-224d-4173-ae80-0e5247a4284d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ee046a-0ced-41de-b45a-47fc99eaa8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30130a57-d3e4-4a9a-ac17-f65a47bad189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7adf707-f4cf-496e-80fb-0441d725d79e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d532bbb-0b27-4592-8794-565318a81f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f59168f-ee11-47ae-875f-72366fa8b5cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e12c6d4-7323-4ed7-9439-232972c817eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c35dc3cb-cb21-4be1-a5ac-5a7b813b2880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b79bfa1-18fb-4f88-9f38-ae8439d033c8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe2ead3-889a-49bc-ae8e-1fc64dc8fbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "725b63f4-13b0-4ef6-9af7-80739f3a437f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56dc6b61-b619-4c87-80d0-1d95fa147a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0474e3e-a244-4cab-bc1e-5c16d1b7d6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d40f55-d176-4501-80d2-c01f85d07140",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49990bd2-9969-4b00-9126-070b39575c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eac27b2-b734-481b-96d1-e8502ad8424a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee7beb1-7c78-426f-a95d-6bc89619717c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e40d7c9-df14-4578-a55c-540ab693eefc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433ee760-9f76-4a52-9c31-89c0de48e7b9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d92f5e7-13b7-413c-ae18-5754a26036b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cfd8140-ce45-4455-94be-ac50adf6496b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ea81fa-34ad-4f3e-89ce-9971db919871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30aa29cb-76e5-456f-8529-df866cc3023b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83affb4e-09f5-485c-8e73-076f3f20138c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1396fb34-8754-4a7f-adab-a969eb01837e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c3d323-85ce-4bdd-9cc1-c8968ad60454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553fd4bd-50e7-4b45-8208-f74837c54e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94489863-3e93-4af3-80bc-0fe3b726ff8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9a4e8b-68d7-4a14-b9aa-71910d9e84b3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c5d088-9151-4779-ac03-68c4bbad7c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad8e29a-f957-4437-8353-da306fbd8e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae608c9f-0593-4ce2-80aa-b41c3c189d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "228b7e61-7284-4ebc-8782-979ec7bb3b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75bbe5e-dd5a-4289-8e6a-0248f42f7228",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fada272-6ca4-4f1a-aa50-76d1c01f7350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9511b927-7c8d-4991-8602-a49d01b8725d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a24426-d502-4834-bc41-fb508b2605d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2b7da11-c6de-401a-a60e-497b2af9bf76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714e3e9b-77b3-4c37-8883-76bc1ed92a54",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c390cf-1894-420b-81a7-1427196a61f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68399ff-7103-4449-be1b-916677c3c479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848ec184-efd9-4d55-8f0c-e015eaceb337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddcf327b-dddb-4f92-8263-3238ae6474f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e2b2e7-7a88-454f-8dd8-48c5d6f9c434",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33caa6bc-6dd5-4b43-86ec-fab042727c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62fd7bbf-1956-4aef-a6c9-8994126f9ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8cfcbb-fac8-41ea-93e2-de8be9e1b196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eb9c99b-39a5-4fd4-9f89-18de0b31befc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ff67ef-1806-493a-9805-2c9f43692e1e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad6251c-d3bd-40e8-b80a-ee0e92db3b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b500c6-dbdb-4e36-9fec-92a195135571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768f0abb-54a3-481a-8ba6-b86721c7b87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc9b83e-9f03-4500-bf90-aeab80efc197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebf361a-2fa6-446a-bafc-af8a492d277e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded0ae61-88c1-4b1a-ad75-6f8295aa8ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59e936e-a114-4013-be2c-6c9c5f501d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b845b754-bea0-4939-9b7c-0809a78d2788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d47f0cd-6e3f-49a1-8f58-835b2f604cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a596c65-013a-4bc8-ade7-c361199306bf",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff5859d-c6e1-4938-b33b-8c96de598be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc650b9b-8c33-45d1-a1bb-0b333528b5ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77084889-9ea7-45b1-b45c-d973bd24af4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24d600e4-e2ba-4c50-8bbd-31f84194107c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f02740-1131-4857-92d7-075be6aad31d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78410a88-abcd-4e49-a29e-cea9bff607cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5909fd-1ad2-4b2f-91c0-9858c44290fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea45835b-ae6a-41e5-838f-36998223c247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4018b5b4-1381-44d5-a7e6-9769e0519c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191e6196-680b-4e8e-94a4-a930877409c1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96ea3b6-38ed-425d-b786-e25cdd818a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5e6098-07de-4dc1-9fcd-a3ae18154465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1562cc31-bf14-454e-a93e-e49c472597b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95c235f6-2c12-40c8-bb96-0943f22b89ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9948005a-3b29-41ba-ace9-896fad871161",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b67a28d-4c75-416b-b45a-adfeba6b23a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5861ada-d3be-4447-b797-423f6658a8c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6200cc-9478-4667-b8d1-3297b28d859d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "90bbd7fb-6316-455f-bd59-c6cdc5aba066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113a85d3-0ab0-431c-a7e4-37b3a72735c2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9955b7b9-0c39-4370-8d02-b7b21db57925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfd7216-3317-4a48-839a-742fbb94aeb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6a4a2d-4eeb-4f5b-886f-bf7e66a620e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "882fe828-f82c-400a-98de-f404cf2461a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffac0d99-7ff4-4da6-8961-87136ec959e2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cedf71-f8cc-4b32-a15d-b1f524be459f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60df8b63-82b0-4bbc-9024-c7378441ad93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aaf6bdb-9387-420c-8ee5-bb0060644edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "915fac7b-5724-48f9-8959-796e08b09a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86d4394-ef70-4f09-8e43-5f4b856c3645",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29363294-3d7d-4b10-bc6f-d1a4a3632635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb7ab1b8-0a0b-416b-a7bd-fdb242911c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d90c5d-b0cb-4713-ad20-db57940db692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd0630e-946e-4948-8f18-f9d31dea8cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e36318f-f0d9-4f53-b08d-b25a04832e15",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81c2df0-9b67-4df3-b7fd-fe946f7a64a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315ef35c-7dd3-4e95-afd7-0911cf7c3c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b686f369-abda-41ba-8d81-9070a449a227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a19eb1d-f16e-4e23-8133-4d2cdf2c47b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551ad9ee-7e95-42f9-9e41-230e57949947",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661768e6-87cf-42a9-b357-13326646290f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbbaa653-82b0-45e2-8838-e7a7ead63865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef045a70-4670-45bd-a0a0-75577d95e04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "588e4899-fdb0-4c01-9f83-3bc5d7860f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2dbe107-5af9-4d10-8fbb-5bf940f82bbe",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1b769d-6933-4030-b62a-7b3990074ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0f5db9-7735-430d-ad1c-ec9e2692f306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7011fc4-c2f0-4ecd-8fc1-449e19d4fab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "08d05e4d-56f7-4518-a275-a5d70906a530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4549b2dc-8950-408a-80b6-527cf379e003",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c952465-3c78-4734-868a-928addde3430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62631134-36c3-4b35-b76d-e82e733f6d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a06e3b1-ab69-498e-af41-019bbb4191c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d49b7b-eec1-4e46-9acc-747e4be241c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff4a667-1a08-41cd-91c4-a49bc866007a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2111461-08ef-4995-80f4-8c19f1f6b66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "821e7626-7409-424f-ac72-b412771b0dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50794b82-73b7-4015-92f7-7e1bb0ae1f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b47ae7d4-cc6f-4b99-9d2b-3cb99e5a4480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84dd331-5e80-4511-a5d7-b79a4fe30554",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e56fe8d-47ac-43b8-bb2f-5a5d51796dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d643675d-ad18-47a8-9e66-86f433a33529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a77681-6495-40e8-ae98-b31090d90a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "087bcf17-ae57-4a53-ab25-283b12de67bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38fa5e55-2d8a-4e30-b23b-f24d3439a844",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd470fc-a181-4bfb-a42f-fab430aa75c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca7fb04-347d-466c-b474-96e0921683d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee70d786-f4cd-4bf0-b631-a91f15811b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d68590c-1884-4759-9631-b86e152d870b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd9f60e-aa8c-4321-8b16-a322af30c6db",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ad05ec-a4ec-4937-bf6f-559cf6a2e3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40217632-f514-4304-81b6-b83b580236e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e3ed23-3eb6-40ce-847b-965c0bd4b072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3b47ae1a-a8b3-44ee-9115-71dbbe78feb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6c31ac-ca93-4fe0-bdaf-d585132077e8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba9e101-426d-4ae6-9184-a20def2cf785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6003c4e6-2153-4924-a467-656cabd379f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0ed245-7239-4f07-ab9e-2ae677e3dba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "50e2932c-e0b9-427a-92a1-f80d09d6162c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31cd85c-2584-4236-9b0c-f560d66e322a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d74573e-b212-4ef3-849b-fbcbee53cf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a6ab71-80ec-4de8-bbeb-bcb05939b874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f981e2-5d65-47a5-a46b-8f372fbe3af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06ec940c-fb60-4116-8b19-3c56351bf5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce536e8f-a577-4878-ace3-e6f569521c8c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b24936-b859-49b1-8dfa-192f451de2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab12047-f8b4-4c23-ad8c-98f9f3b52cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e22ddee-c11c-4010-bad9-4ae587170a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a51e4b-1721-400e-9afd-fa78cd9ce812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2343b8b7-e8c4-4311-9790-1ba6f913ea55",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653be27d-0993-448b-96b1-39bfbcd527d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41bf4876-2de9-40cf-be6c-46a5e7d10e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839cb892-99d1-44be-b9c0-62b0cb165dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffe29911-9e66-4396-8998-4a1a89b64ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40adf32-e36a-4bac-b00e-279db4e3f2ce",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24bfe722-6754-4b8d-8c73-9c0bfd1ba877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fadb9833-d199-49f6-8512-75f5c8c418fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e58cdb4-3eab-4aab-b335-47f51a93622d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b35486f-97c4-43b6-a4af-77cc2f4e580f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d954c4-6625-4255-b613-c46782fba2d3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "076c7c26-9493-499a-bf3c-58d88cef6e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34eecf46-cf61-4d2e-aa52-ce25f25245aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073bf6f6-f015-4102-a127-575878a05e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "90b3e813-4404-4400-973b-7b3de421e279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c62be5d-de3f-4a6e-8ae7-86511c757a56",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cc19cc-90ea-4dc7-beec-74bf1fcbe5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ff069f-8390-4b8b-81a0-878f9d293702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3f54d6-ce1e-4df5-8567-30ebf8076ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b5a683-e5fe-4e5b-a5a5-6b6269358624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07ccf49-2357-4c69-92a9-1a7083fcab6a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938e1647-5140-4b0f-a373-6c8510444b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439d4fbb-6196-4ffc-84c3-9b9ac7c13252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411b48ae-de7d-4ffe-8a98-db0eb2eca4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a917c14-c60f-4549-b72b-b55a08d7f7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde40972-1bef-457b-a70a-876f8c99ee5d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb984f6-90cb-4af1-a9b4-f5f8a50911f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f717fce9-023e-4254-8cf2-1fc0b9e66c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4add743d-c6d1-4824-bc60-8f4380cc6ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2973817d-c43e-43e8-ab23-6d68c50dd055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751f2ace-e5b4-43ae-a570-b845f880362d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd74380-5a0a-4c93-b06e-433f751ac0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae75072-008a-481b-9845-eff61840388d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e631917-75a6-45bd-a00e-c675d8fb62fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "309b43d1-7b11-462d-a955-bdc99486cc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4670cad-abc7-4490-a5b8-1fe1c0846b50",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5751da92-da59-478a-aa9f-53e9ad450992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a124dac5-7bf5-4c56-b01d-7bf58846a4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bf0a32-22c2-4b3c-a484-3d9d7449a006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c185ea2-42c7-46e6-943a-e6fefc1b2019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f9e40d-71ba-4722-a02c-90ccc73149ef",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf8256a-3bd6-4848-869f-6cfe2beaf3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65c801f-f150-47e6-8817-ac9f16794ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfc1469-a5e4-4797-8632-5acaac753996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40e77151-1b1f-493a-bbb5-eff4d901df8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab367784-d301-4024-9def-3242d305adbc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd51128-d6c2-4e87-b5e9-813d774fc23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5f6515-8657-4121-8624-ad3277bcf09e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b883321-9076-45d8-a609-c72fa22fae43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c795a62-48e8-4407-a930-3f18047af336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551b5197-298d-4324-b36b-db73fc7ac2a5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823da348-0a8b-4a71-908c-915b5d9b68ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71f4a3f-4081-4084-bfea-264948d14dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d5ab01-de2f-48ba-ac8f-2467e181c490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f15ba9dd-f3a0-4b52-b560-d4bffbc3a41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a440d24f-0678-4bc1-b41e-60b05319afa4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788303fd-ec58-4eb7-9df0-cca1b28beea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b23c450-6cd2-41f3-80a7-5f822dd98011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe69cbc-fade-4848-a390-cba9726e674c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f2a8f4-cf68-407d-a608-e5fdb1c48230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c93089-c321-4248-a9e4-ba6a91ff38ca",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d452dfb5-7fda-4a5e-bba0-aba14303a8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8626b3d1-04c9-46db-b32f-06198a732c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa065bf7-3cd5-42f0-9f24-d546771f36d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7e6e64-894c-4a09-8b51-3848fc49b265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208ea3b2-0d2b-4422-b39f-fa0b0bed41cf",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72844c6-5a43-41dc-8e9b-31d69d057373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e5355f-598f-4353-bbae-7572265b1da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe20fcad-8ae7-4777-9042-ef4e35f8c96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "828884ec-28d6-4bf4-8145-68aa8a682742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f401467-54de-41a5-8380-12c03f9f42a5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52736dc3-226e-4395-9c62-fc6968c6316b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d49e2a6-6168-414d-892e-71f4fee20ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63239e2-d6fa-42ac-b120-0d60fd7056ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c7845ff-6edd-4028-a857-db46c57e8118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf790b6c-8317-450f-97e9-a922920c80e6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fac75a-3ca6-4159-8b3d-e52cec16577e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "263d9930-b266-48f5-85fa-6e88eec00a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c607499-f901-470b-8dc2-c8af0bb8cb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72e0fb9b-f17c-4f97-9da8-ac78587e6c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df87ffed-f604-48f6-9aac-f2167845a6e9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb505f2d-e820-4e14-9f3b-1f68c89dc08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3146080-2360-46b6-941d-9b722385ecc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50151bde-0f67-4594-9d2e-1fe08ea1f469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99a5ea0b-fc53-4777-ab35-d1cc3e46074d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed115499-0cac-4e3c-9009-1cb7ba4f9e0b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20457a89-0b82-407c-82c4-dc7bb8c3b992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0243835-ea52-4817-a181-ef6890e799a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b2094b-c1ce-49cc-9298-5666883df83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7865d23c-3a6a-458b-994e-63283daa7f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efe22db-39f9-4074-8b18-94e093fcc49f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbaabf3-7118-4af0-b515-9ac3415d3b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58b60b4-5e0e-4cbe-a236-8c6ea86d74e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e860d580-48c0-4126-a025-7ffd2c39cbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f842e259-d390-4d52-944a-4f5f096c348c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3375f27-4253-48fd-9f2a-cb575c35d8e8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbd0924-7db7-4046-aa14-0c2b52fff2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ad8338-3876-4b06-9394-ecada0b3e2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df548da-67ed-4073-b598-87f313c42a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "608489b6-830a-4269-bd1b-173684de4811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3c5370-f734-470b-bbd9-4853f42775ec",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7f4cee-a68c-4eab-bf95-1ce4c1bb4263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2a204b-828a-438c-93ac-63e9c3ef72db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e57e37-3c8d-41ba-9fa2-0003d0dd223a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1264bbf-6e03-4aad-8d2e-1648f14feb62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4a1aa9-686b-4cb3-9ef5-a3929c141392",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90fe352-61c8-44e3-8491-b0a4be7b623e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9014a9d5-0af3-4886-8932-6564ebd77f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0545d6f1-5279-4715-b27c-02afce03b2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f4cea6-fdbf-4fd0-967f-cc45e7bbdb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2112973-e46b-4238-9977-d8e3c1d2d4e9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e418a5dd-0521-4e93-8496-6e6c44a51036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34921989-3e2f-44a7-8ab3-44a0be88eda2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b6c7c6-4fd2-424f-8528-8d3570f30f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f80dbf37-31b6-4e33-acde-6639ebcd3cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62001d12-4153-42c6-8de3-366409c5e797",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2024b46-230b-48a4-a926-58f498a34c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a93cec5-2090-4792-bcd4-e1a759f8aeba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396cade8-f9b6-4bd4-a06f-a02a3f64356b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "05098fa5-d1b3-4a44-a287-79c63ed5cfc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b00e5e-c1a5-4819-bbe9-409ec63641a6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cab1a1-a1f0-4550-8510-01c14f5bfb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a2ea8f-0520-4db1-82e0-73d41263f997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764930c2-c19b-4945-9a91-dd2bf3bd3784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fefe296-1a39-4072-912e-1f3567192e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db75f2a-0a32-4f2b-b2f7-ce3e5040e569",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d5b331-75e7-45a7-9515-ff7dd594e2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2ffa70-8ee8-4f5f-9d69-68de598d8968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9fd70b-31e4-4edc-8132-af48ff1ad133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd20f5b-ea8e-41e7-83c5-20d243f18148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5ab0d9-e5c3-4287-961a-0816d9a8ba3b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f58c001-3fa9-4518-a5cb-a77f417bfaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef0f9b4-30b5-4d59-937c-95b0b401b52d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8237cbbf-dd0b-4378-a75b-669e19ba4eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4273a88-2bcd-41a6-8125-1562f254ff15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1350079-f933-4564-91a0-1bb627399813",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d83525-bfdb-4176-8a7b-6062562d0643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f8edf2-a380-47e8-88ee-6cc439dc4560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf34e7f-5601-4854-a29c-8f1faf533ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "461e459d-ead7-4657-a63f-dcd894da9a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f59114-22b8-43af-82d2-4fc2dfcdfbe6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e360b6-eea1-40de-81db-274277d18f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c961abf8-7d54-4f22-b3bd-be1781aeb55f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b5481f-3f93-4584-b54f-79693aca03a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f2afbc16-5a24-4cf3-a38a-28d4701c554c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20168e93-cd63-4283-bcf6-b700716bd6c1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902424bc-c067-4c1c-8ff2-76022f0ef1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c203aa-78d8-4d9b-addd-3c1b0066a6eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3539d94-d2f1-431b-a279-7580aa8ea45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "edf1836e-3aad-4c7a-acf8-261fb95b087e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15e76b3-f9fd-46fd-a140-67932c280587",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff5c668-b604-446d-b552-911e83b44569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f82fad-788a-401d-8601-a1cd56267e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491d34d1-f1d9-4060-b4e3-69a6050e4bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "37192ef8-2574-491d-9aa1-3da3c9a49c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb61681-3392-4506-8de0-cc3008286055",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cf9f3f-e6de-4523-bf7b-04375e41e7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "673b0561-d4a4-4e3c-a3ee-67ac83cf4da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b37c0c-e1ae-47d1-aab4-196e88984719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf5d351-cbb1-4ba4-82df-040a20524c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0466d12f-5bf4-4c1a-8c36-f5fd774d5699",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c984395-0e87-451e-b5e2-1752ddbc771a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5ba8aa-5935-44a6-9fa4-93c18e49c4db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88890e35-c4b2-4fbe-aa69-17e6db8fc15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "826827ae-1b71-4b8a-bf5d-dd56d89048c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1b1bd5-5045-4709-a8af-4fce93ec4bc2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efb6e31-1e38-43f2-8ad7-436e7bc00466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fdd5285-5001-425e-b2d4-b1899e5009d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8ad374-abda-40c2-a751-376f00be9c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd7a22c5-f0e7-4854-be3c-68a36b8c4cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c065a3-0307-4490-9015-fd85be502927",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8424ef73-3079-433e-b748-bff4ce9c5722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37da380-924f-487e-a439-98680b33027f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b49ebe-473b-428f-8364-5070a71e230f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22ca6ff2-2270-4805-b3cf-5504603e6398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec136863-f81b-4739-bd4d-20b21b0f0a92",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdca2dba-3de9-429f-aba3-9752925ad245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d45fed-67c6-4de6-8794-c2886b393fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9c335d-f3ec-421f-85a0-b07ab07093a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e0bcb32-9b93-45a6-8d46-1a523fb5794e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30340563-0836-492a-bca1-d980775ff167",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3adbeae-085d-4e50-a343-d96b6ae6be9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c773b97-8db1-4e38-a4f6-7fd4c3d09a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4806706-33ff-4735-8a58-4dc8f3f37820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad33919e-7725-454f-9767-d5d93ebf3b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce81bcd-c92b-4d29-ab30-ba9e0dd2f974",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41175143-0e0a-4648-8fa4-4c245470b80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "670b3698-f575-4e14-a283-66c999641522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c0be8f-c6cf-4c1d-b7e6-64e6b2d6285f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93f556b7-bd46-4b15-87d2-c79ef2880e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777c1091-f557-498c-8bd8-3df3a3dd73ac",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4110e22-dacf-4e72-af3a-39f1d2e239f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af0dcbf-cb6f-4526-bd80-dd770a8eab70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26043a6-1cdc-40ab-b36b-44176661c3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11aff07b-69c4-46f2-919e-e0402f6c3100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f4e975-c922-439c-ad8b-8733da27469e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315f7399-ebf2-4919-94c6-25178760d816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46912fda-eaa6-4920-8653-cdebd51fcd24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ad368a-f38b-4aff-98cd-2fa15a90a3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e47c895f-5e92-48e8-b061-5e6e54b13a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0e70e6-23ea-47c1-918e-bc68966f702b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e122b15a-dd8f-4bbd-b0ad-8847c4ab2c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19d069e-8b7a-4143-8cb0-aca2186a3b18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05f84f2-3e8a-466f-9edf-d8966dbd5c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b6b5521-ddf7-4af9-add8-26ee6feea7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ec45ce-f3a8-4ff3-9de1-2c3a9653467a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b0c073-9ec4-45b2-bde2-6310664991b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0546d4b-edc2-4494-9ecf-a20dab633975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb3fbd3-1a24-4745-a31f-70f53fb138d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "903775f4-ee8a-48db-b08d-4ffbfd3f6902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63fc048f-aac2-4e7c-954f-5fdb8e6dac5c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed109e4-e30f-4396-8ea4-b4fc00c5c017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d616395-8fae-4d86-abd9-ee12ebd09a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd431fb-110b-4efb-b38b-cd64082c79ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdcf49ad-5977-4d75-b7da-7baf6cfd3c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f576b9-3bb8-41a4-80f8-0919764fdbed",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa71981-e12d-4487-b557-cdcbafa293a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ebb6743-0b79-41aa-9fa1-e12e31656062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8604d1de-e164-456a-a4a0-548653f1173d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31243644-0206-4344-ab1d-edec762713ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bc77e6-149c-48d2-99cf-aa340e7d134b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea3549a-7c6b-4b9c-87e0-b26775444ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6084761-faf3-43b3-9fa1-0af2498ca9ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8b5f79-f41f-4ff7-8a7d-5008d367401e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e33765-bcfc-4feb-89d9-a5b86d6a7ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d3253c-319f-4731-b38d-f1de7e3c166f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98a68fb-5392-4c0a-adf2-0bdf4ad2e916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7fa7ea-7cc8-47a3-803c-00a8e6852279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bb16ec-7a24-4069-b0f8-1c94ab5ea6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e92240-e42a-4928-bc44-2670bdda895a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b534a260-94c8-4230-9be7-5a8112edd59c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb32636-5466-4a2b-a1d9-a5b5010c3d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e2e48c-f765-4781-acae-3a8a3526e6bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ff4b07-19a2-4184-8596-b815a817991c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c830bbb-dc79-4b54-859c-3efa9251a80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97af5c7-144a-44c4-9240-f59864bcb2cc",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608f2def-2d60-4fe8-9c0b-a1cc7f23d379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b18580-2fa9-412f-adc3-2069ec1e8fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c0ee99-5b72-4c18-8f11-f6b1b03e3ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "552dd6dd-e31d-4242-b858-5644ecfbabdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ba98a0-7000-4a3d-b9a0-d5077cf7826d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee0e8c8-3667-4212-9d53-1fc8d0119954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fbfa5d-c136-4b80-90cb-1ef5f9792a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12f56bc-5b0d-4970-9e10-61ca8890a4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "309e5cca-ea10-4ba9-b382-d25a37888416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b573d26f-5b39-40d4-b098-78672d38c02c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31eddfac-9eab-4ab5-99c1-02954a9f0ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4917e7-6a37-4054-a52f-c87d13fa25d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c8f298-1857-40b3-9ad5-52c0ebb96c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8aef0a0-185a-4e66-808b-43ab1a2b345b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb5baf3-9f93-4c3d-8b3d-352514bef740",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53628a6-a801-45cf-8fe6-67a88a44e576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce17c00-bd75-4476-a7f3-0e16888959ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ea924d-f279-44f7-a831-4a42da581903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7922ca-0e0c-4377-b308-b16d1d3ed58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc696f4-8807-48df-9056-861c3237cc75",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafdd9a5-d992-4fb8-96c3-e39a4b306a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6375fe-745c-4a21-9efe-6cb334cf293d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9606381f-4b0c-4878-a79c-0e3ddc6e962e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b18cdd71-55c6-419a-93ff-babd2ebc2258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684b2e4b-84bd-4324-a8d0-d4efa806461c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1136a964-680e-4e02-9280-7ef0cf07b740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce9a554-c3dd-4648-a19c-605d2ff06fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98923556-6f19-4f2a-a751-bc2d4c81b2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "264acd86-805c-4cc8-a06a-65e4038f4b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dada1c-1372-4dd6-b486-65b7f424b1ab",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32946fe5-84cf-494a-ba3c-3685da29c637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "089c0fad-26c9-427c-89d7-3ad70ab14d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3515adc4-c4e7-4b15-a718-f2f05033d328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2104539c-b25f-4d5a-924b-4d7d5b443b60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4f7f697d-2f9b-4694-ba7b-a1256cf999b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ac7b263-8b9e-4f73-bd35-5db018dd3df4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a8f07e-7459-4056-b86a-ad7d7407d7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c59fab97-ab93-42e0-836b-efd210b9182f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd16118-e56c-4b0b-add3-5e3547835c66",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3967166a-d326-4d59-8600-91bf37f0b511"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "990f23f7-bf14-4f03-97da-581e48ac1201",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f4f700a-964f-4db6-9dfb-116ca6f13607"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1116ad9a-f36f-4e53-a048-9a3fd7883b1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "772f1f72-7c28-4134-b13c-d466f2f831b5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "691a9f3a-5fbd-439d-bc52-7395fd82edae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e3db8fe4-556b-42b0-9ea4-081fade54722"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eb355ac3-f080-4f84-8fe4-249eee8c83cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e95948f7-472b-44fe-9124-e28074a977a1"
                }
              }
            ]
          },
          {
            "id": "7338df45-69f1-4417-b565-9aa554564283",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b91a16b8-7f4d-4562-b003-ad049a3aa779",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "fe6fe1e7-7102-4af4-94f7-56fac3063e56",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7555e76-3586-44f3-982c-0e5c6c74d5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "07fa64b8-bbc7-4878-b472-4570de93d82c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8cdc014-eed0-4291-abc3-44da85490187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31309647-71e2-44f8-b67a-9a2ab0915252"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4fb47223-87d2-4b41-9b58-65976f4ae21b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d951120-124b-486e-877a-db3fd2fc81a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ea01958-88dc-4074-96ab-54b2d8907afb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a968f910-6d74-4697-b140-4adf5f11a088",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dd6b05d5-076c-4513-8c7d-fd0fb1661f9c"
                    }
                  }
                ]
              },
              {
                "id": "0de1538e-7fc2-4b3a-96f4-c8ca277b7b01",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59eab6b0-d1e6-48df-b4cb-cc57d28e9be6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c46b3c4-6c6b-4635-b1d8-8e3896d07bd9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c2ebe0e-7762-4b66-b218-3fe40cda2d00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "666b5847-a07c-4883-a796-b82feebec5be"
                    }
                  }
                ]
              },
              {
                "id": "5141fd5f-d381-4484-9e31-09e3709cc8f8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a63fb17c-c7ba-4065-b053-1b1f74c04b75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c0e7e3a-56d4-46e4-99e5-62a3c13bf2a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b417681-4eb9-4bf3-8791-9ff70979a3c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c0eb9718-01f5-4fdd-b448-746e10a3afce"
                    }
                  }
                ]
              },
              {
                "id": "d37af5ff-bb42-4693-a3bf-dd1858cce5c1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70e985be-3b8d-47eb-bfd0-eecb312a5ed2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b751a06-dba2-4393-9030-6cf7f1f03959"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01133613-d563-4af5-8bed-d00b73004b2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2a6bcc9b-4959-4de1-90aa-4730ab053e68"
                    }
                  }
                ]
              },
              {
                "id": "b60c8b58-e4c3-4e0b-bfbf-8c38c85bb53d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62add67f-bfa1-4dc7-9b1e-cee070ed7f03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af7bf73e-4888-47b5-8d5d-e7125b41006c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3592f797-2626-49ee-8a49-8218e909b7b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8941c0a8-7066-4bb0-a73e-8fcaf0707658"
                    }
                  }
                ]
              },
              {
                "id": "838f4012-9832-440e-ab79-83ea663db3f0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c83ea7f-730b-47a1-8f4c-57e22045b8eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ce0e21b-0c5a-4b75-a3fd-f0611d68f952"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "274cd2be-65b9-4756-b14d-dd7a1d03e607",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ae96c175-10ab-4bfc-b313-bb77609779ab"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4ce4b796-b744-417e-ab89-25f88a616d39",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b35437b5-5da6-4ac9-a3a2-117836d430b7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b9bdc1a4-0dfa-4c92-9cc6-8bca52c43d40",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cee0e3b6-4496-41c9-86f6-fecf794c3c7e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dee45569-f28b-438b-8894-98bff72e1435",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f63834ba-63f4-48fb-8eaa-f50f9dea51f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f730a0d-09b5-4fec-9732-66ae1b8d7972",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "326a205d-a412-4441-959d-b8bdaf294fdc"
            }
          }
        ]
      },
      {
        "id": "b9b63dd8-f1b1-4bf0-a6a2-65dcca73ebb2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "012efa4a-655f-4c76-ace2-e76a7ddef8f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7aa27f38-a880-46a3-94c5-93cb0533e4b1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8085af5b-46a2-461e-943f-9e69fb8f7a8b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71499de4-edc6-4b03-bb05-0bdd6b8d6301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1c3745-eb45-4aac-a998-7fb77691787b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79ece7c-d765-44a3-8e1e-daeea77162f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e9915d-b568-42e9-9b65-00d357adecd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf76e98-26da-4492-ae58-005541be9c84",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc0b380-524c-4ce5-910e-d2ccc02d2f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2cdfe2c-321d-4353-b4a3-ce27eb22d6d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bd96da-9807-4863-bcd7-b2a845a64dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1073a039-a9f7-493a-aec4-5979973c6542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df189b24-d674-4774-af2f-0bbdd324d21d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902a8f62-8051-4180-99cc-9366b511ee06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf35159-6ef6-4644-b9f9-00cbecf9049d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95587e60-31df-4a66-a08b-f2bfb71521db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27d8ce77-1d8d-4cfd-b6e4-e68491e0ab16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6da45b-1e4c-4112-aa4e-45d1a10abb8b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527b361d-0e3d-4a35-b808-52de5611b85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0739ed-709a-4cf7-8214-cd4155a475ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef05d95-f9ce-40b9-8884-b948063ae7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a103701-b171-4e59-8019-826d06373769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c88fa8-ee3a-47c5-a6bf-94d5e1ed1469",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1af7bc-baad-4cc1-8242-19ea59f9564b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3be1f35-c85d-47a4-a757-7eb20bea2cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12317f68-35d2-4eb0-b782-2e0fb6f351c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "738d79c5-1917-440e-ade6-2b1c598cad74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c02442-3ed7-4c83-a525-bb0bcee475b4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be93274d-1e52-431d-bfec-1836ea26bb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7865201e-10f9-4a68-a7af-8398bce9422a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61534d90-1597-4c58-a5ef-31fcee802fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35746ea3-c2fb-482e-be73-c277783e010a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a663871-e555-4f92-af3f-477821341cd9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54af9066-fd78-4fb3-82e7-b62801791b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13eb6d5d-1c48-42ad-9244-70c5e7b4c6fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7470260a-f30a-4a77-b388-7c709bdf7a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "05e874f0-e23c-4aa4-a17f-cc80c5f4c131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5806af5b-13c3-4658-8f7f-3f973518d53a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df758aff-f4f7-4280-801c-23d8e2c5244d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d307723-c2e3-4770-ba42-294c6fd49d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483fcd5d-c0f8-463a-97f5-5f21624a5102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d279b47-a140-4b60-97a7-11469bc00dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c96b8d-eda0-48f9-99d2-d99d94837b48",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f088cc1-7907-415f-b747-4484c59738a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94a2082-3b4b-4c5a-b270-b07d212ca850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca8b341-9eda-454b-b574-dbbecbebc541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74aa3c9b-dfb0-40ad-8e41-5f7a064d383c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1598c03e-9831-4492-b54c-6bd2a3d1d5f2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb8187d-c567-48eb-9d73-fc7ac88da177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0477a2b7-9ab4-408e-9101-cf1fbada0e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87042f61-318c-4af8-a059-48ad8d197000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "622c5940-3f2d-4687-9679-99d1b86ecc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8ac26d-3ea8-4fb7-8fa1-7428bd7f43a9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2bcf25c-a501-4525-a396-c8336fb3e55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3486f1f0-a760-4117-9671-fd83b417f421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1db8cb2-581c-4249-af81-f25bd76ffbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2dce808b-bdbe-4c26-ba21-a09f59ce84d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e8cd3b-c702-4595-9b0a-df6e8e4f5362",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81aaa404-9950-4cdc-b9fc-52e83b13ae79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9430e5a6-16d8-4e0b-8802-cb62b9b8dcc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ad8d9e-712e-485f-bfad-6c7a71f95d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "766ad96f-d37f-4358-b8de-7c5085ba4b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a8f7d3-050f-473e-9125-ba8001f6d971",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60074632-3c65-4605-b9d0-a527a613b1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d22eae8-7925-47b9-bf5f-50860d420d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0156e7-2d61-47bc-8733-dcad17b21c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "793af64c-4a4d-4a2c-b9ac-927bd82695e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63e9623-98e2-4cab-ad4f-792882edf0ad",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c796869-aa3d-44c2-91b1-1617f3b0466b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c312e3a5-1f69-4b14-87ce-a386bbedd7d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d4228e-93ee-4c55-869d-00215932c2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e92041f2-37a3-47d1-8d3a-9a7b6dc99c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a93a6b9-661f-41a3-8c49-4c5c9ebde563",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3b5482-6345-44e7-bc4d-8d357671318e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad25d27-38bc-4997-9ce4-775d332f489a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c883dd9e-1b42-4e43-9886-1dd842f49981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e51653ab-1dee-437a-b39b-c53fc6896118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0efd5c0-e307-4691-b9ba-2465fb4aa533",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9e2a7b-02b6-47f6-8201-3329f01d6ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b25926-587c-4115-bf9b-be57a0a0cd19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4aa86e-8f26-47dd-aaef-4cec2d2243a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a19a4b27-0c2c-48c2-9962-28cb3ba4514c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d4dc6c-d91e-4873-b138-258d367e411b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a56e35-dc81-4c5c-914d-a55325636354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf5ace0-1de7-403c-9c0c-2685948012ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79eacd1d-8964-4190-ad53-69bfc715f6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6e75b1-16e2-437b-8566-b34181cc13c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec0b615-7ca4-40e5-baff-e52b3e89e70c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07b13e2-35dc-43f8-bc95-957d74f77ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153567fa-b83d-43a0-b0b0-5fd7f4a14f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88674542-9074-4011-83d4-001c755a9775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "28f9fe45-7648-4118-83df-e32193a94bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b2343a-4e28-4189-8088-ddb31e7343e8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8633b7f3-99bb-4d41-ac92-39488598e468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dbaf884-32c6-427f-9684-a20899e25e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598036b6-c289-42ec-b4ae-a83bb6d0ccd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18a3ada0-d2bf-4449-936f-9a9f5258e4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56381195-7296-43c8-8758-1e62e3f3d1d1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b206f85d-9c60-467c-93db-a79b931e7523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbcd48b0-9701-4be2-8cef-5223fdd468ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e05108d-a973-49a8-a905-235520e79cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e71764b-4f71-468c-8aa4-fafec02e6dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5337696e-4331-4e9c-8277-e6c10488e9fe",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a806861-e030-44d5-99d5-b099d3632e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fef96a2-4079-435c-8ffb-8ba973054368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9094b3-434d-47d6-a4a6-c5fc94c13ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01e030a8-af35-41e6-8cac-128f4bf9ff78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6c0782-4138-45ff-8b5c-1ed897126890",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089f64ef-7533-4ef3-8631-1e4e419bb601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11483cb-3c2b-4b6c-b3f5-4fca244920c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ea0a1a-65b6-4966-84de-aaee9d2f1d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04489f2e-bea6-497c-90c9-0e1bc0952803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10860f4-11ca-45c2-ac0e-7007eaa7ffd3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc18f480-d115-4094-9d78-6d48d57d4b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1703c3e1-ab55-4c28-86f6-9360e0be4103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6585ba8c-a303-482d-9abb-e1ae009aa6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a9f90f9-bf06-436a-8c08-0b96083f6002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca63dc0c-ba90-4ada-88ac-2d9fbc58293d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b45b482-1f9d-4017-b3e5-f92ee7ac6b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea8cbd1c-76c8-4090-82ea-8f8ad8ef36b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81a0c45-f0e1-4d4c-8ceb-924acc30d7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52cb08e4-0d66-41e2-9502-7d6babef5754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321c0fd7-d1f0-4fee-8354-4a2e031ed48c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa312d2-05de-495d-8f54-64af706fab81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c62c0bf-4939-4c8d-b2e0-2cee30953568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4147a5-4363-4fe7-8e65-37609d1d22ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b55791dc-57ff-4a57-b270-5f9cae081f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022290ef-2b53-4854-860e-92d274815325",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e1d6fb-0f2b-4eba-9a07-4078d573f96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f230894d-b320-45f5-992f-9f248ccc3f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f7f390-0535-464f-9d8f-d32d4ef1dc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7b1fa9-b914-4937-9330-5c677f109540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d6331f-0fc9-468f-baee-9c4c23eb7649",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f98d7d-3466-45a9-97b8-6028fad83321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1876d544-642e-4ec1-8ccd-e1b652b31402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8976642e-62a9-44dd-bcd0-e9cd1e12b3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35087a64-5237-4544-a232-1e8148d5b5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65f107c-e03b-4b37-8874-510b812b386f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e6766c-c5dd-4bf7-865d-b94aa85e4bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03034825-fce0-4951-8459-de6dcd5a9d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f840f35-6244-40a0-ba3e-9b55b9bf2605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1a6672-fbf6-4c4e-bab8-c87f0e437e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491d977d-0535-4382-99be-bef8fdd95789",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0684be-ae9c-423e-adf1-695289839fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c75e4a7-a9c0-4b59-a8b1-997ffd302ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7daf0b-f5f5-420f-bbc7-08bdd0a11541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b24deba5-02bb-44f6-9a43-9c204bbf4a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577c82e3-e6c7-460b-a88e-b49598c9d3cf",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e52487b-7df4-481e-b590-52a5b41ba45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86735657-bbb1-4f9e-8b23-e8698d11c605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c35a900-4591-47ec-884c-20b95bcf02d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a03a68c9-ed57-4a28-8964-232aec2e3768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e317430f-6ded-4368-8e84-9add4834aa2e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2251eed7-d276-4207-8f5c-d7734b4cb3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17da3061-0471-42d0-a121-1ac5044914b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56d694c-6165-4128-a956-ecbf05851cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d4322b7-03bd-4c66-a033-6868aac4cf3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abf3055-9ea9-491b-be34-00de28f4a582",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e536e67-3e04-4225-ba02-2a2ae143ed55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bcda55c-fcb8-4f01-9747-a7a3772827ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d3f28d-e821-485e-a763-67f5b748c1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f64635e-8ed7-4b87-8658-3e060ae35aa3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5829c66e-53c7-4178-bc28-9e7b5ac78cc9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6767d591-54d0-4a11-9354-d50d7d8f83a6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206d55e7-90d4-473c-8ac7-f0f344e603fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "74e7a300-bab8-4b3a-9cd5-fee83785332b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "631721fe-2700-43a7-95d9-c1de73e1fa25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32965d85-7c21-4c01-ac2f-58ba8e5c7cdb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ee894a9-0826-4957-b5f8-e158f39a5464",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79ebd485-dd34-45eb-a059-4a3a9f8cbbdb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad1d3e0b-a78e-42f4-b892-b072049551ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14cd0906-5cb5-40c3-9219-916798866ca7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "854d7744-fb1b-47f6-87ca-29eb65ad7e0f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "14ea9500-da22-49d4-979c-0372acd916da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c80e019-5d04-4bef-bca0-09d14046caa6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "75b8887d-2f24-440b-8d7a-b7cd030fe843"
            }
          }
        ]
      },
      {
        "id": "a609d9a0-4f35-4245-bebd-2028342443cb",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "3b3fb885-ac2d-489c-a904-ee3dc7490077",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5082c818-987b-4c32-9ad7-95365211cf24",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8dc0d954-f14f-478c-8373-3b2df62f2dcb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83efc435-cdbd-4ba9-8bd7-88e31f4e9558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f18e61-e91c-4a2d-8df1-954a8201c709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186aa3c8-741a-43ab-9311-79985655e56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "31b7827b-ea63-4555-a6f9-84de1de1ccb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98528c2e-7114-44d5-8f92-c3597e104f71",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78140ad4-3c1f-4263-9236-30d829398c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc26316-4447-4f4d-ad3e-5cfaa8528ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250bda75-2561-4d05-ba02-78e7b32898d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4523c24-33e1-4912-8986-8dd6e9939ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff8d2bb-27e1-48fc-bd79-f203e8f6adb7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1048a5-3bea-4ec2-8106-4c9b75bf352e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38df478-5578-45d7-9b33-a5a9c188bb0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9405297-3b42-4120-ad97-0a5cfcdd5cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4cef6f8-6f75-4865-ab71-58534f79b66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45df3cd6-20aa-49b5-9b18-3330329603e5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa20bb6-5810-48bf-896f-5a7960de30b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a5d8cf4-0f96-40fc-88aa-8dac44b3042c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee977e4-9c18-4e7a-b89b-3064c8cd5c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5abda13f-4d0c-4d61-95bd-0789c6483c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fde734a-5fc1-4ec0-8f20-6c5e4f21aeb7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a71a51-7317-4ced-87ce-592eb4fd6760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16fc9cf7-38b2-43f2-8785-be16952c52fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e7af7b-f41b-448f-ae39-ae1e4a7c171a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc95918-26ac-4427-a64d-04d932fe073d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1061c5-1d8d-40d6-b206-8506561d94db",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4eff18-3bed-4cd2-80a0-d5aeb1fff8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506d7503-bfaf-47d3-a21c-40e46f9efc87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da79400-3942-4eda-8155-eeb1c8774ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf26576b-b31e-4d0d-87cd-54af27333147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cabde0-e4b1-4a78-9c71-962b44180e89",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afefd0b0-8bd9-4a8f-b0bb-eeb6b9455803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b036fa-3e1b-4db6-8b1c-d681b3109e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a579834-88a8-4a71-8589-34c669bcf4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a978a91c-949f-4452-8a7d-7792bea20508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545b26d0-d0b1-4977-9f5d-49f919eba94d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d454cad5-9070-41a7-98e4-d30be0622810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed7ae88-21f4-4aef-a3c3-20351788a9cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fdd6fa-a1ca-4cb8-914d-aff4062da801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93577b13-f874-4766-8505-2da40f3b31c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b272626-ea65-4f51-82a1-53fe0597da80",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011c02ba-9242-4bee-be8f-65ab8a71dbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "589c6b0b-4f9c-456a-999c-6a0336f48fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6549615d-b6a4-4e06-91fd-9bc18601d5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d5490ca-110f-43f3-a774-3d31d8863bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a974c4-9988-48a0-b0e8-2353b8718f51",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e587b1a-ab74-4165-bd1c-564f9fe3d08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9dd0fa3-6174-418d-bfb7-a5c9e5408cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3d107c-01a2-4d8f-b8da-99863539fbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc150cd-b456-411c-991e-e884ca91359c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f7bbd9-acd5-4c21-ac25-88a0965696a5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadf5cca-5131-405e-a010-f9dd51256b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a664c2-0794-4c83-a2e3-9e2cf4b7ce4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b390d5-b188-49cc-b05b-9e320951882a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "57bfcfd0-8fbf-4509-bd73-2343cd503e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3673f208-8527-465e-8342-70539966be3b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a03592b-aae5-45d3-aa17-bb8b8b135715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b93fa8-970b-47ea-888a-984b98f17343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce67af49-2f99-445e-a480-1fb294fe8831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0fb798b-dec2-43b2-93d8-bf78ce00d2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7ce424-2c7a-4fdd-abe8-7cce8c6b1741",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54efd131-0d4b-4aea-b7ff-eaac17e1eb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc66772-98d3-4f3b-b10f-f04d41ab6ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61716bc5-9792-4ded-a25e-63c2b9be7ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7539d284-9c34-4424-b6bc-fea939c66892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4565fcf-2c61-431e-ada3-461e126a6118",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d8dcbd-576c-466f-a7a6-51f2beae5438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eddbdba-06b5-4bb5-924a-69a460f979a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95158498-6567-4bd6-b2b9-f1d6f26af1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e481da00-9f3b-4f99-b646-a75dfc67d43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ca3713-6436-4893-ad15-bf14c63dab89",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf5d14a-45b1-443b-9139-f960479468db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6581c42d-5540-49c8-81e7-88e26555a2d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a906451-6ef3-4db7-8275-af58235e3e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf9f143e-f996-4d6d-83df-cbb5d1e75be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ae2549-f468-401d-82d7-3c03257a41c2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8002169-301e-41d1-b224-392b602791c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d9736d-7528-4f7a-a8e5-e68ec4484f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a244eeba-76bd-4eff-91ea-0f3ae7ad86f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "96309b9e-651c-4d51-8fed-9691da155648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ef6953-ae45-40ef-8fbb-2f234508ae67",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92ec017-e2d5-4427-916e-abc42314889d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "115b6772-e0c6-48fd-863b-f26950a982d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1adc602b-da65-429b-a454-8204379cea7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eddffd5-b844-4f18-9cd8-a03aa98b5a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47337fb2-4577-481a-83eb-a421c9047ef6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957e1000-73f9-424c-88ac-77b2cc217b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b39685-2411-4c32-90e0-a6b878b7ebf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d6bd7e-757e-4f5c-83b2-721ca61fa4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a7eb2c2-d80c-4776-9633-98ebcee7bd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca56a75-be80-4de8-b857-411346cc6cfe",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf649f6a-85fc-4d76-9a20-868bed5f0f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0ac7c0-acaf-4534-9b4c-c6b8cfea5b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e347d2d4-3960-40c0-b510-3d8617e8a75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1684f7b8-cebb-432c-b361-a5e43fb6274f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66289f0-e06d-4530-a123-cb5dd2446bf4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f679ca9-7f46-46c0-a589-edc2da7985ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da266b4-16b9-4f16-9284-e32f0aa652b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db99c3ba-d7cc-4c47-b1c1-5e0ca40c05b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92af7fff-781d-4c6c-b1a8-40f4fed6c0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c763181c-6f2a-4e56-bf04-79200283d3a2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1761f275-f7b9-484b-8919-03a4008c8cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc245f2-1b07-41e7-aafe-661249d74b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d096b9-6ada-4fa9-b3a9-745735e42fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee78b2d-52b4-4b43-9e88-c78a36467d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc26bc4-d479-472e-925e-ab70f5ac579e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19765573-7230-4475-bae3-9d25e490418b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491b0d09-c696-439b-a887-cbd653f8729a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2802b19e-f4ea-45d4-b9f2-3dc9285dd2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81a6d28d-f462-415f-b6c8-eead72fae91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f454783-07c9-4cf1-914d-7e37547b8a77",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20bd411f-fabc-4bcf-b12e-27e0f1df6c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009750ef-fb4c-4c84-a8bc-c673a1694bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d0decb-3ed5-4a03-a622-d054f3d558c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b0205dd-cf4b-4f0e-8c5d-0c68e18b4c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaae1850-aa35-407b-923c-8e8514e32211",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f316b6c-df84-43ed-88ad-6de0bdf40fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dbda7cf-9c26-4302-823d-0d1ef64d795c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ba1e50-14e5-45cf-a2c2-c56e37a10a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb09610-8ff8-4fef-8197-787edfb71ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f600037b-ca20-4823-8a77-d72fa09b9a0a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c36c07-c293-47a9-8515-61fea9c706a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff39c5c-c51e-45ff-a185-75fea65ffef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a12919-b006-489c-883f-de8c4bec5bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6849be61-8766-4fbb-90b9-0bd2a5d36c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78e9792-dbd1-45ca-b0eb-a247d60a58a4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ea523c-47e8-4b42-a933-13c90631ca37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88cc632c-2c18-409d-bbdd-e1cfc7e8fb46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa39482-8345-45fc-99a0-f156a6c853c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdbf1d75-21ed-425d-b5fb-4609a2c1a275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed658653-f8e8-4090-8c90-5bcbb334e70a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1105c6-129a-4955-b3c5-8286dd30d056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d0ca93-e984-4c94-84b1-9351d3a00cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba9bc86-90c5-4e47-b073-29ead4a746e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0249faa-620a-400b-96eb-ae43de9ad9e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a832d2fe-fd40-4f18-b65c-176eacb27f93",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392adb6c-7ab4-4889-957f-950876ef3252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d166692-d271-4620-be77-7b949b66cb2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39152beb-5033-4b97-9530-250c17336a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6898070d-cedf-45a6-9858-5b8fa6acea2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc21371-3fc1-47ea-a1e0-04bc9ba99dd7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873893aa-8e44-4b1d-9d8b-81aa025d3f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbda0f76-c3e6-4716-8da6-4a117cc88df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed30ba3-f492-4814-a004-3ea42c99fbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a437451-fc1d-4439-9be3-d58e0baf1c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a50d572-0bf0-4775-a5d9-561e34d21384",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0133bbf4-6165-4cd3-ba41-8fb2bc049d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a78f83a-e144-4024-adc7-a7c344cdd900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c584356-3230-4222-a3a9-bb14a30313c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31dd5af8-317f-48a7-bfbb-1a5f86ae431a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ce635d-77cf-4c3c-ae8c-330b2992b176",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d8c0f5-338a-4296-ad13-3c1b977bf3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a595f9dc-37f1-4c77-a792-201bb1f967f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4bd5f1-acad-46c3-9450-087cd965e47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46898e99-488c-4877-9672-b47eaf2188ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d75c4c-bf2a-40cf-84e6-4beac935bb36",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6de47f-3c69-4fea-bf98-bd951247087d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b864ff-8a11-429d-bb9d-67f120c51e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d13d19-8692-4f6e-8081-676b142b543d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae51a06f-0867-496e-aae0-de8a1f6b0c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b60c4a-e4c2-4df9-8c01-3de155959149",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3783a7d-e29b-4a68-bc03-6ad0cc4fba77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19ce0cb-c0b6-4fec-a637-2731f4e0b21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4040f834-08bb-41b1-9fcf-d45902c79391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6e3cba-c9ec-4421-9787-ec653d591ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f35d73-43ae-4656-a073-b490c3a9cd07",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38ea26d-3abe-4e57-9adc-a5a6d2e4cf43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d893b5-37c1-46e8-9975-f0bebf840081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e838ad-ba00-4358-8f02-288c1af7ffbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49303ad1-d093-442c-8911-9cf20eb24a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd8e7eb-baaf-4031-864a-b820edeca50c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d774a8-6b25-47f1-a317-9870a7461857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d508d146-7924-46f8-9696-01a08c261c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7f89a4-8af1-4c84-9916-2a06ed922940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "497d5d72-6097-444d-b9a4-b375eef980d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ea3f44-10b0-47ad-b0c7-e1a5847ce086",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307002a3-f8e8-4971-9995-d423124aa307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5debfe3f-a68d-4422-8bd7-f3bba4ea01e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c340df45-b109-4f6b-9515-6c151f105420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd8d93d-1b59-4b62-aa9b-4bf81d823a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e478007e-7ad0-44b1-8ab1-4d7ed4771649",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff1d6c5-8eb2-4f88-8c54-786465742373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b4ae15-a35a-4d04-bc97-a5a5cf704af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da31d072-c0a7-461e-9bd4-5198e719e83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54a98e5b-b400-4256-9c19-3aeb9ae7656f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2e6fb11b-8256-4d3c-a55c-f261d55523ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4bfaa72c-9c6b-4968-a35f-ec9afab22f3e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b0c55c-32bc-418c-a75f-f8091b176009",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "588d0d96-7aa1-4f8c-8c54-ae0012c233e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4e8079-6aa3-4fb9-8bf9-a2545f39d719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb8ab9a7-c18e-4558-b241-74e4fc0f1662"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc10009e-0f93-497e-a8f2-fbcc81bbd118",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9845f982-0be2-4f77-b2eb-b5f6d245edf2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e45315a7-bf04-40cc-90f4-6a1bf6eda910",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d48fae1-4262-43ef-9941-700020e3c6b5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4fc3633-1c53-4e6e-80b3-70eda7487911",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8a3b3c0e-f63a-43b0-87e2-97d454c13955"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12cfb6d3-6e07-4faa-b472-22031ddda206",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de3deaa8-c6cc-4d75-8f9d-171fd53971d5"
            }
          }
        ]
      },
      {
        "id": "10f40c75-0ed0-47f5-bb15-d3927b659439",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e2c1c30e-2d71-4e9b-8123-3da2cca0c914",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2eac616c-c11b-43d7-b42a-3d45e4c1bbf8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "05ac84fc-81cc-49ae-ba99-6808c52b8409",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c08192-f1bb-4d4f-b94a-92ae67fa9937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d25c6b-128a-494e-b0c7-4e24f7e68d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61eff02d-bb56-4d7d-b9bb-815e30457e8d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7416b795-2209-47f8-9f40-7426685a7e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4ca04a-24f9-4cd9-bae9-6e22ec4a002e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabc3537-e2a7-4a1b-ba2b-7680cc6b6cd9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4e78f3-8da8-441c-8255-7cf72cbf91b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84403a71-b24b-4d69-acb7-8dc2b22dbafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a345cc-1e06-4898-a3c0-65ab6aec52b5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62305531-03a9-4d3b-ad75-e5596797f1c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f82656c-19ae-468c-a15d-824c668c5f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc0210a-63f5-476c-ae87-ccd682973b81",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3be5c4-4f9c-4319-a5db-1fc2e8815e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce51f2d-2d1f-49a1-ab9f-5f930a6fa679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24e03bd-1e8c-41d3-a1a0-6da493d33813",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0710dd0-36ec-4f2b-9227-e52a55999bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d113444-dd52-44d1-9029-c3172b888e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5431e9ce-1c8a-410a-b373-d38d3a40a544",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52f0355-5d02-4110-9fac-6a604de5ba5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65fb5d41-efbc-4c3d-9965-3d436f828b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "281a45a5-ecc0-4a2f-8f11-9668a0e4a926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "437f580c-5701-49cc-82a1-69e7152cb001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699b247d-cb29-48ff-9f1f-a7bf6a7a86dc",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad39f296-aacf-44d2-bc6d-ad26d2ab33f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dae41d3e-56ac-4418-8747-c23eaba672e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebd1e61-df59-40b1-8845-487e211361f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4c3935-9255-4617-ae85-9d5dc78d89c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1160f9-cff9-4faa-bec8-286f38d8a900",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0deecd64-94c8-467f-a277-43435bdd95c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4afc6924-6dda-4786-ae50-b1bd14e4854e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c938a3a-721a-49c9-95c7-ca0fdce02b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1cd4aa-8409-4e9f-835e-14e6a741c2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3141c955-dcdf-4880-8a86-8aca77fda4b2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5397856c-2527-4ec6-b63d-16f8442eb094",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0841415-3ded-442d-a6d3-61b90bc518ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb2ac24-5a6d-4aaf-a4e2-9be180fe718c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c38a537-6b67-414c-9bcc-c92c0cedfdbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f943df9-9d88-4515-9a41-93f48a75b758",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0eb74d-70d1-4929-adef-f60d8decbb6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a226075-fd60-4957-a1be-091c32b16bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac763434-3694-4a26-a203-ae69922c8fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c011cfb-45c4-4dd6-94ec-203518d1d6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74f335c-e545-43df-a79a-d58c943869ac",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2e26c4-6690-49e4-abb6-19f56f3261cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b701f37-6672-4406-b10e-63a47166f187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1f84e5-5100-44d6-980a-97f0a48d97c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf115e7-945e-48df-b994-ef202b8cec93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc698b6-fe0e-4a58-9aa5-59b2f24ef9ea",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd214f67-df4d-4cde-bd04-4ddd45429c33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5bf7e5b-4f49-42a6-959a-d79b2c23b9ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fd41c0-824e-48fb-90c0-a6ed16a26a9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf3fd42-ccc2-48ad-81da-c232077dc785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c195b611-bfd4-431a-a214-b0b988364f7f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb71c224-20ea-4029-9557-5887c6b3d92d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "227d4437-1f2f-450e-96fe-33d39e3dd2a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76fcd631-2ad9-4045-b8be-b74196511ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e5e5f89-512c-4c47-8356-7e22fd51c233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b24926-82ef-41da-93c5-62d282dbaa0f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d9a510-8d2c-429f-b1a1-3b264ac61dbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "424b68dd-c5e8-44e5-8b9c-bdd2a90c954f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd691614-9d71-4151-a6b9-a14709656ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267b3f40-c353-4927-af94-749e23c80d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8038cc-dc3a-40db-a6c8-520ff16563a5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a42012-3495-4421-addc-1d64da10d7a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4da240b-6dff-4758-a544-b74d80964c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "335b11d2-61c9-4188-af59-fe910ceac871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f8accb2-6287-4a76-9345-05182c2046d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b333ddfd-d08d-41b5-872a-bdf29bb223a7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742c2e23-3ef8-4af9-a614-a736a2e5dbcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac96523-7794-4654-97f4-c4312af4953b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4730e90e-77dc-49dc-90f9-2a6508d50914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "882caced-bd3c-46fb-94d1-7fbcb473b923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a7ed67-7184-44f0-bfb0-46bc90024763",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3f44de-67f0-412a-b6cc-09a096e5ef13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0699dfbf-1a88-4a34-962d-e7731740f0e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc31823d-9332-44a9-bdd8-1ba79a934a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63a1b94-0677-478e-abb4-81607ee6a3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25543f3-6735-4749-9946-a30410f596ac",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2ba976-009c-431b-adc6-4cdd2fb48191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614169d6-2af9-4155-aa40-a8a2ab6d6c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adc6fd5-7004-4a70-90c4-6bc27149c719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c245ca-ec0a-48bc-ac74-df2410c768e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5120cdf3-4630-486f-9685-887909657665",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51282818-bf97-4e48-80c2-dc4548b3c5f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9d9964-2881-4e29-bba5-edcd8377bf22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c4d9b0-389d-4da2-b24d-177168af2989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a2f0ec-3374-4af5-be50-44e5b52d8ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3a9c09-2885-47b9-b2c3-0ba3292c4880",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdde53c0-1956-4c88-bdaa-3ce1fb3789ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b3a6ab-f8c5-4a8f-9290-674fbd079c41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52396386-87cf-4b09-879a-e96abcc73a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50084bd0-ba13-4794-a668-cd1f9cf1b090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8f2652-345d-44ae-adfc-d0069363df74",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb3ec19-55d9-4ee6-83c5-b370660b6c21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055eb909-7942-4520-94c9-631d6b4d9132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1aeb572-7b94-4d9f-9973-8b35f374ad86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc03d03-1fb2-4178-9d05-46d9d59255fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329435c5-ed10-42d5-866c-56f6986c00f7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb36bd1-c93b-49ee-a14d-a4469b11fa58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db98ad7-12f8-41f7-a01c-a1f85640b486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0f5004-aa4a-4066-a6de-2994350b1318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb67daea-bfad-452f-bbeb-fdc1977bffae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2611087-3033-4387-8bc5-b091830c98a7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24f8d7f-9eb2-4c5f-a2ee-bb6e906c67be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1241b042-bdc7-44fc-b6aa-b38aac06f989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de3f17b-c34e-4b16-bcd6-6f3b3224d368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86cfe161-5aee-49d0-b4d9-45c11c918a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1e4901-81d8-41e1-8f1a-3e2777c8e6d4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bcaeb9a-ab8f-451c-b030-2d8a100fdf14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daa34972-38f8-4684-aeb4-5afddad3f260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1201a5-2d31-4c65-bd8d-399c149135a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5338342f-b114-45e6-a7f9-dab266adf927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c39f07-68cb-4422-b4cf-ec0603331030",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54de333-3d08-4ead-8ec0-80066f3151fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fde1bed-49a5-4845-bd54-219069c5d61a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b53c71-e574-498d-b0dc-64cd71f9c94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c2a48b-b593-4136-9b0d-6486ba1645d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116d9447-c03e-4203-9312-24e6379e2b51",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7770e52b-8198-4c9f-87bb-bcc3d1164ead",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "011f5138-a975-4996-8234-9caaeb4d2e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3fa96b-5634-4397-af8e-a3251ef0ed9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a93e59-26ef-4641-aa4a-43905a7ee43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad09e241-386b-445d-ba06-056b633be6fd",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696cc7a5-6ac5-478d-85cc-16f53ac81ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b319a663-14ec-4b37-b542-ec0891c001ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59593fa-0e23-44c5-9007-bbba5ce735a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "773d049c-48ee-4848-9afe-3cfe9df6e3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27ca6a9-96dd-4b8f-9742-a1bf9e413242",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf63c1e-651c-4236-9bdf-acd06d96bab8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c34b8dc1-ee03-4995-a47d-08e53bdeb2cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe0a797-401a-4ddd-9f77-eaac0ef72889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feff4b54-a0b6-416a-9483-ed4e0ff036b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00e276e-c075-4a82-8b3a-6afbecf0faea",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e782d5-50f0-42e7-bc7f-df077677f5de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c2f2dec-f024-4cdf-9c6f-472b6562b469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48d0b6f-be84-4924-a505-72c054945373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c92ada-49b2-42b2-8508-56e002ad4f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1392478-c10b-48e4-9640-9f99a7a58647",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3446de8-c4a8-43e4-a6c2-c0a987d1b877",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce58c2b3-8651-4372-afd0-ae0da9693eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e25f13-26a4-4008-b66b-3cdf0ef333fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "930c0b0b-0ac9-442b-8d49-5ec5b40ad301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2da499-0082-41ff-92f8-bc71c2cb9f6e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c96b2c-1326-439b-b2b9-af444fc9449f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3966a09d-abfa-456a-a4b9-61e5d1309e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5897914-6cd9-4f36-866d-8793301dd8ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f15c819-5895-4e0e-9109-ce4082ec1750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad3a893-651d-47e1-9b72-ff2359ca038d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e0cb48-f450-494c-90b2-c4af0633c167",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db82d236-f7fb-4c2b-8b21-f34582cf1fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e0ce78-2967-49b2-9a5d-5fde4139ea9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab064c9b-3df8-411a-ba6a-cebeb3fee99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b390848-1e26-4cc9-9af1-6cf2196445a1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906a833a-7281-4469-9659-d56fb5e8dea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e1dc620-b7e1-44a9-a317-3fd786a9ac1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "355442a1-670f-45f7-b130-99fa30d07b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c46624-5c4d-44e9-afec-aa2d34271237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c929cb-8e42-4156-aa7f-7238cc75139c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963374cc-c4c7-4f94-bcff-a7dba14e52cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5351d0c2-c38f-4065-a9c6-1dd5559aa1d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a91ca48-ccf8-47f3-966b-4df68785283f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d477523-9603-42cc-915a-24a38d7bb48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb733f32-1715-4185-86a8-d9bc8348c6b3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9379ab-077e-4e71-a390-8a601f4f6fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f203329e-02f6-4d6d-8dfc-d11a3ab7c050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb91572-c58c-43d6-9b9b-fad91d78c19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260632ba-9f0b-4a89-8337-39d02e1d6059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64c53dc-6d9a-4d26-9a01-69a1a12e3314",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f452c05c-3113-4fe0-9acb-664bcf083ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932ab6ba-4679-4e32-813c-7c6512d56cda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "638ad4c2-1d42-491a-b729-2e3114c6f349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05224b24-6c5b-45b4-9c0c-2e786723c368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cfca47-8ea7-4e0f-ac51-45d9760c573c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3858676-cc22-45fd-9e29-b1deac25e7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af733b9a-23c7-4d51-8be8-8bc3c1deae31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91f9c15-2be3-4bc7-8ba6-b04d0943c34f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd3f18f-49fb-44a1-bbd0-23a5ae95067a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948f0456-d35f-4c1b-8078-b8340135d92c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327d6a7f-91a2-4401-b65c-9ec11914f2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05809a95-e839-4a8a-b5d3-28678a806547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2857662-335f-4784-9ebd-459aebf55ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e4f5a5-661a-42ca-99d6-b9ec047cabf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a854f61-2b2f-4003-8f6b-846afe2ae15f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2f0d07-c2d0-4b03-a71e-9963c0cc6bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b829488-74bb-46b7-8d95-9fe72fd179bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0524ab64-8450-4185-8aea-8c540b0ab5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb79fb3-8f25-4f04-88e0-dbb3de94eec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1737d2-cb45-47fd-a40d-c4aa12a6ebd0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c85c5c-2611-4171-a582-e7608a3707a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de4d026-b160-4059-bbef-35cd45625e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53741818-cba4-4653-a409-f05392383f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac91767-85b7-48d6-8c36-638ec0154431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c3e1ed-f16d-4fe6-83a3-079fd670e10e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f122a1c2-2960-458a-bda4-6ed3271bd92d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0c3dd2-346b-4bcd-ad9a-73e1a1175cf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d695bee5-2b2f-4fd9-ac53-ff213dc17cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8df590-014c-432e-99d5-0458bae8598d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19c43cb-01b2-4571-a831-308f49382990",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10d91ff-e466-4aa0-a38e-e330b8c19293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b8b891-12be-42bb-9af6-2f5ba3d3d010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7bbb63-593e-4ec5-8f35-7d56514d7aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c263440-c6dc-4347-8941-48d3249a9a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8e0a3c-fa10-4644-b83e-17d819b7bd96",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17322f33-11c7-4585-bd62-8fc8c8340dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a22b922c-e638-4362-97bd-8a1b4de50883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5d1429-449e-4232-92bd-e978856b7c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ef97bc-7970-412a-b66d-26a9a49f612a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b28f036-32af-444b-8540-9315d3f2894c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d5ea1b-d83c-4ada-8589-3de6ffb34ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7eaa90-ff95-40fb-abf6-23710dbb3bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1eb764a-a6a5-47bb-8ef2-d975bd69b918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f060b460-2d7f-4173-b677-ecbaab149de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c980ce9f-2752-40d3-8a09-7c68a46b39dd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778774e6-45d8-424d-99ed-c85d82750b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786bba32-11af-46ec-84e5-9d29e5500126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "613a8bb6-661c-485c-8144-a5568d4e1437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8020e5-3b99-4653-afd4-16331a815ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f46900-5ade-4f9b-9f7a-827a50b4d39c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ef20ca-b6c7-45e9-8870-769be2d4dcca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957cd857-c4cb-40cf-8c64-5eac4568d540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e28347-2c03-4704-96e3-4d4b40a10fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6205e745-d4eb-440a-9d9c-6b2a4ff642b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968db72c-65eb-4039-a627-f948a47c7d04",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3357a2-dd18-4d0d-981a-8437f44e2f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e74da7-212e-451e-a398-1cf639242c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa410de7-26cf-448e-b46f-93e2b9eb45fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9d0601-1baa-4d27-93fb-04f84956416b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f125d9-576b-4b3c-9126-5466defc9575",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc8923b-97c7-46d6-a694-5fb8db8e8a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47bb91b-7986-4c67-8c4a-b50616841733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "563854f9-0f8d-4e12-8441-2e5cb08e8e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5018794c-9478-41b0-8896-9e69c1d519a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db2b095-8935-4be9-bc2f-6c43498e5645",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e9407b-15ad-4e45-b78d-5a4ee9454914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a16beb-c01a-4f6f-9f42-1fd2c4b751a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81399e1d-de4b-446d-bf8e-ac913e5ebc16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94ea807-5ab1-4df1-acf9-e2fcf9921fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5a055a-06a3-4257-9a98-f14ef497c881",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e10375-ab87-4709-9c0b-caf7329a1d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d56183-2cd6-4690-93ca-e6311a89ed96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "918b4802-555b-4573-b876-d213babee3e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b76ab7-1407-4152-8d72-daed8b76de2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21949f28-2a32-433b-8809-386bbd62d3e0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead02e51-6152-4218-8374-0258cd6fa2c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ce159e-e29b-4ace-a7cb-281be268fa72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "496d1119-1ba3-4efb-813e-b591ac5898dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f3a72a-2bae-4d44-b391-f6dbec9aaa74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3dd47f-3681-4f97-b266-3461ebfba3d9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f093e12-2270-4a5f-8b21-df94733a013c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ae43d5-64dc-4a64-bd11-42027af56481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99aa4540-ec30-4cf0-9d2d-ba06cc8e6a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddea5a7d-db86-4e15-99a3-7c8e55900622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772b7ff8-d31b-4b25-b695-204f3bde82c4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125a20ba-e8d0-4753-bcbc-43ea24846cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca64ad8-3d36-47b0-b9ae-414d3c93dbf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "864c84bc-62b1-4503-a29b-ebf164c7a09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac2fd21b-884f-4010-b2e3-89f78087f98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c6b08b-ddc7-4695-b835-61d341057c0c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf3798a-ffc3-499a-b421-364fb9789f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76bfcb87-1539-445b-81f8-26d43e3b881b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f98b38-e1c4-4ced-81f7-a5fda43b2167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97706f5a-bce7-471c-9db1-e3aeb9ee4b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416c3b2f-f36e-421a-998d-21a2b36f05d5",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce7a82c-a2dc-4973-9266-f2f2baf346da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e70ff4a-c047-4cb9-ab06-7f8fc0459c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb1d6a4-d704-4f0f-a07f-ba52fcd35c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1917455d-ebf8-4de4-9f02-f7affad0ae68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a53bec8-b045-45ec-859b-58a4027ec461",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65163806-cb64-44f7-abeb-06eddd00776a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99408b2a-c5bf-4a49-8964-6d70a95671e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95808ac0-ba55-4e46-a8af-edea2c65bc7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5943da0c-d98e-4a43-aa94-9e440517dcec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e016f880-076a-449c-9269-b893924122e6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613b88a7-69fe-4e25-97c8-35d405d070c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e86d758-10dc-4a9f-aa4c-4e8656a4b14f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8575978f-f9ab-4768-a556-15d94a3183d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09eeb4de-bde7-4754-9aba-c89f879e06ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f04273-0ba4-4f6a-93f4-053946930f07",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6706a2ff-e221-4015-9770-ddab20c67cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5d660c-5b97-4d8f-b6f2-40c0735c3cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8d2f6a-59d2-4770-bacf-b6243fc3ce8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920f500f-c52c-4170-b4ef-8d84e47022df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffd820a-4403-425a-89c9-99975256cfea",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71e411d-3acc-448e-96d2-1c97e95f8fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb26ab2f-35fb-492c-a3a9-e8ec6360bc26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0945a804-c963-40c1-a916-7495b7c888af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19096b3c-ac1e-49f1-a092-6a24cd1fb88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f64534-857c-46c4-9c08-4b11fc724c7a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde7ac77-e340-4318-bee8-5212d603f101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "680c7bc4-492f-430d-8cef-37fa62663397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "402c203f-1916-45a5-ba1a-c441226d0a23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b791df-3672-4b17-ac06-103215a7c388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd618bc-005c-475e-8753-1b45a51c83d8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b10fcc-15ff-4506-a4d7-74b740357e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "726985b5-19f4-4d1f-88f0-2d8e09723513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74f31e5-424b-49ac-ad67-ee0da028dc2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b01bd8-764c-4094-9c69-cd668f960d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd7e99f-19ef-450f-b101-9af63da8fba4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4289accb-d45a-4ff7-9067-1a862c504974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2d4cda-85c2-45d5-9ca0-af1632b3c29d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebe8aa5-f886-4bc1-8bdd-81259f2eefa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d803ffc-648d-4b59-8bac-58dc33539eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506dc3e1-d160-4be7-accb-0109ee0c02e3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b7e41f-8922-49cd-b0f7-878f99937a2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d165202c-f699-423b-9ead-9fa0e46dc442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1960d15-26fd-4ce0-9afe-6a7f07903a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9edc7e92-378b-4385-84ab-f87e2d0f4d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b29cea8-2f1e-4767-8ad2-04d086c5ee98",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62392bc4-0ee9-4b97-bf8a-f232eb402b1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9447603d-cee1-44c3-8e49-b19c499527ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e11995-eb79-4272-ad15-c4c18f257eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "982ccd58-4c60-4ad9-87f5-e9313179efd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d058a5-0846-413d-a36e-38f08ce98a5b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e098a3f-854e-4e9f-8022-d0e7841fb255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eddefda6-4ecf-40e8-b25b-20d65dc148a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40c1dfc-0022-47be-8c16-03badf1e0f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f49e06f5-0368-478d-b993-25b327b33c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bef4a41-2c05-420a-bca3-ab5487eec980",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e816fd2-592e-4f78-a1f3-b7e15767c0c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea03f5ae-c7b1-4c54-9e29-40f8b6cd6b91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7b5d46-0e5f-403b-ae1d-d27d01f059fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1785aed9-7c4e-4a6e-9390-2c9d6d3316b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbd2370-cb41-4863-a195-796a8362b00a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4fa2a6-a4dc-4217-bb0a-8f87c87107d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29b3143e-3c3c-4996-a04f-882f8e253a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd188536-b024-4033-972d-35c634cd9f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb22c1d-910d-4cea-a740-b81a3ca71023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ee8cc5-614b-4fce-8720-508c73bf08ce",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba53389-af54-4425-b9e5-8680fc4a3ddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37b4c5e4-5cb0-4735-a27f-eb719fdd7d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c006e901-52d7-45dd-b5f9-ffaf281d4f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6862400-62bc-4971-8d1b-697637b61b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005e7bcc-6626-4d76-9733-de986999c6db",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5a0110-2abb-42c9-aa06-a8fff67fcb19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c537800-6135-4847-a809-a37749fec7ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7352ffe-5ee5-4247-9294-a07977abd146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8ace6f-6ec6-4014-8ead-4570a7c4b643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558b9c6a-ff69-4563-8a72-e624df8c700d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748473ba-a0ed-41cc-a0fd-e31d1e1d0cd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d55df917-c56f-4292-9eab-be4d9f31b121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88712628-4f32-4bd9-b666-7897277a5b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bfdfe38-f73a-464a-a8e0-fd3ac620f44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317f2f31-b1b4-4596-a28d-34457d6e0dec",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b40c9c7-151a-4149-9db8-26a63d1196df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5e4ff84-4e40-4175-a6dc-29f59bb240bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17cbbff-e300-4882-a952-7e949b28ef78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb836d7-0700-4476-a2b4-b23dbe0eb2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf443402-d2e4-4738-9ad3-31b4458f271d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5703a14-d408-487b-85d1-65a515218a00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca1a459b-d4f5-4eca-9977-b5e534b2749c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc28ac38-51ae-432a-85ab-44adc6c5bcc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e2e2b1-5148-4119-b22e-35f2251f317b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69daf100-4353-4cb6-918a-254f6f84f7ae",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355efe79-29ea-47ee-b37d-6022a01975a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b24fd6b-23b0-4dd9-bf1f-33d19fe78dfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d817f16-6b79-4b0c-a72b-acf7912d5ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96106ee2-0536-47c4-9a78-faa4e3946045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d54212a-16e2-4e6b-8c44-ab3164a9373e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38e3a0f-211a-41fd-ad48-459bbd16b302",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ebfde0b-87cc-4338-9944-fa43cbfcc33e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d63cfa5-db04-4ca7-a61d-8bf472e362e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac4bce7-a71c-4fe4-b837-220645ba0094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4bd4a5-8910-42ea-b5f5-cedc38c7b88c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c6ece8-e316-4cb8-bc61-d1bae6d4c92d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51a76d77-7a9e-4671-a366-f55133acc114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9614184-6852-41ad-ac9b-97c6e5d3b5f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f2bd11-4caa-4aae-8c1a-046dde537ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfebf694-3358-47d6-bccf-24f7c6de88e1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d02322-feb3-42b4-90ad-ded342a5e2ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d513cf19-4de8-4ff4-85fb-7ccb0e893115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "443855ad-b237-47b2-91ac-4451cd32c36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "388e07aa-7b1d-43fe-9431-4e9adf4195a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc70543f-f6a2-4597-9fe3-793ab00fd7fd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2513e4b-ffdd-4cd1-a99a-46bf65ccf2e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7d67293-aa57-490d-b368-4d2ab7b247b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0edeef-a3c3-4d61-aa1e-4cc52cd13480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811a8d7e-2f8c-406b-a26b-5ebc20207a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6ebc3d-001e-4f8f-9ecf-7316c8e33e29",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b94330-b1d0-4377-a37c-37f1ca4ac550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89b50c37-0817-4b28-8a00-7d27f17fd0f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4aeed0-2e1d-4ac1-9df9-04021ece19d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e564461-d17b-49cb-979d-1d18a9ef1212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8d35f3-e333-4eca-8764-114c4e187f1a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213bfd1b-0df2-497f-bb13-0c824e7cfb50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14a93d23-d68c-44df-8a32-cbbcfb9c534d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a89cfe-5099-42e3-b6d2-7074bea75c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c76e43b-a297-4f1e-a230-2f29f6e46f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224d2c02-d321-4f17-a7e1-2c52ba989b2d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4b4b8a-f104-46ea-be47-024122bd4814",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b65affb-92e6-4c8b-8b66-1c9459caa887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "998a981f-4a32-476b-97e0-4b80018c5944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07253e62-a5d8-4ffa-8e05-7ef302d249bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a430c5-5be8-4a6b-b6b6-258f3c889d7e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073208de-a9c2-43aa-bf9e-e85f120c7b0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1cee0ee-cf9d-4142-93f7-f5c2ff2329d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ef880f-6911-4734-bcee-8fca01556d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ebaf449-b108-48fe-bbc7-c7a08bb96d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e270fd-f5ea-454e-8602-1557f4ecf2d7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07dc4978-689c-4f99-b2a4-d81298bbc747",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb90e948-5a1a-4953-90c2-0097e5b8920f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fad1615-8e2b-4859-894d-9e9570d47182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c73622-8fcd-44f6-919c-70691621c350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a294bd59-1e1e-4cbc-a54e-b31f67467ef3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9a6262-957d-4e60-ada6-082cf0617980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9eb0654-599e-4fbd-9ff3-f382b29efdff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c745ae5-afca-4963-b474-647bad79b853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f0b323-67d5-47b4-866f-b0d96f5d6097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794b62d0-cc50-4383-b3eb-c8ffef5e730e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1f1a34-5ed7-44fb-b20f-db3f13775de1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd9cc104-6f8b-4e22-9a08-2174fc3c5e17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef2ae92-d450-4b5d-ba6b-abe0a5e5c679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc9361e3-9f71-4e93-adcf-932dc2eb98c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63405750-7824-461b-a50f-5c3ed6d72fbe",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6a321f-ed9d-4126-934b-c413e7738773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d594a791-d337-4f03-ba39-d2703a4e0c78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a661a0f5-4a91-4059-bb14-54eaedf9804e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb3667d-e8ca-4307-ba65-27003eb470c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f654deb1-2643-4010-91d8-1601445b58ce",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f6851a-3820-4b70-8460-ac35e9184f7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c8c65fd-14c2-4e23-8c3d-9d22b1dfbb05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fe3dd2-f90f-4f47-b040-69d22d93bbfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33bda6b5-9f72-470f-9462-588afa98cbdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284b6b9a-9017-46d6-9b81-b7d857bbf0a4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ef2d59-aec2-4224-bbb2-ebd193183dac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87bc2f5b-afaa-49cf-ae5a-aa089c0eaa3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a71f6a-f5a5-48a7-ba0b-dfa06ffa1080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d70540-202f-4b3f-8f20-849ef56946d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eac6664-c3f9-4a60-8e6f-cb20e4f46e58",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3ab044-eed1-4fa0-8115-f97cd1abd966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea9a2e4a-b420-46b1-9728-30dca31cfa1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce67ce6d-8fc6-41cd-be0a-a5e2b5b28bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a7b245-2fd5-4bd1-8889-416f7ded89d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f0c21c-21c6-490f-b591-d725ccf73904",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adca3d65-4c71-4b42-95a8-f067c3f2545f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "551955e7-696a-44cd-8a82-0de9fb0d6452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fea54a5-9f21-4460-898f-61b056e455c2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58fcf160-cce8-4835-b4d0-03f08a00b1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5193fb-eeb1-44ac-bab9-e655523b74ee",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29844b5-012d-48d1-bca5-539113965b3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cb84597-37a4-4bc6-8393-8c41748685c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6096409-568e-4527-b526-974aca32d0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a807835b-c438-4cd3-8163-1c1d0f3da421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0007827-da5f-493d-967b-2d219e0418f9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1ea119-2bdf-4085-a8b2-27a47f41d7e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad246335-ee31-4279-82a2-35b824b523f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a115551-3b0a-49e7-a6dc-d2c936f11022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9581179-4b26-4d05-9ced-0c350ae85f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4732ce0d-c85a-4887-8a15-e9e9249d87a2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66151abc-e95a-4c9a-a3c2-15be8ff4b780",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ad7a181-d12b-4fb4-a09f-5ef84c9e6382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c84c86-a7fd-42e6-8fd2-bc3baaf9edc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f21b158-29dd-4f06-953b-0a4dae38afed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e227c99-aeff-4672-9294-8585ddaee15e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fde2f0-58f0-4f95-b1f1-b59057036d53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44b567dd-c855-4002-8230-ffc65c6e0014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "037efe6f-ea11-44b2-860d-0bee67327b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da5f7c0-aa1c-4a2e-9de0-47ca55ed409d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2363bef-e1af-48d5-89ce-560d83d80d8a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e4208c-b337-4740-9ca1-b20a4792d12f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53d90e7b-3eb8-423d-8aa7-39b068c07b6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1193a5-5bbf-4bb1-8758-f0c34f0aed99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf6a652c-3649-4da0-a810-0c6927194441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2f5ed0-1904-4de3-b900-67f928c636a9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7ce316-cbda-464a-8aac-ed04037d5734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9df430b4-059e-4113-9394-418af1acf25b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "473e2b1e-ff78-42bd-a4e7-047d876fc2f5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0b74c3-3d06-4cc8-970f-0078477c57a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57077f56-b54e-433a-9bdc-fefb0384d4f7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c38750-7f07-4c9a-8c66-9a5090342707",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "605e72a7-dcf1-493a-a25b-687dc6f29dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a634c2e8-2b32-4d09-a2c0-d9d028c0a665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b253ea-5e5c-4b54-a517-d6865bfe2755"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42708694-db4c-48fc-86fd-91bbd2dbb8d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "940b87ab-7511-416c-a12a-2b32885e523d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b74033e-fd83-4f78-9ed5-aaa7b3d87d25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2cc824da-471a-4a50-999a-aa9a989a5c6d"
                    }
                  }
                ]
              },
              {
                "id": "0683e8bb-4495-4cbb-922e-3e1dc563db66",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e5dd188c-c86f-43b9-b7e5-51097c9940c6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af3bb26-8e6f-4259-bf56-47ee7ecfab47",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cf71f575-7550-418e-950d-f76f9991f79d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f701c5e5-5cf9-4abe-9a50-8a32cc9e22b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e476fbe-67e6-40b8-bd97-1f571f6a293a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bea27a4-1fde-4927-9672-1431f305ed5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b530ca9-3346-411e-bd5b-bc8aff9370c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68ed0031-6942-4acf-82d1-2d9be3c845de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9caa1702-d9f5-460a-a4a6-49274ba7d293"
                    }
                  }
                ]
              },
              {
                "id": "0b0da396-dbdb-4ced-bed2-1004aba43aae",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "eaf6930f-b57f-4df2-861b-80ac3aa38df2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432661fe-a057-44ac-92d9-0fb7d378e60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d2ff698a-e682-4e58-9b87-f6497b80ada7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514b06ba-c7a4-42de-8af0-3796116dead2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac8a97d-4f29-4832-937f-e7f855525b28"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cb2e0659-3d22-44d9-a832-6f49689ce2aa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0bc715c9-30ee-4464-a061-0abed5846fcc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c09280b-fe67-4c23-a8d9-504c57df27fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dbc94856-fdb7-4067-b900-0d4330a54f6a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfee3e96-50e8-4b12-9fa5-c3091edbf8f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b717a6f4-ee1f-4e1b-8722-93415b2050ae"
                    }
                  }
                ]
              },
              {
                "id": "ee12e6b2-0a1c-4889-ae89-a54b9a96ef0f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6595741c-4f71-45e9-8fce-01370f402d81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ec0b61aa-9269-4159-90bb-ce55ddae0a03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d37bdbc6-b404-4bd4-aa43-fb2d39ffc5c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f03cf15-bd63-4997-9164-525871835599"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2c85a3e-79f1-42f2-b487-1f3b93c92f46",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b35405f8-5dbf-481a-a7af-2c4015a35878"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0793d88b-e94e-4172-ac88-52bff9838242",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9a1d875-353b-4ecf-917c-42c19c06947d"
            }
          }
        ]
      },
      {
        "id": "4212af22-917e-4675-b82f-e3382983b461",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "144125d6-a84d-4f09-be73-a6cf900b7583",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3526df5b-e96b-4031-8df2-4d0fcc4a874b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f6a57210-cd30-49c9-bb6b-f1932342a1bf",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a886fe-618d-4ae5-992f-78a94b261176",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bc6e45e4-c19b-441a-b459-89a9ea2d2e0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b48a92-3782-49fe-9f6b-d5fea62d8003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02d6fc2a-36ac-488a-8412-26109031f078"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72b344f9-e4af-4a95-acc7-f23c4d7253e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2c8b407-1b51-41da-a4ae-9e5015adf195"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "081073b0-a509-4e4b-8808-292fef8cc40f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d56862e-6ec2-4214-baa0-36d913539c8b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2eb9e737-7f18-478f-a0d2-63fc779c56ef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "633bf273-012a-4e63-b1d6-05ceb509fb5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b3243e1-58a4-4975-8042-3209db591da5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dba32ae4-1aae-4441-92f3-4b074bea81c5"
            }
          }
        ]
      },
      {
        "id": "d0df8f11-e06d-4bd3-b241-d38144bfac61",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f1c13340-8ecf-4cb6-873b-dffe59663310",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3afc60de-295b-478e-a41c-ab5ce583a666",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63224367-7f75-4157-89d5-3e5bb1192ec5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28664f25-b206-4e15-9ac9-25e3f75393ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bb592f3-c8e2-4083-a88f-06f3470508b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65d8e9e-bb3b-4b3e-a662-1c3764d0ded0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfd11f8a-4702-48a7-9cb9-331b13567907"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3ad1dcd-a08b-4480-b24a-7fa1188ef806",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c918429c-52d1-4756-91ab-f7ff224d98c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e903214f-961c-4005-bb03-c77fc005a74a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26aa38d5-35fd-428a-9576-ca71d9fd8c18"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "23d447e8-14b3-4eb3-825b-74c6f1f7cb09",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b0208b2c-c748-4f11-9d47-2a507ab409a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae9c46bf-b865-4c41-bc4f-d97915062011",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d742f8bf-6a6a-4d4c-9d99-0da05327e73c"
            }
          }
        ]
      },
      {
        "id": "92204e8b-86a6-41f7-87d1-7cb0e3b7abd8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e4a0339f-1cbe-4b01-a5c4-f5b3c94c0b78",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2439829-cd8c-492a-8a06-7f374279a2c1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8d77854-1674-4686-9217-8b6ef95bc748",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0840b7f2-6dcb-40f2-96de-be339fb99bf6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee5234bb-00ad-439c-bc5d-fb310ddc998e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26eacf55-86b7-4235-8bda-fa02f3396ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d054f74-cab9-4411-89ad-05bb8400d54e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b972b26b-9015-405e-9a6d-2a4d1a485cfc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c56a6b5-1ac5-483e-9cdc-bcc164a48eb8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6222951-2143-4d82-90cc-ad1489085bf9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d444c743-3b86-4889-b9e7-cd03c10b98cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc2fcd7f-fbf9-4fd0-981a-7aa2f2d93a0a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "60c5a957-247b-4e49-9c3e-2857f7e3a35b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bed977e-2de1-4522-86e3-e5c4730d237b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a66d222-52e8-4021-9e84-5f52d649dc5d"
            }
          }
        ]
      },
      {
        "id": "25499f3b-721d-409b-b8c9-e8208bfa8116",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20a4baeb-1031-4185-a935-f1af86772db1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3102ea6f-7c8a-49d0-a4e3-0f47baab7c30",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e7bb1a2a-6be1-47cc-8415-c6957fdfe56d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4f94619-0e91-4595-8766-d4a7854f56f4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a0ce01e-f27b-4a17-b459-adca3ea8b827",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 9.26315789473685,
      "responseMin": 2,
      "responseMax": 401,
      "responseSd": 32.95745599734867,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701218160705,
      "completed": 1701218172326
    },
    "executions": [
      {
        "id": "722c245c-92f1-4e22-a491-60cdbc29a376",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ebab0c48-4f30-49a1-9f8c-e6080effd034",
          "httpRequestId": "e40570f4-1c47-4c83-90a7-7080e3a5611f"
        },
        "item": {
          "id": "722c245c-92f1-4e22-a491-60cdbc29a376",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d00b7c03-de1d-4540-abe3-a2474587172a",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "756c077b-d600-48ec-b5c4-5c3a07425258",
        "cursor": {
          "ref": "1eefb39e-1e5e-4a92-be99-6b935f99b4e2",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5afe2323-bcdf-4af9-898a-e79b9ea4f5b4"
        },
        "item": {
          "id": "756c077b-d600-48ec-b5c4-5c3a07425258",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "37f8a9c7-916d-4ab3-9793-a955aaa57265",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "458d5f2c-ad3d-419d-9423-8955ac22ecd4",
        "cursor": {
          "ref": "b6467784-796a-48d4-b742-c506e52a5b28",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "41f9b963-0185-462b-97b5-31d8eac45867"
        },
        "item": {
          "id": "458d5f2c-ad3d-419d-9423-8955ac22ecd4",
          "name": "did_json"
        },
        "response": {
          "id": "012f421f-e915-40eb-82c5-8d3c6081750a",
          "status": "OK",
          "code": 200,
          "responseTime": 202,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9737c4-873c-413d-a03e-2deacabb8103",
        "cursor": {
          "ref": "6c13fd87-07e7-41ec-a47e-541b08d31178",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ba75fb60-aabc-40c9-90d8-7b255d25ba4c"
        },
        "item": {
          "id": "af9737c4-873c-413d-a03e-2deacabb8103",
          "name": "did:invalid"
        },
        "response": {
          "id": "cc738929-5586-42ab-8fe9-593c3365f1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9737c4-873c-413d-a03e-2deacabb8103",
        "cursor": {
          "ref": "6c13fd87-07e7-41ec-a47e-541b08d31178",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ba75fb60-aabc-40c9-90d8-7b255d25ba4c"
        },
        "item": {
          "id": "af9737c4-873c-413d-a03e-2deacabb8103",
          "name": "did:invalid"
        },
        "response": {
          "id": "cc738929-5586-42ab-8fe9-593c3365f1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc40862-82c2-4872-acb1-720934648f35",
        "cursor": {
          "ref": "2ac358be-be18-48ca-a33e-992551acc21c",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ce99df6c-724a-4a41-9e3c-92cb085c28ac"
        },
        "item": {
          "id": "3dc40862-82c2-4872-acb1-720934648f35",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bc0637bb-344f-40da-a44d-b055a1089d28",
          "status": "Not Found",
          "code": 404,
          "responseTime": 56,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eab2ca0-2b10-4057-9336-6199312c88aa",
        "cursor": {
          "ref": "b9e75bde-3c40-4fda-9e42-bd15381017ed",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "995317bf-522b-48c1-9b44-eb478fba0dc2"
        },
        "item": {
          "id": "9eab2ca0-2b10-4057-9336-6199312c88aa",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "52001a8c-f612-4219-9f5d-de7e43e91b7f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203e1a38-eceb-4fec-9c40-e7307087fe01",
        "cursor": {
          "ref": "859a0f51-1368-49d0-8684-18c15fb17ae0",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9c41bf0d-1cf3-433b-9d86-b49a985338ae"
        },
        "item": {
          "id": "203e1a38-eceb-4fec-9c40-e7307087fe01",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f23c272b-784d-4e8c-b031-fa805bff8bd3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a60a23-c8f9-46bb-934e-e6f4f6af00cd",
        "cursor": {
          "ref": "22954f67-47a7-4247-8979-91a14aaab689",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fb9402b7-0447-4738-a6ec-c741233c1cad"
        },
        "item": {
          "id": "75a60a23-c8f9-46bb-934e-e6f4f6af00cd",
          "name": "identifiers"
        },
        "response": {
          "id": "08b1ca42-f6f8-4012-bb4d-6b6c5a68a624",
          "status": "OK",
          "code": 200,
          "responseTime": 224,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a192442a-8300-4b36-8495-7b80db2dc792",
        "cursor": {
          "ref": "eaecd6b4-dded-4f22-991e-dd5e299bf48a",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bc754ca3-7e3d-4a50-b51e-a923104e82df"
        },
        "item": {
          "id": "a192442a-8300-4b36-8495-7b80db2dc792",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b1b301a3-1495-41d9-baa6-b7736cb20028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c456de-1466-4568-902f-d8755e7034eb",
        "cursor": {
          "ref": "7d189fa0-32ff-4f8c-8bca-d6b2dfc00589",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "67133ba5-cfaa-4dec-ae2b-ed509ca2b8da"
        },
        "item": {
          "id": "77c456de-1466-4568-902f-d8755e7034eb",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "07d72429-a485-4450-b620-e17cd3f69f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073da898-84f6-49e2-86be-fb035fafab61",
        "cursor": {
          "ref": "574498c2-e3b7-4a5c-bf01-9002eea47ae2",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1a5690eb-1f3a-463e-a36e-9796744ab171"
        },
        "item": {
          "id": "073da898-84f6-49e2-86be-fb035fafab61",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "85addbb5-7cdd-4b8a-860f-cdf831c33d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acef0b9a-a1d8-4ef9-9463-8941fcea2270",
        "cursor": {
          "ref": "a59f473e-924d-43ce-a25f-20594a5f2de4",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a0f8aa41-a15a-4941-949f-b4338ff1fd40"
        },
        "item": {
          "id": "acef0b9a-a1d8-4ef9-9463-8941fcea2270",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "dae5df75-4522-4a16-967f-442e3d20ca1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520d6337-39ac-4252-a836-8d2562f5f050",
        "cursor": {
          "ref": "936bc33c-a1e2-4791-b93a-fac98f5ccca3",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1b066671-c68d-4203-9774-dad7ac0fd476"
        },
        "item": {
          "id": "520d6337-39ac-4252-a836-8d2562f5f050",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5bac3994-076b-4dcf-8cb3-0b6d84c015b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4751c1b5-dcd7-4949-9564-0443b52e3d07",
        "cursor": {
          "ref": "263563d5-ee30-4797-8793-ba9d233f6158",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2ffeb18d-d89d-4349-bca2-8292cef088e5"
        },
        "item": {
          "id": "4751c1b5-dcd7-4949-9564-0443b52e3d07",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "31ec2aee-a963-4558-9a6a-204c7ce1dab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b2e4d5-3446-4f10-9c6e-267d154885b3",
        "cursor": {
          "ref": "ca50842f-f890-48c7-8441-f0f908dd0daa",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "eebeda58-0ec5-4724-9adc-e4b4332929f3"
        },
        "item": {
          "id": "57b2e4d5-3446-4f10-9c6e-267d154885b3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "da28ad32-3bd6-4e5f-a577-20f1686563da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df07b47-5dfe-4c9b-bf71-15f4769e1741",
        "cursor": {
          "ref": "804cfea0-5d74-4c55-b6d1-0130212298b8",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b5e99eb5-f191-4c84-8c40-8bec4131fc25"
        },
        "item": {
          "id": "0df07b47-5dfe-4c9b-bf71-15f4769e1741",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9525223b-7dbc-45ec-9905-dfce436a0b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341f0ed3-5cbd-4de9-b47a-3f821cd7f4ac",
        "cursor": {
          "ref": "17675d60-43c5-4502-b75e-cf37c964de22",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "05154e99-f409-433a-bf2f-aead8c8b12e4"
        },
        "item": {
          "id": "341f0ed3-5cbd-4de9-b47a-3f821cd7f4ac",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6d14c8fe-4380-4ca6-babe-96127d58c80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7adf707-f4cf-496e-80fb-0441d725d79e",
        "cursor": {
          "ref": "237d8aee-4dba-4d9e-8f42-4635567edfd1",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a871de6a-1298-491e-bd22-d9cbe65ae0e4"
        },
        "item": {
          "id": "c7adf707-f4cf-496e-80fb-0441d725d79e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3f47844c-7e2d-4180-9dd7-cd2b8b6ac8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b79bfa1-18fb-4f88-9f38-ae8439d033c8",
        "cursor": {
          "ref": "c8e1b7e3-7a04-451e-a3a0-2161415843af",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "32c621a7-f752-42be-bf58-52c8524d438e"
        },
        "item": {
          "id": "4b79bfa1-18fb-4f88-9f38-ae8439d033c8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "17528939-4ded-4cc5-b280-37ca587a4483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d40f55-d176-4501-80d2-c01f85d07140",
        "cursor": {
          "ref": "76c918f1-cc99-436a-b59b-88fe4017d9d8",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e12d8157-5656-4d1b-b894-65a02eca9e6f"
        },
        "item": {
          "id": "e9d40f55-d176-4501-80d2-c01f85d07140",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "debb8705-bd77-4a39-b483-6bfefcd7ec38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433ee760-9f76-4a52-9c31-89c0de48e7b9",
        "cursor": {
          "ref": "e6fabc04-b2e1-4c76-a3fb-8dbc52bf7df6",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "447e0039-069b-491a-92bb-d3098b396c02"
        },
        "item": {
          "id": "433ee760-9f76-4a52-9c31-89c0de48e7b9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b81b7cbb-7e09-4a1c-a0f9-011e69439228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83affb4e-09f5-485c-8e73-076f3f20138c",
        "cursor": {
          "ref": "c6376a00-90d2-471b-a7e6-7d4b72319b60",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "95a35ee7-3323-4d8d-991c-622253bf440c"
        },
        "item": {
          "id": "83affb4e-09f5-485c-8e73-076f3f20138c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d8e6a258-6b8c-435e-93b0-1a4accea46d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9a4e8b-68d7-4a14-b9aa-71910d9e84b3",
        "cursor": {
          "ref": "8e3b37b0-3e8a-4b8a-82d1-610bca2903cf",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "da0b7c78-f5cc-486b-ac47-0a8a4c5d79b8"
        },
        "item": {
          "id": "ae9a4e8b-68d7-4a14-b9aa-71910d9e84b3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "21796423-cad5-4a4f-84ca-c92a4981c1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75bbe5e-dd5a-4289-8e6a-0248f42f7228",
        "cursor": {
          "ref": "ed06e511-27fd-4752-9295-f8a4e6052fe9",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "410015d7-e66b-40e4-b127-fae49f8c6463"
        },
        "item": {
          "id": "a75bbe5e-dd5a-4289-8e6a-0248f42f7228",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "fbd59f6a-9e90-49fd-8d7f-24283d7bd5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714e3e9b-77b3-4c37-8883-76bc1ed92a54",
        "cursor": {
          "ref": "36ac4f12-53ea-4677-b089-40da9f739880",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f547d5e4-5c60-441d-be60-4d2fcae6a9c6"
        },
        "item": {
          "id": "714e3e9b-77b3-4c37-8883-76bc1ed92a54",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "756dbd77-2540-4c29-833d-faa50afb9dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e2b2e7-7a88-454f-8dd8-48c5d6f9c434",
        "cursor": {
          "ref": "612966be-0a0c-4534-baf4-7db0496866e2",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0dcae7e6-fabe-4656-94ea-4b6f74877377"
        },
        "item": {
          "id": "39e2b2e7-7a88-454f-8dd8-48c5d6f9c434",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7f8124c0-5a27-4958-963a-f9f556eddd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ff67ef-1806-493a-9805-2c9f43692e1e",
        "cursor": {
          "ref": "2f1efcd2-8b5e-4fe2-bc4f-b0457c9426b4",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3e587820-e9f1-4099-a09b-a50e3ce7656c"
        },
        "item": {
          "id": "d0ff67ef-1806-493a-9805-2c9f43692e1e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6ce75722-0bb1-4c51-9c26-7315c76d0669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebf361a-2fa6-446a-bafc-af8a492d277e",
        "cursor": {
          "ref": "51500578-fc6c-47ab-813f-82f85fb00885",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ad85d60d-e899-4f42-8d37-130ec4da98ed"
        },
        "item": {
          "id": "aebf361a-2fa6-446a-bafc-af8a492d277e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4671844b-b220-4316-b526-1263e902f88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a596c65-013a-4bc8-ade7-c361199306bf",
        "cursor": {
          "ref": "0961a65e-3746-4c1b-a659-5973c9b639ee",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "bce5fe00-c498-4caf-9182-d896537bd35e"
        },
        "item": {
          "id": "8a596c65-013a-4bc8-ade7-c361199306bf",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "56b0ca99-d3f2-4dc9-800d-b0effeaeabde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f02740-1131-4857-92d7-075be6aad31d",
        "cursor": {
          "ref": "c8551746-eb05-4371-8019-7fc36b34908b",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "67cbad02-2ad8-4480-9e19-3185f414b4f6"
        },
        "item": {
          "id": "c4f02740-1131-4857-92d7-075be6aad31d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9689cbae-9f0c-40a2-adb6-6a3e5da841ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191e6196-680b-4e8e-94a4-a930877409c1",
        "cursor": {
          "ref": "9e24b601-974e-4db6-8fc0-b47f480513d3",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f5e614f9-e4b5-4ef2-a717-3b1d8d869267"
        },
        "item": {
          "id": "191e6196-680b-4e8e-94a4-a930877409c1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e5681dcc-0cfd-4835-ba71-db5da86886b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9948005a-3b29-41ba-ace9-896fad871161",
        "cursor": {
          "ref": "d21592a6-a8d0-4c31-a9f6-1717d2352ace",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4b5515ab-c8b0-481b-8749-713af7860d1e"
        },
        "item": {
          "id": "9948005a-3b29-41ba-ace9-896fad871161",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9c960b78-ede0-4b11-ab6d-d0794a4d46c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113a85d3-0ab0-431c-a7e4-37b3a72735c2",
        "cursor": {
          "ref": "65e8cddb-e115-400a-87a6-b32f0afc2470",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9e860f12-f4eb-4943-862a-c5ec6ed2cb76"
        },
        "item": {
          "id": "113a85d3-0ab0-431c-a7e4-37b3a72735c2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "df2f6c18-9e50-4826-ae03-25eeff375bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffac0d99-7ff4-4da6-8961-87136ec959e2",
        "cursor": {
          "ref": "7617ec29-92c0-47b4-9d6a-036736c0bad1",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "26bb8b3c-4c82-4857-a276-05dbf1dfa1ea"
        },
        "item": {
          "id": "ffac0d99-7ff4-4da6-8961-87136ec959e2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "797a9790-fbad-47b3-8930-c9c7dc73bb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86d4394-ef70-4f09-8e43-5f4b856c3645",
        "cursor": {
          "ref": "2c6b77fc-b0b7-4b81-a9a4-9b8b0c1a7b0c",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4fb5a71a-9aed-4609-9b7f-577641357fef"
        },
        "item": {
          "id": "a86d4394-ef70-4f09-8e43-5f4b856c3645",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b26185aa-988a-4c3c-9e2c-7275165283fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e36318f-f0d9-4f53-b08d-b25a04832e15",
        "cursor": {
          "ref": "33501f90-0880-4923-bf76-1b05315bc9b9",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d1bdcf4a-4449-472b-8680-1b6e25c1aabe"
        },
        "item": {
          "id": "7e36318f-f0d9-4f53-b08d-b25a04832e15",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f4ec16e0-f898-4fc3-a3f6-0e76453348db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551ad9ee-7e95-42f9-9e41-230e57949947",
        "cursor": {
          "ref": "491f4a7e-c065-4d7a-b964-1e4cc785424f",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8fe2715d-15b9-417e-bd90-996a9625468b"
        },
        "item": {
          "id": "551ad9ee-7e95-42f9-9e41-230e57949947",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "17086b7b-b4c8-44cb-b267-0481094f46e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2dbe107-5af9-4d10-8fbb-5bf940f82bbe",
        "cursor": {
          "ref": "a3093892-0123-4996-b50c-7393f030faf5",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f19a96ae-2f09-4406-b7c4-c883771e8849"
        },
        "item": {
          "id": "c2dbe107-5af9-4d10-8fbb-5bf940f82bbe",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "bc0f42e7-b205-447c-a605-67248c5edfd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4549b2dc-8950-408a-80b6-527cf379e003",
        "cursor": {
          "ref": "43fee7e1-60bd-4202-86d5-851886641858",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dcede158-b04a-41e6-be23-17c345797a5d"
        },
        "item": {
          "id": "4549b2dc-8950-408a-80b6-527cf379e003",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3f3c0278-ff06-4b91-81d5-3accf58c10c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff4a667-1a08-41cd-91c4-a49bc866007a",
        "cursor": {
          "ref": "2f2a4eaf-539c-484e-8033-05a5657dc7fb",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f55291cb-4fd1-465b-9f3e-36e75e29fe56"
        },
        "item": {
          "id": "7ff4a667-1a08-41cd-91c4-a49bc866007a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7061096c-a5fb-4ab0-b752-a0dac5c3a190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84dd331-5e80-4511-a5d7-b79a4fe30554",
        "cursor": {
          "ref": "ce599166-b19f-4874-88dc-9e1b29e076f8",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c75831ce-0975-4708-9f8a-59a4a61a4ea1"
        },
        "item": {
          "id": "a84dd331-5e80-4511-a5d7-b79a4fe30554",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1a9525a1-c938-430e-a650-73ccbaacb9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38fa5e55-2d8a-4e30-b23b-f24d3439a844",
        "cursor": {
          "ref": "e5c652ef-8dc5-492d-880a-4c70d69fcf53",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "824466fc-968b-447c-b08d-397eadcb4f39"
        },
        "item": {
          "id": "38fa5e55-2d8a-4e30-b23b-f24d3439a844",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "682e8ffb-95b4-44e5-88cf-2d06d62ae98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd9f60e-aa8c-4321-8b16-a322af30c6db",
        "cursor": {
          "ref": "7552ee85-aaea-4e57-9991-4ca33737d6ac",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8239b9e4-0c2f-4f12-90a3-3b047a62b2e4"
        },
        "item": {
          "id": "bdd9f60e-aa8c-4321-8b16-a322af30c6db",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2456fe9d-24e8-42d3-9f78-885cec33ce63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6c31ac-ca93-4fe0-bdaf-d585132077e8",
        "cursor": {
          "ref": "b626ac06-af29-44fb-8f1f-b29b014d1887",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fc4a0a35-e72a-49c1-8fcb-34564d9c3bb2"
        },
        "item": {
          "id": "3d6c31ac-ca93-4fe0-bdaf-d585132077e8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "87753e57-68e2-49a3-8a35-9d5f5dd2a885",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 20,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31cd85c-2584-4236-9b0c-f560d66e322a",
        "cursor": {
          "ref": "fd285478-8968-4ec8-8a26-53dac751226e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d1da90d8-ac61-43ba-83d1-6816ac5827cd"
        },
        "item": {
          "id": "f31cd85c-2584-4236-9b0c-f560d66e322a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5c3d8428-7a5d-4234-8891-5931fa2adae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce536e8f-a577-4878-ace3-e6f569521c8c",
        "cursor": {
          "ref": "49dcf9fc-9d81-419d-b061-e6ae3d280384",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cee78daa-cadf-4fd7-8071-797255696872"
        },
        "item": {
          "id": "ce536e8f-a577-4878-ace3-e6f569521c8c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ee5d3e81-f2d4-4365-a026-b36d07ee2fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2343b8b7-e8c4-4311-9790-1ba6f913ea55",
        "cursor": {
          "ref": "28aef4e9-39de-46b4-a332-fc6686a75cee",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ad958443-dedf-4bc6-a65d-9cbbf8e30b33"
        },
        "item": {
          "id": "2343b8b7-e8c4-4311-9790-1ba6f913ea55",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6d9023d9-cbab-4cfc-8750-ea53722fc013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40adf32-e36a-4bac-b00e-279db4e3f2ce",
        "cursor": {
          "ref": "2fc6aeb4-88e2-4eeb-8b89-2f7c5b78b3b6",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e3d2e124-9a89-4d07-b6ea-bb6f640b583e"
        },
        "item": {
          "id": "b40adf32-e36a-4bac-b00e-279db4e3f2ce",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f06ea9bf-4ade-4f56-8d9c-dec33ca9cf52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d954c4-6625-4255-b613-c46782fba2d3",
        "cursor": {
          "ref": "b2b71264-4ac8-42d6-ac0f-7cafa9962a02",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c5a0781d-c859-4093-a70e-aedbf15522d2"
        },
        "item": {
          "id": "00d954c4-6625-4255-b613-c46782fba2d3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "baa82656-5ff0-42c5-b2c7-2b9624167af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c62be5d-de3f-4a6e-8ae7-86511c757a56",
        "cursor": {
          "ref": "1c2c7694-56ec-40cc-9a6e-4f57d29c003f",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8ea46c42-2645-4f4e-9c56-aaa24e762017"
        },
        "item": {
          "id": "7c62be5d-de3f-4a6e-8ae7-86511c757a56",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9648a97a-62cf-4b74-81b4-56d927e28223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07ccf49-2357-4c69-92a9-1a7083fcab6a",
        "cursor": {
          "ref": "4a3283d9-fe83-4e73-94f6-d071dfbf0f21",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "160a41b1-2ca8-4070-bcd8-6e2f4cf6833b"
        },
        "item": {
          "id": "e07ccf49-2357-4c69-92a9-1a7083fcab6a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "93b44f23-991e-4fdd-9253-d7a01f3f9a40",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 20,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde40972-1bef-457b-a70a-876f8c99ee5d",
        "cursor": {
          "ref": "e8adf508-c1db-41c7-9d1c-123308f2e9a6",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e731efa6-0e5e-4583-8581-22782008c90c"
        },
        "item": {
          "id": "fde40972-1bef-457b-a70a-876f8c99ee5d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0de96586-53c0-4f27-aae1-d1de2a22a456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751f2ace-e5b4-43ae-a570-b845f880362d",
        "cursor": {
          "ref": "fa09ed09-a027-4948-bded-e0616860de13",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "eb744f68-507e-4d37-a178-a0753e461419"
        },
        "item": {
          "id": "751f2ace-e5b4-43ae-a570-b845f880362d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e14b1299-08dd-49ae-b9aa-6eb272cc633a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4670cad-abc7-4490-a5b8-1fe1c0846b50",
        "cursor": {
          "ref": "17087731-8e24-4a72-9d5e-07678abcdc77",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b541de13-7966-41d7-b75b-1fe7b82484aa"
        },
        "item": {
          "id": "e4670cad-abc7-4490-a5b8-1fe1c0846b50",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0d5810a4-1b5d-4446-b196-4f8ab7f9264a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f9e40d-71ba-4722-a02c-90ccc73149ef",
        "cursor": {
          "ref": "ec566684-6d29-4ff7-a651-57433d2d398d",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "71f0597e-62f6-4416-baff-5cab7c54c309"
        },
        "item": {
          "id": "64f9e40d-71ba-4722-a02c-90ccc73149ef",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "608ca3c9-7d7a-4a3e-8ad7-e768f48df29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab367784-d301-4024-9def-3242d305adbc",
        "cursor": {
          "ref": "145467fd-fdcb-4688-88a3-7da372525dcd",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fb37c077-f4f8-48f5-afac-d4a0f48e1b3e"
        },
        "item": {
          "id": "ab367784-d301-4024-9def-3242d305adbc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9974c32a-c969-45bd-a434-366bbb26f119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551b5197-298d-4324-b36b-db73fc7ac2a5",
        "cursor": {
          "ref": "2e995241-9d96-494e-8aa4-d2ad9bf8758b",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e3ec573b-1157-401b-807b-8441d2671bf7"
        },
        "item": {
          "id": "551b5197-298d-4324-b36b-db73fc7ac2a5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7274ce12-5d83-42be-971c-3e27fe9f2153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a440d24f-0678-4bc1-b41e-60b05319afa4",
        "cursor": {
          "ref": "603a9c15-e026-4c82-be2a-e25ef1e94e9b",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0f4e41ca-c1a4-499b-a9a9-f80ec15b3699"
        },
        "item": {
          "id": "a440d24f-0678-4bc1-b41e-60b05319afa4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ab545ce1-b18f-435a-abe9-64ec6a222644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c93089-c321-4248-a9e4-ba6a91ff38ca",
        "cursor": {
          "ref": "6f903ced-8b76-44ec-885c-32645a7703f9",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7c52fe73-6943-4ab7-9682-97c2e22399b2"
        },
        "item": {
          "id": "47c93089-c321-4248-a9e4-ba6a91ff38ca",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4218a617-c849-40fc-bb41-eb231ae4b566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208ea3b2-0d2b-4422-b39f-fa0b0bed41cf",
        "cursor": {
          "ref": "3f1f57ff-26d3-449b-bf16-29b1322c877f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d06a8887-5da0-41ee-b3ce-913a5774f96b"
        },
        "item": {
          "id": "208ea3b2-0d2b-4422-b39f-fa0b0bed41cf",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5ce5c8ad-979b-404a-a235-5de831e573de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f401467-54de-41a5-8380-12c03f9f42a5",
        "cursor": {
          "ref": "791a0469-70d2-4ddf-8e4f-ffb75be161ba",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7787c7f5-36c7-4f74-bfd5-d3d740182f76"
        },
        "item": {
          "id": "3f401467-54de-41a5-8380-12c03f9f42a5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5fa51029-823c-467f-ad85-ee93e41ed6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf790b6c-8317-450f-97e9-a922920c80e6",
        "cursor": {
          "ref": "2123b6fd-8add-4d9c-8d3d-8b9c0c58e46e",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "66a28fcc-7b04-42db-b71c-d98a4f31409b"
        },
        "item": {
          "id": "cf790b6c-8317-450f-97e9-a922920c80e6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "dc3c5206-76e9-443c-b649-f71ed93f69d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df87ffed-f604-48f6-9aac-f2167845a6e9",
        "cursor": {
          "ref": "ce6dd60c-a985-4559-bb3e-0e9c0b93a0eb",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "767ee5fe-bfa0-4e5e-89b0-4fc9ee825e6f"
        },
        "item": {
          "id": "df87ffed-f604-48f6-9aac-f2167845a6e9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1beaf908-4f38-4081-83be-1eb6fd4f19ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed115499-0cac-4e3c-9009-1cb7ba4f9e0b",
        "cursor": {
          "ref": "899b0057-7a92-4cc9-ab27-e316a42cd2e7",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6301870a-41aa-409f-af99-65c69c041a90"
        },
        "item": {
          "id": "ed115499-0cac-4e3c-9009-1cb7ba4f9e0b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "05ded3b8-000c-4451-bc33-4dabf0f92b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efe22db-39f9-4074-8b18-94e093fcc49f",
        "cursor": {
          "ref": "9a00f84f-952e-4955-815b-bf7d1e99c55f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f0ba0f9c-3306-41f5-b135-c206ae4d47bb"
        },
        "item": {
          "id": "6efe22db-39f9-4074-8b18-94e093fcc49f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4d7ae567-9888-4fd6-a1ee-7325cd2de3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3375f27-4253-48fd-9f2a-cb575c35d8e8",
        "cursor": {
          "ref": "a219282e-7cd3-4d19-9303-94055b31bde8",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "513c769d-7477-45d3-8081-73fd9aa09c21"
        },
        "item": {
          "id": "a3375f27-4253-48fd-9f2a-cb575c35d8e8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a0859f9e-7fc8-4ceb-8dcb-83857cdd3997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3c5370-f734-470b-bbd9-4853f42775ec",
        "cursor": {
          "ref": "c4d1a712-8b34-4f28-bf5f-49b5196a148a",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c10565ca-3430-45fc-91d4-f6b2a06905dc"
        },
        "item": {
          "id": "bb3c5370-f734-470b-bbd9-4853f42775ec",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "61f6f6f6-7e2c-4ff3-af03-211d946af0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4a1aa9-686b-4cb3-9ef5-a3929c141392",
        "cursor": {
          "ref": "8961bdb5-bd7a-4265-9a82-d7695e6d2cc5",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d12d4978-7df1-4051-ab44-063653cb3646"
        },
        "item": {
          "id": "eb4a1aa9-686b-4cb3-9ef5-a3929c141392",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1341d41c-9ae7-46ea-9a2c-471c68cfe0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2112973-e46b-4238-9977-d8e3c1d2d4e9",
        "cursor": {
          "ref": "8a2d9576-a117-4bdf-8f65-a19d71a0cc9b",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a87eaa41-a977-4031-83bf-0218125a0915"
        },
        "item": {
          "id": "e2112973-e46b-4238-9977-d8e3c1d2d4e9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "681bbc95-0238-4067-8bb6-aeabcf365a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62001d12-4153-42c6-8de3-366409c5e797",
        "cursor": {
          "ref": "4d3fac89-b27c-4551-aedf-abfe15ad378b",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "115db279-5a89-4e28-ab90-d30b3a5ce822"
        },
        "item": {
          "id": "62001d12-4153-42c6-8de3-366409c5e797",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "221bfa38-656b-4e30-8196-8c0628175047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b00e5e-c1a5-4819-bbe9-409ec63641a6",
        "cursor": {
          "ref": "3d9d28f4-2102-4674-a60c-51f641e87eb9",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ff55b0fd-99a8-43d8-b688-0df0fa7cb59a"
        },
        "item": {
          "id": "33b00e5e-c1a5-4819-bbe9-409ec63641a6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f51c8af7-5c71-45a1-9d8f-83ebaf5c635f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db75f2a-0a32-4f2b-b2f7-ce3e5040e569",
        "cursor": {
          "ref": "57b4aae6-ff56-4009-a3a3-f211b5f53dc0",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "87517033-46f8-4fde-a52d-0f68c482cc16"
        },
        "item": {
          "id": "2db75f2a-0a32-4f2b-b2f7-ce3e5040e569",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9f83e296-6073-49d7-b4f2-c2026909d69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5ab0d9-e5c3-4287-961a-0816d9a8ba3b",
        "cursor": {
          "ref": "37794879-71fb-4767-8c8e-4be4d09c69b0",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0916ae0c-19d0-418c-b742-eba1ce4749ef"
        },
        "item": {
          "id": "7f5ab0d9-e5c3-4287-961a-0816d9a8ba3b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "91f03737-1264-4bd4-8d36-a600d077b41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1350079-f933-4564-91a0-1bb627399813",
        "cursor": {
          "ref": "d749ac3c-757f-47fb-abdb-541d4ae6a56d",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "55e126bb-c619-4719-85c7-4979cf682b62"
        },
        "item": {
          "id": "f1350079-f933-4564-91a0-1bb627399813",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4489e58d-3462-4309-98f4-c7fc64a1e246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f59114-22b8-43af-82d2-4fc2dfcdfbe6",
        "cursor": {
          "ref": "599c1760-feba-4362-81f1-000f5bc343e7",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d8f5cb61-2e9d-40d9-abb2-36b11d808493"
        },
        "item": {
          "id": "97f59114-22b8-43af-82d2-4fc2dfcdfbe6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ff11d527-ef36-4f36-bd40-6eddf7871586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20168e93-cd63-4283-bcf6-b700716bd6c1",
        "cursor": {
          "ref": "a5ec22ee-d573-4e21-92c9-3ae62af3a2a2",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "05d7d922-4310-43ee-a60b-f0bbc5c21ecb"
        },
        "item": {
          "id": "20168e93-cd63-4283-bcf6-b700716bd6c1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e938271c-0fdf-4a4b-a01f-cf8dd39d45a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15e76b3-f9fd-46fd-a140-67932c280587",
        "cursor": {
          "ref": "3c80b748-822f-40a5-ae34-306b67c4eb5c",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "32cbcc66-3d11-47d6-b75c-6a5470a29bfe"
        },
        "item": {
          "id": "e15e76b3-f9fd-46fd-a140-67932c280587",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ca9955b0-461c-48d5-8999-88e9f71a3c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb61681-3392-4506-8de0-cc3008286055",
        "cursor": {
          "ref": "6d133b24-00bb-4775-a22a-5739ef2abc1b",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4ffdf68a-36c2-46bf-a0c7-159f4da4226f"
        },
        "item": {
          "id": "0cb61681-3392-4506-8de0-cc3008286055",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "811a30ea-9da4-41ae-b139-c8cd6b97f0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0466d12f-5bf4-4c1a-8c36-f5fd774d5699",
        "cursor": {
          "ref": "c51942f7-d837-48a2-b4a2-3f73d165502a",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bf9077a3-7f3c-4efa-8071-84d0b0d5a7e1"
        },
        "item": {
          "id": "0466d12f-5bf4-4c1a-8c36-f5fd774d5699",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "fcd615b4-3f53-44c2-bf56-d506c67492bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1b1bd5-5045-4709-a8af-4fce93ec4bc2",
        "cursor": {
          "ref": "6b597c34-0b55-4005-be2a-ac41cad70a85",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6dca56ca-6390-4e15-b854-5899f1221f4a"
        },
        "item": {
          "id": "ef1b1bd5-5045-4709-a8af-4fce93ec4bc2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c972a3c6-cbfe-4593-b4a6-1b698b35d8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c065a3-0307-4490-9015-fd85be502927",
        "cursor": {
          "ref": "50a90749-a3d2-48c8-b408-fd1f5522a90b",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5b1fc471-7c12-40ec-88e3-d315866d7637"
        },
        "item": {
          "id": "72c065a3-0307-4490-9015-fd85be502927",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7204824f-37da-4c9c-8d87-5959cf0ac2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec136863-f81b-4739-bd4d-20b21b0f0a92",
        "cursor": {
          "ref": "665bfed5-6d36-4160-8b0f-e5bb92331373",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "10d909a1-0f57-4adc-b0c2-2869c4c61d6f"
        },
        "item": {
          "id": "ec136863-f81b-4739-bd4d-20b21b0f0a92",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "163d1bb2-554d-49b2-93f2-da6adb6dd2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30340563-0836-492a-bca1-d980775ff167",
        "cursor": {
          "ref": "01fef0ec-4763-4d5c-a0e0-ea3791482ffb",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4ee1dbb1-aae1-409e-8815-16b225de5df9"
        },
        "item": {
          "id": "30340563-0836-492a-bca1-d980775ff167",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8ea8dd4d-5e8f-4ff8-afa6-872e41d33a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce81bcd-c92b-4d29-ab30-ba9e0dd2f974",
        "cursor": {
          "ref": "0bf7422f-c724-4b79-a6ad-44ad886cd313",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8f7f87cf-db71-4bed-8492-d93fdb97e0ee"
        },
        "item": {
          "id": "8ce81bcd-c92b-4d29-ab30-ba9e0dd2f974",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "84045bf0-7400-46e1-ba56-df773a8f5051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777c1091-f557-498c-8bd8-3df3a3dd73ac",
        "cursor": {
          "ref": "00d15780-4b3c-4153-a5a2-aa9a35f79ef7",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9c4b982f-cfb0-47e8-b2d0-8b122411ebea"
        },
        "item": {
          "id": "777c1091-f557-498c-8bd8-3df3a3dd73ac",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4dea3875-64fa-4c00-8303-25851cbe4eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f4e975-c922-439c-ad8b-8733da27469e",
        "cursor": {
          "ref": "6318819a-42db-4887-b838-37ac5f641ced",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9d5f6028-804d-48fd-9d6c-94de05b9c9f4"
        },
        "item": {
          "id": "46f4e975-c922-439c-ad8b-8733da27469e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a084efb1-d7bb-48fb-af66-b03741206b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0e70e6-23ea-47c1-918e-bc68966f702b",
        "cursor": {
          "ref": "e047bcab-65cd-4263-9aa3-1739d7d24801",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9086b923-907f-40e0-b746-f12f6f55965c"
        },
        "item": {
          "id": "7d0e70e6-23ea-47c1-918e-bc68966f702b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "eeea94c4-d695-46e8-8639-88a1c119d4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ec45ce-f3a8-4ff3-9de1-2c3a9653467a",
        "cursor": {
          "ref": "d67edcf9-c343-44ce-b77f-414e3427344d",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "650e5378-468f-4eed-8105-043683e81484"
        },
        "item": {
          "id": "c6ec45ce-f3a8-4ff3-9de1-2c3a9653467a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "633fc302-fe0f-4e31-b9db-ae4b9a325d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63fc048f-aac2-4e7c-954f-5fdb8e6dac5c",
        "cursor": {
          "ref": "2d8dda16-6f7f-4770-9b10-785ba69b4e22",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b2cbfec4-e01d-4abd-8961-cad1edea68c3"
        },
        "item": {
          "id": "63fc048f-aac2-4e7c-954f-5fdb8e6dac5c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ea9811f0-6197-476b-a78d-c38a55fa0546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f576b9-3bb8-41a4-80f8-0919764fdbed",
        "cursor": {
          "ref": "86c0af28-42a9-4095-889d-559a35374c2b",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e39470d5-9255-447f-8734-1093746f7a64"
        },
        "item": {
          "id": "51f576b9-3bb8-41a4-80f8-0919764fdbed",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5e8d804a-6e98-46b6-9734-eceea370def8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bc77e6-149c-48d2-99cf-aa340e7d134b",
        "cursor": {
          "ref": "f7350a99-a2a5-4273-b2ad-467d3463eaa2",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d65e4ce9-58a9-4914-a1a1-6887c27f2417"
        },
        "item": {
          "id": "02bc77e6-149c-48d2-99cf-aa340e7d134b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d40e751d-3750-4733-988a-14c9c4257f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d3253c-319f-4731-b38d-f1de7e3c166f",
        "cursor": {
          "ref": "a9a418e4-5fc6-44d6-8f8c-d7d842aef19a",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d1ba7152-c080-4f9b-96d2-8a9cf8dec5d0"
        },
        "item": {
          "id": "a5d3253c-319f-4731-b38d-f1de7e3c166f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ba502f5e-2eb4-414b-9648-d11f33dda52b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b534a260-94c8-4230-9be7-5a8112edd59c",
        "cursor": {
          "ref": "bd7b59e3-8ff1-41dd-8c3e-9ad86621b67a",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "77be9e61-f78d-4dc9-9aca-f307d24b0fc1"
        },
        "item": {
          "id": "b534a260-94c8-4230-9be7-5a8112edd59c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9eeef788-6c26-41de-98c6-d08472fc4b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97af5c7-144a-44c4-9240-f59864bcb2cc",
        "cursor": {
          "ref": "0625edca-7c8d-4cc5-aead-9a921ca317a1",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "143280bc-fa46-4eb4-a594-9af3ce395ef2"
        },
        "item": {
          "id": "a97af5c7-144a-44c4-9240-f59864bcb2cc",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a58fac4d-0508-4b81-9355-5a658f06988c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ba98a0-7000-4a3d-b9a0-d5077cf7826d",
        "cursor": {
          "ref": "8811ebb2-b74b-4468-ae97-cd771542ea93",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0ee0897e-26bd-47cc-a164-ca855e4e4b1e"
        },
        "item": {
          "id": "95ba98a0-7000-4a3d-b9a0-d5077cf7826d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "47f9a335-8af7-42c5-b524-edea115bb085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b573d26f-5b39-40d4-b098-78672d38c02c",
        "cursor": {
          "ref": "9a3851f4-2689-4387-b0c3-bd3a82069fa3",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4d753562-a863-434f-aa45-22d68a1f4297"
        },
        "item": {
          "id": "b573d26f-5b39-40d4-b098-78672d38c02c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bc2822b1-5eb5-4d50-9961-7e28739a2a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb5baf3-9f93-4c3d-8b3d-352514bef740",
        "cursor": {
          "ref": "0afcebf2-595f-46de-864f-ecb5013fdcdd",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "64af1de5-c02f-4411-ae1a-e38a0cd90062"
        },
        "item": {
          "id": "7eb5baf3-9f93-4c3d-8b3d-352514bef740",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d0e3d029-278f-46e0-bd2a-2708cf24ec98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc696f4-8807-48df-9056-861c3237cc75",
        "cursor": {
          "ref": "9ebe4cea-f3ef-450a-a3ff-07cdafcac8f4",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2081f0b8-6239-473c-b556-d5e1316da18f"
        },
        "item": {
          "id": "6dc696f4-8807-48df-9056-861c3237cc75",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e90c1dca-377d-420e-84e7-d44435fd9b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684b2e4b-84bd-4324-a8d0-d4efa806461c",
        "cursor": {
          "ref": "4d5b3c24-542e-48c9-95a9-3703fa079704",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "75d09269-3d4e-4691-906c-7d20aa3a9de0"
        },
        "item": {
          "id": "684b2e4b-84bd-4324-a8d0-d4efa806461c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e3e806a9-88ef-4aa3-a99a-4ccfe6e41f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dada1c-1372-4dd6-b486-65b7f424b1ab",
        "cursor": {
          "ref": "fb33c54c-73ed-4530-9e68-da594d57e7c7",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f72123b2-baa2-4e22-bfe5-8183f837e2eb"
        },
        "item": {
          "id": "e4dada1c-1372-4dd6-b486-65b7f424b1ab",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0377dc4f-9100-4ebf-9da1-6ff86a8425f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac7b263-8b9e-4f73-bd35-5db018dd3df4",
        "cursor": {
          "ref": "5d15fd0d-6fa8-45c9-a488-a76eb2c1c290",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4c2b3efd-a2bf-45d6-b97c-86804cb0d7ca"
        },
        "item": {
          "id": "1ac7b263-8b9e-4f73-bd35-5db018dd3df4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6c5a3f63-600c-4556-989a-2e958e1b03f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6fe1e7-7102-4af4-94f7-56fac3063e56",
        "cursor": {
          "ref": "6af0cf33-a456-41c8-bf6b-22fc00fbccbc",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7cd7061a-dcce-4235-9bfb-e6d0f01926d5"
        },
        "item": {
          "id": "fe6fe1e7-7102-4af4-94f7-56fac3063e56",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a607c887-283f-4688-8baf-09b59a8dd30c",
          "status": "Created",
          "code": 201,
          "responseTime": 62,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb47223-87d2-4b41-9b58-65976f4ae21b",
        "cursor": {
          "ref": "ab53eb20-de80-46f9-ab0a-09cbbb0e282e",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "78f0e91c-7005-4cde-9691-681a72d210a6"
        },
        "item": {
          "id": "4fb47223-87d2-4b41-9b58-65976f4ae21b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "87a77d3d-999e-4fc6-84ab-f7ff92c64efd",
          "status": "Created",
          "code": 201,
          "responseTime": 401,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de1538e-7fc2-4b3a-96f4-c8ca277b7b01",
        "cursor": {
          "ref": "a2a5f266-557e-4038-b357-14e8d2000d4b",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "60bbc4be-5fba-49fd-b7b9-b93b1d0695ad"
        },
        "item": {
          "id": "0de1538e-7fc2-4b3a-96f4-c8ca277b7b01",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c024b7c9-7536-45bc-b88a-840395c477a6",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5141fd5f-d381-4484-9e31-09e3709cc8f8",
        "cursor": {
          "ref": "0c7f93f3-4616-41ae-aa72-6e696e026626",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "29287b58-df9f-4d98-9974-28511c63512d"
        },
        "item": {
          "id": "5141fd5f-d381-4484-9e31-09e3709cc8f8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b476a059-3127-4c29-95e4-f1e61b4ec1de",
          "status": "Created",
          "code": 201,
          "responseTime": 40,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37af5ff-bb42-4693-a3bf-dd1858cce5c1",
        "cursor": {
          "ref": "b559a48f-8c61-4e6e-a770-9c3e33697b90",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "72094538-acd3-4f70-941c-694b71425dba"
        },
        "item": {
          "id": "d37af5ff-bb42-4693-a3bf-dd1858cce5c1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d137fc07-89f9-4ebc-bd00-3102f951e2e9",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60c8b58-e4c3-4e0b-bfbf-8c38c85bb53d",
        "cursor": {
          "ref": "b1ba6e35-af99-48e1-82bb-9ce1a182aa26",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5b65c28c-ae26-4fb2-83cb-fe271216f6ef"
        },
        "item": {
          "id": "b60c8b58-e4c3-4e0b-bfbf-8c38c85bb53d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8eefba8f-2b38-453c-ae8f-90409702fb82",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "838f4012-9832-440e-ab79-83ea663db3f0",
        "cursor": {
          "ref": "5adad017-1a4b-4774-8801-9ad71b4f288b",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "803fb065-944d-4369-9e7f-742126daa034"
        },
        "item": {
          "id": "838f4012-9832-440e-ab79-83ea663db3f0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "26df2088-5162-4b89-b57b-9566299c3b5a",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8085af5b-46a2-461e-943f-9e69fb8f7a8b",
        "cursor": {
          "ref": "093da032-05c4-4c19-82fb-5592ecb7139d",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9d05f047-c84b-45bf-84bb-d856ba16bd32"
        },
        "item": {
          "id": "8085af5b-46a2-461e-943f-9e69fb8f7a8b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d339e3a7-5c39-4f34-8f13-757e16ee8196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf76e98-26da-4492-ae58-005541be9c84",
        "cursor": {
          "ref": "d5965739-dc8a-4197-8a89-1e5886c1231b",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8349e7cb-8509-4409-b00a-4cdfa7a452ca"
        },
        "item": {
          "id": "ddf76e98-26da-4492-ae58-005541be9c84",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7b71dd85-59f9-4045-9269-a6f6c6f6dd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df189b24-d674-4774-af2f-0bbdd324d21d",
        "cursor": {
          "ref": "b529bf6a-77b8-40f2-accf-247545c999cf",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "12136024-4b70-48b7-ab2d-cf082353e001"
        },
        "item": {
          "id": "df189b24-d674-4774-af2f-0bbdd324d21d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e8a39bc6-07cb-4095-8324-ea29bfddc403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6da45b-1e4c-4112-aa4e-45d1a10abb8b",
        "cursor": {
          "ref": "ddc973c6-4a93-43d6-bd21-89687249745e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a73e70b2-5c16-41b6-bf9c-caa53d0b56d7"
        },
        "item": {
          "id": "7a6da45b-1e4c-4112-aa4e-45d1a10abb8b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "24c8b230-3920-4c8e-a06a-8595c1a82da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c88fa8-ee3a-47c5-a6bf-94d5e1ed1469",
        "cursor": {
          "ref": "e2ceed36-9a44-4322-8e67-db3255b9b09d",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "791f221d-3182-4f7c-9f27-924f21bafdd6"
        },
        "item": {
          "id": "27c88fa8-ee3a-47c5-a6bf-94d5e1ed1469",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9e90e011-6361-4fd8-aecc-d75cd565584b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c02442-3ed7-4c83-a525-bb0bcee475b4",
        "cursor": {
          "ref": "f781b768-e8f4-4081-98ac-608f6eba8f95",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6d8d640f-16a6-49e7-a4a3-1fbc1e5eb3e3"
        },
        "item": {
          "id": "62c02442-3ed7-4c83-a525-bb0bcee475b4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c14735f1-f523-4fdf-b7af-e18561fbbb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a663871-e555-4f92-af3f-477821341cd9",
        "cursor": {
          "ref": "f53f33b0-8f49-4b42-8a3a-30f2b4098e4e",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2eb9cf0e-4f36-4385-bad8-e152bd26a30a"
        },
        "item": {
          "id": "7a663871-e555-4f92-af3f-477821341cd9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0588cf9a-094a-4bc8-923e-c06722d537ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5806af5b-13c3-4658-8f7f-3f973518d53a",
        "cursor": {
          "ref": "3691f4ed-62ed-4610-a132-793d6397da94",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "20c0a5b7-2783-475c-b20f-4ec10b5aa6e5"
        },
        "item": {
          "id": "5806af5b-13c3-4658-8f7f-3f973518d53a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bb764df0-1d0c-4415-866d-18c1bdee003c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c96b8d-eda0-48f9-99d2-d99d94837b48",
        "cursor": {
          "ref": "ca555514-71be-4ca1-aa91-b2083a38f615",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fb60dafc-9197-4049-9092-de4525034cc6"
        },
        "item": {
          "id": "53c96b8d-eda0-48f9-99d2-d99d94837b48",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "04dd47d4-23a4-4492-a50f-907f83c2a063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1598c03e-9831-4492-b54c-6bd2a3d1d5f2",
        "cursor": {
          "ref": "78d57768-8d55-4cf0-a60a-b00508459110",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a046410a-7383-4299-be68-03b57bcda670"
        },
        "item": {
          "id": "1598c03e-9831-4492-b54c-6bd2a3d1d5f2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "37842ea5-1115-491b-9387-8a137264f38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8ac26d-3ea8-4fb7-8fa1-7428bd7f43a9",
        "cursor": {
          "ref": "73f6413a-643f-46bf-90a1-c815d9aa73aa",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "675f499f-0779-46e6-a64c-cc18a7e9036c"
        },
        "item": {
          "id": "5b8ac26d-3ea8-4fb7-8fa1-7428bd7f43a9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "38d86b5a-f9fe-4907-b9f5-77cc5a1d4199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e8cd3b-c702-4595-9b0a-df6e8e4f5362",
        "cursor": {
          "ref": "c1158674-4228-4ca3-a9db-42f1fd36e2cb",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d3b89281-0cd8-4274-a23c-547cd0f6a4ba"
        },
        "item": {
          "id": "19e8cd3b-c702-4595-9b0a-df6e8e4f5362",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "14f870e7-3c4f-45e8-9012-a24814dce4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a8f7d3-050f-473e-9125-ba8001f6d971",
        "cursor": {
          "ref": "942d3ba1-8970-4ab9-ae3c-3178df34a40d",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a2e3f311-5304-48fc-82e7-ed05b63d829e"
        },
        "item": {
          "id": "36a8f7d3-050f-473e-9125-ba8001f6d971",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "def4330f-1aff-48b5-85c0-804139419d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63e9623-98e2-4cab-ad4f-792882edf0ad",
        "cursor": {
          "ref": "38b5910d-1525-4c00-89ec-ad4fadcbd78a",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4e9af8a6-fad1-4fdc-9476-1d78a5657a8c"
        },
        "item": {
          "id": "f63e9623-98e2-4cab-ad4f-792882edf0ad",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a8dec635-56de-4a66-990b-8dcc81d66e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a93a6b9-661f-41a3-8c49-4c5c9ebde563",
        "cursor": {
          "ref": "a2f7f3f7-3b3e-437d-b89a-75df1cdee20e",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "35cbd05a-5f44-4c83-ae2d-87d3d2407a90"
        },
        "item": {
          "id": "1a93a6b9-661f-41a3-8c49-4c5c9ebde563",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c1e0d415-b030-4b44-85fd-4f106683efa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0efd5c0-e307-4691-b9ba-2465fb4aa533",
        "cursor": {
          "ref": "ccc46904-719e-4438-9128-3bd95f2fab6e",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4dfcc0de-4826-4544-94c3-48a60d374a8b"
        },
        "item": {
          "id": "a0efd5c0-e307-4691-b9ba-2465fb4aa533",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "374e043a-3a8c-4fd7-94a6-1baab57567fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d4dc6c-d91e-4873-b138-258d367e411b",
        "cursor": {
          "ref": "838ec1f0-97b7-4a30-9ad9-bdaa3c239f49",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "31e96f47-2595-4354-8c98-5be4998df5b0"
        },
        "item": {
          "id": "03d4dc6c-d91e-4873-b138-258d367e411b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c2de8e6a-a39f-4176-a10e-cb41ac543651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec0b615-7ca4-40e5-baff-e52b3e89e70c",
        "cursor": {
          "ref": "4ec5827d-a3bb-44b5-aada-a83766fdd282",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6831e756-502f-45c4-8ae8-70b254087af8"
        },
        "item": {
          "id": "2ec0b615-7ca4-40e5-baff-e52b3e89e70c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a255dfd8-e67e-49e5-9bb1-d800204e4f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b2343a-4e28-4189-8088-ddb31e7343e8",
        "cursor": {
          "ref": "8662f5df-5d17-43ad-8575-fb3ccd9ce501",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "32341493-96e5-4ca9-b506-395d69ba2d1b"
        },
        "item": {
          "id": "87b2343a-4e28-4189-8088-ddb31e7343e8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "33fcd4a0-2b6e-41dc-9481-4f07368a8b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56381195-7296-43c8-8758-1e62e3f3d1d1",
        "cursor": {
          "ref": "dfdf5ff2-06f9-4137-b7ad-cc7cc2b1535f",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c7baf893-7055-4b5c-a5bc-da48a051df40"
        },
        "item": {
          "id": "56381195-7296-43c8-8758-1e62e3f3d1d1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "eb23b836-61fa-4ee4-81be-53cd715c58c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5337696e-4331-4e9c-8277-e6c10488e9fe",
        "cursor": {
          "ref": "bcb1b948-4656-4f27-b17b-065c9913f457",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a44004d7-cc09-4f51-bccf-9743b59d82e7"
        },
        "item": {
          "id": "5337696e-4331-4e9c-8277-e6c10488e9fe",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b04dbcf3-7845-48b8-b339-eccb2882a09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6c0782-4138-45ff-8b5c-1ed897126890",
        "cursor": {
          "ref": "cf03f247-b90f-4a55-9617-1f7089a56513",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5507a601-1f6a-4601-bb09-fca3868ac5ac"
        },
        "item": {
          "id": "ab6c0782-4138-45ff-8b5c-1ed897126890",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "894c3b3a-e47d-4adc-a59d-985c44a05ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10860f4-11ca-45c2-ac0e-7007eaa7ffd3",
        "cursor": {
          "ref": "0c232a4d-a29b-4705-9a3c-2393683fe683",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "891496ef-69c0-4cca-818d-a3f97a2297d0"
        },
        "item": {
          "id": "d10860f4-11ca-45c2-ac0e-7007eaa7ffd3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3fa15f9c-3f09-4b1b-bcf6-e19bc1c9bb90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca63dc0c-ba90-4ada-88ac-2d9fbc58293d",
        "cursor": {
          "ref": "e16823fe-8ed1-4d40-9786-513c84490afa",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7141f04c-577d-4e0f-8707-d585c2aed21a"
        },
        "item": {
          "id": "ca63dc0c-ba90-4ada-88ac-2d9fbc58293d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7e0574b9-ee9a-4629-ac0a-7b30db9d4a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321c0fd7-d1f0-4fee-8354-4a2e031ed48c",
        "cursor": {
          "ref": "11fcb0bc-a98a-4753-8cba-3e55b8916f31",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "75874c72-82b4-4333-8a31-f787dd4539cc"
        },
        "item": {
          "id": "321c0fd7-d1f0-4fee-8354-4a2e031ed48c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2c7699d5-fc76-4fab-ab5c-1e2b337c9ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022290ef-2b53-4854-860e-92d274815325",
        "cursor": {
          "ref": "e04ef682-768f-4516-94de-b0b40607f776",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "31e6bc73-f37e-42f4-b342-6964a596dfdf"
        },
        "item": {
          "id": "022290ef-2b53-4854-860e-92d274815325",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e00b79e8-4b47-4c48-b84e-d2195e998c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d6331f-0fc9-468f-baee-9c4c23eb7649",
        "cursor": {
          "ref": "5486a0e0-90ea-442a-a3d1-805eef993730",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b35d48d9-00a2-49e4-81e7-4afac5875572"
        },
        "item": {
          "id": "21d6331f-0fc9-468f-baee-9c4c23eb7649",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b4dc670a-6d63-4898-88ae-e6ad51fb2500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65f107c-e03b-4b37-8874-510b812b386f",
        "cursor": {
          "ref": "0d38a9ec-ad37-46ec-acda-f52c0bfe8ffb",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9dacf50e-fd77-4bab-9155-345dd315fb7e"
        },
        "item": {
          "id": "e65f107c-e03b-4b37-8874-510b812b386f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "309c5c6e-9bea-48e8-b119-c480ef4134e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491d977d-0535-4382-99be-bef8fdd95789",
        "cursor": {
          "ref": "bcc549eb-a02d-4a21-8833-420bbadbd8e8",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1e087ef9-03cb-4548-8b59-f4267fe832ad"
        },
        "item": {
          "id": "491d977d-0535-4382-99be-bef8fdd95789",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4fc19cea-f8dd-482c-91aa-47023a8e0764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577c82e3-e6c7-460b-a88e-b49598c9d3cf",
        "cursor": {
          "ref": "6ae5b892-afbb-4280-9911-3a1869784f1a",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bd58e15b-291b-4a34-9d95-ada16a732673"
        },
        "item": {
          "id": "577c82e3-e6c7-460b-a88e-b49598c9d3cf",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "aa9f44cf-a5de-4586-9472-a7305fc05f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e317430f-6ded-4368-8e84-9add4834aa2e",
        "cursor": {
          "ref": "f45c0b0f-a593-42cd-b25e-88ea5000a0c7",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c831b30b-b158-4b47-b758-553b166be1b6"
        },
        "item": {
          "id": "e317430f-6ded-4368-8e84-9add4834aa2e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d3cd1097-194b-4228-b99c-bb02b1dce290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abf3055-9ea9-491b-be34-00de28f4a582",
        "cursor": {
          "ref": "479fa140-7ec2-4702-bad2-ddf15c846aee",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3a6f31bb-2219-4b63-a097-ce87404eb3c5"
        },
        "item": {
          "id": "8abf3055-9ea9-491b-be34-00de28f4a582",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "74092058-cfa4-4ca6-a9b2-6305a50d1695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6767d591-54d0-4a11-9354-d50d7d8f83a6",
        "cursor": {
          "ref": "fdaf24bf-05e5-4874-8ad1-b1a24f9a7744",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bc820a1f-2406-4a6f-8638-2775bdb3f793"
        },
        "item": {
          "id": "6767d591-54d0-4a11-9354-d50d7d8f83a6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "549b25c0-a082-4152-845e-53f49e07b02b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc0d954-f14f-478c-8373-3b2df62f2dcb",
        "cursor": {
          "ref": "e593fed9-c9a5-4ecb-8f25-47fe7bc4b132",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4b9e7231-24c5-4bab-be80-fae477e79090"
        },
        "item": {
          "id": "8dc0d954-f14f-478c-8373-3b2df62f2dcb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1e8bde43-9599-4287-ae2b-aec368e14a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98528c2e-7114-44d5-8f92-c3597e104f71",
        "cursor": {
          "ref": "62ab2c78-a58b-4b66-9b3e-1f6abced8067",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6cf45d4b-e176-4337-b016-01da62f9f62d"
        },
        "item": {
          "id": "98528c2e-7114-44d5-8f92-c3597e104f71",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "290eef2e-7ce2-4790-a4a0-121d99de5913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff8d2bb-27e1-48fc-bd79-f203e8f6adb7",
        "cursor": {
          "ref": "23b2d650-a96f-4230-a0b9-795a2a2a18d5",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "61ad4a25-5250-46eb-8e86-e5f0b38d5d28"
        },
        "item": {
          "id": "fff8d2bb-27e1-48fc-bd79-f203e8f6adb7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6223c230-2a82-4d10-a9d4-2d3e9c90c77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45df3cd6-20aa-49b5-9b18-3330329603e5",
        "cursor": {
          "ref": "23618234-1dbb-4a3e-9f01-eed9550b0a8c",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c5476c85-4329-457d-8e36-1f84443212ee"
        },
        "item": {
          "id": "45df3cd6-20aa-49b5-9b18-3330329603e5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d0083e2f-7645-4a13-be1b-61847e14c571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fde734a-5fc1-4ec0-8f20-6c5e4f21aeb7",
        "cursor": {
          "ref": "8e73106f-7ea1-404e-b829-67efd3abe0e0",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "515b1292-6de5-4425-a07a-a16dda7edf03"
        },
        "item": {
          "id": "2fde734a-5fc1-4ec0-8f20-6c5e4f21aeb7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6e3fb0f3-105b-4a23-8fec-31f3e2d2cacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1061c5-1d8d-40d6-b206-8506561d94db",
        "cursor": {
          "ref": "5d76506a-1df7-4d69-84ae-d902683dd564",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8a20221b-0549-4f77-951e-5b4df72ddea4"
        },
        "item": {
          "id": "6a1061c5-1d8d-40d6-b206-8506561d94db",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7bcbadda-a48e-4933-b092-0fcd1b6ae3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cabde0-e4b1-4a78-9c71-962b44180e89",
        "cursor": {
          "ref": "e5ca6a31-1b30-4ff5-982a-6d388fd894aa",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ff24ac4e-f480-43b4-9f29-07e993f6a7a4"
        },
        "item": {
          "id": "90cabde0-e4b1-4a78-9c71-962b44180e89",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "470bb60b-65c9-4538-9251-d45541d8c746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545b26d0-d0b1-4977-9f5d-49f919eba94d",
        "cursor": {
          "ref": "acdb5586-3e0a-4d02-95e3-c03756603e7d",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8773e78d-59a0-43ab-998c-e7f61bbb92c4"
        },
        "item": {
          "id": "545b26d0-d0b1-4977-9f5d-49f919eba94d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "417f2440-6e99-4728-a4d5-8576e6e45440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b272626-ea65-4f51-82a1-53fe0597da80",
        "cursor": {
          "ref": "b1da2f38-98ff-4428-b1ef-12362a6e02ac",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cd3a26fd-ed6c-474d-9ded-8d20e64cdcc3"
        },
        "item": {
          "id": "0b272626-ea65-4f51-82a1-53fe0597da80",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "41d4b063-46ea-4e9d-83ba-40bfd8de620c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a974c4-9988-48a0-b0e8-2353b8718f51",
        "cursor": {
          "ref": "d739f4d3-3467-49d1-a98f-7dca328a9fbf",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a57421d7-555f-47b8-971f-507d16ae5762"
        },
        "item": {
          "id": "73a974c4-9988-48a0-b0e8-2353b8718f51",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c025e24d-4294-4916-8d9d-7c4dea3f552c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f7bbd9-acd5-4c21-ac25-88a0965696a5",
        "cursor": {
          "ref": "1fbf907b-714d-421a-a65d-85fb1d355857",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9d12a276-6817-4c69-803e-df394dcb2e9e"
        },
        "item": {
          "id": "90f7bbd9-acd5-4c21-ac25-88a0965696a5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "71c00cb8-cbf4-494d-8327-c49953546f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3673f208-8527-465e-8342-70539966be3b",
        "cursor": {
          "ref": "3c33c702-87c7-44ac-850e-e714b6642c60",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7ab575b8-a808-44b8-b6f4-815879c1a15b"
        },
        "item": {
          "id": "3673f208-8527-465e-8342-70539966be3b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0df14f4b-6066-4fad-9ec7-fe3912d974dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7ce424-2c7a-4fdd-abe8-7cce8c6b1741",
        "cursor": {
          "ref": "33e89e60-460f-4d9a-a698-648b8f2d40a1",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2942cde2-9a48-456d-813c-1222b6545dd4"
        },
        "item": {
          "id": "1b7ce424-2c7a-4fdd-abe8-7cce8c6b1741",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8b2bacb0-b281-4f19-8fd5-11eb01ed046d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4565fcf-2c61-431e-ada3-461e126a6118",
        "cursor": {
          "ref": "19e91107-d26f-479d-8864-ddb6b0cb723c",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "41252d1e-7c61-4260-80be-222e9bdf4057"
        },
        "item": {
          "id": "e4565fcf-2c61-431e-ada3-461e126a6118",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d92688c1-b236-4851-bbb2-f81fe817a092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ca3713-6436-4893-ad15-bf14c63dab89",
        "cursor": {
          "ref": "cfd18c0b-0cbb-4ce9-8cdf-69e4026fc25b",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d47f8d37-89e9-4cee-90c6-9599b4410049"
        },
        "item": {
          "id": "30ca3713-6436-4893-ad15-bf14c63dab89",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "da169f5a-ee7d-4410-913e-3a22c58c3e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ae2549-f468-401d-82d7-3c03257a41c2",
        "cursor": {
          "ref": "af1eb3d1-fa56-4259-a1cc-e564aaaa32d4",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "54c3f21d-3631-48e6-87fc-8ea3bcd3a55c"
        },
        "item": {
          "id": "f9ae2549-f468-401d-82d7-3c03257a41c2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d71805cb-b917-4cf5-a1bc-fb0d4f82901b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ef6953-ae45-40ef-8fbb-2f234508ae67",
        "cursor": {
          "ref": "91de1f76-5c27-4b2f-8d9f-6458276b5830",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d1c530c4-bf96-4c17-a733-800e0b133b95"
        },
        "item": {
          "id": "d8ef6953-ae45-40ef-8fbb-2f234508ae67",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "05505545-61e4-468d-b5ae-bb0cf8ed986a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47337fb2-4577-481a-83eb-a421c9047ef6",
        "cursor": {
          "ref": "c8fd0258-897d-4f3c-9442-1788ea776f36",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "58dc11a8-6df4-4891-9d52-5fc425c3bcbb"
        },
        "item": {
          "id": "47337fb2-4577-481a-83eb-a421c9047ef6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a5c6d6dd-c70b-443d-8c72-aa8e6512d28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca56a75-be80-4de8-b857-411346cc6cfe",
        "cursor": {
          "ref": "625309f2-48fa-41ae-9e0f-f83f02d4a7b4",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1216541d-6fef-491f-8288-85cb0b58efa0"
        },
        "item": {
          "id": "1ca56a75-be80-4de8-b857-411346cc6cfe",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8d46318c-42e5-4a97-9194-a8c63dc177b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66289f0-e06d-4530-a123-cb5dd2446bf4",
        "cursor": {
          "ref": "8de13b5b-6401-45d6-a50e-89cd551693e2",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b7087247-c9fa-4266-804c-c015071c3cdf"
        },
        "item": {
          "id": "f66289f0-e06d-4530-a123-cb5dd2446bf4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1f75321f-8928-402c-9a74-069db15effd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c763181c-6f2a-4e56-bf04-79200283d3a2",
        "cursor": {
          "ref": "9ea27c69-562a-4d1e-9717-9aba7b3b8dd6",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9931de82-1471-41c4-bd0e-6dafe0714811"
        },
        "item": {
          "id": "c763181c-6f2a-4e56-bf04-79200283d3a2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d2828817-bc3b-4f87-b2aa-69ed898e168d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc26bc4-d479-472e-925e-ab70f5ac579e",
        "cursor": {
          "ref": "21569f59-501e-4d1d-a182-cbaa12855037",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a6214e27-0199-4dc1-911b-af95a8b094c9"
        },
        "item": {
          "id": "fbc26bc4-d479-472e-925e-ab70f5ac579e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "23a0bf35-9307-4aca-ab54-2e3142d90ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f454783-07c9-4cf1-914d-7e37547b8a77",
        "cursor": {
          "ref": "2f983c77-0fcc-41b8-9fe7-80506d703ce0",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fcfc46df-70e2-43b2-9337-085d4b6e8303"
        },
        "item": {
          "id": "4f454783-07c9-4cf1-914d-7e37547b8a77",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ee127da9-0a02-44aa-ae39-b5fad89c66cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaae1850-aa35-407b-923c-8e8514e32211",
        "cursor": {
          "ref": "c178fc58-d9c4-4236-847d-487412aae083",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2869932a-21e2-4585-82f6-0434431aa31e"
        },
        "item": {
          "id": "aaae1850-aa35-407b-923c-8e8514e32211",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "abe0c750-65b8-44bb-ba83-b2d255152bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f600037b-ca20-4823-8a77-d72fa09b9a0a",
        "cursor": {
          "ref": "2bcef9b0-7d4d-43b3-b5ac-fdc688f49435",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "62e50651-3028-4cb3-8c99-33d4522c638c"
        },
        "item": {
          "id": "f600037b-ca20-4823-8a77-d72fa09b9a0a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "76e8b375-575b-44ae-b28f-5fc8f4b90df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78e9792-dbd1-45ca-b0eb-a247d60a58a4",
        "cursor": {
          "ref": "bb5d031b-d051-4612-a1b8-ad4f536af4a1",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ac794941-377e-4f57-9572-820631927e63"
        },
        "item": {
          "id": "f78e9792-dbd1-45ca-b0eb-a247d60a58a4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cd98e9b9-352d-4c7c-ae03-ebc4ca7d22a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed658653-f8e8-4090-8c90-5bcbb334e70a",
        "cursor": {
          "ref": "c2869463-898a-4af3-9623-f7729b07401c",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2afe3905-06d1-460c-85ab-22dc87f9df92"
        },
        "item": {
          "id": "ed658653-f8e8-4090-8c90-5bcbb334e70a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "46eaab65-4b65-4ee1-8555-4e85f08d1f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a832d2fe-fd40-4f18-b65c-176eacb27f93",
        "cursor": {
          "ref": "5fb4b582-6fd3-40d6-8822-4a7450a3fda2",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7f7bd3ec-f6a0-4783-b0b1-acbe03c6fc0d"
        },
        "item": {
          "id": "a832d2fe-fd40-4f18-b65c-176eacb27f93",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "355ad4de-8647-4083-a863-a4b435168085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc21371-3fc1-47ea-a1e0-04bc9ba99dd7",
        "cursor": {
          "ref": "aba0951c-b96b-461e-a2b8-e7d2953a9191",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f066cda0-65ba-493d-b0fc-57cf9f02aa1d"
        },
        "item": {
          "id": "dfc21371-3fc1-47ea-a1e0-04bc9ba99dd7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "51972a01-733b-42ab-98c2-cddc69869d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a50d572-0bf0-4775-a5d9-561e34d21384",
        "cursor": {
          "ref": "e27280b2-96cc-4400-accb-ac18ff634bae",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ef21a67c-38e0-4aa7-ae12-0523b4c36c08"
        },
        "item": {
          "id": "4a50d572-0bf0-4775-a5d9-561e34d21384",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "106925af-3ae3-4a47-adda-e82a485411f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ce635d-77cf-4c3c-ae8c-330b2992b176",
        "cursor": {
          "ref": "ae400c85-91de-4c90-9be3-e690263a69ab",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ff7eec81-ade9-477f-abe2-2b5436f958a7"
        },
        "item": {
          "id": "23ce635d-77cf-4c3c-ae8c-330b2992b176",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "59ecd176-edd5-46fe-aeee-62a70c12ba42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d75c4c-bf2a-40cf-84e6-4beac935bb36",
        "cursor": {
          "ref": "590e3087-d1f4-4877-ba82-3fd934913c65",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "207c3bfb-7fcc-4140-8877-80fc775b34d7"
        },
        "item": {
          "id": "68d75c4c-bf2a-40cf-84e6-4beac935bb36",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "724c283d-2499-45a6-b47d-4f9cb9e9ef63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b60c4a-e4c2-4df9-8c01-3de155959149",
        "cursor": {
          "ref": "95fa02aa-e880-4a73-8236-a5098a4983f3",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "df639b5c-3c39-4160-97c4-4c11afe4fa06"
        },
        "item": {
          "id": "c9b60c4a-e4c2-4df9-8c01-3de155959149",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4c15986d-5fc2-4f30-8563-da8764f43520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f35d73-43ae-4656-a073-b490c3a9cd07",
        "cursor": {
          "ref": "de72cc70-24e0-4888-8eab-ee4892db5aeb",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0b00e312-c565-4360-8f89-b6700a4df6cc"
        },
        "item": {
          "id": "11f35d73-43ae-4656-a073-b490c3a9cd07",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2186e3d8-37c7-4fc6-8131-d2a37d32294a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd8e7eb-baaf-4031-864a-b820edeca50c",
        "cursor": {
          "ref": "10023ffb-f39b-469d-b2d2-34660f8cb971",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "07d715a9-391b-47e2-b564-b82b6082d9b0"
        },
        "item": {
          "id": "bdd8e7eb-baaf-4031-864a-b820edeca50c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "83f4a730-193c-4b50-affa-0b8261723938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ea3f44-10b0-47ad-b0c7-e1a5847ce086",
        "cursor": {
          "ref": "5e5a8d76-b4f3-4485-9f14-3cc80b2f812e",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c204551a-5597-4f18-a411-34bfa04dc5fa"
        },
        "item": {
          "id": "b9ea3f44-10b0-47ad-b0c7-e1a5847ce086",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ddaa1475-5021-4bae-8b88-535363e8994d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e478007e-7ad0-44b1-8ab1-4d7ed4771649",
        "cursor": {
          "ref": "cecc42d6-12c4-46b9-9dc1-3f8442cb990c",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7edbea9a-2c87-427d-847c-b488cacc01cf"
        },
        "item": {
          "id": "e478007e-7ad0-44b1-8ab1-4d7ed4771649",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "aef93fac-ec43-4b89-b788-9d1ec899ed34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfaa72c-9c6b-4968-a35f-ec9afab22f3e",
        "cursor": {
          "ref": "84f080fa-f1ad-43ff-9329-4dbb479ce2c3",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "95fb05ba-9b9e-41f0-9c6e-a4d7b649f7c2"
        },
        "item": {
          "id": "4bfaa72c-9c6b-4968-a35f-ec9afab22f3e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3c09f79d-9708-46b1-891c-b3ea22224911",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ac84fc-81cc-49ae-ba99-6808c52b8409",
        "cursor": {
          "ref": "05175d71-60fb-48db-9925-e0955ea5d07d",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ec0a14a7-d95d-4be9-91b5-3f610f0a593e"
        },
        "item": {
          "id": "05ac84fc-81cc-49ae-ba99-6808c52b8409",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8f2c36ad-e29d-4679-ab2a-dd296d20df3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61eff02d-bb56-4d7d-b9bb-815e30457e8d",
        "cursor": {
          "ref": "5508ab83-4e5c-4315-8d88-c836450a06c6",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "77a3da2a-2689-44ad-afdd-8c66a78dd92c"
        },
        "item": {
          "id": "61eff02d-bb56-4d7d-b9bb-815e30457e8d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e5dea779-f46f-440d-a19a-4b59010d7bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabc3537-e2a7-4a1b-ba2b-7680cc6b6cd9",
        "cursor": {
          "ref": "193b0242-60d4-438b-bfe4-f52aa62ffcdf",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ef247084-f2ca-436d-8c16-4bf091d55be6"
        },
        "item": {
          "id": "dabc3537-e2a7-4a1b-ba2b-7680cc6b6cd9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8b78da12-7c17-4b58-afda-fff9b72cc329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a345cc-1e06-4898-a3c0-65ab6aec52b5",
        "cursor": {
          "ref": "a6a623fa-24ee-4f21-b525-b4cda6a7a1fe",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "404fbfbd-81df-47f7-ad5c-262384f35ef5"
        },
        "item": {
          "id": "53a345cc-1e06-4898-a3c0-65ab6aec52b5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0a30ff43-27f1-4a03-b8c0-b5f294d34675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc0210a-63f5-476c-ae87-ccd682973b81",
        "cursor": {
          "ref": "1eeccc9a-8d52-4144-ada9-ba16edde9243",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bcf2a31d-d6aa-4dc5-b31d-e38609086a05"
        },
        "item": {
          "id": "7dc0210a-63f5-476c-ae87-ccd682973b81",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8593deca-bbe7-4458-b6d9-53c695f02367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24e03bd-1e8c-41d3-a1a0-6da493d33813",
        "cursor": {
          "ref": "d5f774bf-fc1d-4053-8ae2-d4f588b800e7",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "37927a8d-ad9d-4aac-afc5-d4ea156285a6"
        },
        "item": {
          "id": "b24e03bd-1e8c-41d3-a1a0-6da493d33813",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "833121e7-9ed1-4a90-9823-b5370a1686f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5431e9ce-1c8a-410a-b373-d38d3a40a544",
        "cursor": {
          "ref": "322e6fbb-ed62-40c9-8ff3-adb18e40a052",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c6d2afb1-8d51-4922-a11b-4a1308f3db8f"
        },
        "item": {
          "id": "5431e9ce-1c8a-410a-b373-d38d3a40a544",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "dfaa0228-d7d4-460f-8025-e5a29ef46bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699b247d-cb29-48ff-9f1f-a7bf6a7a86dc",
        "cursor": {
          "ref": "63a5c2cd-3045-4a76-a691-56a58e1e4379",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "19ce2ad4-61e7-464f-95f5-e33a60fa0446"
        },
        "item": {
          "id": "699b247d-cb29-48ff-9f1f-a7bf6a7a86dc",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "bdb16bcb-8d01-41f5-be75-10333fc34f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1160f9-cff9-4faa-bec8-286f38d8a900",
        "cursor": {
          "ref": "747ee1b3-05c5-47bf-83c4-90ec7e88d55d",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "584d1e2f-f49c-4c6b-b6db-23e583a63547"
        },
        "item": {
          "id": "fe1160f9-cff9-4faa-bec8-286f38d8a900",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "623d4a3f-04ec-4d23-9d5d-b5a959bf603d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3141c955-dcdf-4880-8a86-8aca77fda4b2",
        "cursor": {
          "ref": "d4568fd6-1058-4270-b9aa-b5afb768c9b1",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f6d94293-aba0-4102-82c1-1cfa14822707"
        },
        "item": {
          "id": "3141c955-dcdf-4880-8a86-8aca77fda4b2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0a21ffe2-82e3-4869-831b-e23a7e0fafbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f943df9-9d88-4515-9a41-93f48a75b758",
        "cursor": {
          "ref": "4fb30e23-e56e-4339-8c82-32ce4a4a6a35",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "697e9864-76c7-4309-b953-4195fb5c3dc1"
        },
        "item": {
          "id": "5f943df9-9d88-4515-9a41-93f48a75b758",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8fe31953-c4fd-49c5-99d1-c3e6688becb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74f335c-e545-43df-a79a-d58c943869ac",
        "cursor": {
          "ref": "64d0cc97-d7da-4ee2-a1cf-efc3a50fa61e",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1aaedb52-0512-4c13-8577-f9dbe256a131"
        },
        "item": {
          "id": "f74f335c-e545-43df-a79a-d58c943869ac",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bae7f292-6e6a-41f9-9756-a993a22be674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc698b6-fe0e-4a58-9aa5-59b2f24ef9ea",
        "cursor": {
          "ref": "e324e882-684a-4d00-b3f9-a579286b98b2",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1dc66673-643c-47f1-a141-df33e9d37c40"
        },
        "item": {
          "id": "4bc698b6-fe0e-4a58-9aa5-59b2f24ef9ea",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "19998663-e6aa-4caf-8fca-8cb652dfe20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c195b611-bfd4-431a-a214-b0b988364f7f",
        "cursor": {
          "ref": "1eae5fc0-73a9-495b-b2a7-427cfb2213ea",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4a4f3f8a-3af2-4e28-beb9-057edceb951e"
        },
        "item": {
          "id": "c195b611-bfd4-431a-a214-b0b988364f7f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5f58c86d-ecdf-4455-915c-1eadbc162d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b24926-82ef-41da-93c5-62d282dbaa0f",
        "cursor": {
          "ref": "c3a4eb07-8f91-433c-a1df-4dadf397734e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3f6a5e79-366b-41bf-8bd4-f70f9bb612ef"
        },
        "item": {
          "id": "e6b24926-82ef-41da-93c5-62d282dbaa0f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "84a3a184-51c4-4fc9-991b-8a8657aaca2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8038cc-dc3a-40db-a6c8-520ff16563a5",
        "cursor": {
          "ref": "309e0fff-564f-419c-8a7b-92868566a4ea",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "59172d10-7cfd-4e10-a0aa-de60e5b71592"
        },
        "item": {
          "id": "4c8038cc-dc3a-40db-a6c8-520ff16563a5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "eb6cbf19-9310-4ee0-947c-7c7ec576e794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b333ddfd-d08d-41b5-872a-bdf29bb223a7",
        "cursor": {
          "ref": "219ad776-2b36-4160-8b2f-bab0fc35a9e5",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "eac45054-4cfa-482f-8fc5-7cc68b91e246"
        },
        "item": {
          "id": "b333ddfd-d08d-41b5-872a-bdf29bb223a7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7490318b-0bb6-4b48-bb92-57f532d8a269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a7ed67-7184-44f0-bfb0-46bc90024763",
        "cursor": {
          "ref": "71f38b14-f51b-4d6c-a850-aba6be035ba8",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "94c3503b-cc7f-4b85-bf7f-0d63e7b44b31"
        },
        "item": {
          "id": "22a7ed67-7184-44f0-bfb0-46bc90024763",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "803c50c8-3842-4c0d-a284-5f538a720234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25543f3-6735-4749-9946-a30410f596ac",
        "cursor": {
          "ref": "0e4c4ce4-930b-42c4-a241-9ce5c24f8900",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "621c4341-ff92-489f-912e-a3b8a8b7a5c3"
        },
        "item": {
          "id": "d25543f3-6735-4749-9946-a30410f596ac",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "370cf4e4-6643-4a8e-b245-efd4315204be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5120cdf3-4630-486f-9685-887909657665",
        "cursor": {
          "ref": "b7fa2961-82e5-4dd4-a5da-e9f8114caa28",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "bbaa6756-9147-4a9d-a259-2cf4130dbf72"
        },
        "item": {
          "id": "5120cdf3-4630-486f-9685-887909657665",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1f8b24ac-e4dd-40ae-be32-0618789407b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3a9c09-2885-47b9-b2c3-0ba3292c4880",
        "cursor": {
          "ref": "cfc3e382-b1b3-4901-b60f-98f3f255afaf",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "04502c88-4e6f-4725-852b-c3405d5a3a55"
        },
        "item": {
          "id": "db3a9c09-2885-47b9-b2c3-0ba3292c4880",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1726d8a2-45c1-469b-a032-f7d5eed58415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8f2652-345d-44ae-adfc-d0069363df74",
        "cursor": {
          "ref": "3d375231-4631-4887-bbd7-4d3d03a97ffa",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b5c4ce98-f8b4-4049-ba08-cfb7ccad4fea"
        },
        "item": {
          "id": "5e8f2652-345d-44ae-adfc-d0069363df74",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3ccb977a-e1e7-4dc6-aa17-6d183531f635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329435c5-ed10-42d5-866c-56f6986c00f7",
        "cursor": {
          "ref": "b78fa119-3a44-4ffb-992e-fea52cf04896",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fed1e077-5744-4822-85e3-0dd329b070d9"
        },
        "item": {
          "id": "329435c5-ed10-42d5-866c-56f6986c00f7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "72ae1a01-31f8-4be9-9b55-3badd2a3fda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2611087-3033-4387-8bc5-b091830c98a7",
        "cursor": {
          "ref": "24ea0724-dac9-41a3-9973-01bb5d37ed10",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "18d40aba-5fd1-474f-a81b-28369801f259"
        },
        "item": {
          "id": "b2611087-3033-4387-8bc5-b091830c98a7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "15a6746f-9875-483d-84b3-bcffd0ec273c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1e4901-81d8-41e1-8f1a-3e2777c8e6d4",
        "cursor": {
          "ref": "d80a22e3-50cb-4a22-884d-c5d5768299ae",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ad630cba-5d2e-49d9-b08f-71d379e3902b"
        },
        "item": {
          "id": "ce1e4901-81d8-41e1-8f1a-3e2777c8e6d4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ade382d5-671b-4ee6-b719-c84558aaac4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c39f07-68cb-4422-b4cf-ec0603331030",
        "cursor": {
          "ref": "46832dda-bf8c-49bd-bbaf-a65ed4a11558",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6938391d-d0ab-42bc-b73d-a39904fe93e1"
        },
        "item": {
          "id": "61c39f07-68cb-4422-b4cf-ec0603331030",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b877b5a1-b429-444e-ab46-aa4acf31d38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116d9447-c03e-4203-9312-24e6379e2b51",
        "cursor": {
          "ref": "64b55cea-8c41-4a85-9600-42d27a5a9511",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ca9aff2f-d927-488e-b5fc-999a63fca39e"
        },
        "item": {
          "id": "116d9447-c03e-4203-9312-24e6379e2b51",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "685a2121-a41b-4704-80e5-ea43bd1a09c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad09e241-386b-445d-ba06-056b633be6fd",
        "cursor": {
          "ref": "692cc96c-c313-4274-9c54-0059e7fc72d8",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6351b593-b60d-4268-a101-5c7750371f57"
        },
        "item": {
          "id": "ad09e241-386b-445d-ba06-056b633be6fd",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "18f7aabb-fb31-4e16-b259-735b66bac8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27ca6a9-96dd-4b8f-9742-a1bf9e413242",
        "cursor": {
          "ref": "c5235539-834d-4fb6-a700-c8e019d42dfb",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "65ab28dd-a14c-49b3-8ee3-8f679f7eb657"
        },
        "item": {
          "id": "b27ca6a9-96dd-4b8f-9742-a1bf9e413242",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4c04bbb4-1b0e-4bfa-98b4-0fe38b5fab5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00e276e-c075-4a82-8b3a-6afbecf0faea",
        "cursor": {
          "ref": "4eef29e5-e3a5-49d0-bf1b-f4d77948c5ac",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5e566556-c075-4779-97eb-e4e93f21229b"
        },
        "item": {
          "id": "f00e276e-c075-4a82-8b3a-6afbecf0faea",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2d7b2a4e-21e9-4a5d-918b-b50f5ee61d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1392478-c10b-48e4-9640-9f99a7a58647",
        "cursor": {
          "ref": "77095d3d-3f55-4043-bba4-5c32862c72f2",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "cf248a47-f681-47e9-9d9c-23fa2f377f3b"
        },
        "item": {
          "id": "d1392478-c10b-48e4-9640-9f99a7a58647",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "34816e42-7d01-4a02-9bfa-1f37d3e757b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2da499-0082-41ff-92f8-bc71c2cb9f6e",
        "cursor": {
          "ref": "589049d4-84d7-41fe-8ac7-92c748717101",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f7158e7f-3d0d-45f7-ac81-ae8d68830213"
        },
        "item": {
          "id": "6b2da499-0082-41ff-92f8-bc71c2cb9f6e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "68b967d4-b997-43be-8115-f9cb997e8a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad3a893-651d-47e1-9b72-ff2359ca038d",
        "cursor": {
          "ref": "0dbc8696-659b-4c7b-b14c-f7e67fe355b6",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b6d3e7ef-8ff1-4d83-a2c7-433c6c884c66"
        },
        "item": {
          "id": "7ad3a893-651d-47e1-9b72-ff2359ca038d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6ffd61e7-dff8-4063-b78e-07e773f563d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b390848-1e26-4cc9-9af1-6cf2196445a1",
        "cursor": {
          "ref": "0221a778-84b8-4ade-9fa1-beb467252fb2",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6a778896-24a2-4c37-849f-1df895f0bac4"
        },
        "item": {
          "id": "0b390848-1e26-4cc9-9af1-6cf2196445a1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a4bb816e-68f6-4eb3-9635-7e57ef3ccc1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c929cb-8e42-4156-aa7f-7238cc75139c",
        "cursor": {
          "ref": "83dbca38-e64d-443c-be2a-a6a87ca33cff",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b9d01a91-d2d3-4590-a43d-425e978eacc7"
        },
        "item": {
          "id": "a7c929cb-8e42-4156-aa7f-7238cc75139c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fe2a42bd-3f29-4ed1-9eca-31a7f4d91147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb733f32-1715-4185-86a8-d9bc8348c6b3",
        "cursor": {
          "ref": "1f89e0d4-1481-4186-9484-35d271a50038",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "602697a8-9fa1-4d59-932e-4c9ee3ab4749"
        },
        "item": {
          "id": "bb733f32-1715-4185-86a8-d9bc8348c6b3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7efc03f7-eaa9-4f9b-9822-38ef4493d4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64c53dc-6d9a-4d26-9a01-69a1a12e3314",
        "cursor": {
          "ref": "2715ae5e-9268-403f-895e-9909eeb24da7",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "16c54e2b-11e5-41df-afca-df4c07c1f64a"
        },
        "item": {
          "id": "b64c53dc-6d9a-4d26-9a01-69a1a12e3314",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c38ee022-ace1-4e55-b407-a58b6b1048d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cfca47-8ea7-4e0f-ac51-45d9760c573c",
        "cursor": {
          "ref": "44c5c625-9f3f-423d-9382-c03f83074590",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "bd7f0c1a-0ec1-481c-acf2-5137bf665c06"
        },
        "item": {
          "id": "13cfca47-8ea7-4e0f-ac51-45d9760c573c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "26201323-b8e0-4384-b494-55fc413d2b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948f0456-d35f-4c1b-8078-b8340135d92c",
        "cursor": {
          "ref": "7e140920-cf7f-47e8-ae2d-09bc1e6f8445",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "426eb80f-59ea-4064-b5d3-c510287e2a01"
        },
        "item": {
          "id": "948f0456-d35f-4c1b-8078-b8340135d92c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d2f58011-d311-45a7-820a-616d4bb7d681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a854f61-2b2f-4003-8f6b-846afe2ae15f",
        "cursor": {
          "ref": "ef0a93fc-fa17-4ef9-9228-d36f84be69bd",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "46aa84fd-50f7-4333-833e-955c887c2b7a"
        },
        "item": {
          "id": "4a854f61-2b2f-4003-8f6b-846afe2ae15f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e141e3d7-df6f-42d7-a134-511f1a1f2285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1737d2-cb45-47fd-a40d-c4aa12a6ebd0",
        "cursor": {
          "ref": "c93cbb16-64d7-4786-b7dc-d846386e8b8d",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9e26285f-b50a-47c7-89c0-091be506d2cf"
        },
        "item": {
          "id": "0a1737d2-cb45-47fd-a40d-c4aa12a6ebd0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5b5b587d-1e89-469d-8afb-5b1735ccd073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c3e1ed-f16d-4fe6-83a3-079fd670e10e",
        "cursor": {
          "ref": "73153e8b-ab37-4ed1-b03f-96496d7a0b2c",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5d324fec-1fef-4a16-aeef-9afffd8f6f33"
        },
        "item": {
          "id": "d1c3e1ed-f16d-4fe6-83a3-079fd670e10e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "540565cd-2094-4637-b21b-eebc28e7266a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19c43cb-01b2-4571-a831-308f49382990",
        "cursor": {
          "ref": "1cc640f0-f7ce-4afa-8035-9643ad712921",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e08382b3-b886-409a-9eb0-7af99d9f23a1"
        },
        "item": {
          "id": "a19c43cb-01b2-4571-a831-308f49382990",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "41d63902-5222-4046-8c35-84d12da28e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8e0a3c-fa10-4644-b83e-17d819b7bd96",
        "cursor": {
          "ref": "13ce6e4a-819b-49c4-8ad3-ed9aac3a1aa0",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f92fbf1b-e6c4-492b-b943-2d9bf15d236b"
        },
        "item": {
          "id": "dc8e0a3c-fa10-4644-b83e-17d819b7bd96",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1c1bd234-356f-49e0-938b-ebc0b6df2fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b28f036-32af-444b-8540-9315d3f2894c",
        "cursor": {
          "ref": "79ae51a0-be15-4a69-80d0-2f19260b094b",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "74db87b7-17d2-499f-a8a4-02198432787b"
        },
        "item": {
          "id": "4b28f036-32af-444b-8540-9315d3f2894c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "be8bcb9a-23c1-40e1-8edd-6e141a9f28f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c980ce9f-2752-40d3-8a09-7c68a46b39dd",
        "cursor": {
          "ref": "21e3b025-bdc7-48a5-8607-1677fbd253d8",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5303b662-cc95-44c7-923b-c1933d7d8874"
        },
        "item": {
          "id": "c980ce9f-2752-40d3-8a09-7c68a46b39dd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5690719f-6c6a-40de-8645-b6817bd27521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f46900-5ade-4f9b-9f7a-827a50b4d39c",
        "cursor": {
          "ref": "10ebf028-4b1e-44a5-8f68-c4470c71e7f5",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "43987522-f4d0-496a-953f-6037805b0e7b"
        },
        "item": {
          "id": "52f46900-5ade-4f9b-9f7a-827a50b4d39c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6d97a59e-8142-40fa-9961-f5c9080cdf30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968db72c-65eb-4039-a627-f948a47c7d04",
        "cursor": {
          "ref": "666a3565-f016-4af5-82a5-6b07fb339e89",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0d29babe-a178-407b-a599-d0f035b77540"
        },
        "item": {
          "id": "968db72c-65eb-4039-a627-f948a47c7d04",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0fcc637e-66db-4515-b5b4-1cef53fb78c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f125d9-576b-4b3c-9126-5466defc9575",
        "cursor": {
          "ref": "938f014a-68f7-4e4b-bfc0-20b6696208f6",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5f60866e-84d8-4773-a87e-ca1db1a407cc"
        },
        "item": {
          "id": "94f125d9-576b-4b3c-9126-5466defc9575",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "624f6038-10f9-449c-8c75-63956d3e2071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db2b095-8935-4be9-bc2f-6c43498e5645",
        "cursor": {
          "ref": "1fa3912c-d580-40ba-bf7d-b5d554064a72",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1fccd5b1-5b67-421d-bbce-9d9979e678df"
        },
        "item": {
          "id": "9db2b095-8935-4be9-bc2f-6c43498e5645",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "da1deb6d-611b-441b-a1ff-c79c885175ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5a055a-06a3-4257-9a98-f14ef497c881",
        "cursor": {
          "ref": "3bab4f8e-5568-452a-821c-632d2d3785e1",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "793bb036-b132-49d2-8a9b-e3f86ee01f28"
        },
        "item": {
          "id": "1b5a055a-06a3-4257-9a98-f14ef497c881",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e9e84c35-db31-4109-b470-b7c7de87cda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21949f28-2a32-433b-8809-386bbd62d3e0",
        "cursor": {
          "ref": "99e90f5e-6929-4a7d-a684-cb79b02ad179",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0a20e459-3ca9-4bd7-936d-ec76d8d3371b"
        },
        "item": {
          "id": "21949f28-2a32-433b-8809-386bbd62d3e0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2b840a4b-988d-430e-9ba7-297e5b0a8cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3dd47f-3681-4f97-b266-3461ebfba3d9",
        "cursor": {
          "ref": "c64bbca6-0382-4833-8194-1dc68bbcb475",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c3897f15-5442-4b2e-9504-6f89449d5b05"
        },
        "item": {
          "id": "6b3dd47f-3681-4f97-b266-3461ebfba3d9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "84aa40da-e31d-42e7-8636-70f9ce32d9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772b7ff8-d31b-4b25-b695-204f3bde82c4",
        "cursor": {
          "ref": "1db3c2be-2985-4cb7-855b-42945f001b58",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f4defdc5-5116-48bf-800a-c672584ff99e"
        },
        "item": {
          "id": "772b7ff8-d31b-4b25-b695-204f3bde82c4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6f2d4088-00bf-48bd-825c-ab6042650f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c6b08b-ddc7-4695-b835-61d341057c0c",
        "cursor": {
          "ref": "a1ba7520-83cc-45c4-8166-1ae4957ea58e",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c76a3727-6482-4039-b681-8dc82d543cb7"
        },
        "item": {
          "id": "32c6b08b-ddc7-4695-b835-61d341057c0c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4f049b68-5b3f-46f8-9059-c21dd8f5b663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416c3b2f-f36e-421a-998d-21a2b36f05d5",
        "cursor": {
          "ref": "39976d0c-d015-4b5b-adbc-efa3a3d16150",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e3549cca-0d65-4d94-8501-2eba852defc0"
        },
        "item": {
          "id": "416c3b2f-f36e-421a-998d-21a2b36f05d5",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "54ffb2c3-e01f-4c7d-8ca7-87090f42fc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a53bec8-b045-45ec-859b-58a4027ec461",
        "cursor": {
          "ref": "f821f697-fd8c-4b29-afd3-c23a1a0b9059",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "85d8bfce-de10-4714-9dd4-e55731192ffa"
        },
        "item": {
          "id": "3a53bec8-b045-45ec-859b-58a4027ec461",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6e45c223-2b91-446a-83be-dddc75cbc8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e016f880-076a-449c-9269-b893924122e6",
        "cursor": {
          "ref": "3920f185-63d8-4011-a3eb-12b78c8a79bb",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "33f4c73b-13cb-449d-931d-b42285f53b69"
        },
        "item": {
          "id": "e016f880-076a-449c-9269-b893924122e6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "224177a2-913c-4e5e-a033-b6829187efd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f04273-0ba4-4f6a-93f4-053946930f07",
        "cursor": {
          "ref": "66ff5f7a-f6ba-4c13-a327-27ec86b3fe79",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e826db0c-6f7e-455b-87de-b0211e8cf1d6"
        },
        "item": {
          "id": "c2f04273-0ba4-4f6a-93f4-053946930f07",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "17802211-a617-40aa-8789-3d6b4f89a30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffd820a-4403-425a-89c9-99975256cfea",
        "cursor": {
          "ref": "8f7c55bf-c0bf-4461-a7e2-e90f44138b22",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "26bef4ab-2313-44a0-913b-c1f1dc12503c"
        },
        "item": {
          "id": "3ffd820a-4403-425a-89c9-99975256cfea",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b155f7a1-48d1-4f24-a19e-beac1f145be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f64534-857c-46c4-9c08-4b11fc724c7a",
        "cursor": {
          "ref": "68024585-6528-42a5-8061-bcbf3a47d50c",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9db64acc-a584-4f08-bd5d-ac7196034610"
        },
        "item": {
          "id": "42f64534-857c-46c4-9c08-4b11fc724c7a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d2aae439-8cc4-4b99-bb28-23cc5269ef48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd618bc-005c-475e-8753-1b45a51c83d8",
        "cursor": {
          "ref": "369712c3-114d-4257-a28d-12ab653204d7",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6c6c4076-4e9f-4000-a320-6d9fb932c095"
        },
        "item": {
          "id": "5bd618bc-005c-475e-8753-1b45a51c83d8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "837754e9-7656-4d4f-8171-bee321dbbd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd7e99f-19ef-450f-b101-9af63da8fba4",
        "cursor": {
          "ref": "fb600f18-0af3-48ef-bfd5-9b59110d01b3",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "52f4ef68-11b2-4e7c-957b-4ac625d56a16"
        },
        "item": {
          "id": "afd7e99f-19ef-450f-b101-9af63da8fba4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0d4dc8eb-4f18-4743-bc07-1bff48616085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506dc3e1-d160-4be7-accb-0109ee0c02e3",
        "cursor": {
          "ref": "9e2d9d70-5c7e-4ad7-966f-14af22ce5ee1",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "62ad87d8-2b80-4ccb-a525-f17a75753604"
        },
        "item": {
          "id": "506dc3e1-d160-4be7-accb-0109ee0c02e3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "00099339-0df3-4ca0-83b5-809289bf8606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b29cea8-2f1e-4767-8ad2-04d086c5ee98",
        "cursor": {
          "ref": "dcc5c136-be1e-4280-b44a-e0c58619ca63",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "36d4be2c-f059-4a63-a426-313248f28256"
        },
        "item": {
          "id": "6b29cea8-2f1e-4767-8ad2-04d086c5ee98",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e4fbe498-e1f6-48d8-ad9a-c7ff1e54600d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d058a5-0846-413d-a36e-38f08ce98a5b",
        "cursor": {
          "ref": "c48ccd18-3677-464c-b74c-9768c993a930",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fb529cf5-a0e6-41a6-916c-63982d3b937f"
        },
        "item": {
          "id": "e8d058a5-0846-413d-a36e-38f08ce98a5b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "05ce9e20-074f-4328-9c72-2beabafed3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bef4a41-2c05-420a-bca3-ab5487eec980",
        "cursor": {
          "ref": "dad6dc5d-9fc4-472f-980b-51cdf7c7d0f9",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f51d25a6-0e8b-4548-8d89-b451b728f5ba"
        },
        "item": {
          "id": "6bef4a41-2c05-420a-bca3-ab5487eec980",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "09ff60fa-eb27-46b5-bcda-873c1958b52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbd2370-cb41-4863-a195-796a8362b00a",
        "cursor": {
          "ref": "b56fe785-3728-4ce2-a11c-662efe82f7a9",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0cb17a63-5e22-4dd1-aa9e-184ea97ccba4"
        },
        "item": {
          "id": "8fbd2370-cb41-4863-a195-796a8362b00a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ef8ee055-1e99-4fae-b396-d609d0dfca95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ee8cc5-614b-4fce-8720-508c73bf08ce",
        "cursor": {
          "ref": "5e379bb2-b246-475e-a983-8bf6a1364490",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f0b5f3bd-9372-495c-aea5-87cc14b69119"
        },
        "item": {
          "id": "d0ee8cc5-614b-4fce-8720-508c73bf08ce",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "81619e08-f206-4296-81db-96361c455a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005e7bcc-6626-4d76-9733-de986999c6db",
        "cursor": {
          "ref": "9d5d6bc2-4feb-4def-9f75-163948a044e5",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "854c7e1f-cedf-46b3-8c51-5580bce3d53d"
        },
        "item": {
          "id": "005e7bcc-6626-4d76-9733-de986999c6db",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c67bedb5-c736-4ef9-9ba8-dd622b32f02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558b9c6a-ff69-4563-8a72-e624df8c700d",
        "cursor": {
          "ref": "227d60c6-6d24-423c-b405-aa38d36820b3",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "60ab64c4-bf8a-489b-afd4-a02debdb9088"
        },
        "item": {
          "id": "558b9c6a-ff69-4563-8a72-e624df8c700d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4865cebe-78dd-4920-ad05-6235cb2a0fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317f2f31-b1b4-4596-a28d-34457d6e0dec",
        "cursor": {
          "ref": "554c3bd5-6c7b-432a-a7ca-30d70601f66c",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ca9fe2af-d10a-4470-a2da-7fa16cb6c84c"
        },
        "item": {
          "id": "317f2f31-b1b4-4596-a28d-34457d6e0dec",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c7b37c58-825f-4bf6-a4b4-3c6a7dbe8fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf443402-d2e4-4738-9ad3-31b4458f271d",
        "cursor": {
          "ref": "94469849-1824-499f-bf7c-c8fa4a5ccbdf",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8f27b6df-7d26-4a96-9efa-b20b5b81df97"
        },
        "item": {
          "id": "cf443402-d2e4-4738-9ad3-31b4458f271d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "42d06b9a-43d7-4610-b472-1ad5ccc945e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69daf100-4353-4cb6-918a-254f6f84f7ae",
        "cursor": {
          "ref": "1d883766-d86d-4491-83ef-09b9a2e84204",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3d6f0575-4abb-4378-9aa4-bdc9abc1c512"
        },
        "item": {
          "id": "69daf100-4353-4cb6-918a-254f6f84f7ae",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "92fb5ca2-c2eb-487f-b401-dd0c595f647c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d54212a-16e2-4e6b-8c44-ab3164a9373e",
        "cursor": {
          "ref": "f1e4d354-8bac-4efc-94af-6c39ce0cf2db",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "c7fcd37f-5c39-4298-b047-134a7d185ce3"
        },
        "item": {
          "id": "0d54212a-16e2-4e6b-8c44-ab3164a9373e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5c0e5b7c-7603-401d-a82d-6babecf71849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4bd4a5-8910-42ea-b5f5-cedc38c7b88c",
        "cursor": {
          "ref": "5d159402-2e64-43b0-b185-d696d81521ac",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "32144395-f37e-4237-a8fe-92d35866e428"
        },
        "item": {
          "id": "2b4bd4a5-8910-42ea-b5f5-cedc38c7b88c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9ab531e3-9262-498a-8bac-2c077353a06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfebf694-3358-47d6-bccf-24f7c6de88e1",
        "cursor": {
          "ref": "0f023fb5-6a4e-43bc-b52b-96f2b1e60637",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "48fda771-521b-4dfb-8a4c-f0dcbb693832"
        },
        "item": {
          "id": "bfebf694-3358-47d6-bccf-24f7c6de88e1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c8781f9c-55b0-47f0-8b4e-65132599c51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc70543f-f6a2-4597-9fe3-793ab00fd7fd",
        "cursor": {
          "ref": "8ee543ed-9ef3-4363-b22f-6b68f2140045",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "44134687-df01-47a5-94c3-f625a6ecc72f"
        },
        "item": {
          "id": "bc70543f-f6a2-4597-9fe3-793ab00fd7fd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5d5ad622-5c40-4308-82c2-005818a89190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6ebc3d-001e-4f8f-9ecf-7316c8e33e29",
        "cursor": {
          "ref": "f1cefbfc-c258-45a2-b90e-022d1a3b8d18",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b451ad4a-865e-46d3-83de-30607f0f217c"
        },
        "item": {
          "id": "cc6ebc3d-001e-4f8f-9ecf-7316c8e33e29",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "64266fc2-9200-4f34-ae39-8a81b4c95b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8d35f3-e333-4eca-8764-114c4e187f1a",
        "cursor": {
          "ref": "3b2c9d99-eea2-4893-a89b-3d2419e7093a",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "9e8752c5-e364-4c05-ad2f-f4b4a3444991"
        },
        "item": {
          "id": "0c8d35f3-e333-4eca-8764-114c4e187f1a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "66839f63-da06-442c-89d6-05b2f3d4dd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224d2c02-d321-4f17-a7e1-2c52ba989b2d",
        "cursor": {
          "ref": "97d80555-3098-4314-856d-beccc158fad3",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "148ced29-688b-4909-acec-7ce2f2f63c11"
        },
        "item": {
          "id": "224d2c02-d321-4f17-a7e1-2c52ba989b2d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8db61ba0-4a91-4237-a5f0-c0ed2395bbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a430c5-5be8-4a6b-b6b6-258f3c889d7e",
        "cursor": {
          "ref": "07e9cde3-326e-4064-b8aa-131f2c43b1b1",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e13dbae7-2d74-44eb-8008-65cbf7adfff5"
        },
        "item": {
          "id": "49a430c5-5be8-4a6b-b6b6-258f3c889d7e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c7f1d7b6-5ca6-4980-8cb1-41d53827985e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e270fd-f5ea-454e-8602-1557f4ecf2d7",
        "cursor": {
          "ref": "f22b45ce-4a3c-49ac-bbc7-cdfdd51e2023",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "90ff74fc-c5f8-4c3d-8e97-ae909b39ef06"
        },
        "item": {
          "id": "79e270fd-f5ea-454e-8602-1557f4ecf2d7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "79abb371-b786-4c59-abcd-6b5f08fdcb56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a294bd59-1e1e-4cbc-a54e-b31f67467ef3",
        "cursor": {
          "ref": "bb772830-b064-4e81-9786-2ab30becf3da",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a4818e9e-7f5e-4a87-a409-1a61d55b2cf5"
        },
        "item": {
          "id": "a294bd59-1e1e-4cbc-a54e-b31f67467ef3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7e9d677e-4ab3-4427-8df0-dc460a5a21d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794b62d0-cc50-4383-b3eb-c8ffef5e730e",
        "cursor": {
          "ref": "8a0142cc-1396-482d-8c6b-04580f8ce7d2",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "65a676db-6d74-4d29-866f-dfa4510627d9"
        },
        "item": {
          "id": "794b62d0-cc50-4383-b3eb-c8ffef5e730e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d09c2f90-9e04-4dd7-a8a8-f7b86306e876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63405750-7824-461b-a50f-5c3ed6d72fbe",
        "cursor": {
          "ref": "ece4823b-accd-4aef-97d5-5e06ecf03b35",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "e6dc9ec7-ef9a-4993-b78d-28dea5bb1500"
        },
        "item": {
          "id": "63405750-7824-461b-a50f-5c3ed6d72fbe",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e49ecc0a-adad-482a-b876-99e2dd73d670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f654deb1-2643-4010-91d8-1601445b58ce",
        "cursor": {
          "ref": "e766fa3c-5ce1-4abd-85d7-e849348aa200",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6c5f648b-5419-4c60-8fb4-e55bd0bdd7d6"
        },
        "item": {
          "id": "f654deb1-2643-4010-91d8-1601445b58ce",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7e45af46-b5b5-4dd7-b405-3a4c3a9e24c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284b6b9a-9017-46d6-9b81-b7d857bbf0a4",
        "cursor": {
          "ref": "fbc038b3-101c-44c3-82e4-a1960f725a30",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "1c8052c0-38f5-4f01-98f6-ae38df7acd28"
        },
        "item": {
          "id": "284b6b9a-9017-46d6-9b81-b7d857bbf0a4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "13f1d82e-f3cb-4927-bfb4-a6b93f2c221d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eac6664-c3f9-4a60-8e6f-cb20e4f46e58",
        "cursor": {
          "ref": "7906386e-2c8d-4879-a895-63a753bb75b6",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "521b5a50-7d1e-49d2-9023-1d3f86ba708e"
        },
        "item": {
          "id": "0eac6664-c3f9-4a60-8e6f-cb20e4f46e58",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "cfa362b5-02ee-4390-b7d0-ca4c757de95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f0c21c-21c6-490f-b591-d725ccf73904",
        "cursor": {
          "ref": "1029bf89-6e20-4de6-a344-63b08b3627dd",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "cbd5b28d-915d-40ba-a9c9-40d5221f608d"
        },
        "item": {
          "id": "25f0c21c-21c6-490f-b591-d725ccf73904",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a22727c2-be2c-46aa-b760-ba8720dcac8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5193fb-eeb1-44ac-bab9-e655523b74ee",
        "cursor": {
          "ref": "454cc2d1-36d1-423e-907e-f36ea99992cb",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "09f2010e-7e10-47a6-9063-ad8939284748"
        },
        "item": {
          "id": "6f5193fb-eeb1-44ac-bab9-e655523b74ee",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "136567b3-aa37-4a41-a784-f864057a92c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0007827-da5f-493d-967b-2d219e0418f9",
        "cursor": {
          "ref": "67843b7a-5745-4816-be74-d09e44f893cb",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "fbd91051-c13b-415e-bf96-039f92bec915"
        },
        "item": {
          "id": "d0007827-da5f-493d-967b-2d219e0418f9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1987cd53-2c28-44e7-b060-15536c529bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4732ce0d-c85a-4887-8a15-e9e9249d87a2",
        "cursor": {
          "ref": "c41d64b8-7574-4cd7-9604-1c11d1cac5ca",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0dc2ab70-1938-4a06-9ac1-4aa50de5a36a"
        },
        "item": {
          "id": "4732ce0d-c85a-4887-8a15-e9e9249d87a2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4b3469b5-1e45-4a53-aeb7-7782f0700218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e227c99-aeff-4672-9294-8585ddaee15e",
        "cursor": {
          "ref": "691bbba1-f66a-4f7c-bc37-3f8dd695538b",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "64898e4a-b1e1-4c0d-a772-73ccb17089d9"
        },
        "item": {
          "id": "9e227c99-aeff-4672-9294-8585ddaee15e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2d919669-4f8d-404e-adbe-e1e6bcdc41f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2363bef-e1af-48d5-89ce-560d83d80d8a",
        "cursor": {
          "ref": "345d2170-f526-46a1-b8ee-0298a60de3c3",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "a8fd5b8a-d8f2-40e8-8773-5aed6decc350"
        },
        "item": {
          "id": "d2363bef-e1af-48d5-89ce-560d83d80d8a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e9681811-f64d-4e90-afa1-72bb9092cfcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2f5ed0-1904-4de3-b900-67f928c636a9",
        "cursor": {
          "ref": "ae7a0c63-ff86-411f-88b9-6105795575fb",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8dcb466a-bc45-4b50-8e5e-cbd0028d11a6"
        },
        "item": {
          "id": "0a2f5ed0-1904-4de3-b900-67f928c636a9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d77845aa-6ff6-410f-941d-03d018e937bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57077f56-b54e-433a-9bdc-fefb0384d4f7",
        "cursor": {
          "ref": "51657188-e6a1-416e-a645-5961e546eb7c",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b5b1c9f8-00f1-42b9-b116-f55ce530fac3"
        },
        "item": {
          "id": "57077f56-b54e-433a-9bdc-fefb0384d4f7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "eaa5fce4-b339-4563-b15f-b79d13f50c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5dd188c-c86f-43b9-b7e5-51097c9940c6",
        "cursor": {
          "ref": "585935bb-38a2-4753-8c3c-f8da1f011c6b",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c6ddd560-2fe1-48f8-a082-170ba9f66414"
        },
        "item": {
          "id": "e5dd188c-c86f-43b9-b7e5-51097c9940c6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "925c9a34-784b-4901-8065-4ad9082e5afb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf6930f-b57f-4df2-861b-80ac3aa38df2",
        "cursor": {
          "ref": "f4b14ad7-21ab-4d86-a219-af5561acf0bc",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "263079bb-f50e-4f97-b371-456dd1e0ce74"
        },
        "item": {
          "id": "eaf6930f-b57f-4df2-861b-80ac3aa38df2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a2c0c742-c81a-4353-bbd3-15bd862b6207",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc715c9-30ee-4464-a061-0abed5846fcc",
        "cursor": {
          "ref": "b497bbf6-6a68-4220-8cdb-0567ee7876c8",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a36601bc-3ecd-472a-a6fd-3063dd61aa85"
        },
        "item": {
          "id": "0bc715c9-30ee-4464-a061-0abed5846fcc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d1a9a508-1f90-485e-ae44-6cb94654e2af",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee12e6b2-0a1c-4889-ae89-a54b9a96ef0f",
        "cursor": {
          "ref": "338d93d1-d414-4f00-a1f6-5d88b9899a45",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3f180205-6cca-4288-ae87-8444f3262a25"
        },
        "item": {
          "id": "ee12e6b2-0a1c-4889-ae89-a54b9a96ef0f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "145b469c-6c0a-4edc-9d20-7aff3b0d5c1f",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a57210-cd30-49c9-bb6b-f1932342a1bf",
        "cursor": {
          "ref": "23a3934e-46b8-4414-9b97-2d4c844acbf9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "fd010e2c-3a68-4c6a-8cdf-10abae16c60d"
        },
        "item": {
          "id": "f6a57210-cd30-49c9-bb6b-f1932342a1bf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5ab10857-241c-4bcd-9f1c-da88a38764fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a57210-cd30-49c9-bb6b-f1932342a1bf",
        "cursor": {
          "ref": "23a3934e-46b8-4414-9b97-2d4c844acbf9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "fd010e2c-3a68-4c6a-8cdf-10abae16c60d"
        },
        "item": {
          "id": "f6a57210-cd30-49c9-bb6b-f1932342a1bf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5ab10857-241c-4bcd-9f1c-da88a38764fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63224367-7f75-4157-89d5-3e5bb1192ec5",
        "cursor": {
          "ref": "3cd1159d-3506-4448-8515-7ebeedf41fd0",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "5d7bde3c-62b6-4f23-8bd6-7d115d31826e"
        },
        "item": {
          "id": "63224367-7f75-4157-89d5-3e5bb1192ec5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "86800e43-5560-4bda-b7d5-508e82aed212",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d77854-1674-4686-9217-8b6ef95bc748",
        "cursor": {
          "ref": "b4f40ee9-41c8-49ce-92ea-a13202243101",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "0d7eca98-7c6f-4173-81af-f803831d985a"
        },
        "item": {
          "id": "f8d77854-1674-4686-9217-8b6ef95bc748",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "501b0384-7183-4393-a87a-bcfcd20ca7ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}