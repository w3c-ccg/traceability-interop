{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d5f776fe-c5a2-44fb-8044-724b0394a36c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7e7dfb58-12da-4ae1-a5b3-0c31e92f7bda",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f5e9ba1b-e711-47db-ad69-64407a072af5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "52ead8e0-1ae5-43f2-a1f0-75f44d3b1110"
                }
              }
            ]
          },
          {
            "id": "2304c739-fada-43a5-8b1e-dd1cb2e2546c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ec064b30-8771-41bc-8720-53f5bcecc1e4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "33c7bb05-9b6e-4779-8cb4-2a39d010ab7b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ea2fd899-c007-4f40-bbb5-c1b73f917f17",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7aa78e4a-f867-43e2-9428-b992d2d97d85",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ad4962e5-e158-42dc-b6b8-71df033994b4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "979cfbff-e44d-4786-a1f7-039f98f259b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbc33a2c-4275-4f6b-a948-4e5c34848067"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7edfd916-2107-435f-9e21-598a533a5483",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dbc114e8-116c-46e6-b9a2-08be2c1f576b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ee8416d5-c9f6-4ae9-a707-b499adf1ee5e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6b64361d-24d5-4984-870e-14bab62a5869"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "057e25b0-6a83-4d4a-8f83-c925f65bbc5b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "67b7f4aa-d3bd-46b4-a8da-ef5e61db312f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4c7fc2c-eb81-4585-9b68-8a53c8d53391",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf48a443-6e0d-4ca2-a3c1-91b112fb885a"
            }
          }
        ]
      },
      {
        "id": "3f33d200-6ee5-4708-b7af-cba84b1279b4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b38c4e26-2478-4560-8bd1-578725e11e03",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea489a5c-66a9-4603-bda7-6015d923c154",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3ed925fe-4942-4f30-bb05-568a2295f4b7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1353a854-0f8e-4082-a775-9e6bb75be43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb0fc4f9-ed66-4062-92f9-2ce2acbbe1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d6db73-3aed-429f-96ff-b654f0789518",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa712ec-26d6-488a-bda1-644325aadefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2cf0824d-6e78-4067-86fc-9b1e4deb9a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c323b99d-d222-4bad-8158-c28fd38e8364",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3563d0b-60fb-425f-aa52-2e1ea84e9384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3796af0-34b4-4af1-b20a-0ee811caed64"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c84ee820-06ad-4bde-a656-4e42a8bfde22",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de079b05-7107-43a7-bced-14f63ce8415d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ef52cd-76c0-4126-a08c-5d5a5f5b50c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b44f2013-292a-4631-a5f5-937b1446d61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b03481-e1fb-48cb-8310-6506a3a67d85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "605592c9-85d1-43e4-a132-79e58cb9698c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5256b648-7d97-4518-8b0e-7600524094a2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9d9ded86-96b0-4e0a-92f0-88d7c7f99b57",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09f9efc6-a451-48bb-ab22-f8bd2f468199",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a6dcd8ba-742c-41fc-b599-c44dc3dbe482"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f8587ba-2a11-4135-9191-ad3c4322d3c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9e10c9a6-eab4-4789-a50b-e195ef5b13f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6ff6197-6563-48da-b796-1766b1758bf3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b0b390e-06f1-4e24-80c4-fda209806d14"
            }
          }
        ]
      },
      {
        "id": "4cc4bf00-d557-450e-81d3-0a86ca701bd9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "77568a1c-edca-4401-b6ab-fec38658c1a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d26bf98-db63-439a-bfdb-23f5f49f2ac7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e7f5455e-ed0d-4c10-980b-0370a53b6468",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e56d21-1e51-46b1-a3af-6c1d050fac6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1d6783-88b7-4057-b0db-5efda5168bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5063a3-7a6e-47bd-9040-5075eddcd6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "793bbb63-1246-4fb5-9791-14e3f5061e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e012cc9-236d-4b4b-a90e-522abf741a25",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c47939-45fa-421b-aa3d-ed916583dc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d9258dd-20a7-4254-814b-8c9fd591601e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9ff023-7493-438f-9199-0691abae9f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be4d05b7-f20a-4091-8c2c-a7ec061b56f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2ba0df-b7f5-4787-9da8-844a333d0e08",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ce5f86-cd4b-4563-94d9-d1e2f9b3de72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31676f70-7120-4cf2-a95a-c470d872eafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823a84b9-d276-4ec7-997a-f6b955f4a7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6927c3ab-43b6-4d30-a4b0-f56ffc8a9aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d85cf2-05f2-4e94-8f8d-4446bf32d1d4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db14b3d-767f-4e58-b4dc-988eb0b57ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2935b6ea-6961-4be7-8f7d-8a143264a7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247133fb-1630-4344-8f3f-06bcab88ed58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f1d3e5b-0a41-4979-8eba-bce051d02ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d73899-135d-4109-b9c3-2aca7bd141e2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9004a5-42b5-463b-a295-cf26cab8d3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b21bd024-8474-4353-82e7-73513406b794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0fb15d-1047-449d-83ca-278a29309cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bebecd9-69bc-4955-acdf-67818de7a3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1aacd57-674a-420f-99c6-456b27456e89",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7faac59c-d401-4184-b10b-86042a0b8c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288b4203-8364-4721-a870-05c8f61a5476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb2b3d9-1c01-4b28-a672-8e9df9373b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d85b074e-5b0f-428f-978e-0f77bd5b9584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1cba1e-37b8-4383-a095-b0b234f3d524",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a3d86f-e7b2-45c4-92d5-fdb5bb2f1eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d99aed-122a-4946-9db8-31703986e029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8190d8-bebe-4ae8-a40d-14a2611a153c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f9dc861-c81e-4245-96cb-3efb5c4a6c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc7d232-efc2-40e4-8f5a-0d3a60d54ce2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f96a29-4952-4f8e-bb5e-6e66f887e5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "064f3213-b49b-4957-9008-371660d85527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53c6fc4-9ec5-41b0-b0e0-f3f78ad0c629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e14e0a86-abb2-47db-ab4a-1b0aafc265b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ea2016-d99e-447c-8476-c17c5e86da2c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cb82df-2018-43ab-9d02-2b4235dc0ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ffc88f-feb0-434b-9232-18127e62424c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5f9577-5462-44de-aa02-867f72392869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0532a1b-32de-4958-85c0-28f012fbe7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c909be8a-d5d8-43c3-8fb2-bb46be3b9899",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ec6a29-6fb1-43d9-b721-57025faab5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4d8360-ef31-4cae-800c-9dee77cfed35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3f4e4b-223e-4aab-a56b-e129ac40c748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "514aff83-7742-4353-b744-e45a2b3f8602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c11caa0-45cd-428a-adc5-3ebfabbb4e55",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54431ac8-908b-49ca-8fe1-1186e14ee12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c19648-5f26-46a2-a05e-2ff4c5b94a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c5ce89-12a8-481d-98be-768a668e5273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7260543e-2cf8-4131-a5d8-bd457020fe6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120c39b9-4048-4c9f-a3ff-755970301d18",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1ff98b-ade1-40c9-9baa-728c0880b552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1fac6f-fa4f-481c-9ce0-9ee697b68694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e84f1bd-dff4-4e47-bc62-1366fcb2aba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a390b1be-412d-4afe-92aa-3fe22d692372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b320dc-c186-4dd1-989f-50dda7f88ea7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0364773a-b153-40f7-86ac-a40a882b7631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d27642-d949-4cc8-9df5-6362e7ca308f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819e1c0d-8be3-4f62-8804-f1b892efc9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30ef73f5-5dca-4346-9128-3bbea2433b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1db887-e5a7-4de7-a043-489ec3407745",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91e11f4-2664-480e-a973-4df4423dd5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0b26fe-40ea-4064-9784-352ff98e93a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a028fffa-ac69-4de7-822c-b77612914b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fcec4b2-d160-4e57-8059-9c2f01f7f787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39e2ad5-91e6-453d-a82d-3fb2ee3b3d02",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90eaafa-a060-439c-a33a-e4a5ba4ab769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50aca656-5918-48df-aab0-10834eb2e951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4b03f0-22fa-4705-bd67-b268c0455d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35a763e9-0134-4c0f-ae19-2e1b9487dd87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08738f57-204c-45ae-a2a7-48461fe7f4e6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f972fb-1918-452f-ab95-60d5a93b2dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2420bc03-a935-4101-92d4-f7e974cb9255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c24dec5-56f1-4ebd-b232-d0917c62b3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d757d064-ac33-4e90-a86d-72947fa78fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156e0c10-7f9e-47e5-acc6-697020c09dd2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b322fd00-4f28-4583-b5db-4db9ea6baf5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffaa73ef-0ebf-4daf-84ba-3575d89d374c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001c20fd-2630-46be-bae7-ad79dd702fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "feeb3869-1c9a-4e4f-9bb8-c92e20fbd3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865d46a9-7b42-4740-a5bc-c4a142b756be",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f264e1-8370-4239-814f-5d7c9d3a013d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d74a693-e1aa-476f-8d6b-00415d4725b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafaecad-bb89-46ec-85cb-196d79320a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9392022c-1cab-4013-8ba8-c6e71f5e7bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f39358-ae8b-4945-908c-472879e9b602",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9566e7-839e-4e3a-9a12-4a9306e51a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0c85e7-6561-4693-b626-7a858dd23aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee676229-7435-4e74-9810-e0cecbb2d585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf80c2b-f892-4147-89dc-693bd3b300a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60e87e4-11fc-4550-97be-1b6372476a67",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcb8bca-e1d5-4089-bb44-99e2439332c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab6e6bb-01d4-40c4-9152-a19e661fcadd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7923bd32-f9dc-456f-a324-b6ef389423ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a097e7cc-8357-49c2-b68b-a5c053d92cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4769ba70-26cd-4cc1-a178-c6416c8cfe43",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c83acab-a127-4737-9bfe-d127de98f3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f01430c-fb27-471a-bb30-97957e8bb1e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5124701d-b601-4c73-92d6-cd995d896729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc68bf6-6de5-407a-8ef0-a6c2fa8642ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a4e52e-7490-481c-a773-bda3782cbd6e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728383d8-02f4-4bd5-b554-dc1fd163f9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01167e3-66fc-42f1-af82-88d9ca91692e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9167c08f-fc56-4f59-a7ab-8eef41ca960e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9315137-e00a-4b98-8818-52127b1edb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a8cac9-f163-4433-8ac3-a55dfd34f680",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee23b4c-9392-4259-888c-8a5bb69391e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb1070b-dcb9-450c-83fd-9b1133beeb95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d14348-742e-4599-b554-c842b15d69e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55704879-9d9a-47ea-8ce3-367ff9c0f7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b6439b-a1c8-4602-9fda-8d673b640dba",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d9be96-294a-4385-bf09-9b212505f78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f31355a-58b1-4503-91be-9fcf602bfd67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e15216f-104a-4b3d-b145-da8458c0f8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "992bd60a-4e39-4d02-8d57-58ea618efe3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110489db-2a95-4a19-840a-f4cdabb50420",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea14251-e2e6-4bbc-b2a8-191384d8963e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2367df5e-d4c7-4fa8-9010-01906b43e280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd93ba3-64da-4ac2-b8bb-547f89c337ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0edc3e7-7912-41ed-aeda-e05b32f85f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bf02e7-587f-4652-8896-811f548c8e53",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32f43c8-130e-47b3-bea5-e09318e58df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f228b05-0906-48d5-b41a-f8ff9202a784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03b4534-6951-4609-a590-af0621e75cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "87c3f1dd-6d3d-4684-bf72-496b5c836214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae3bfa3-b2f1-4d0a-981c-03809aa9b08f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9ef178-707e-4be4-b291-de387f30a7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab24b099-e7aa-433c-a381-177a5817da20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9492d00a-ac40-401a-83d9-370cc3aa2351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "40a95b95-3dd1-4140-a85d-8c61d71a2dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e25fe0-ef86-45bc-a8a0-a749edec9c71",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2b938e-2f7e-4584-9e24-6351375f8a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5d2699-6179-4f2b-9b6b-ec72d8d507d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef7be4c-a91b-4a70-bd21-b6353fa8f589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "db3aeecc-40a3-491c-9d68-86e86d5a0f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc2168e-1c62-4ad6-b03f-96a98a55451c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47c2248-7c03-47f9-a4be-f3d1b5f83136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b30de1c1-876e-4d5f-9c49-0b971cdf35ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72825ebd-fb60-4411-9e3c-be1313bd6dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc0c8b8-1aa4-46f5-826c-4f225cead025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f96041-6e92-42e5-8668-eb0082d22bc7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27a1557-d9d8-420f-a527-edcc648d6f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa61d20-edd4-49e5-a238-e458f34c85f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f92517-b2f3-4186-bb09-d8eb25a2e975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "87ef5b58-92f7-4a5f-a299-7c96c737b153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1206a717-9a5a-4f77-b68e-3fa9b3063750",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad5163d-a44f-4cdf-9313-6b0a516c8412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a5d377-97ab-4a6f-b405-03212f4cf19f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bdcfda5-5712-4a60-b7b4-c22b5df73d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "daf4fe7a-259e-4f6f-91c6-042c9cf9fb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe03b18-d7f0-43d7-90d6-29afc23e9438",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcb7085-c39e-4e76-bd8a-8976c27e179d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c63bca80-fbad-4c8a-a1a1-ff118e7ea3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b88f8b1-e597-4ed7-9f75-6941b50381bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59db6daf-64b2-4150-94c9-7816d46464d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5ec4de-af2e-41ae-a4e2-620ea33556ad",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157e8c93-3a59-40d3-8bc5-abb638a1f0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "543ea071-5ebf-42d9-a1f6-3c00c0e32586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa825c9-c733-4635-8b99-2e7204b2b60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9332301a-b283-4c3b-b67b-4acd9e53be01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa9b689-dfeb-4354-a0f5-38a9f648154b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956950ca-e3fa-4a72-bb71-c5a6ed428995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979b6894-9c69-40c0-932b-d6e8622140b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80257aa-4e22-4257-a016-99439042a180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d363a91-d312-4cc2-ad8c-3bf6b7217c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2c9a4e-c547-4491-b97f-d81d297d798e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0f4f6e-3f67-478f-b3c6-78ebb05e0e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b42d67e-40db-4bbd-bb1c-c690cc6717d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c26f75-5193-40bf-ba40-6a7b6440863d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d90ffa39-e6a7-4290-a578-1b4b1524be39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e21ca31-d00a-414c-9580-2d3bc9adfe4d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ee24ab-2ca6-4716-acf0-de41b036a36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6ca0ef2-2d86-4128-a385-0e4ba14dc5c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c029f7c-149d-4858-a5b9-46f4e98057ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5464de56-fac2-41e5-9e8c-d460d4ce01f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062913af-fbba-4423-9f67-ec62f2754611",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da90bd7-5065-420e-99bb-b30bf925d555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13be6c97-245f-46c0-8320-821446c711d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e78dc93-2ce3-4e61-8144-d3c7a4fb6cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32cdd576-5138-4341-98bb-4f4877ba3490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843b566c-3784-403b-b7ef-b78506ba9c84",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2e600a-a016-44d7-90e3-d495e9dd8491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc23f5da-a156-4078-b299-627599006ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed71f4c5-7ae2-45d4-9d5a-b57aa3f36a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e83428d-82ce-40d1-9574-6e18758b0f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd7dbb5-ce09-4fcc-bff8-de239e4ad677",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c60abc1-dc36-4898-ae92-0b11aba579c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944fc9b7-217b-4627-9773-a63b82608ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b75f99-59b7-47e7-bb93-8b1377bf992f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea21cbe-856c-4f5d-9bd8-73beb81cf3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a89f3c-388d-4107-80f1-3c9fe94040be",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8bf7986-f6e4-4d41-a6b1-0e57d4f5d90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628e6447-14c5-469a-bc73-ae419921bedc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fe2ffe-e317-4f56-9edf-705a384eb2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce493109-6c6a-440d-8985-5ea6ee874da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b22b28b-ffa6-4fbd-9904-90d5ec7e8fc5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "075f1eae-b526-4efe-8587-a6c0e598790b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0641aa-3f70-463b-a2ad-44b37aa4285f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170fbd88-62ee-414b-83a8-5ffe46823b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "57f337cb-d491-4ddf-ab53-e350bbfd1c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baab6651-0f43-4334-9a74-59bf5c734ad9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d6dedf-78df-456a-9446-3e5d869f2ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d9cd6e0-1786-48c3-a1fd-f79111c7d563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de810f3-7106-4524-81b4-363482b0b2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2e806f84-a105-446b-b28f-f2978a68fc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9c9787-9e25-4a0a-add7-5644451e7f4b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "475877b7-54ac-45d8-9a2f-aae05f925b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488aaa5b-973f-4bf8-8c8a-32d7cb6daad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea5eae3-2f85-40b6-83ff-6cc2ad84f364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "37b21d0b-5a4b-4089-b1bd-2cdcda16524e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb30d40-bb7d-4a8a-8440-a1ff81a70b4e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e28165-60ce-4a4c-9108-5d9a58bdcb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ff3073-bd58-4264-8d34-e241ba4fdd30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661b6108-6d29-471c-a52b-3beb0fb8249f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d781d529-4ac8-47e6-87e6-225ce419c4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc81112-978a-4a05-a7e4-3c1d40fbe4c5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29cb03aa-c389-4638-a11e-795d831cf328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3766744-e76b-4a1c-a795-9d155599483f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a311af-4179-444c-a20a-785be71246d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "147a9281-3b32-4ea2-9c02-38e60bfb7be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e032a7b6-22c6-41f2-8aa3-7e186a82d9be",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02550751-a330-4b2f-9b98-e64c763d859b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d13b66-8e38-418e-940c-819726d66333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9e227b-f45b-4c27-afe0-77562907061a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0e74ad-31b6-43bb-8598-83cf6f90b44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39252dd5-62a8-4b53-b0b6-c924088a5d7a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436419e2-5dec-4496-b16b-af665284c8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c5dc1ba-e71c-4ad1-8e55-4894c3af61a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88611c4d-0663-4571-99c4-b13dd777c377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5247dd5e-e29e-4f23-9a6f-96aa223130a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3b12e1-3436-4e4c-b58e-38aae803ce93",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ab1a1b-6948-4fe2-9bba-4a412323b007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc06087c-405d-43ee-a70e-10a88cc93ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3628e3d-c889-4ea1-8436-8656e541f980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78483330-c447-49e9-9647-1544eba1c08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed6cd83-7605-4b75-ae8e-6a222a16c64e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2a1184-93e6-4124-a07f-cd3a4e99fc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4916f5a-af31-4598-b10e-9ac1e537523f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04dc79b-8de5-498e-873c-a09d1576e73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd631e6a-91ad-439f-b0e9-b79cd781ce1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cc9257-344b-4dd7-bc38-a509e3541ed2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4c7cd4-603f-4a0c-8e9a-7fd39b19e96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c6ea84-1f54-436a-8f1d-acc1b2252e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75026275-2190-4031-8d80-283db8333279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8b65f6-4be1-454a-a034-273837f19c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4805257-9dca-4adb-bede-780d2771d66b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb447016-0e56-4725-8ed1-0a5e55849c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd88fbe4-bf75-4397-b46d-bd4c73c403f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36b2f58-d9a1-4d28-9b31-68c0bf2ed19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a136e0-2970-49d1-a705-af2aee98fc23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b41723-99bf-4f67-83fb-e28f835c590e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef1b954-9350-485c-b863-e51ed1f4d7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2063314-877b-4e99-bab1-24ff5b4371ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b73f878-3a32-480e-af61-36246a3529e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "321265d9-536a-4e70-85c5-f3879adafe39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b677b65-6f77-4600-990c-e9f4724eb375",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22555260-5781-4d3a-ad1a-1dda05cb7ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d891627a-faa4-40cc-81c3-6d4bb7c96323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fd25aa-faba-437e-8798-f5b1830c02eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef19855d-c585-4ea4-b76a-95663e358843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e909b4df-d9bf-4d4a-824f-640a935e8cac",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15760ea7-2392-42b9-981d-1a1ec080b1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b922b341-171e-474e-afc5-88073ae3e919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cab50f8-4cd1-4cf1-a9db-d902ca334c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93faa5fb-14cd-4bce-93fe-c8233e43beb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1248f506-704a-4ec4-ab0e-70242d01f07e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d08aa8d-baae-46be-bea5-719407dd609a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5daf9bc1-d87b-4323-bae3-e9a48f4761e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8969c169-4067-40a3-b545-f36cefebd9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee49ef6-a0b5-4387-87bf-e7811c738484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639ec720-2326-4069-9cc0-fbc9cdf2ab86",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8f8c93-7c6b-4f07-a645-9e4ccf508e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d545cbb5-8855-4825-b6a7-b820c9be5792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e712ed31-e91f-4327-a918-4837ca645dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b1841d79-bd3e-44bd-9fba-681717ea84f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0774a211-806f-4d96-aae3-def66967c174",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d1ef8b-e836-487d-89bc-6848dc8dea03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f566e5f8-febe-462d-9ea5-3ec56fe7586d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05ccb40-acf8-43cf-9e7f-3e3f8a0b29da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "43c26f4c-d9be-4b32-888c-1ecb59cea4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6e3693-f553-4b4f-bbd2-ca5b96cdc9df",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb750680-38a1-4190-be0f-45980a11df6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0461fb-c3d7-4655-92c4-dcbed3ce9984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64af1271-4a53-47f6-ba05-65e95dff13b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "20acfa00-3399-4cbb-96dd-8b6852fc57be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f21dc6d-0f2c-4a0d-86e4-6a07eccd2cfe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddc6a9f-5d78-4633-8eff-c80bd3854d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82dd29d0-1417-42a4-9da4-dc352dc7b86a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d85e3b-5d87-4c73-a889-e9919a10dc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "01ba97e8-8273-4b1d-97e5-cc8bbbe55cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18dde1c1-234d-4bfb-b9d1-04f7c3b869c4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90ce64a-9437-44a4-a85e-d3886971a208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d0168c-e429-4e6b-bd5d-5cfc1ae5b5c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae20cd77-386c-4d88-b5e8-efabd00ef59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "516c0cba-5dd3-4335-b1bf-44fde5f1eebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01751f89-05d5-4a42-906c-9f4433ad787e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2867435-d573-44b2-b6ce-f7ba1471954e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff8049e-4094-4408-ac6c-907459cfcb79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16623a0d-eea5-4d80-a433-8c05d1a90ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "163c9b27-e492-49a9-9f55-5fca3d2b92ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f63a98-9d52-4d4c-b995-e22d3e7121d1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4275a0b7-58c3-4a80-b4bf-d687fa4179d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b7b1fb-46c2-45cb-872c-cc6604382e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa550ef7-2a65-4722-aa0e-2338f1f6cc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "45616752-8443-41e9-a165-13aeb772ab32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b776cb-65a9-4d6d-b449-02102001c3d6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013875ea-b724-463c-808a-ff3a5a7c39d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e77bfb-8eb2-40f7-9d8f-8a2b4ea22d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d5ce9e-2036-4e2b-b302-851770622bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0df8e23f-b08b-4510-86fe-116a749f9c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3c401f-0ff7-45ec-98be-13a46acc7f06",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4319a3-e100-4bf4-95a0-6145a6b303ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a2d58c-ab76-4488-8122-ef49de9fba4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97cc8a0-dd68-4b1a-91b5-c26555e3ff1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b232f50-7c19-415e-b3d0-2d9644ed5b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fbb18a-7130-4571-9548-0af56661c2de",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4574b68-6534-4fa5-91d4-fd28cdd9949d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2578d7a1-cbcb-4ed5-a3bb-8e9ea966cf53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903f868e-d88d-467a-9737-3baae10549d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09237e05-64a3-4827-b0da-643f3f57f208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcaf0f2-9f31-4a61-b619-1c5ec6da0901",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb750cf-f483-4f8e-acb0-5208a0e09cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931345f7-d11f-4d83-9abc-726272c9c554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e84001-794b-4608-8d41-0e04ce331c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6aa6cb1-2d33-480e-a455-116ed5f07800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fabcfed-6b9e-490f-81d3-fa1e59dec8c4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bffb401-9eb3-4ed3-abca-a238d432724c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ddb83e4-e5a2-4bb9-8918-29ede450c518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df49e72f-db24-4090-b7c5-ab063944e3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1570161-1df3-4c5c-b072-8d4f1565d8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193004d2-a4ac-41f0-b860-8c5156aa2f32",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e4e27e-98b1-4f1c-92ad-14b15c6f58c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793a0aff-e68b-4852-a336-155dc3c0275d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c49689-b801-48f0-b52a-03bc1b3a0795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "004e1d3f-a34d-4e87-a03e-7c7bf52ae91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5f3f07-f13e-4599-96d8-3085095ec627",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc04eb7f-aba0-4985-8589-356f3307ba49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe43a260-520d-4e71-95df-b938adf8f011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934905cd-063e-44d2-8eb1-f4a08d87cb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "43db10dd-56b3-4935-87a9-b3880e3d128a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21ef56b-da08-4f81-be83-e3925fa87cd3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddcd01c-341c-49fd-804c-88ec9f6818ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48391c35-3756-4002-891c-8af855dcc359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be69fa71-2bfd-4155-b35c-4b49607f2194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb935c0c-9ed2-4b51-82e4-b0d4d86b379f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af450089-4a13-4362-b7b4-a9a8ab97591e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807df6f3-b9d8-4554-a95d-b4625bf1ab37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9622873c-3076-42d9-8a05-c586019cdac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05fdcc0-3392-48cb-99b5-bf980c0de06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49f6cad1-7c5a-41be-a829-1839bd94c9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4923bb-175d-4a90-b370-1d5b92478e32",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312a4f4e-3c61-42c0-8bbf-09ac03197dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0f214c-3028-43b7-8cb8-46fe81ecad3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dc553b-8318-4a99-98a8-f1b5923327bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8026e0-3755-4bdc-965d-f0d2f3d3742a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a250d9-501a-4d6a-a4c5-3d9843612efa",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "147d1eb2-b27f-4a74-aca8-a3175d2d9333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b4247e-2511-442d-9f3f-5597197a5e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58da4b80-e4c0-4ffc-82f6-987ca04007b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc746d9-bb22-413b-afd2-19dfbcbfbe09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375beac6-6d6a-4871-9f09-c62740c002d9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9ea116-5ac1-4eb5-a8fa-d673d54466c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba8822a-9236-4ad2-9666-e7551725328e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a441fe-1dd7-4e17-93b8-7e92ce94788c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4a60f0ea-6aba-4ece-ab4d-b3562a4bf04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03046701-fa60-41c5-9ec9-353438035a48",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e860bf-5103-4262-b9e8-a8d8134d40e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5305a95-7b66-488f-af1d-3f5afa289509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f91db73-56bc-4c87-a326-9d645eedc9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a718f8bd-94fe-459b-a21b-e19658ab237c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb1e8e7-115d-4a20-9b98-b84ba4c53978",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033efb1a-1163-4dfb-a9b5-93604d45cbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f496aae1-e8e0-41e8-84c8-ccc696d55b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e84004-0f79-4f1b-96ce-1bbb8c52eb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec30368f-385a-424b-8cd9-1e10e9fea1a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421f368a-f43f-46c0-b2dd-372396e12905",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4450e1e8-d080-40b3-a9bb-a23844a534da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c80309ee-8211-4fa7-91e6-0ba14c6279bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2a16ef-74a6-45a8-a404-beb514edf6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa49430-ade6-4eef-b730-de540a036949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b906a8c0-752b-4ffd-b115-695c6f8ba11f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75604bc-dd14-4033-a437-bbe87e1cd5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32bfd676-0bb8-4b1b-a9a5-00dd544e98ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cb52b3-0f5d-482c-992c-564fed7dda68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c5635ca-e4fd-42a3-a92f-40e20806ba64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74a9956-9045-4bc0-8a6d-1c950f0eac48",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5827f23-bad9-4d7d-999f-7d02d187b665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5f3a1c-bbda-4afe-b12a-0f103fb961ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fa4d9c-c896-4d3e-ae07-9c7e3f1e3dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7fe5a08-bd67-40a2-ae90-35a28465fffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c744635f-c5b0-4edd-9701-49fdd4d2487b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc1eae2-94ad-4fea-9b6d-9d14799d3246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef024ae-bdf1-48af-9f69-7c19c51d5d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43cabdb-f9b3-4a63-a0ea-5c166302fbb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5909f3c1-1fd0-4d4e-9d71-1ff9707bef29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cd4953-1b16-408a-931c-9dc54325d66f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0886cd03-e21d-4f99-8aae-18a2cea3c103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38dc1896-5616-4669-a815-a91038a17bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f98894-2c14-47dd-8880-ff0a245aa056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "00117f80-b704-421b-8c97-766cb30d6e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78be5d1f-0f54-4cea-b302-b30410c07767",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9efa74-e29f-459d-9422-675f50feb767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a191b9d-dad1-45a8-bb19-125c42eaac62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3dfdb2-4861-4b30-997d-6397072a1008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e45cf355-5fe5-4f8c-8529-e26d06487b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07d333f-0651-4ad6-9ba4-6217002f66d9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1dd5cfa-d539-4d02-90e6-d6b0fb04e576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4d76c6-7008-4a23-9fdb-277c98750c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d835e6-8524-4a5a-9b77-333e20381b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60e2ea9a-36f8-4717-b405-9e5eefd35b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdc4906-2d64-4571-b755-09c82d5c698c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bc78c1-e1e9-4ab5-b950-2d1cf82e5710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc70560f-15d2-43e8-b827-9d9d641e5210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4609539b-00d4-48ee-b645-e444c8686d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb1e480-f535-4192-8d44-b77e9f8005c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a740227b-cfc3-40cc-ba13-16c411a4fde0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38ea10b-9bbf-43d0-8c6d-5b3c64dbd2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee7b100-1b5c-424e-8718-20c95cd59b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb81516-1f73-4f95-8e82-aa3f1275e597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecd4c74-ac86-4244-ae7a-0bfcce7e14ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca083ab-da5b-49e4-9fde-8259b64412a1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404b3827-63a1-4219-ac8f-76a4de455f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fddccab6-7c8a-4f8b-9988-10f73f1e5f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85365e8-8762-4807-8f57-24fa8b24e8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c3ff860-e79c-47d1-bed0-0e6244e935e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac6b3ad-acbc-4e04-8268-b567b2c47e8a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbf5401-281d-422a-8b7a-6da39311d2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b787a6bd-6a4a-48c3-960b-7e32f4e0f3e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7c635a-b0d2-4233-bc65-454f2c9d9a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "be8cb8e2-179e-4659-802f-38b41e7c5593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d28c95-e0c7-4355-853d-f1d2d8c4cc74",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c23e4b-dd28-4260-904b-604cda35675e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40bb2a15-c884-46ad-9b9f-b76c210820c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58035808-611a-4ec6-9b66-cb533e989063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "caa36452-c1cb-41f8-8218-7dd2cdb0ee90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17114e00-dd29-453d-a2aa-b65adca33d3f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0174200c-55a8-464e-ad99-6860f488cabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffffa8ad-f262-4a72-b289-ed99b2123ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6562619-756b-44b4-b09b-80b0157be173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "27945d9b-776f-4cc6-adab-6d124978135d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b833511c-f3b3-4c24-b8a0-07bc48aaf9fa",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced202f0-abfd-4860-8e61-a7851277fa70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d213c6-9ac1-4063-ae5e-5388cc7cdae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90ad4c5-1dbc-4478-b09e-d890edf1ca9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "751d86b3-7497-4a24-84c2-4856ab8f5881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4641c255-c9d5-4db4-967d-1596bd263d18",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e23da6c-af37-4577-bc66-61bd6bc563a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1d9deb-1bea-415d-83f9-cdf10bd18437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2696236d-88e5-4408-837b-41e73c611e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ea5188-cec9-45f7-a81b-aad73b97d0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e58c730-b45f-429e-8b5d-4596022e32ed",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bed65e1-2af7-436c-bd48-b916b29be073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "34048883-5946-41eb-9df9-34f705a8e225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea586876-c0e3-4729-adcc-c4b600fd927b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b702cd2f-6ead-4375-97c0-afdb780242c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "74415cee-8009-47b5-bf1c-e498c4cfdef8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c3f16db-7c2c-4c69-ba23-0af56dfd8824",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8038076f-eb4c-416d-a18a-2f2bfc04b350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48e7d6a3-2eb6-4569-a05f-51b70bda5e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e814d87-d3be-46b9-8962-8a115f285920",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58aa6744-4bce-41ed-b2de-d735c6851ef9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dacdc96a-c313-4787-b1f4-c32c02c68c1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2969c785-bfac-4a97-998f-dbe1acb8a07d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c64bc8a-e25a-4e35-985c-631c7a3776a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28829664-a607-4618-a97f-452ed92513bc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eaa8ea82-5936-4a02-93d2-d77864743618",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ef44fc28-639b-4860-a39a-a5ef0da494c2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "53b33566-af87-4fb3-ac90-361ce7991171",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1565680d-0a7c-470b-a57c-b094a1df7466"
                }
              }
            ]
          },
          {
            "id": "2c8af24d-9b1e-4192-97b7-f7782d28db93",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c70594f5-961c-4c06-b198-bedfbc6f2479",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "2a7475e9-5784-443c-94da-13ee811a3e99",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "609453b6-1f3c-4202-986b-db013ad40521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7c1730ca-96cb-4108-bb81-8fbed35becfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1398ed32-a89d-4258-9838-ea120863d924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a852403-f31c-4dda-ba7a-91c697c354a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "18db88d8-2e90-4286-bf15-ddcf75a4d182",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c15572a-8102-456a-a178-a0c42d12ed23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "841c46e5-532a-4886-9cda-a147becc5fd7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dce46e59-8a48-45fa-abdc-9df6dc24f572",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6996cd01-7813-49f5-8a0a-42ba658fc4f3"
                    }
                  }
                ]
              },
              {
                "id": "5c032f37-e49c-4bf0-9b0f-fdc27a55543e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62c56c16-0847-4032-a007-36cbba8491d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "27e5261e-e64b-4a47-929f-87fcf8d85756"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "186ba830-c904-42a3-9d2f-e6acc80d565a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "000ea81e-faf2-4aac-afac-6bb3f155a825"
                    }
                  }
                ]
              },
              {
                "id": "b312bcce-a039-4884-8764-2bbd7e3cb2a6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "858286b9-1eff-4263-bd1e-3875fca4e0cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84bb71bc-363f-484e-8fcf-dc694e4da958"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3162f18f-1a31-4b8e-ade8-18d5f6923c6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b649d68f-67a9-4e73-a2a0-21157edc4752"
                    }
                  }
                ]
              },
              {
                "id": "78ac0d4e-ed40-465a-9588-dbabdd8c07eb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1864932e-3899-4045-8aef-cb85922aa769",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "14e017cf-86d0-401b-bca9-9e6eaf19a4c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67966a98-4ecc-4487-90e2-d208b5912b3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6810e1ca-8427-49ed-93e1-ad8b8b38feff"
                    }
                  }
                ]
              },
              {
                "id": "3be2e357-57ed-4c1a-874d-26cdeec6bb58",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0917545b-bf3b-4b46-8351-ee4d863cb906",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7437f25a-764d-468c-87aa-1e8c5a2594e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0df1c77-c529-40f9-992c-09aecf899b54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0ff743b8-786d-4498-86e1-d6d78d13ce33"
                    }
                  }
                ]
              },
              {
                "id": "7c30f0de-ea29-43c0-b985-f74a4a33d600",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59d8a01b-81e1-4cf6-8861-9d56f97311a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6d9aaa0e-9118-4465-9613-5e9c2d658996"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2353fc65-9163-484a-8a1b-a256609bd7a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f3d33f4d-3245-462e-a36e-e3e9ca93584a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "314b21f3-58c0-4cdb-abe5-479dca179816",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1bbcc206-9e1c-4ab7-9226-b4e4f9cfc87f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9cb132aa-c6b5-4a8e-9381-192f7860df3d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ea198ed3-99e8-4845-86b2-3f4e0dc8ad5c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "503bab2d-0fb9-44a7-95fa-501bbad54a0d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "fb6f3801-435b-4dee-ac7f-e924338c3999"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a1bed90-6595-45ac-91c9-4ecc6d60e223",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "888fc703-33b9-45d0-9d60-6e401be848ac"
            }
          }
        ]
      },
      {
        "id": "323fb75b-e46a-4263-8f9e-adf40adf0664",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f5c84f54-7dbd-4f5a-b59d-cb76d7ca98a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "97468d08-5584-4a93-a18b-4ff85def6da1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cc5fc3c1-50d8-4dbe-8680-49570822f971",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c35a4fc-cd0e-4cbd-b0f5-1b1c1e6ed604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f8faf9-a283-4744-9459-d2f3070cd247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0161c768-a7ba-4101-9e7d-28e1e13ae5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6562073b-6ad1-4691-92d2-926703dfb9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6fca48-5548-49e2-b5be-f770dc7d7d54",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdfde67b-9039-46fb-ac65-997f31181ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d91a700f-1984-400b-91b7-fa5080d7986a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a39f38-cb3b-49d2-a111-15dd267563e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb39b239-3260-4860-96b5-1ed0e926aa20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2f2468-c294-4d6f-8890-be94e17ca2e4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a123c934-e04c-4c63-9be0-6c01ca9acb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfea0282-5372-430e-8677-3f73ce06108d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86f934d-bd50-4c3f-9eb4-573b16012a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "205fbcd2-0bb1-486f-a1a8-2fb48c83eb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bdc8a5-3b9d-454e-bef6-0e0dd127b682",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727f2357-0e24-4c66-9feb-54c3ca3a8464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1fbbcb0-06eb-44a3-a717-b653076a9491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5966cabc-fb37-4cc6-9bd3-180358d82908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4661f3d-aa61-456b-95f4-4a5a133f556e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbc8f74-bead-4ff6-b326-47eb99301cf1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40f9484-68f0-4080-87bf-8539d861173f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad159364-e731-4bf6-9ddc-12f9fb0a35aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0aa801-3fce-43de-b59c-93fe2d8ea853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c961ff3-8966-42f1-adfe-06010057567b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf0618b-4b7f-4764-a49a-a9580e2af60f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9fb21f-0b2e-40ea-90d4-efd5584a4eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c597ede4-cacb-4a8f-a198-909c6589f11f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8179ba-8bd4-4c96-b779-ccb7afb755f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "65abfcc9-07a5-49f2-a2e6-130a7124c2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c34d8d-3f26-47e6-b88a-496f1b209cbc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6609e35-1fa8-4387-9596-657a20d8664a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b175ab-2fca-4e5d-9fb9-e02e560f71fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6129bd27-92b0-40bb-9488-3a13924ccd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e87d2ca6-8478-46a3-b242-fe5698980bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1e73d7-793b-445d-85ab-24e7d006e026",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde8468f-83a3-4a2d-a7ff-3e9a98a3e0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78362240-918a-4042-af32-34656ac06e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f3e8c0-f90f-482a-8036-c5cc7b1234d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "046f7030-680b-48de-ad61-0b59f46be8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc3f332-3db6-4798-bb6b-e82271e76bbf",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b816925-b34a-4d42-bd25-9f5f37a9af81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9fa023-8a33-4fe5-9147-b38f4eeb70c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a6943b-cdf2-427b-9fcd-6a831c7b4ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fcc3f72-219e-45d6-ae65-ba6d9ead7235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5030c883-a7d7-4b40-8c9c-8a3383101c5b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2648b7e9-debf-48a8-8ad3-e532eb65bb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473afc75-9133-4863-86b1-3eb363b627f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5e02ea-c0d7-41e8-a9c2-32c30569b03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2a6e9a-d6bb-46ff-83c4-8bcbb3379d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c56482-8394-43af-95c1-da9778fbd9fd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2548f95c-bf85-4931-b0e4-cfcbcb665525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c653a7-ef15-4673-89ae-fedc998ac561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcb474f-8866-4f23-b8f2-4374107cf054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "52ba0cda-1810-4c85-aa0d-4b45c061d69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f95cdc-668e-423d-9c48-cb3f17a58f5e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0877677-da04-42b3-bd97-d4aa72b0e36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee73a0b9-f5d3-45dd-a167-514027f07a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ccea903-54d8-410e-9e0d-6b838b78d288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47f20791-d698-4610-bbdc-385b38a2714c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e0673d-e16f-4b7d-97b7-1b023e768ad3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d68c6b5-42bf-46a7-a710-a5c7c58e79a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5749942d-5511-4e3a-b7de-06b1ed1a8e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160e29b2-1ee1-404c-8475-a397b3466d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd9fa07-8ac4-47c6-a00d-0b9a61049992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66be4d6e-0314-45ba-9377-0ca5d2d73c36",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af6fe2c-29f6-46ab-a0fc-5031484be0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d0308e-75f1-4e89-90b4-923f71b6a75d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26b65cb-83cd-44b7-af8f-8b55d106388f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "98cf1056-7d45-4560-a55c-1bbaf75dfa83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752a6344-920f-4d03-a789-61a3ded29841",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68ff6cc-157b-4bc1-9ba9-f7cf70e65f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b245df-8f75-4362-8b54-14e7938a5f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503c9a58-dab5-402e-a0a4-9a3d0d5fd860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "93f4f31b-8eb4-4dd5-89e8-23facdc8bd5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e52dafd-a1f4-478e-9200-a838f32e75df",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46136ffb-7c0d-4a89-8432-327b9bc1d997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "665d2087-001e-460f-98e1-9da1cd4226c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1b9561-8c89-450b-9580-e0c80d3e8d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8efd36e1-49c6-4c1a-87bd-f4e84f665821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5992365c-36f6-4b7d-92ca-9a9f7215ffbb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551ecf5d-eccd-4e95-8237-0a9bb4d6af51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40174a88-38ca-41e5-9272-562e921c2a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a55ebb5-0ee7-4ce0-bcd6-c397db463515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "aba9e9ed-9216-4003-879f-103f53f330f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b0f0f9-1094-406b-a069-2019e0d8844d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40afe36b-d96a-48bd-a2b8-038931adecdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e8b24f-6dcc-4f77-ab99-cf6f3f8e23f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcc7000-372e-4827-88c8-2e8bb7ee648d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3c5581-c443-4c40-a4d0-2b06496fbce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37835d5-69ae-458c-b2bd-6744db412a52",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1d52ac-2ec9-433a-a513-26b472370d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01f8461-1e34-45f9-b93c-e879bf88f6b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe216a82-1ab7-4e5d-ba2d-03bcbe2c403f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c8e2c9-6960-4a47-a922-2940fc9cf906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d62813-fa05-4853-8ba7-ca39802aa500",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac15a489-b5c7-4d82-aa75-4aeb0b8a213c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f829363-bc38-41df-bd64-d0209ec7fccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05187f8d-470e-40bb-b7be-f39e0701d5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "298ec8ec-bffa-49d3-a5c7-0e9e262faf6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83fa6ff-6e6d-4c26-95df-4d8fb82d6c59",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6371e498-0930-4dbd-8735-d99400bd3b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1dbfcbd-1a54-4531-aae5-dcf5d10b5a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca7df5d-5fac-45c4-813e-1c6f373ec0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b382933-3828-4f62-9694-c85572c58299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512e3f32-cd3e-4f40-bfd4-3d55a6ff7d2e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb24125-85e1-4076-b640-92d7ea00ddad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8f795e-81ae-4b80-bf45-e864c41b3ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709f58c9-2ba8-4ac9-bf83-d56e542d0362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "844c4156-2b69-4e87-abc9-4322a491aa71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9df6a59-186e-4da4-861b-05600d7b0242",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cddf43-790c-439f-823f-661a279eb8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "debf896c-0dad-4530-b88c-3e336daf3ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d863bc6-0939-41c1-b8ac-6a74bc234e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e15f413e-c861-4f4d-a633-488cf8fce7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5c4a69-00fd-42d1-9aea-e09efb0d2883",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6581be71-b83f-4890-932c-acab68704c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6caede54-3810-4316-b191-47125cae842e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62369f5c-094d-4d19-a3f4-abdadb8c6c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bee66aa1-974c-4350-adb0-f9b01d0f9df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec97bd34-9e87-43cf-9af8-a0458a6b01db",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c06c23-2833-4a88-988e-8176a1e006d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e40ce9-72c2-4e9f-95de-5bf91da477d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257fba36-4913-4b21-964d-2bc2a1b7a1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d47b59-1cb4-4183-8e1d-d56e78a27bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a7254d-8821-4f37-be7c-2380c896012b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313730d4-5f79-44c8-b35a-aaab6f52e4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d862254-148d-4689-875c-6b440ec8d777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a503fb1d-5d4d-433d-af94-090b6b023dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9409af07-642a-4255-9862-689a20c93f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a176ff6a-d230-4ef5-b3da-6e81b6c191e8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff2dd1e-5a3a-4f2e-9fbd-466c481ff916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2423e351-0fcf-42db-9e8d-760ec4304270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3966721-4250-48e8-8553-ac934e2573e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5b50bf-4180-4b2e-9f4e-82d49b88ec4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39dd956a-9c96-4daf-8179-bdf80a4dd126",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31e9dc5-5a07-4225-aed3-a3daeaba20c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dfbbc3f-4763-4957-a122-b6c3e8c38c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c856865a-557b-4923-927a-1ce8fb01f2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4367a790-e097-4917-9092-98972b1455c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a071e68-9a6f-44c3-bc8a-858d4f8fb620",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb35f946-13d1-47f1-916b-770e7b2e7575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7fdb7d-bed9-45b4-81ae-aabd35f92257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770b751f-2993-4106-a6b3-e13857f9fa79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf6f5239-63e4-47bd-9a47-2d6296ba50ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75cdd8dd-a166-4592-b302-c7f8f8db1243",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f588bab2-a2ce-4b49-acee-8857313c6edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b787b9-d705-49a8-a06e-46ed8f31dc61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ef302b-4038-4115-84a7-7bfccefac3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68323af8-37cd-43df-8780-7719fae620d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c4f980-e3cf-498f-886d-de093cc67fc1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2261129-cecd-4236-afd8-2efd7b04b041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e8b68b-75f1-4b03-8766-7e728b4ed4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1b1000-31ac-4e51-b1bd-fa30e245259c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9405df95-2b65-4f86-8ecb-ac705eb7f89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954ee0a0-d160-4009-b8fd-7d240552e9da",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c04b784-ba42-440a-a241-f51e86816cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b20f848-bfc3-41a5-bbc6-8a878b78ace5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a92a5ca-2d78-41d1-8d90-9acd2893f458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "849caea9-3066-47e9-b30b-9894c7fa4772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5921d297-a09a-4d91-a00d-c25547b9745b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d14500-b94f-4830-85f3-705615436a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76555094-e085-44ea-8574-c730bec367da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb68925-a1b8-4e18-867c-db54ed9435e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23c2f0a7-55ca-49c4-bcb5-9c49176cac1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2deeebde-e4f0-46a7-b06c-de59311ecdb1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23fb7ea-47f5-46d8-a0fa-b7d4cb8aebf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ce7dde-2f90-4970-93dc-ad2a83756d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c00e969-af9c-44c7-969e-7a5fdabe971d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2fd7ba1-1d2d-4251-a025-4bdc79c94265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670681c1-1237-4b10-989b-709a2e935675",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba58bc55-6d11-40ef-892e-0861d5310137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5c6d6f-267e-4b6f-b30d-4b18da2cd27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f32dc34-64db-498b-b794-b4e81e3fb697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "454a70ba-bc58-41d6-b2bc-8295634a7b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286235d6-f9c6-4b6a-b158-3b6b838e1d88",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7e195b-5235-4ebf-9249-2abb0adf8558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2f527b-a72e-487e-8b0e-f4a92cf9137f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3abeed4-2151-4359-a9e5-20fc1424b60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78fee86e-cc42-48f7-a5fc-cb168c7b773a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add5fd9c-10d2-4595-9afa-7472b3da4fc3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe794e6-83ab-4364-aaa4-6305b7fb41c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c855d6d6-2308-43f2-bab9-2db8f3199c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde78c21-f348-4b07-9a5e-0700646273f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa51043c-98ee-4ed2-b1e6-2ea766be1db3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "997c7f6b-1ebf-4863-b162-3ffd4738af59",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d5f0052d-3681-4fa2-b665-6cb12e1f599c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92dfcb67-3fe2-4526-bd61-5c163e53b306",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "473f62e4-d9fb-47f9-95a2-946b1668786e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3192682b-98ce-4fb8-bd64-b9f5095ea11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "900ea12c-3992-4e2f-9076-61eab331fa5d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94fbcf2a-a740-467e-a811-9713a27180c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a971fec-f248-4273-820b-8c7320923f55"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4d01b4a-9e3f-4b01-9bff-94c657577bdc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8828f00-bdc3-4ec8-aa0e-703a634414c9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7bc32b2b-84c8-4bff-a69b-1fb122361574",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "28d2a81f-8d34-4cf7-9ad1-46f8c73582ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30c48724-eaf0-4f05-88d7-dd53b9c687a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f28cca35-a886-493d-b513-501de6bb029d"
            }
          }
        ]
      },
      {
        "id": "caabdbc1-c395-44c0-a422-bdf9c152ced8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "786bbfe8-d375-423a-ba4b-28ec7ee5527f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3eee7123-4457-4c2d-9c01-91cfd784c05e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9db3953c-6f68-4f36-a923-79c5e8dc0079",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf672d7-2e50-424f-8979-8200f2400007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79893ec-74e3-4709-8c80-fb76be95a5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cb2272-b7ee-495c-9b1e-f0191d622e3f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f54c77-df92-47bc-94a3-1741b7cf7613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1bd0212-0c27-4bb0-9ca4-e54155755513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c3e2ab-6a8f-446d-93bd-a420995dc03f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "297d6650-00bf-4761-b8a2-320f7668d22a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15fe8408-12f2-4fc3-9b6d-eab5ef2db915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca7d85d-2bd5-4ef5-9b4f-bff82c4cb3b7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f7b5b4-3275-4566-a3f3-19580d82a466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f17db7f-66e6-4fa5-9c6e-7b4fc4f98ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53368450-0055-46b6-9a35-73b97183e0db",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc1ae30-32f6-4ab3-b140-3d3b00551547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11778d6c-63e9-422e-809f-919c2cc8c101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5633371b-ecf1-4451-a472-2344fe6e27b9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205760c8-ca1c-4240-a029-cd411fb74269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6599f104-7b66-4470-a833-9e98195bdbe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58bd8da-4674-4692-bf16-0bf13ec7baae",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ee357b-8e17-42d0-a87b-1205eccca25a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b52bb82-c6ab-4a98-ad61-c3968c8dce70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca8cb33-77db-45fc-82c4-92a9976726ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c513cd41-28ca-4e01-bcef-48bc388dd4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9693eab-92bd-453e-bbe5-8b93eccde057",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1137edbe-bcf1-4c01-bd5a-2d3e033197e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3da27a87-0d4d-42d1-b1b2-25d619c2458c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa1ae22-1f94-4384-97ab-471a48999145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6118716-6764-42a2-8089-d162a1e8b477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5688633a-17a5-4286-a1a3-10c25b7bd72a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0050c70d-4d94-479e-aa3f-f0f385308320",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c65d54e8-62ea-4211-aca3-9d2614d97626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "717cfcd9-2e09-429d-b321-79ed4bfe23b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057fadcf-e7d0-48cf-ba07-faae2967be61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1b119b-9336-44e7-8dab-09eb9772204c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e1c1bd-c131-4967-bb4e-9d9592b41c24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5d38ca8-2640-47a1-803e-acadc3abcd9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ef1d5e-c845-4834-8b98-710a63f79314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174ac72e-9d67-446d-99e7-6d41a71e78aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021a3cca-3784-4e4f-92b4-0c021c52679e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b7c215-a21b-47c8-8be8-64ea88794aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ddca55-440b-45e0-9ad5-3d2109a0a302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1563c270-85e5-4b44-8be7-a01f29015ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc019c80-27cd-479a-b32e-db2f05183fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0260bdde-612a-4c91-aa7c-46c711e18912",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c2589b-1e00-4fb0-9728-6e8a8ab92df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9535c514-abfe-4965-807e-6902ac9f8bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af7371f-5f1c-4c9e-b2dd-6d620e3eaa27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1edeeb86-08e9-40d0-9842-052b9adf8761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0da4e7-2711-44e7-8d41-966dd2edfab7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b99fc0-bce3-4661-825a-d5c1cd0b8051",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "036ea471-76ee-4998-bd9d-44f43eab3748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0974eea6-bce3-48cc-ac21-764f8d409723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21edde33-aaad-4283-8b1c-53842bd92654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ffdc033-82aa-4798-b571-34435b56e7c6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c247a4-9f40-4749-ba36-2449a42976f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4534462-02fa-4347-ac8c-d853d7919d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f416906d-7d50-4313-bd98-ca299a6983aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee880f6c-562f-4c77-b96d-4a7745bf6ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8605721-2085-43de-8a7e-cb85914174c4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4046a457-01f6-4acf-ae44-fe768b87463f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03f429dd-d4f3-4567-83d0-2c9c949bb066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fec75a2-b3f6-4e32-b518-eaa570e7a814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d1ae8e2-6547-4933-b031-5018e4c1e759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f53234e-01fb-4685-9ad2-01822a90b6ec",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311bcb6a-cd84-43d3-906f-0014ad9a220e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2037e2db-05d0-4d05-94e1-164bfd4aee6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e1ae71-a0f3-42b3-87e1-48ef61b8492b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f88536-36fe-4bef-88c9-d8e4e92e1b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fffd748-9b91-43b0-b4cd-034a336a0cc0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46349057-b252-4faa-af06-e00b60a0c5ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd76e28f-66c5-4b94-b273-3f492d437afe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb43414-563a-4ad4-a891-f9cef040f7d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953c9c57-28fe-4a93-bc65-8095c99c5e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292d1457-d41d-47cf-8a10-b5a12cb6785c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa797d02-4dda-4f39-adea-2e4085e1ec0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a58bfc6-b3cb-45a9-a282-9dc9069e4cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ad041a-dfeb-44f2-90ba-2cc9dc4bbe42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66824590-09ad-4045-be5a-271ec3fa0c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e6e1db-ceda-4ad3-bf0c-6309097e764e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984e4a9f-51a1-4a9e-8511-ce42b4aafd4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27aa46d-18ae-4c58-a64b-6f3a70b40d69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37171231-7235-4e7e-94bc-083cff69e696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522b58f5-e7ea-4fbe-85bd-4617503bc5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c3d6ed-c616-45fd-a868-1c8ac4c7f65c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496723f3-e589-4356-bd02-87cb5ebc61bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f55e5a4-2b54-4b4e-a989-c0f140dbb71f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "042e1bc4-7140-4e51-b954-592e4d174158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4dcab27-883b-4516-9c53-32355b136dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b038b274-24cd-4de9-9d46-068bf909cf12",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28e3bd9-a24a-4e09-80b5-6ec819b2fd8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09323fd0-8e2a-47ff-a4fb-03395bed973a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1075080-39ae-4c4c-9baa-e35a17555f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57eab880-256f-46b5-ad28-b0cc0453f948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35aea741-7734-4d22-930e-0fc6536c32f3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1877e635-93f6-4c8c-8ccb-7295d8476e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd3413a-0be6-441e-ad4a-074f037bd998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad36ad4-f792-4fcb-aca1-f640a3d6ebde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ea6db0-cc25-4e3d-8a7d-ceeb30d1585a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0706659-4628-4790-aaa6-47d26a3ae8de",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9df056-a3d2-487b-b26a-ff7a37459383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d99c025f-cc04-4a87-aae1-1864f4af2fbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "060cca0d-ff94-445e-9d3d-73b1026bf133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e61157-d989-40a7-8357-0b33deb6f89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234c5786-8dba-4b25-a658-02245b4a3685",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb13d3b-2eff-4787-8d36-8a47348950c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09672dfb-ef4c-4107-aa56-e7535508f736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c534fd-7ca7-4c09-8245-1a33f58f8f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f986f4-3769-4ae7-9b01-3b6e16b80e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d295d2-e6bf-4d4f-b3f0-9846a41e268b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1892da93-4d5c-49a8-8f9c-0ef34df22163",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51fb8b71-0880-4a21-ba7c-684336955d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd22cbd5-9bf4-4776-8805-4c72f82d5bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712a33a9-cc56-4627-8c31-83d1916fca26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782e17f4-59bf-46f4-95ad-f586b1e61a1c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef07c57-dd43-4bca-a0f1-59912f65a6ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bc751e3-872e-47a7-92be-76162709146d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c21e6c-dcd4-4684-b937-5cf1b7aafcf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f363f318-c345-49a0-8a5e-69359eeb955b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbcaf0d4-035c-402c-8017-fde59cac9dc2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70480efa-7368-4805-afec-667b7f514a70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbef2694-59d8-411d-a644-4d11f08298b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4eed39-abed-4868-bbd5-1a9d240a4e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c61a087c-7d0b-4028-b5c9-abdfbf612379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611d7895-1aa8-41f4-8455-e44d9657a8fe",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948ee7f4-9843-42fa-8b04-61a89427dfdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee563ca-feca-463c-ac48-ac746958121c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad20d43-0e2b-4d6f-b595-15759276d8da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271246d5-4661-4b41-a248-6c9472b3388a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9167a8-f4ff-49cc-b474-58d4d3ef9887",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b0e905-9877-4ea7-a6f3-5c83e895ab5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "691d29ca-4524-4335-8a1f-076199ad35c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "059f69bb-3a7b-4e41-8d56-8a3563ad4634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10acb64-295b-441f-9545-5559f5d0fa3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53527a50-b1b0-491f-95e8-84f6e83d4f54",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9307dd37-f3f2-47e1-aabb-6bc998459473",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "724c177a-2e14-4bb0-abf2-e35c3d9856c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a659a5ba-0ee2-4502-b42f-ae9bd64cf2a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a593c68-279d-4483-9051-e7833e65af9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1d9df6-b518-45f9-b9cd-9556c3aeab4b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e668721-b9d5-4929-993d-abd08821cb90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb2423a7-2389-4640-9cda-342898db89c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95747c2-e9a0-48b4-9c36-89646479c776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc4adae-c4c5-4c50-9215-db531a6f9747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306fd12b-266c-4cff-a7ec-b2f29b51f261",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc222766-df1a-4a6d-8959-8b26db5cff8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80c3265e-4b8e-4e19-a2d0-58d3eb93786a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d22a7fb-dffc-4fa9-9254-2fbf0bd7b2af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90963070-52c4-4198-96c1-3717f7567b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84e34f2-cdfe-4e29-a127-51211e692c6b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21951ea-08b8-4aca-9e47-f5483015d8a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a7079ac-27d3-48de-9478-3ababa31c70a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf71f82-1b0f-448a-9f3c-eeab2ff56014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eefb8da-86ba-44c1-8704-df41c0f004b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200f663c-047c-4cc5-9ce0-1334fb8c9a23",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9b4864-47bd-46a6-babf-22d760a0dfe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76d85adb-3f52-41f8-8f57-20acf2ce9b94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd7d583-d1a4-4770-b5b3-e7ecceb79ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ab5871-fb18-4a62-8d3c-f5de763d5b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6af33e-7185-4201-9f0f-ac435987f482",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7523f6b-99b9-477a-b568-465e893a007e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca35e2f-004b-41c6-83ed-8451df04da3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a26050-a231-47c2-af92-b0410684b129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850902c1-a61c-4eed-8fd7-fdd96ebc51b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa217224-fa82-4090-87eb-f9a3f306fc01",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5331ca-c8c9-4a10-bbb9-a1ec2228297a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf700dc7-7848-4c0b-a61f-95ca67802d24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6dcce89-890a-4e28-8821-7782fcaeea33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e514d8b-01b7-45c0-8750-6d079f13645c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5194cab-6ec1-441b-85a2-03e91c11f18b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7591024e-b3f6-461b-a6b2-31ef683e2e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab094416-3485-4201-99a4-3e37d7927d8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba3c7dc-e4dd-474d-8560-ba4bb21ce4c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d339f7ac-ef04-4f80-a61a-0fedb5a27d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10dd3d0f-bd3c-4bcd-b41f-383c70e1d730",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caad4976-22d7-4a1f-a0f0-4f5aa538bb52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209a6a05-1641-4ac2-8fe1-a00c427dee5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d60d86-0c2f-40e2-945f-2e4f93e2d620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa82a14-0c3a-43f3-8033-068b40e0ae44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af285ea-49e7-4e12-a2b0-f089fe1fe930",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6fcf4cb-9a84-4732-adc8-5a4167a3ac2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6cc70a5-1e2b-4ace-9dbf-9ffec141daf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7933357-ca31-49fb-a58e-235a99491c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f618fb75-f967-4cea-9a90-5fc5dff913e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4545a9-d81a-4200-b9d5-42dee33aec31",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a922687-cf40-4dab-9af6-730c1b863188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd12c577-b750-4cc9-9dd2-29ee3127490a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf8bad9-f8fa-4f1d-b801-4f5750a52493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f0de6cc-72b6-48fb-a9c6-92252c8231cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4b7a17-9f57-4b0b-a963-6c16d2a6b129",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8204984b-8c1d-43be-9932-b82bdc7ff87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb797c9-0779-47e1-860d-55b9cbe4ed6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9032ad-d1df-4f86-8199-21966223b36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b07deb9-1a36-4a45-ad03-2d0400f262ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf25b32-342b-485f-ab3d-5d24a88f6dd9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af207e89-7dcb-49d5-a643-a0b57dac2430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "618f53d1-072e-41b0-9c94-eb30437ec78f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b975bc-b7d1-44c0-987a-eaa9844ae688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e6bf4e8-d7df-4e90-a877-298a71d63900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c32766-7538-4012-aabc-ad383c2bbcc9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263c4f65-db34-4685-a898-2dbc6d5e3dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f22df09-50bc-41d6-848e-c925ebb14f2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b430ce3-1b71-4614-9d36-1c3198abe0b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be8a79f5-d276-499a-a56f-9211f2e1f6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a841a520-fe93-4b2f-8eeb-c6f5c67a6652",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7602f6df-77b9-475b-ad8b-09d7ce9e907b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad32669a-9fec-409b-911f-f033eb46790a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8430872-bb6b-4cd5-9409-9037c73490c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257c777b-2fb3-4168-b8f0-881d99719bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d01edc9-9b38-440c-8abf-3a1e0b567abb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e47a9df-bd96-40d5-988a-86d9e74fc4ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "308b7cdc-1500-493c-aa1d-1d06eeef6066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acbcab6e-df6c-48c7-b392-a1103cecfd91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0454ce-88c4-46eb-be4c-67abf176efac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23426529-48a4-4599-83b1-438bdd7d88c8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445b58d7-4e74-4a1d-af6f-fa52c910f955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839b9b4c-c54c-4ace-93f7-2c69a321414b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c42aa4-1760-4adf-9bcc-56b51f2cbcf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6299589-ed77-497d-813a-5721fa530d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959a87c1-36a6-4751-8cea-be986417ce98",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723c5de6-56fb-4bf5-803f-2ccbc47588d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4113e7-7bfd-4c3f-b989-29dbef4714fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2594dcf4-7998-4a38-8578-2473e56e8c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562133dc-f819-49dd-9004-a726c5063593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa5edbd-5938-4083-8051-42b1ba0b247b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e0ba8b-f9af-4582-9ac7-ba39ea2f7b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47e32af-9b87-4c8f-b732-f582d2e11683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209db52c-e023-4fb8-a470-797f11ae2457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca5b2b23-92ab-43d4-8c5b-040c6ea46254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b335f6a2-e255-45d9-b2f3-3d26410f2697",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3a8bfe-1d54-4dfb-bca1-036625e3b08f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd924dd-4c54-471c-bd65-990fb2ebe027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "438e6703-e587-4164-97bf-d3eaddf42485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af97001-c525-4f3c-87de-c9966ec608f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029407f9-a618-4819-92ea-85b445c93fc1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6655c482-c0ee-4221-b630-7bbcb5c2fe0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43abd9ad-3d7a-4aa4-99fe-cf0656170c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12999088-2951-4ae7-9b00-f1bc04c75feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d5ffe0-cbc0-4544-b067-0eca78f8dcf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568ea11c-1780-4b09-bad5-54279778482e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14669e00-f005-4b60-828e-04cced2b60c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca4b737-bf74-4278-be3c-569699433980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5540a6-3db3-4428-b8c2-f4e128f6cf56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1395b57-d097-4a5e-be73-f69d0eed7142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a57a9f-23c2-45ba-a259-acbc79486b31",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda74d23-307e-44a2-81bb-d6cd0e3b3632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5433ac5-8093-4e16-9500-49ad1fcb552a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f9c258-d6e4-467e-9879-e0a247a856fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c6407a-75af-493d-901d-ed21ee01faf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7363fdf-3761-49c5-9345-3cd7adbeaab1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1dd2356-ea66-49b7-8b9d-c1aee98720b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2d7daf4-cbd6-4c72-a5c7-c8c99d58e0e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad8b5f1-80b1-4b16-ac03-7afe1adc38aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd310b05-386c-45c8-af64-8fe9f63241d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c176b1d6-5c39-4d21-815a-47229df2ed47",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5403af27-9cd0-449a-92d8-6836f0bcd999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9173fa2a-811f-43e1-adec-c3af7bfa30b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af808ed-41bd-4770-8e0a-591e6073c295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24f9bdb-eee3-4d79-adb1-1616130ae2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7baf0d8-721b-4cc5-8801-bf2fbfa3658a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a029054-f861-4888-a71f-b561ab49b438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f08943d-5afe-4a55-8b2c-3fa5f1bb4a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21446ef0-18f6-4079-9ef4-f62248bda8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61282e06-e97c-44cb-9de0-bda881d3af3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240cc7d2-226b-499b-9d92-4a970e5ad3ef",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b53493-e02f-41ca-a6b5-e7fa1bfa3171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813651be-8d2a-40e7-9688-02659e1fae50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd27c58-ef37-4f05-a77a-731b7ea44ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b46f81-603f-4924-b3a2-079953a00003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9babdd34-f7a1-4681-a007-4702111dc2cb",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39530eaa-bb6f-420d-b6e4-7c2613d8e13b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c25f6980-4aae-4f35-aaf8-cc982ee7d4a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7721c9-a90a-4229-912c-00d5f81a06f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ecae7da-b7aa-44b7-8a89-c0bd6dfd4005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c01435-1f7d-4edb-90d0-b48c7498a17d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179f40f7-535f-4dcc-8cb2-a17e524fdb10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df9c888-1cbf-4e1e-ba24-4781234bdfe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e884a218-647b-4d15-9f2f-ffcd426bce88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aacea2c-6d25-4e94-9199-ef456c12f738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c883dec3-ee56-4297-aba0-9955d5e74c8e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b83b12c-5ba6-4468-ae60-38a21e633e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6088733-afea-45a5-9e04-7c73c158273a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20a3a04-bc5f-4930-8b2d-dfbddb94bde5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260584c1-c28a-476e-9e3a-98416d0ea86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba2bdd5-dfe0-444b-b778-c6da830ddb91",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541ddb76-22f6-483d-98a9-7e487b0fc67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "650d540b-fe06-49ee-bcd6-60ea56968ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20bc255f-94ef-42ea-a991-c9b09ac16820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e9df00-48e9-48a0-937d-2737d9286a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8664b8-9d1f-4928-ae84-fce3a9cc67ac",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef51f48d-d3a6-4f2b-b653-dc12dc98c1b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7068a78e-28a4-4e64-b52e-f22630088caa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d3d433-ec1d-45ea-b7fb-7da9c970d276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc3c453f-b5e3-49a3-bed0-cf7adac842af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6843b6fe-2c11-4dd8-91ac-ed1dfbcd87c2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42367aaa-ea24-48a4-a062-a9aaa6a66bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f442ade0-7ece-4b54-a474-36c73f172005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49e7f41-d8d6-48df-be68-649558810a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce35fb47-6c6a-4a46-91b7-bace4e76ae12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc88bfa-47f9-4fc2-8c24-9180e39f448a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a296ae-8430-48a5-83fd-3a2006edaba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23db823d-4229-47ee-8743-6ef6c6c422b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ccc98f1-a60b-44d2-8511-0ee1d3741ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c96fcfcc-d5be-4830-8d05-804ac41f7d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f471d9-bff7-492e-8cf9-84137f37b49e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fffd4b-d1e8-466d-a004-d44ccc5e415c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bd08610-d729-45ac-a7b1-6cf3cb1bb6f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e067bb73-887c-48c0-8727-43446e804f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be515dbc-67d3-407b-b825-005e3c83e894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423746ff-583b-4359-93ff-5127afe6a628",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125b932f-2a29-4fbd-bda2-e854371c83c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecd6692c-8d9c-4976-9288-90fe2916e2c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0cc7ce-55d6-4506-ab21-fd3a790c1159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27178f67-cbc6-4959-bd14-9d1ac461d139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c6069e-2cf4-471c-b875-11801b72dd66",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda47276-56d6-4863-9b4f-5bc59a2f2726",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f039ede-11bc-4427-91b0-d8988e568406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96af886-62d9-4a2d-a669-55e06e0c2f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2918f9e8-06b5-46cc-b92b-c2dd52ef4e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2596352e-6a07-412f-b507-27e26cb8ce68",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f861ffc-ec0f-4cc3-b637-d88b362435bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2ee1450-a95c-4a49-9c4d-4c6ea8bea4d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70099125-48c3-469e-92d2-e4f2a51c9a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a907bd-2ad8-4eef-9b07-6d7f62ea4f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1cc1e8a-569a-4467-8646-9d5f08e38213",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee2505a-2c8d-4dac-b92d-e04a4a5c9160",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65a7ce4a-ddb9-4afd-bd6d-77e98996916b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ae8bb2-16e1-4961-9a1b-7f522b8ff139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ce5260-412c-4127-aff7-0212ba759fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87538bc-cb1e-41da-be51-4e47d28ea53b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b1ef60-67d0-4cb9-ab5e-dc96c70d81c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48949f7e-6968-4cfa-b380-d44aabcac664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d98c4d8-5be4-4227-a650-d8db1e728953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c165650e-c002-472b-838e-ab9f0b869b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb595b7f-7cd5-48fa-a8d6-2512c7d459c8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177b4e58-1861-4d0c-9bd0-4d7d2168fb60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0962cc81-b13e-46d1-9f62-4253790185ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "951bc8e2-d1a7-4e3a-a3d1-dd951885138f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1dba1a4-6157-4bbb-a42d-d065c1bd0374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b09ba78-c12e-41e1-b637-68ad83455dd0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cdb8fb-7ff0-4709-8a85-d4ee6254f3a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b078d09-5019-4181-9de0-4f98022d060c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "621d563b-b409-4759-a5a3-408f91fa2fa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db54d97d-1588-440d-9abb-95fa656b322e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a655567e-e360-4030-87fb-827c7eb5e452",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bd0670-134a-4ea6-ba5e-de7b06123c23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1edd9f7e-8b5e-4dfd-b181-0d62702d791b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db511651-39da-42a0-9f89-c9d7d9aaf722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc455735-7a28-4f5f-8824-4388e7fc5283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4275bb-d553-485b-b61a-4c668f3872bb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c68028d-cda0-4193-b94a-2f56a30f6872",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c7f3786-ec76-464d-a166-6a6dffc75a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e319e2-5bc6-4ca6-af9c-6c1cc2ddf8b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959688bf-a3c0-433d-8e02-c9fb4b873374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36958b05-f32a-466e-8217-6b38ef5b89bd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1002aa1e-1149-4768-9886-0e52a6cc3e49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0304e51-f53f-483f-8657-0c8711283e00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6698410b-7052-4413-a217-0862236c9a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af43aa8-b793-40a8-88dc-311506593f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63730304-2c2f-4a88-bd91-69147984935c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63bbe195-466d-430c-9b7f-3827c01dfb93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9bef140-8b3a-42e8-99f3-1a7aa8e4ddf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424b0152-7217-4aed-9f50-8a037ad6d167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41680633-ab3b-40aa-84ad-7fadfb091c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02482fed-5935-4a71-989f-450360103e3e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e87ea40-ea7b-42ca-8097-6b02e1181d13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42b93a65-3392-42b4-b7a3-7a477edd416c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42f1900-a0ed-4275-b2b5-c359362c4b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c0c1a51-a5ea-431b-9278-7e1cdd963144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58c7cd6-484e-4f72-978c-f2f5a1429c04",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b1199f-d51d-417e-b97d-e92cc47b866c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d01a2a7d-9d32-41ad-87aa-efccf0fcbe9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc76e21a-800a-4c75-b89f-cfe89b4eb1df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69dd2c6-2292-4c3e-933d-e971f439edf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d313a67-6f79-47b0-85ce-e4655e914299",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdcbb38-4636-40cc-a89d-7ffa319c7d91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4f61e79-4804-4f45-9ba5-0b255eff844e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcd043c-bd20-49b1-9f29-b0094273359c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37b5712-0b7a-40f4-84da-b9a106d8e804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5742d4b9-356a-44e3-8f4b-0b3c62a5e2b5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9060b6b-cd9c-4760-bce5-53e41e1b06fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab7d3fe1-3d5d-4cd7-b11d-b47a95e994ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df1c87f-ad0e-4aed-b7ce-8f4044124ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f39cb2ef-0c37-4521-88b1-d636a4fdb54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74712c01-8250-482c-b128-7da67ba620ec",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffdb9e2-2c87-4bc8-a150-45f09ad93bd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a940a0fa-8fec-492d-ab07-dc7312edc643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a398a3-efda-4182-a174-b9f1f31656e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c1b593-bf52-417a-81c4-d77440c386fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f4aaa8-6e9f-44c3-bb42-6a91270261af",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1c0d90-555e-40c1-974b-7ce27698b5d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10f45ca7-a588-44e5-a84e-068e0b151223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d10cd62-3e49-43ba-818c-5f1ffc162754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5576b59-ec50-4839-bed2-3f56f1e4c635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50824e07-3750-4dc7-8442-712e9801b1fd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153c29c9-7f1e-4cbe-9273-dfb0203ec33d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a494aa8f-de13-44b7-a2b8-5783df8cee59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf79f8a7-9c3b-43f9-a6ad-46983b2157b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41214b52-3488-4d62-8bc8-5503a31fcb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e07edb7-d6c4-4454-9dbc-cfa401e5db4f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272c2976-b581-4138-8c49-ffbf8c635dee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74046ba5-397b-4a89-a134-fdfcf43a2d76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "191593c7-9218-491f-8550-ad992716ac30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2852aac-585b-4a4d-bf42-523c6bbc3923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0c95d7-df97-41fd-b776-6beb1d18a61e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3e512a-cba9-46ce-aeb7-09b4d04198e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e84c0367-8304-4f40-98dd-8d33d7e8d0fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ea3762-0763-412b-8981-2ac217de585c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a40ae2a-24e7-4c4a-a132-46b381ed5f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4298ce-95af-4143-93eb-3b19edd9273a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f541c6-f577-4872-84a2-4416c2af9219",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "250f6d37-eff3-4a30-9b05-f19547a8416e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48b051a-4707-41d3-8331-659420be59de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c57072-8a64-455b-a837-38b697987490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b8c79e-1e64-48b7-8f70-f7ce12a10a0f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ffb3c3-b38f-42bb-b523-4934d27f6ba8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f5be626-7574-4154-96b1-09c19c8923c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e2e08e-3c81-451c-b3e2-5ef18f333257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7faf9d-10b4-477c-9a5d-dbeec50878ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271cacc0-8f1a-44a0-b107-382c69a0900b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a9107c-d16c-499e-95e8-eaea9f45adc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc0b8cb5-3dd1-406a-8649-f3eb7683772b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d6cf2a-6437-4ae0-86d2-e76e86900be5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e064e5f-4293-4a5f-894d-032c009070e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a045256-3555-4de8-8d39-47413e976659",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a753bf7a-5ae9-4b8c-aad0-3eaadbfd5583",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5973739a-0b91-4908-81a3-0c663c80a20e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df52d8c2-6dbd-4bc9-abb8-06d7feb582a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a58b4bf-defc-4d74-85ef-f2972e51c51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7099b2f-5683-4eeb-ad80-51001de83376",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6625c1b6-468c-49ac-bb81-e658aa12276e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6244dcb-be13-4614-8186-7e3660c3fe05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d05a47-cfeb-4c66-b8e3-c8857644125d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db339753-ea5f-4530-8baf-9bb44b3136db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab12783b-d157-4aef-be93-17c45fbea320",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593c28ac-8541-4e77-9002-393b2542d1bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a75a80e-7330-44f9-9cde-686695e76993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9be57a0-274b-4575-ba38-c09725d757d9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26a5124-8bae-4ea3-b130-0b3cb887076b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3c7cdb-d5ad-43f0-a506-8677c3e47c90",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c4cc7c-ac0d-4793-b82f-934aa187ac5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ded3ffc8-e8f2-4607-bb3c-81503228e333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed51faa9-e1de-4709-a4c9-74883a702ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd97c11b-ad2d-4ac9-8d7f-d747e81e4455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84870be-ca7e-43d2-a145-9a6df84a83bf",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b8c863-0d59-4679-ae4f-17e2ddcdd374",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80025f89-73c7-4616-8f35-374cbe3954cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff618acc-1ea2-4702-9d8b-3b0bee54baea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "764f66a4-4f47-473b-bd74-bb2f3dfdf129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3cb9899-b4bd-41e7-893b-e4ea4f5b44ed",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9412af-fedf-4d72-86f8-01a1665b1245",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07afee4b-7bb6-4a97-9067-ad90b36da6d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3810b006-cb29-4b0d-bf81-77bf3d1e245e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8e656b-2235-41b1-960d-8b1f5cdf08f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0465243f-6403-4e97-be12-616c57b8669c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae67631-1c79-4ece-94d2-87a00b4421ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51f1bdd8-6298-42c2-9a52-7aeb838978dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa30b277-9f4b-4393-9676-712c26985bbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79357385-4af2-4bba-b60e-d7280f60d894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5163999-446b-45a6-bfcc-a9a74a0fed52",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d1e978-025e-412a-bba5-fbb16cb9968e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e46ae1ec-e27f-46b2-86a1-a76e068967c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5286c0b4-55be-470c-bc59-8fefb6f6a1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a07597-0961-4711-9293-28e026d34bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738003ec-9b36-4455-b226-b558652aa4af",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82479002-40f3-47a7-81af-6d76e56402e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40dcfca0-d8cd-47dd-a087-75f7a984b949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa338b9b-2df8-4b79-992c-46d818da67df",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30936d1e-7ca4-432b-9c21-4e1ce4145e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fce808-e719-4b05-abb4-09dcbb024aac",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1240460a-06e1-4e35-bfda-23f6033cd05e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9f26476-a049-47ae-a694-ed6d56ecbce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa50720a-d392-4213-b655-1c5a47321033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8885f76c-0f2a-477a-8cc6-e4eb410af84e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0199f034-c418-40ce-8ec6-2b47002ed8bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6906310d-b6c8-46db-bdec-b74ae1e26a9b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "59bb5217-5657-449a-ac70-632562289ef7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0b1a216c-fcd1-490e-8f54-0779fb30c3ec"
                    }
                  }
                ]
              },
              {
                "id": "9ea6fe00-cb91-4494-89b9-d3bd42e585c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6727dc4-4288-4d0d-a6bd-35893b5571b8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f855da-c62a-49ce-abfd-3b36ca0bc596",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4523e6f4-7a82-4aa7-80e4-e86f330380e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7474e85-95fa-47f5-be51-f2cd56a749e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "efc733fa-029d-47cd-ab76-e65d5b112783"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75a0adb9-b99a-4a1c-b9da-254a1558631e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c453c6c3-853a-4498-9e04-62f4496abede"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e80b2a0-24a5-4a5d-950b-4196b7705545",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fba5675b-3dd0-4822-9dfb-c3165998062e"
                    }
                  }
                ]
              },
              {
                "id": "f66e4503-6d57-408a-aadf-e76bbb10a63d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6bf94d41-5876-485f-bd4d-2ee17ef23c3a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c695328-0a49-43dd-ac62-159cfe06e659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3a49d0a7-adcc-43af-a536-c32954a17447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3bf834-c345-4d3b-912a-55fe320f7bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95b23338-480f-42b5-be7b-5c3ed7bd6a0f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cbda8f14-fecc-463e-80bf-3543953920ac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4004aa4f-c3a0-40cd-97cf-ffe9340872a3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2c14c08-3a12-4368-a8dc-57247a2cffd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cc839c4b-f73b-4055-8697-fcdc87919d49"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e514f07b-7f26-4152-85b2-b43a8fbfa0d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d8c2fd3-fb3f-4123-a57b-aac8e6a9fe56"
                    }
                  }
                ]
              },
              {
                "id": "440564ab-0df0-4d32-87a3-2f32ba55cc20",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c9411ee-36f9-4a0a-8301-4874a6ab089e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "36033662-8753-4c6e-9542-d8f915baf3d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0385ab73-2865-4c36-9814-c2468ce852cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4fac870-50d0-4912-a3a7-b181ea405dea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64ec957d-f626-49a2-a058-01eee0f2748f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "153df3d4-fabe-4865-a110-4b8cc38c45e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1bad7d0-c918-4dc1-9b48-df9780ab27db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9283cc40-6a4e-4fca-92db-173d5b3ff4fb"
            }
          }
        ]
      },
      {
        "id": "3413ae23-e9e4-4f7e-b02d-e886502b65af",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "34304292-490a-4631-a990-239be8e41e57",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ffaca22-4ad2-4b4c-add5-52366212782c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fbabfe1b-1401-43ba-b476-fc53a80ecd60",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487b7b84-55ff-4647-868a-916d139e9c2c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4ebd87f5-d3b4-4706-8a82-4255ef588fca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5a260f-7bbe-485a-a8a8-8766bcf978e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e192fb7-8698-4fe2-98a7-c375d5bc42ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e252734-9f74-41f0-8cdb-d72fe20be139",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1dc1274-4aca-4b42-a3fe-22febc45317a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3dab551d-a1d5-4b89-8257-579217c9b729",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70752262-f535-4337-906c-fad66821d2f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e689326b-27c8-45e8-8d98-9b6603065a64",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bb8b3e43-c32b-4ca0-b467-2b45fbd1c620"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24e34fd8-b9c2-4f59-9408-1b640300f9b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5795c90a-77e0-4d0b-ba2b-c6a8fdebfe2f"
            }
          }
        ]
      },
      {
        "id": "5d75caa5-b418-481e-917d-157b922d60a6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f3c916a0-a76b-4301-9cc4-903ec32dd896",
            "name": "Negative Testing",
            "item": [
              {
                "id": "46d01cd1-dd5f-4b82-aea9-565a50cdb527",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bc750f43-3bc6-4885-a1cc-6190f55638b1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707ffe61-90a6-42ab-9ef0-ca491cf728cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe8e31a7-5437-4a80-8a68-005a588e3dd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9b47ef-0862-4a6b-b0c3-0ef22718de31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed79b4e0-3fef-48a6-b3f1-25524d4d8b96"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00d51b17-3219-41d4-96ab-08960919b778",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ca9a70e-799c-406e-85ca-fb5abd1ed931"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0eefc4b8-9d3f-42d1-9442-68e8ddbaa5cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2dcdecee-5419-40cd-adf6-9e42d11a5e24"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d47552e-94ab-4947-bf7c-210fb220b9a1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c38d9cf5-eed1-4549-ad75-78314a01d585"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32c884b5-c325-4c55-b277-d38d6887bd72",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb57241b-0dfc-471c-afc2-9dad32250754"
            }
          }
        ]
      },
      {
        "id": "d1f139ae-05f1-47d5-87db-0b5ca133e2da",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "32706244-fce2-4705-8e81-897281b51289",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22321ace-e5cf-48ce-a62a-f8e67eb5536f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "54547f90-ec38-42e8-bfaa-2ced5a4d090c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85675074-cbd8-45ce-bab9-5d24e9dd5bac",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcbd9b6c-d36b-4edd-9ac2-e4ff9d2aa914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d409d24-72ab-430c-93f7-a8a4da52ae70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1cb0d201-6d28-4fc8-b6e1-1444fa0dfd20"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bdbbb88-a60f-4968-ae1f-f27358e5fbe8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c67c5dc4-1809-488d-af6b-fa4d45cfaccf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01685284-a66c-47ec-9a74-40a38dcacecb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7101a6ac-d659-4d21-ab70-89cb460812a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1302d50f-aaef-4f75-8895-a283e9b7f505",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "802cef43-76df-4464-9f65-81a7883d9262"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0cf4bc28-1bae-4aca-b2ad-7848314158aa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "65d54ced-3481-46e4-9cab-96a34fabeb25"
            }
          }
        ]
      },
      {
        "id": "9911b4d2-5bfa-409c-9c78-7ee70846e03e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a2eff1d-574d-4558-93da-30040efed1d7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90b49846-daff-427e-af17-ebb476b1d0e3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "32b4d223-e33a-42a4-8e3e-871def1756d5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1f3de87-b962-4049-aeb9-76b61540758f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b627d95f-2780-41c6-9b55-197662c61d18",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 292.984126984127,
      "responseMin": 11,
      "responseMax": 6646,
      "responseSd": 1003.0665954891243,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717893724075,
      "completed": 1717893806355
    },
    "executions": [
      {
        "id": "7e7dfb58-12da-4ae1-a5b3-0c31e92f7bda",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4893aedc-becb-4d50-9b9e-b8c047aa6088",
          "httpRequestId": "82e69980-e872-46bd-a073-f71685401267"
        },
        "item": {
          "id": "7e7dfb58-12da-4ae1-a5b3-0c31e92f7bda",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7beb1ed7-1b13-4347-be57-a2368e34421b",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "2304c739-fada-43a5-8b1e-dd1cb2e2546c",
        "cursor": {
          "ref": "77898889-d565-4673-9188-78682d283616",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7807798a-ce17-4b93-a1a3-656a7a083486"
        },
        "item": {
          "id": "2304c739-fada-43a5-8b1e-dd1cb2e2546c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "26beaf26-2b7d-4ddf-851f-9280fdea1ebd",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "ad4962e5-e158-42dc-b6b8-71df033994b4",
        "cursor": {
          "ref": "11d69d76-9997-4604-891c-6636f3ae4d2d",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "613d1403-a9fd-4fad-9348-a2fdbc1c70fc"
        },
        "item": {
          "id": "ad4962e5-e158-42dc-b6b8-71df033994b4",
          "name": "did_json"
        },
        "response": {
          "id": "d581ab57-15dc-4ccf-83fc-b59b9f3bf5aa",
          "status": "OK",
          "code": 200,
          "responseTime": 405,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed925fe-4942-4f30-bb05-568a2295f4b7",
        "cursor": {
          "ref": "51cb1e63-da7e-4468-bd11-4f300874a878",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fb046168-0da8-45be-ae38-f5e839ebf638"
        },
        "item": {
          "id": "3ed925fe-4942-4f30-bb05-568a2295f4b7",
          "name": "did:invalid"
        },
        "response": {
          "id": "3d6b49d4-684d-4b70-a321-e8361bdf8ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2008,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed925fe-4942-4f30-bb05-568a2295f4b7",
        "cursor": {
          "ref": "51cb1e63-da7e-4468-bd11-4f300874a878",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fb046168-0da8-45be-ae38-f5e839ebf638"
        },
        "item": {
          "id": "3ed925fe-4942-4f30-bb05-568a2295f4b7",
          "name": "did:invalid"
        },
        "response": {
          "id": "3d6b49d4-684d-4b70-a321-e8361bdf8ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2008,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d6db73-3aed-429f-96ff-b654f0789518",
        "cursor": {
          "ref": "ff0fdd6b-a915-434b-82ca-c462dfdec1cf",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3402a3ed-8350-447c-9434-41f9431617bf"
        },
        "item": {
          "id": "a2d6db73-3aed-429f-96ff-b654f0789518",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0877c217-6733-4f81-9f09-902aea5dc463",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2605,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c323b99d-d222-4bad-8158-c28fd38e8364",
        "cursor": {
          "ref": "7471bd52-cc93-45ce-b2d5-e3ff2aa03c34",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7e4d9d5c-d4ef-4b1a-ae1d-e9344078cece"
        },
        "item": {
          "id": "c323b99d-d222-4bad-8158-c28fd38e8364",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "da680db3-b9c2-459b-8258-3dab29e85a2e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2261,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de079b05-7107-43a7-bced-14f63ce8415d",
        "cursor": {
          "ref": "1dbc3a09-6d3e-4965-a33b-529fbd12e942",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9c8114a9-c235-4fa0-8e5f-33a5ea49cf7d"
        },
        "item": {
          "id": "de079b05-7107-43a7-bced-14f63ce8415d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0bc783e6-2844-4a9a-bfab-a60f88ee9348",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 247,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9ded86-96b0-4e0a-92f0-88d7c7f99b57",
        "cursor": {
          "ref": "e430a2d8-7dee-4529-a7d5-f7a2f5475687",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f44d5a10-589d-4ed8-99ea-7b76ea9e0356"
        },
        "item": {
          "id": "9d9ded86-96b0-4e0a-92f0-88d7c7f99b57",
          "name": "identifiers"
        },
        "response": {
          "id": "a4f44b1b-3a12-411e-8ac7-096d8e1823eb",
          "status": "OK",
          "code": 200,
          "responseTime": 2476,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f5455e-ed0d-4c10-980b-0370a53b6468",
        "cursor": {
          "ref": "7e291746-2195-468b-90c5-516bb0281005",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d06bcf3b-fa37-43ba-9e5b-58303bc001da"
        },
        "item": {
          "id": "e7f5455e-ed0d-4c10-980b-0370a53b6468",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "62d908e7-f84b-4362-a1b7-cd2f1f8b0d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e012cc9-236d-4b4b-a90e-522abf741a25",
        "cursor": {
          "ref": "09fb0f00-9419-4276-8ae0-5d7a9ccc950e",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "37569a52-3b60-4838-933e-6fb36867323a"
        },
        "item": {
          "id": "0e012cc9-236d-4b4b-a90e-522abf741a25",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "dec59088-67b5-47b8-b14d-9c7b1ce35f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2ba0df-b7f5-4787-9da8-844a333d0e08",
        "cursor": {
          "ref": "68a167a0-6f7c-47cc-a764-9ba91e16f229",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f0af202c-f8f3-4536-801e-028b7ce32999"
        },
        "item": {
          "id": "4b2ba0df-b7f5-4787-9da8-844a333d0e08",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fdb3713e-2f15-4d8c-b4bf-a446a3e00d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d85cf2-05f2-4e94-8f8d-4446bf32d1d4",
        "cursor": {
          "ref": "e0c24f30-175f-4cf4-8b28-b86df3d5ccee",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9553fbba-60af-4579-b956-8770bafc6bb5"
        },
        "item": {
          "id": "d2d85cf2-05f2-4e94-8f8d-4446bf32d1d4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8b902210-f4e8-4bf6-93bd-3075ac30aeed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d73899-135d-4109-b9c3-2aca7bd141e2",
        "cursor": {
          "ref": "9ed37a40-114d-4a2d-90da-28f88774fc67",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1639d9b6-addb-4235-b417-d5663003dcec"
        },
        "item": {
          "id": "c1d73899-135d-4109-b9c3-2aca7bd141e2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ca9de9fe-50f2-4911-a738-965185640e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1aacd57-674a-420f-99c6-456b27456e89",
        "cursor": {
          "ref": "95bc3979-d472-4848-b5b9-a20c6bf6bfbe",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ff2671e1-166f-44f2-80dd-0c11b8cd554f"
        },
        "item": {
          "id": "e1aacd57-674a-420f-99c6-456b27456e89",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5e837062-2bb5-4169-a6f3-86a523187b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1cba1e-37b8-4383-a095-b0b234f3d524",
        "cursor": {
          "ref": "fb691084-1861-4ea1-a47f-a9556150ea45",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e9a0779a-4ffd-4ef3-a1ba-a0d59dc06ef8"
        },
        "item": {
          "id": "af1cba1e-37b8-4383-a095-b0b234f3d524",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5f869d9c-45b5-43f2-a3ac-2c6d208e75e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc7d232-efc2-40e4-8f5a-0d3a60d54ce2",
        "cursor": {
          "ref": "b3876b13-a289-4e2e-a258-10151f9131dc",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "820fcaaf-3690-4901-9cc0-ee0657e51afe"
        },
        "item": {
          "id": "edc7d232-efc2-40e4-8f5a-0d3a60d54ce2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2bcbab9f-584f-4d02-b719-7e041d805c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ea2016-d99e-447c-8476-c17c5e86da2c",
        "cursor": {
          "ref": "da8fe9a4-9252-4f49-b329-5013f4d86024",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "75ec88c7-3cdb-4fed-962e-e7fed6423a58"
        },
        "item": {
          "id": "e3ea2016-d99e-447c-8476-c17c5e86da2c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d025981d-ce96-478f-8aca-19ad5e5aa7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c909be8a-d5d8-43c3-8fb2-bb46be3b9899",
        "cursor": {
          "ref": "c317dd53-3aa5-4081-abd2-e71940341775",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "20e42475-4ad7-4c08-af82-66ff5b50eb4e"
        },
        "item": {
          "id": "c909be8a-d5d8-43c3-8fb2-bb46be3b9899",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a731cdb4-6aa5-4ba9-88ad-6c144d7f708d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c11caa0-45cd-428a-adc5-3ebfabbb4e55",
        "cursor": {
          "ref": "f4653b79-04eb-4686-8e23-e8ef2b3f05c5",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0a3c69e2-8790-4ad5-a772-c89946c83458"
        },
        "item": {
          "id": "0c11caa0-45cd-428a-adc5-3ebfabbb4e55",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5ae92836-9c16-4283-a9ae-99063c521cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120c39b9-4048-4c9f-a3ff-755970301d18",
        "cursor": {
          "ref": "c9bd2c8c-a03c-4ae8-9579-d7fba68e5eb4",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2ff4d24b-932b-420b-90d9-b4460fe147d5"
        },
        "item": {
          "id": "120c39b9-4048-4c9f-a3ff-755970301d18",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6ee13147-a968-4bb9-a589-c82bbb5d10a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b320dc-c186-4dd1-989f-50dda7f88ea7",
        "cursor": {
          "ref": "18959502-a86d-469c-b1c6-96bc1fc03915",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6b170b01-e486-4f8a-9b8d-9ad8339a3873"
        },
        "item": {
          "id": "a1b320dc-c186-4dd1-989f-50dda7f88ea7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3124705e-1849-48d5-862d-559e0fa433ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1db887-e5a7-4de7-a043-489ec3407745",
        "cursor": {
          "ref": "5cbd7a7f-fd44-466e-9f84-78b0c2ef28d4",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "dbe86cc5-5093-4874-bfa3-9fe125e9521f"
        },
        "item": {
          "id": "bd1db887-e5a7-4de7-a043-489ec3407745",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "89afe7f9-9a0e-40e7-a919-ed94a270201e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39e2ad5-91e6-453d-a82d-3fb2ee3b3d02",
        "cursor": {
          "ref": "7e7330bb-a7ab-4989-821c-c22b1ef849c2",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d94e6702-f331-4f28-8e40-75bcd0a6a9a2"
        },
        "item": {
          "id": "d39e2ad5-91e6-453d-a82d-3fb2ee3b3d02",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9b568840-f297-459e-ba8c-99c3e58aae4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08738f57-204c-45ae-a2a7-48461fe7f4e6",
        "cursor": {
          "ref": "d68d5b00-6b0c-4b0e-b1f7-122960d31085",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e96da9c5-7876-46ad-bc18-7ce1b17b5a6f"
        },
        "item": {
          "id": "08738f57-204c-45ae-a2a7-48461fe7f4e6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a435a102-0299-4d96-8001-98a508d4bc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156e0c10-7f9e-47e5-acc6-697020c09dd2",
        "cursor": {
          "ref": "221f2761-97d7-4c8c-9d42-67331f03ac21",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "de2f6662-7fe9-4564-941a-d11158d8b39f"
        },
        "item": {
          "id": "156e0c10-7f9e-47e5-acc6-697020c09dd2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "853dba93-3387-4f16-9d47-f18a51740d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865d46a9-7b42-4740-a5bc-c4a142b756be",
        "cursor": {
          "ref": "6d5ffc79-3bc2-46e5-8b03-6456551e0d02",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "95415461-7427-4175-a398-b3a9893de119"
        },
        "item": {
          "id": "865d46a9-7b42-4740-a5bc-c4a142b756be",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e65f4881-7a7c-4d56-94df-2746763ac0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f39358-ae8b-4945-908c-472879e9b602",
        "cursor": {
          "ref": "0e203944-09e0-46fa-8e97-5e25c61265fd",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "72534ed9-b974-4f20-b82b-ef566d5671f5"
        },
        "item": {
          "id": "33f39358-ae8b-4945-908c-472879e9b602",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d24dfb55-349e-4a64-8406-bc8c0b020e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60e87e4-11fc-4550-97be-1b6372476a67",
        "cursor": {
          "ref": "8021f0b8-59b0-44ed-b727-a671e3fe88aa",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0620b67d-fdeb-446a-9c78-461636d986f6"
        },
        "item": {
          "id": "f60e87e4-11fc-4550-97be-1b6372476a67",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3451b43e-2c16-4a62-9d5f-3e906e64b4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4769ba70-26cd-4cc1-a178-c6416c8cfe43",
        "cursor": {
          "ref": "6d114d1c-8598-4721-987e-5b359ade4415",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b168a373-ebe9-4ca6-b193-bac72d7a95b4"
        },
        "item": {
          "id": "4769ba70-26cd-4cc1-a178-c6416c8cfe43",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "434a2e93-5c99-4bd4-83b1-a13a4f52426b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a4e52e-7490-481c-a773-bda3782cbd6e",
        "cursor": {
          "ref": "ae670551-c43d-40e2-a915-18e2c71687ae",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "444ca06a-1833-4e9c-a5e8-5c7471b77a39"
        },
        "item": {
          "id": "f5a4e52e-7490-481c-a773-bda3782cbd6e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3945ef9f-37d3-4613-b01a-93cb7bd40bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a8cac9-f163-4433-8ac3-a55dfd34f680",
        "cursor": {
          "ref": "ddb44947-27a8-4e48-8654-318bc67944d9",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6712e85d-1412-4aed-b177-cee1d64b3822"
        },
        "item": {
          "id": "e8a8cac9-f163-4433-8ac3-a55dfd34f680",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "65ddcff7-81f9-459e-8265-4e006595d503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b6439b-a1c8-4602-9fda-8d673b640dba",
        "cursor": {
          "ref": "5c56dad3-a1c7-4c30-a049-c04789e30595",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "155e82e3-521a-4ffb-b8b4-1027968282bb"
        },
        "item": {
          "id": "b2b6439b-a1c8-4602-9fda-8d673b640dba",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9b7cc182-bf9d-4a30-8e78-17110d53d5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110489db-2a95-4a19-840a-f4cdabb50420",
        "cursor": {
          "ref": "c0036751-d8b2-4f02-a212-61e677d32d6f",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3c8733f9-0395-4d2b-9110-1df8981deb38"
        },
        "item": {
          "id": "110489db-2a95-4a19-840a-f4cdabb50420",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e2f81e10-a949-490a-9842-d5b914427822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bf02e7-587f-4652-8896-811f548c8e53",
        "cursor": {
          "ref": "78bedc79-8b58-475b-bbcd-a4a5fa1af813",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "aded0d8f-656a-41fb-b30c-8066ae86172b"
        },
        "item": {
          "id": "62bf02e7-587f-4652-8896-811f548c8e53",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7acd61c8-e84d-4beb-ae74-54d508a7c823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae3bfa3-b2f1-4d0a-981c-03809aa9b08f",
        "cursor": {
          "ref": "c1ac490e-8152-426e-813d-60b05930bf40",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "85dfdc05-4966-43a1-be5a-01522d2a8162"
        },
        "item": {
          "id": "4ae3bfa3-b2f1-4d0a-981c-03809aa9b08f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "55341acd-f332-4802-9354-3650305f77a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e25fe0-ef86-45bc-a8a0-a749edec9c71",
        "cursor": {
          "ref": "e42b13c1-a6ec-48a0-afbf-c3e1dd6bd7a9",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "193e315e-4f20-41d0-b4ec-a8d3448cc5fe"
        },
        "item": {
          "id": "d3e25fe0-ef86-45bc-a8a0-a749edec9c71",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "493a0282-9822-4231-b1f9-3e955d3e47dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc2168e-1c62-4ad6-b03f-96a98a55451c",
        "cursor": {
          "ref": "f82f0e7d-f7a5-4d06-91b4-fd31849a602b",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "80273dde-cb83-4fff-8067-cb19728c3fc7"
        },
        "item": {
          "id": "fbc2168e-1c62-4ad6-b03f-96a98a55451c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4db7997b-4413-4170-ae08-b5ad5366aae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f96041-6e92-42e5-8668-eb0082d22bc7",
        "cursor": {
          "ref": "3528d3b8-de17-481b-b0e9-b20bc632923d",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7e447679-6ba6-478c-a2f3-a7b031f83d7e"
        },
        "item": {
          "id": "b1f96041-6e92-42e5-8668-eb0082d22bc7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8f2533bc-6508-4e04-9eca-601c71c9e831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1206a717-9a5a-4f77-b68e-3fa9b3063750",
        "cursor": {
          "ref": "4451ee7b-7494-47b6-ad20-2ae2b7233f0d",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5a83895c-8a98-4b13-ac8e-58a997a458f8"
        },
        "item": {
          "id": "1206a717-9a5a-4f77-b68e-3fa9b3063750",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b4c61688-70a6-4586-a0a7-069e87f99ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe03b18-d7f0-43d7-90d6-29afc23e9438",
        "cursor": {
          "ref": "544a403d-2565-40de-8844-830b4848acc2",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "373440d4-3f94-4189-bacc-dace406a4b7c"
        },
        "item": {
          "id": "afe03b18-d7f0-43d7-90d6-29afc23e9438",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d7c80aba-3f03-4f77-9b7b-99ffc62da45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5ec4de-af2e-41ae-a4e2-620ea33556ad",
        "cursor": {
          "ref": "4eb9b42a-156f-4eae-b8c4-d98dcddbac47",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "58e1589d-cce8-4ca4-88c7-10451b4a3b8e"
        },
        "item": {
          "id": "2c5ec4de-af2e-41ae-a4e2-620ea33556ad",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6a6f60f8-7ea4-4b0b-b0f9-c3143e0ba428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa9b689-dfeb-4354-a0f5-38a9f648154b",
        "cursor": {
          "ref": "9e29bb37-9a85-499d-b642-cce2d3b99613",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cdb47ab4-5c4e-477f-b16f-d4e8a2da30b6"
        },
        "item": {
          "id": "2fa9b689-dfeb-4354-a0f5-38a9f648154b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9825acbf-663d-4ccc-8777-b439408fcefe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2c9a4e-c547-4491-b97f-d81d297d798e",
        "cursor": {
          "ref": "74591221-8881-456a-9629-daeadbf50f8d",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "70462bd9-2a21-471d-91a9-8bf74934b139"
        },
        "item": {
          "id": "3d2c9a4e-c547-4491-b97f-d81d297d798e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ccc1b6e0-19d7-4db6-a45d-1feb07c099c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e21ca31-d00a-414c-9580-2d3bc9adfe4d",
        "cursor": {
          "ref": "2682ff5b-dd5f-4918-8140-439bc88495d4",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "682eb0c8-e855-4e2f-9230-9ec92e0d8b7e"
        },
        "item": {
          "id": "6e21ca31-d00a-414c-9580-2d3bc9adfe4d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fe6776f4-e99d-40a1-affb-9406192e3ae1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062913af-fbba-4423-9f67-ec62f2754611",
        "cursor": {
          "ref": "c80feb1d-5a3f-4a4e-9e53-563e918b313e",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b9370874-566d-4cf9-867f-e4477b670e2d"
        },
        "item": {
          "id": "062913af-fbba-4423-9f67-ec62f2754611",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bf6a4319-49d4-424e-a16c-91ad844b953e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843b566c-3784-403b-b7ef-b78506ba9c84",
        "cursor": {
          "ref": "64c5c8cc-b328-40b2-ab00-80d356ea9fd6",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "89c337b8-29d0-44a9-9269-c8a07cf4c2d1"
        },
        "item": {
          "id": "843b566c-3784-403b-b7ef-b78506ba9c84",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d892e52c-6df0-49cc-bd63-a2909bc007d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd7dbb5-ce09-4fcc-bff8-de239e4ad677",
        "cursor": {
          "ref": "5bf7240f-9c42-437a-8736-ef7ef942e9ed",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2bbf988c-c954-4ac8-9a38-1f00895b62b7"
        },
        "item": {
          "id": "2dd7dbb5-ce09-4fcc-bff8-de239e4ad677",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d1c812ab-0915-4cc5-b1a1-8100c4815aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a89f3c-388d-4107-80f1-3c9fe94040be",
        "cursor": {
          "ref": "af50c981-c25e-46c5-9015-38d68cac4161",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1d6b834e-d1fd-499d-bfcf-66d216140edb"
        },
        "item": {
          "id": "a9a89f3c-388d-4107-80f1-3c9fe94040be",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "978b9dbd-3006-49dc-9217-5d32b93541e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b22b28b-ffa6-4fbd-9904-90d5ec7e8fc5",
        "cursor": {
          "ref": "7f10bd20-1a2d-4909-98c0-b33c70e45f92",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7d13808e-c810-4200-a741-e125559d2ade"
        },
        "item": {
          "id": "7b22b28b-ffa6-4fbd-9904-90d5ec7e8fc5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a3805ee0-2d71-4688-8231-4a91ede53380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baab6651-0f43-4334-9a74-59bf5c734ad9",
        "cursor": {
          "ref": "80d0dce0-d8fa-4d5b-b276-a4c8977697da",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2581eeff-c7d7-4b3d-a649-72112e0741a4"
        },
        "item": {
          "id": "baab6651-0f43-4334-9a74-59bf5c734ad9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "561298f5-f09a-4c00-ae39-98078cd135fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9c9787-9e25-4a0a-add7-5644451e7f4b",
        "cursor": {
          "ref": "b492b8f6-e465-4859-8e25-f651b2bd994a",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f8943ae1-dbc7-4d86-b35e-0e337df25c98"
        },
        "item": {
          "id": "1c9c9787-9e25-4a0a-add7-5644451e7f4b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "295aa01f-17d8-418b-9546-bf048fa2fe4f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb30d40-bb7d-4a8a-8440-a1ff81a70b4e",
        "cursor": {
          "ref": "38f0b17a-b7d3-4a9b-a943-a34d73bce206",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c2769d16-4135-41fe-922a-0ff7ff06b365"
        },
        "item": {
          "id": "ccb30d40-bb7d-4a8a-8440-a1ff81a70b4e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4ac03abb-3cae-447e-a52a-44aa194290f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc81112-978a-4a05-a7e4-3c1d40fbe4c5",
        "cursor": {
          "ref": "bd97396d-b8b1-4938-98e0-19eedcc17a65",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e5f8b937-779a-435f-a67c-71eb859a9195"
        },
        "item": {
          "id": "5bc81112-978a-4a05-a7e4-3c1d40fbe4c5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d95c8588-a266-4c2d-9062-504e712ae986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e032a7b6-22c6-41f2-8aa3-7e186a82d9be",
        "cursor": {
          "ref": "4d955834-e0d2-4d34-a595-3289e801a092",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8324cc15-9e63-4554-92a6-cd13b6ccc451"
        },
        "item": {
          "id": "e032a7b6-22c6-41f2-8aa3-7e186a82d9be",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ee94b8da-e634-4dd6-858c-f2c685947648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39252dd5-62a8-4b53-b0b6-c924088a5d7a",
        "cursor": {
          "ref": "5227b80c-b01e-427b-9595-5ce4440de8b4",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "af6d18e2-ed07-4428-9ee5-089ff1bea20d"
        },
        "item": {
          "id": "39252dd5-62a8-4b53-b0b6-c924088a5d7a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "66722afb-1112-4c2f-a403-7728f20a034b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3b12e1-3436-4e4c-b58e-38aae803ce93",
        "cursor": {
          "ref": "5ea62a19-47e3-41d0-b18c-4145918de344",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cd8b4517-3512-491b-98b4-761ae416e180"
        },
        "item": {
          "id": "4a3b12e1-3436-4e4c-b58e-38aae803ce93",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b9753e9d-b48e-435a-be9d-9d851e457292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed6cd83-7605-4b75-ae8e-6a222a16c64e",
        "cursor": {
          "ref": "1e533266-d03d-4b7a-a764-3593b982b68d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0f438c2c-ad91-4631-88aa-2450c3dbfa45"
        },
        "item": {
          "id": "1ed6cd83-7605-4b75-ae8e-6a222a16c64e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ed85e174-cda1-4d2c-a2fc-8b51002e4d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cc9257-344b-4dd7-bc38-a509e3541ed2",
        "cursor": {
          "ref": "1e1c5704-d827-4a3c-b89a-7a726f71acdb",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ed9b4050-04f6-4039-91f7-3f17856721c0"
        },
        "item": {
          "id": "b9cc9257-344b-4dd7-bc38-a509e3541ed2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0232c6ec-c169-4b77-b704-f317ef71cf40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4805257-9dca-4adb-bede-780d2771d66b",
        "cursor": {
          "ref": "f3ca1507-153c-4442-9421-45d70d60d5e0",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c8ca9282-3033-457e-9c7e-75207dc88255"
        },
        "item": {
          "id": "e4805257-9dca-4adb-bede-780d2771d66b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cf038274-3d21-499a-b2f8-5f9de773ac4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b41723-99bf-4f67-83fb-e28f835c590e",
        "cursor": {
          "ref": "bde375d2-0083-48fb-a923-12bec3e5efa6",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "003b8e77-387b-4ffd-b504-aa9b05590f04"
        },
        "item": {
          "id": "43b41723-99bf-4f67-83fb-e28f835c590e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ed79fa6d-4c94-4d68-ae23-71fc6aa905bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b677b65-6f77-4600-990c-e9f4724eb375",
        "cursor": {
          "ref": "825474c5-6dfc-4049-9cca-cdc11b4bdfb4",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c92a3ffc-92d7-4e49-a72f-4880b818e532"
        },
        "item": {
          "id": "4b677b65-6f77-4600-990c-e9f4724eb375",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "79812a01-17af-4bd0-8f9b-a711f67b002e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e909b4df-d9bf-4d4a-824f-640a935e8cac",
        "cursor": {
          "ref": "b8f4bc4a-654d-4cde-b732-efa6bd067c36",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2cd9aac1-ccbf-48a1-9e79-6bbaab841804"
        },
        "item": {
          "id": "e909b4df-d9bf-4d4a-824f-640a935e8cac",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5c9a0b79-594f-4053-8853-a58f468c268f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1248f506-704a-4ec4-ab0e-70242d01f07e",
        "cursor": {
          "ref": "3a9fb6e9-2ee1-45bb-859b-6e28a81a5968",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f7525780-2313-4d60-a5fe-19ba007379ed"
        },
        "item": {
          "id": "1248f506-704a-4ec4-ab0e-70242d01f07e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d3bde5b7-b49a-4ad1-8f55-2066f7d16608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639ec720-2326-4069-9cc0-fbc9cdf2ab86",
        "cursor": {
          "ref": "6390b559-c55d-4917-b152-b6ce0397b327",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c0b4efe7-6f70-4d0b-9522-abcd096c4043"
        },
        "item": {
          "id": "639ec720-2326-4069-9cc0-fbc9cdf2ab86",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e323d25a-81b3-41cb-aaed-462671064674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0774a211-806f-4d96-aae3-def66967c174",
        "cursor": {
          "ref": "52616a18-7a94-4d58-b701-1f03c4202785",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "978f48af-11e1-4ee9-bb7d-5706d43c57d2"
        },
        "item": {
          "id": "0774a211-806f-4d96-aae3-def66967c174",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5dba5ebb-730f-4266-9f4a-128a34dd4af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6e3693-f553-4b4f-bbd2-ca5b96cdc9df",
        "cursor": {
          "ref": "b05fd4c6-8366-4803-bf1b-4deda8f3c99d",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1888e170-7082-4bba-a62e-9ac720ba07a8"
        },
        "item": {
          "id": "ab6e3693-f553-4b4f-bbd2-ca5b96cdc9df",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0ed7423d-d9bd-4345-8e99-e4cf2a5faad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f21dc6d-0f2c-4a0d-86e4-6a07eccd2cfe",
        "cursor": {
          "ref": "8d34991d-0910-43f1-8493-ef8c3ed676a0",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "faf4324a-1027-4b9f-881b-e90b17dd52f9"
        },
        "item": {
          "id": "5f21dc6d-0f2c-4a0d-86e4-6a07eccd2cfe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4d136654-7892-4a7e-a6c6-5ed7c4f751a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18dde1c1-234d-4bfb-b9d1-04f7c3b869c4",
        "cursor": {
          "ref": "76911c07-ac0c-4f80-8b14-639eb44614fa",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0b7c491e-b18e-4d87-9f82-b8a9ded93f56"
        },
        "item": {
          "id": "18dde1c1-234d-4bfb-b9d1-04f7c3b869c4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7e0b277a-9701-4f06-8aea-1d77bcb24b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01751f89-05d5-4a42-906c-9f4433ad787e",
        "cursor": {
          "ref": "2efee637-4872-4bbd-aae8-346b9ce9afc1",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "928cea9e-877c-4e83-b2b2-a7cfd26910d4"
        },
        "item": {
          "id": "01751f89-05d5-4a42-906c-9f4433ad787e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0a11c49d-0d07-4bf5-afc8-26a2bd721817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f63a98-9d52-4d4c-b995-e22d3e7121d1",
        "cursor": {
          "ref": "86f61328-ff04-423c-a53d-7053fd24d94c",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2d8a4a18-5e73-4e32-84de-26a86c803793"
        },
        "item": {
          "id": "09f63a98-9d52-4d4c-b995-e22d3e7121d1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "823fcfac-7ccc-43dc-9e9e-67faf2d7c556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b776cb-65a9-4d6d-b449-02102001c3d6",
        "cursor": {
          "ref": "8fcc9832-d563-4cca-afa6-a19df27e7288",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a0c63465-6679-4d96-9e7a-39ad92ab3c90"
        },
        "item": {
          "id": "48b776cb-65a9-4d6d-b449-02102001c3d6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "36147c5c-8cc1-470d-be94-4fe321bc8c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3c401f-0ff7-45ec-98be-13a46acc7f06",
        "cursor": {
          "ref": "3487a899-b9e5-439a-bbad-58207bbfd4b5",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "05126f56-59c4-4011-b362-bbdc56c6825a"
        },
        "item": {
          "id": "3e3c401f-0ff7-45ec-98be-13a46acc7f06",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2186ee32-f752-4b3f-bef7-e55bf76ca794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fbb18a-7130-4571-9548-0af56661c2de",
        "cursor": {
          "ref": "b7faab32-97f8-491e-bd4b-4fe411a72fd9",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ceff4ec4-69f5-4df7-bc10-3f69f11d7b9f"
        },
        "item": {
          "id": "66fbb18a-7130-4571-9548-0af56661c2de",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "29bbc971-6278-4222-8ad7-aefb948702e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcaf0f2-9f31-4a61-b619-1c5ec6da0901",
        "cursor": {
          "ref": "f461db22-4f40-4cd5-a45a-19c1d4ad10e5",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "63d3fb15-5cc6-48e5-a5b4-6b1501eb3968"
        },
        "item": {
          "id": "5fcaf0f2-9f31-4a61-b619-1c5ec6da0901",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c6f37523-3d1a-42e8-8543-9d6db681e097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fabcfed-6b9e-490f-81d3-fa1e59dec8c4",
        "cursor": {
          "ref": "25257b39-a976-43a2-bbcd-27e80747eba1",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ef8f079b-eab0-405c-9f5f-c125b3e575d8"
        },
        "item": {
          "id": "1fabcfed-6b9e-490f-81d3-fa1e59dec8c4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3cfd0a57-4530-4af3-943e-6dc14cd0840d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193004d2-a4ac-41f0-b860-8c5156aa2f32",
        "cursor": {
          "ref": "9169c508-4a7f-414f-a6d8-8e0c72d5df51",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0a57d3fd-c39a-401d-81d9-fd733e9f231f"
        },
        "item": {
          "id": "193004d2-a4ac-41f0-b860-8c5156aa2f32",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6f6ac5dd-20ba-4f9b-bbe3-2c48b2c4c45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5f3f07-f13e-4599-96d8-3085095ec627",
        "cursor": {
          "ref": "9c99a447-d8de-4806-9f9b-5b0ed5577df5",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "726a6945-35e0-4ada-a287-9bc50a374704"
        },
        "item": {
          "id": "5f5f3f07-f13e-4599-96d8-3085095ec627",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bb8fb5e7-48ba-4b53-8843-f86974f7242d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21ef56b-da08-4f81-be83-e3925fa87cd3",
        "cursor": {
          "ref": "f706776d-2f8c-40de-b791-32368abad9a4",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fd55e660-785b-436a-ae8d-45245c79c887"
        },
        "item": {
          "id": "e21ef56b-da08-4f81-be83-e3925fa87cd3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d1ae4d14-68d5-49c4-865d-b25a78de61f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af450089-4a13-4362-b7b4-a9a8ab97591e",
        "cursor": {
          "ref": "0a131f67-59e7-4d30-abf5-f198863baefd",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "036bcf6d-4464-48e2-82eb-edc4fb15ba08"
        },
        "item": {
          "id": "af450089-4a13-4362-b7b4-a9a8ab97591e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e5ac7d9e-a926-4a0e-92be-e244c156b854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4923bb-175d-4a90-b370-1d5b92478e32",
        "cursor": {
          "ref": "1c87eda5-ee19-4793-9bd1-a98fc9ea4435",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c3be7a85-2017-46f4-aace-6580260de395"
        },
        "item": {
          "id": "6c4923bb-175d-4a90-b370-1d5b92478e32",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "941aa9af-60a7-4a97-b935-6e908de3f585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a250d9-501a-4d6a-a4c5-3d9843612efa",
        "cursor": {
          "ref": "b59796b4-b742-4132-a3c1-50cdafa0f1e3",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9d80d6a9-adcf-460d-b584-13640ac798cc"
        },
        "item": {
          "id": "e8a250d9-501a-4d6a-a4c5-3d9843612efa",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d2515c01-15f1-4fb9-b28c-267eb0a0f840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375beac6-6d6a-4871-9f09-c62740c002d9",
        "cursor": {
          "ref": "7eef9796-771c-4362-b953-4f300420c875",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4aeaed4d-de7d-4f71-b98f-dc2ba9bda10c"
        },
        "item": {
          "id": "375beac6-6d6a-4871-9f09-c62740c002d9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1dd882af-6ddd-4c66-9bc2-1065c7fab0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03046701-fa60-41c5-9ec9-353438035a48",
        "cursor": {
          "ref": "d711bb41-6132-4bbc-87ce-7afff1b18b4f",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "acb77ea1-2292-44dd-9678-b63504f4c367"
        },
        "item": {
          "id": "03046701-fa60-41c5-9ec9-353438035a48",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "65f0c152-838f-4055-a296-29c2f9b564ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb1e8e7-115d-4a20-9b98-b84ba4c53978",
        "cursor": {
          "ref": "85fe1ba4-9fdf-40b2-8f00-cd69d17005ae",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7e9f2c4c-9a69-47fc-bffb-451f358cde11"
        },
        "item": {
          "id": "5eb1e8e7-115d-4a20-9b98-b84ba4c53978",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2f3643eb-cc38-45bc-8a9d-35fc6b00f704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421f368a-f43f-46c0-b2dd-372396e12905",
        "cursor": {
          "ref": "6ed97a95-c468-4f58-b3dc-e5b0b505aba6",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "40b38c63-1173-439d-abe2-ed6207338f75"
        },
        "item": {
          "id": "421f368a-f43f-46c0-b2dd-372396e12905",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d31cde7b-5b84-4629-a4c2-6deb0d64be0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b906a8c0-752b-4ffd-b115-695c6f8ba11f",
        "cursor": {
          "ref": "31de17a3-9c60-4a22-8aeb-2a1b05572776",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9fbf5a21-2980-4ca5-81d1-cc139b6f5dc1"
        },
        "item": {
          "id": "b906a8c0-752b-4ffd-b115-695c6f8ba11f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ed9ae449-e402-489c-b144-740792faae49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74a9956-9045-4bc0-8a6d-1c950f0eac48",
        "cursor": {
          "ref": "c78f9410-2845-4623-9b11-fcddd69ded62",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "18a48ee4-ebf3-4a3b-8758-fef1dcad1c71"
        },
        "item": {
          "id": "f74a9956-9045-4bc0-8a6d-1c950f0eac48",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f684c8fb-c33e-4130-9b0b-1c7bb418cbd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c744635f-c5b0-4edd-9701-49fdd4d2487b",
        "cursor": {
          "ref": "dafd078a-310f-42ed-b7d2-aa38cd73dc41",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "63ca8ce9-9b01-4bb9-831b-7763dc44b40b"
        },
        "item": {
          "id": "c744635f-c5b0-4edd-9701-49fdd4d2487b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0812f56b-74e3-42df-9334-fbacb8a04869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cd4953-1b16-408a-931c-9dc54325d66f",
        "cursor": {
          "ref": "1632d091-4416-4cd6-8714-994abb6534dd",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "74d949c4-df13-4ad7-b025-f115b44c3871"
        },
        "item": {
          "id": "54cd4953-1b16-408a-931c-9dc54325d66f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e4f34b3c-1044-4a89-996b-f654c51feb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78be5d1f-0f54-4cea-b302-b30410c07767",
        "cursor": {
          "ref": "4da2dd8f-65aa-4235-9e60-699e8de6b21c",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "99cb5615-111a-4648-bd36-48b33a7d0d5d"
        },
        "item": {
          "id": "78be5d1f-0f54-4cea-b302-b30410c07767",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c3cfac5d-3f70-4f7e-a715-631c2e1f1148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07d333f-0651-4ad6-9ba4-6217002f66d9",
        "cursor": {
          "ref": "214a9d6d-3fc0-4a72-9889-83f7ca8ce860",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9b07ba28-e4b3-471b-aa32-c3f16fea36dc"
        },
        "item": {
          "id": "d07d333f-0651-4ad6-9ba4-6217002f66d9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9d957657-48bb-4cfb-bf43-f5e8d3368e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdc4906-2d64-4571-b755-09c82d5c698c",
        "cursor": {
          "ref": "806d0585-3589-4c3a-9bf2-56f2e84c670f",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "74147786-5895-4ebf-9600-44a024d3a538"
        },
        "item": {
          "id": "4bdc4906-2d64-4571-b755-09c82d5c698c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ead23571-6398-4abb-b334-e35cff50fab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a740227b-cfc3-40cc-ba13-16c411a4fde0",
        "cursor": {
          "ref": "ca14dc3f-5f6a-4f99-b8ba-b9b5c2e122c8",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "836b3db3-cc98-4521-b720-a75070712535"
        },
        "item": {
          "id": "a740227b-cfc3-40cc-ba13-16c411a4fde0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9b2232b8-eb9e-436b-8279-2d6f5958f814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca083ab-da5b-49e4-9fde-8259b64412a1",
        "cursor": {
          "ref": "9d4a7862-b5fc-49ad-864d-3fe55195af6e",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2bb277a6-a396-4c75-a25d-7b6bb97d962e"
        },
        "item": {
          "id": "6ca083ab-da5b-49e4-9fde-8259b64412a1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3d0fcd5d-1dda-461c-9dc9-533d5d98880f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac6b3ad-acbc-4e04-8268-b567b2c47e8a",
        "cursor": {
          "ref": "80194fe1-810e-4d15-996d-4f5cd44fb564",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "107d9e08-0e37-4745-9cd8-a23f245c173b"
        },
        "item": {
          "id": "1ac6b3ad-acbc-4e04-8268-b567b2c47e8a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5f63747f-d30b-41bf-aa36-8607cd0c4537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d28c95-e0c7-4355-853d-f1d2d8c4cc74",
        "cursor": {
          "ref": "775b9030-f617-4e6b-ad4f-99bd11c006f3",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5e0b762a-b664-413b-a4da-91de39077f82"
        },
        "item": {
          "id": "c6d28c95-e0c7-4355-853d-f1d2d8c4cc74",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9dd802bc-f8b5-4903-8870-90105ca00f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17114e00-dd29-453d-a2aa-b65adca33d3f",
        "cursor": {
          "ref": "74d0d6b6-b813-4c48-857a-cf28b1241546",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "12b4204e-caee-47ed-9a74-7eb0ec08cedc"
        },
        "item": {
          "id": "17114e00-dd29-453d-a2aa-b65adca33d3f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "70226f51-22d0-4bfd-a205-491f5533b6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b833511c-f3b3-4c24-b8a0-07bc48aaf9fa",
        "cursor": {
          "ref": "9058352f-436c-403c-a194-144d06f08a89",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5bc4e0e0-4fca-4f50-a540-7232d393edbe"
        },
        "item": {
          "id": "b833511c-f3b3-4c24-b8a0-07bc48aaf9fa",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4314c505-4304-4744-9b9e-c1a02a9e3400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4641c255-c9d5-4db4-967d-1596bd263d18",
        "cursor": {
          "ref": "214a829c-7b13-40d3-8fe2-0b69d380200c",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6234a4ca-2d25-4e43-af23-138cb3c7fada"
        },
        "item": {
          "id": "4641c255-c9d5-4db4-967d-1596bd263d18",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "89a94c98-473d-4d11-8379-03e21a2d0c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e58c730-b45f-429e-8b5d-4596022e32ed",
        "cursor": {
          "ref": "35fca798-dd85-4aed-8831-c04741ea353d",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "98936fde-6100-4430-96f2-a444da69a747"
        },
        "item": {
          "id": "9e58c730-b45f-429e-8b5d-4596022e32ed",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9e6e4c65-c5db-4023-bed8-a47f47a71a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3f16db-7c2c-4c69-ba23-0af56dfd8824",
        "cursor": {
          "ref": "1f479a0a-ccdf-4ec1-ac01-03d9ee5a5cc9",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ab3fc6ee-35de-47e8-b2a0-5fd296664346"
        },
        "item": {
          "id": "8c3f16db-7c2c-4c69-ba23-0af56dfd8824",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fab9472e-2349-405c-83c9-2bbf7f6be264",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7475e9-5784-443c-94da-13ee811a3e99",
        "cursor": {
          "ref": "5e8e8c04-77c9-4c57-a252-c2c9087e22e3",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "68404c59-ab46-4f30-a97a-2042d80ced69"
        },
        "item": {
          "id": "2a7475e9-5784-443c-94da-13ee811a3e99",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e2d637d6-b6c3-4a44-852c-843a961e4f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "18db88d8-2e90-4286-bf15-ddcf75a4d182",
        "cursor": {
          "ref": "f3c934c4-036c-4f12-978e-f946238a6ec7",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4ba46c82-9571-404f-b14e-239e34ee00e4"
        },
        "item": {
          "id": "18db88d8-2e90-4286-bf15-ddcf75a4d182",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1213878f-9d42-4fb1-a985-2d3f88a66241",
          "status": "Created",
          "code": 201,
          "responseTime": 6646,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c032f37-e49c-4bf0-9b0f-fdc27a55543e",
        "cursor": {
          "ref": "9ded38d8-0d10-4ce8-92b5-aa0411e136a8",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "26bd2866-5011-425d-92a9-7ef5ac1fb9aa"
        },
        "item": {
          "id": "5c032f37-e49c-4bf0-9b0f-fdc27a55543e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7bd8693d-9fcb-416c-b358-22ed97c44612",
          "status": "Created",
          "code": 201,
          "responseTime": 5622,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b312bcce-a039-4884-8764-2bbd7e3cb2a6",
        "cursor": {
          "ref": "8ab1de49-7f19-41ea-8570-46cd523db107",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2f412c60-b22c-491e-8e75-add1cb8c46dc"
        },
        "item": {
          "id": "b312bcce-a039-4884-8764-2bbd7e3cb2a6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3010beb4-123b-410d-824a-9efed516104d",
          "status": "Created",
          "code": 201,
          "responseTime": 6281,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ac0d4e-ed40-465a-9588-dbabdd8c07eb",
        "cursor": {
          "ref": "9a0d1b55-371c-43e1-9d06-c40058d36650",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2f2d6cec-2ec9-4f91-9be7-46c0330377df"
        },
        "item": {
          "id": "78ac0d4e-ed40-465a-9588-dbabdd8c07eb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4f900bce-a15b-4e33-b93d-25398c7da1bb",
          "status": "Created",
          "code": 201,
          "responseTime": 6441,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be2e357-57ed-4c1a-874d-26cdeec6bb58",
        "cursor": {
          "ref": "46015d30-827a-4fe5-b81c-dc82d2c54a7f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "35c45d39-5ba8-46f4-922e-2ea9a9c19301"
        },
        "item": {
          "id": "3be2e357-57ed-4c1a-874d-26cdeec6bb58",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "15985fce-b3c6-43e2-a485-b4b5a6fea62a",
          "status": "Created",
          "code": 201,
          "responseTime": 6133,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-09T00:42:56Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-09T00:42:56Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "7c30f0de-ea29-43c0-b985-f74a4a33d600",
        "cursor": {
          "ref": "55be9175-32de-4d56-8375-0e3bb0e7b6eb",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "cdd0850a-9f8b-4367-a47e-793f00254e6b"
        },
        "item": {
          "id": "7c30f0de-ea29-43c0-b985-f74a4a33d600",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e1738175-8101-47ac-9a8d-5df99864c749",
          "status": "Created",
          "code": 201,
          "responseTime": 6094,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5fc3c1-50d8-4dbe-8680-49570822f971",
        "cursor": {
          "ref": "e300e380-16a3-4297-ad05-21cfb4ab5812",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "088d1bde-6553-4f3f-9f54-4c576fa09fe8"
        },
        "item": {
          "id": "cc5fc3c1-50d8-4dbe-8680-49570822f971",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1950fb43-0457-4187-8930-50aa16c5cebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6fca48-5548-49e2-b5be-f770dc7d7d54",
        "cursor": {
          "ref": "039a8948-cf03-4bf7-a38e-3c3954a2c5d8",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d90654ce-a080-4ae1-98f1-97eeb8a5dddb"
        },
        "item": {
          "id": "6a6fca48-5548-49e2-b5be-f770dc7d7d54",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "188bcaae-a6ed-4a38-927b-06c3306b98d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2f2468-c294-4d6f-8890-be94e17ca2e4",
        "cursor": {
          "ref": "3e3c5c9b-022b-4e8b-875c-074435da8a2e",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "415c0fa6-0779-4e15-abaf-1fa353f4bd2f"
        },
        "item": {
          "id": "3f2f2468-c294-4d6f-8890-be94e17ca2e4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e1337f12-6d3c-44e6-ba53-cef375902fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bdc8a5-3b9d-454e-bef6-0e0dd127b682",
        "cursor": {
          "ref": "8c393f1e-610e-4fc2-91ef-8088a1f033f0",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f6c9c075-9aa4-4cef-aba7-b589b17c401f"
        },
        "item": {
          "id": "02bdc8a5-3b9d-454e-bef6-0e0dd127b682",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7a2f724c-1c1c-425f-99a2-618e02609edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbc8f74-bead-4ff6-b326-47eb99301cf1",
        "cursor": {
          "ref": "fc96bdbc-20bc-430c-a5d4-842b4ea9838b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e7f7a5f2-91af-4859-bd24-f6b916024aa1"
        },
        "item": {
          "id": "fbbc8f74-bead-4ff6-b326-47eb99301cf1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fde09864-6faa-4223-b585-89499adbdde2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf0618b-4b7f-4764-a49a-a9580e2af60f",
        "cursor": {
          "ref": "bff6b01a-6efd-434a-a3f8-ec62e028aabf",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0da85512-1294-4249-98e4-848212a1cde9"
        },
        "item": {
          "id": "baf0618b-4b7f-4764-a49a-a9580e2af60f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a730d9ac-1805-483a-9beb-d2b5fb5df9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c34d8d-3f26-47e6-b88a-496f1b209cbc",
        "cursor": {
          "ref": "3639b29e-ee65-421b-b021-65c1d2f88155",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dd5e5c71-45bf-4909-b3f0-ee8c4e14a4a7"
        },
        "item": {
          "id": "f4c34d8d-3f26-47e6-b88a-496f1b209cbc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "918dd5a7-5984-4c5e-ab0a-968e21f88a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1e73d7-793b-445d-85ab-24e7d006e026",
        "cursor": {
          "ref": "08f1c718-844d-4911-a663-d02dbba73b14",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a43692b1-f748-420c-96ec-53b884adb908"
        },
        "item": {
          "id": "cb1e73d7-793b-445d-85ab-24e7d006e026",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "50bd18df-5545-4965-a52a-cd60feadb72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc3f332-3db6-4798-bb6b-e82271e76bbf",
        "cursor": {
          "ref": "853b7b8c-6994-40c9-9b7c-0a07b51abed8",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8d66564e-47f5-40b1-9143-c9a7d498e0ed"
        },
        "item": {
          "id": "1dc3f332-3db6-4798-bb6b-e82271e76bbf",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "be0e4df9-09f9-4cee-ac06-c3756a89c62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5030c883-a7d7-4b40-8c9c-8a3383101c5b",
        "cursor": {
          "ref": "16838927-d3b7-4704-a449-eb2a4448df14",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3ec0ee79-d663-45db-abb4-c65610ceb8ff"
        },
        "item": {
          "id": "5030c883-a7d7-4b40-8c9c-8a3383101c5b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "84071d1e-d9e2-437e-93e2-896d22ea6ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c56482-8394-43af-95c1-da9778fbd9fd",
        "cursor": {
          "ref": "cda2708e-7479-4bde-ac1c-abcf92f19b48",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "38754e89-bf93-408a-93bc-0af6bdcedff5"
        },
        "item": {
          "id": "65c56482-8394-43af-95c1-da9778fbd9fd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "647687af-9546-41f2-911f-4753d0c4aab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f95cdc-668e-423d-9c48-cb3f17a58f5e",
        "cursor": {
          "ref": "3a8b8c11-50da-45af-9553-9299add6d94a",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ae191cfe-2caa-4aeb-8b84-409538d06820"
        },
        "item": {
          "id": "d3f95cdc-668e-423d-9c48-cb3f17a58f5e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c3f890bb-8db8-4cce-9b44-3a679bda289d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e0673d-e16f-4b7d-97b7-1b023e768ad3",
        "cursor": {
          "ref": "adce1aef-dc55-42c5-aacc-977c2319912c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9463bd84-dad6-45b2-83f2-05e4fc29d465"
        },
        "item": {
          "id": "62e0673d-e16f-4b7d-97b7-1b023e768ad3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "01562a5d-065e-43bd-ba7e-ad72db11c9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66be4d6e-0314-45ba-9377-0ca5d2d73c36",
        "cursor": {
          "ref": "46632c42-1f02-42e1-ba1e-df587841ef4d",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a6181da6-d962-445b-b092-285f4d2a1b0e"
        },
        "item": {
          "id": "66be4d6e-0314-45ba-9377-0ca5d2d73c36",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3f7af98b-b3a0-46af-a43a-03ef9e888a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752a6344-920f-4d03-a789-61a3ded29841",
        "cursor": {
          "ref": "7f3b07db-8478-4af4-8611-86fc72054303",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "11c660d6-8e2e-456c-b0b2-659210f30436"
        },
        "item": {
          "id": "752a6344-920f-4d03-a789-61a3ded29841",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6bfb5f58-907b-4e6c-9363-5c7d74079f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e52dafd-a1f4-478e-9200-a838f32e75df",
        "cursor": {
          "ref": "3f25dcef-444b-48cf-9120-7776257e933b",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "793b92d1-bc2a-40f5-b7ac-dc51d21b7766"
        },
        "item": {
          "id": "3e52dafd-a1f4-478e-9200-a838f32e75df",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d5331605-beea-4aab-b495-53cc52e53fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5992365c-36f6-4b7d-92ca-9a9f7215ffbb",
        "cursor": {
          "ref": "3366f3f5-279c-4ba6-ac8d-2c0ff46f871c",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3cafb727-4495-47bc-8751-c8e194039f8c"
        },
        "item": {
          "id": "5992365c-36f6-4b7d-92ca-9a9f7215ffbb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b11a4b93-4f29-4c96-bcc6-c36783180226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b0f0f9-1094-406b-a069-2019e0d8844d",
        "cursor": {
          "ref": "a5e6f9a4-db18-4306-b372-db0186009343",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7dca4161-1fe3-467d-a933-36dddab38fd0"
        },
        "item": {
          "id": "67b0f0f9-1094-406b-a069-2019e0d8844d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3940942b-ee95-4184-8b08-884393822dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37835d5-69ae-458c-b2bd-6744db412a52",
        "cursor": {
          "ref": "f7d9d7f9-b7d8-4cfc-a09d-2d01ac48b1de",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a4e02533-ffcb-47c6-aa4b-53f8cca0a8ad"
        },
        "item": {
          "id": "a37835d5-69ae-458c-b2bd-6744db412a52",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "45e5b0e5-f140-4228-86de-11af3e8ff289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d62813-fa05-4853-8ba7-ca39802aa500",
        "cursor": {
          "ref": "fd2b7cdb-fe43-4489-b48c-54fca7fb5344",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "68b18dca-17e0-4322-b657-593b283b1eea"
        },
        "item": {
          "id": "00d62813-fa05-4853-8ba7-ca39802aa500",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "62435f1b-c51d-4e7c-b05d-fe84ee31cb48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83fa6ff-6e6d-4c26-95df-4d8fb82d6c59",
        "cursor": {
          "ref": "310f9b5b-804e-4af4-860b-8fff06fd716f",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "583968ac-d876-4ef9-8cdc-c013c99f149f"
        },
        "item": {
          "id": "e83fa6ff-6e6d-4c26-95df-4d8fb82d6c59",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "be35e255-77c8-4739-b8ec-09d642817f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512e3f32-cd3e-4f40-bfd4-3d55a6ff7d2e",
        "cursor": {
          "ref": "5044eacb-166d-4ed7-9419-7518dd363471",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fffe5eaa-9f2d-4eea-ba43-6980a87fc37a"
        },
        "item": {
          "id": "512e3f32-cd3e-4f40-bfd4-3d55a6ff7d2e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "df30f804-a5e6-43e1-a310-334015be8f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9df6a59-186e-4da4-861b-05600d7b0242",
        "cursor": {
          "ref": "9ea3015d-4101-46f8-a665-2c283570b960",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bc909c9b-c038-466b-92a2-9d5eb312ec38"
        },
        "item": {
          "id": "f9df6a59-186e-4da4-861b-05600d7b0242",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "abaea115-0480-4a6a-8a35-6420fd956a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5c4a69-00fd-42d1-9aea-e09efb0d2883",
        "cursor": {
          "ref": "c3ce943f-7b98-4dd3-bea0-77a22247f18e",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "676f7907-8c98-49bd-b232-8459ca0491ba"
        },
        "item": {
          "id": "dd5c4a69-00fd-42d1-9aea-e09efb0d2883",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1653dbdc-5c7d-4128-8e24-3e0f8815fc13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec97bd34-9e87-43cf-9af8-a0458a6b01db",
        "cursor": {
          "ref": "63924c53-6c54-4c67-b7b3-c2733e7f2fe2",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "be3b7df8-8806-4230-a166-1f1c553769aa"
        },
        "item": {
          "id": "ec97bd34-9e87-43cf-9af8-a0458a6b01db",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e78834ae-87f7-428b-851e-3c3a6649b8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a7254d-8821-4f37-be7c-2380c896012b",
        "cursor": {
          "ref": "7b61e955-0e73-473b-b1ec-0b972e785a7a",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3c108ab5-af2f-4333-adbc-6df8bdcd450e"
        },
        "item": {
          "id": "56a7254d-8821-4f37-be7c-2380c896012b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7904c7f6-ea2a-4bcc-b3b3-faaaa0d7f44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a176ff6a-d230-4ef5-b3da-6e81b6c191e8",
        "cursor": {
          "ref": "899b829b-2417-4c97-a1fb-1ecdf7af2fba",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f2ebe7f6-31c9-425c-af2d-b4e4be244e32"
        },
        "item": {
          "id": "a176ff6a-d230-4ef5-b3da-6e81b6c191e8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bcc782b5-96f9-4bff-a92a-5b25ad0948ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39dd956a-9c96-4daf-8179-bdf80a4dd126",
        "cursor": {
          "ref": "7e175399-c2e8-4768-8d02-5fbd4001b954",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "03bd6bdb-1c1a-465a-a2c5-949b83753e63"
        },
        "item": {
          "id": "39dd956a-9c96-4daf-8179-bdf80a4dd126",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d98ae85b-deee-4b5a-b24c-97c3b750bd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a071e68-9a6f-44c3-bc8a-858d4f8fb620",
        "cursor": {
          "ref": "f49e5ab5-1c80-4166-b8fb-c60b488cc6b4",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8c4558e0-4b63-49b2-968f-d25a1f237fb5"
        },
        "item": {
          "id": "0a071e68-9a6f-44c3-bc8a-858d4f8fb620",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b7257315-38d7-47fc-8edd-bd1067d461eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cdd8dd-a166-4592-b302-c7f8f8db1243",
        "cursor": {
          "ref": "df15d9a1-dc83-4b21-bb96-f7c39fd00864",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6bee0bff-d3f6-42fa-8d03-8e1fc12b7b3a"
        },
        "item": {
          "id": "75cdd8dd-a166-4592-b302-c7f8f8db1243",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8cd20b78-3c7f-4eac-adb2-aedc135b3b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c4f980-e3cf-498f-886d-de093cc67fc1",
        "cursor": {
          "ref": "eca271a7-b0f0-4970-b625-a70b964f66e5",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4da3370d-7aab-4fdc-aa64-da3f76e795d0"
        },
        "item": {
          "id": "64c4f980-e3cf-498f-886d-de093cc67fc1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "293cd7f2-8e1c-4c5c-9b8d-5ae49d65b142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954ee0a0-d160-4009-b8fd-7d240552e9da",
        "cursor": {
          "ref": "cb61878a-27a0-43bb-8229-f2ac1bf02f69",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ed66ce24-4972-4835-ae0c-1284cd68bd67"
        },
        "item": {
          "id": "954ee0a0-d160-4009-b8fd-7d240552e9da",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5fb6da0d-84ad-4378-84a2-f232dbaa4d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5921d297-a09a-4d91-a00d-c25547b9745b",
        "cursor": {
          "ref": "53ffcc36-1726-4b5f-bd1f-f1e2545499a5",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "00049594-469e-4714-85f5-5fbab81768b1"
        },
        "item": {
          "id": "5921d297-a09a-4d91-a00d-c25547b9745b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "dbf9e796-1cd9-4036-a326-b70ad07579f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2deeebde-e4f0-46a7-b06c-de59311ecdb1",
        "cursor": {
          "ref": "0e121606-7e8b-4119-9b80-8f6fa6882ee6",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "00ab4179-66e8-4ae2-979f-e8a841bb4480"
        },
        "item": {
          "id": "2deeebde-e4f0-46a7-b06c-de59311ecdb1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fbab53d7-8e70-422c-bbbc-1c30e8d9bad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670681c1-1237-4b10-989b-709a2e935675",
        "cursor": {
          "ref": "af9d78b8-2b24-40d3-bd46-3a9f5260d2de",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "28ead499-f366-4a4d-94d2-9349373eff92"
        },
        "item": {
          "id": "670681c1-1237-4b10-989b-709a2e935675",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "edda6dea-8c15-4195-b159-76e45d4e6d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286235d6-f9c6-4b6a-b158-3b6b838e1d88",
        "cursor": {
          "ref": "91e220b7-a925-4f3b-b9bb-e7aeb144e1e1",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "152f0a2c-c002-4931-aafa-3e5cddb31c35"
        },
        "item": {
          "id": "286235d6-f9c6-4b6a-b158-3b6b838e1d88",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "622a60e3-7900-4b50-a9c7-8c11edeb4cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add5fd9c-10d2-4595-9afa-7472b3da4fc3",
        "cursor": {
          "ref": "196bcc6f-cf1f-4705-bc8b-247028c56b23",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "493ae391-6877-4db8-850e-72be46900f88"
        },
        "item": {
          "id": "add5fd9c-10d2-4595-9afa-7472b3da4fc3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d54aecc9-30a3-40ad-a8ee-486f69bcea96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f0052d-3681-4fa2-b665-6cb12e1f599c",
        "cursor": {
          "ref": "2d1f76b5-9317-4e81-9340-4add169575de",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ee952fa9-4968-47ac-8592-0531d2771369"
        },
        "item": {
          "id": "d5f0052d-3681-4fa2-b665-6cb12e1f599c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "684aebde-72d9-4e75-b941-68093214d543",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 93,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db3953c-6f68-4f36-a923-79c5e8dc0079",
        "cursor": {
          "ref": "79a4dc0f-f304-4db1-8697-13c291a334a7",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d65c6532-e031-4068-a20f-118e49c354d4"
        },
        "item": {
          "id": "9db3953c-6f68-4f36-a923-79c5e8dc0079",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7299e938-6c6f-4d77-8b81-32bb7cba1fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cb2272-b7ee-495c-9b1e-f0191d622e3f",
        "cursor": {
          "ref": "b8608b76-7b0d-40d4-9443-cf3bd6443cab",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b47e6f0e-17bd-4b94-b51b-006459d2efa2"
        },
        "item": {
          "id": "35cb2272-b7ee-495c-9b1e-f0191d622e3f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "96e46e45-7a98-472f-b06a-8301f7e69688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c3e2ab-6a8f-446d-93bd-a420995dc03f",
        "cursor": {
          "ref": "77c085b4-2b0f-4777-be30-95ec2be6305e",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "50b2394e-f4b3-48b3-b832-e70b4a542b37"
        },
        "item": {
          "id": "49c3e2ab-6a8f-446d-93bd-a420995dc03f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9e382de3-cf24-4882-b34d-4aefc253b631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca7d85d-2bd5-4ef5-9b4f-bff82c4cb3b7",
        "cursor": {
          "ref": "97aea3e8-17d1-4c16-94bb-9d2a2ed418fd",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7f96d2fa-3ece-4cfa-a1ee-815164b431b0"
        },
        "item": {
          "id": "2ca7d85d-2bd5-4ef5-9b4f-bff82c4cb3b7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4c839bff-4939-43cd-82ce-603c2cde59d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53368450-0055-46b6-9a35-73b97183e0db",
        "cursor": {
          "ref": "0c1eca99-9dd1-47d8-b53b-2f5cb561ded0",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "eb413fac-8f5e-4e88-aab6-599f21c9883f"
        },
        "item": {
          "id": "53368450-0055-46b6-9a35-73b97183e0db",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "62ccd501-8530-4c3e-a8da-8db64a56030b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5633371b-ecf1-4451-a472-2344fe6e27b9",
        "cursor": {
          "ref": "c929ace8-c42b-4d69-b5cc-c6776c9f50ec",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f4c98d0e-a472-40e6-a566-a1df6e933348"
        },
        "item": {
          "id": "5633371b-ecf1-4451-a472-2344fe6e27b9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d4021898-5978-4df2-ab66-36e5b1d66cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58bd8da-4674-4692-bf16-0bf13ec7baae",
        "cursor": {
          "ref": "4a7f2e67-2800-4535-8e0f-b34c935f8a4e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e67877b0-f2f2-4194-b510-b4ccdcb43a1a"
        },
        "item": {
          "id": "e58bd8da-4674-4692-bf16-0bf13ec7baae",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b56bde58-2098-4630-89ae-66623b6ae8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9693eab-92bd-453e-bbe5-8b93eccde057",
        "cursor": {
          "ref": "407ec2e5-1c1f-4ee2-81a8-3750628549d8",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "792ccfa2-ec66-4f12-a078-871022c2dcfc"
        },
        "item": {
          "id": "b9693eab-92bd-453e-bbe5-8b93eccde057",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c1c3ae3a-8105-48e9-a82a-962eac8f3114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5688633a-17a5-4286-a1a3-10c25b7bd72a",
        "cursor": {
          "ref": "1fcaf496-86cc-4b9f-9e44-a75e56840bfa",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "73d633d9-fc14-4c52-a33d-24a0d3eeaf26"
        },
        "item": {
          "id": "5688633a-17a5-4286-a1a3-10c25b7bd72a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a9fc8bee-4384-437e-a354-1f52fcb49194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1b119b-9336-44e7-8dab-09eb9772204c",
        "cursor": {
          "ref": "86a719c2-60ca-4b24-b3d5-4a53187d9b85",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "efac39c6-cc22-4e76-8020-d71422009d18"
        },
        "item": {
          "id": "9e1b119b-9336-44e7-8dab-09eb9772204c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0734d9fe-72b5-4e6a-ac13-e3980cc81ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021a3cca-3784-4e4f-92b4-0c021c52679e",
        "cursor": {
          "ref": "195d0b89-8ce8-4ae7-a206-610656503d12",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a7f6bb9b-10d8-4d42-ba0d-448b235a62d2"
        },
        "item": {
          "id": "021a3cca-3784-4e4f-92b4-0c021c52679e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "542937da-98d3-41dc-89a9-9204a34fdb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0260bdde-612a-4c91-aa7c-46c711e18912",
        "cursor": {
          "ref": "0672033b-b912-410a-bd43-54c585d32fa8",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "749777bc-4d1f-4810-bf03-22a25b52770b"
        },
        "item": {
          "id": "0260bdde-612a-4c91-aa7c-46c711e18912",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fc204c78-0b0f-4484-84bd-a3d3b85521ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0da4e7-2711-44e7-8d41-966dd2edfab7",
        "cursor": {
          "ref": "f142d4a3-91cc-4466-b8b0-fab80d803491",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "40c0f41b-924f-4850-87c4-71a78ab490f9"
        },
        "item": {
          "id": "bc0da4e7-2711-44e7-8d41-966dd2edfab7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8979de34-3fb6-47c3-8b3e-1516f05b80d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ffdc033-82aa-4798-b571-34435b56e7c6",
        "cursor": {
          "ref": "9711e4e5-c552-49b8-8243-ba2875053e12",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b3a8aef7-c799-44e9-8f18-6fafbe091250"
        },
        "item": {
          "id": "9ffdc033-82aa-4798-b571-34435b56e7c6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f5260d11-14ce-4ff8-8ba9-c2f9bd6569f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8605721-2085-43de-8a7e-cb85914174c4",
        "cursor": {
          "ref": "895d29d2-45bd-4a72-b18a-ea2db90f8880",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "429e3a47-9043-4671-b3d3-773d1aa7b825"
        },
        "item": {
          "id": "e8605721-2085-43de-8a7e-cb85914174c4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c90abf05-3368-4bac-9af3-bfaa80bf5b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f53234e-01fb-4685-9ad2-01822a90b6ec",
        "cursor": {
          "ref": "98429e80-e0af-40ee-85e2-7c190f3f7db8",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1d4fa46a-18ce-4baf-ac48-4752d2032e16"
        },
        "item": {
          "id": "6f53234e-01fb-4685-9ad2-01822a90b6ec",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "98ffb028-2432-49ed-9c6b-75a80a082548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fffd748-9b91-43b0-b4cd-034a336a0cc0",
        "cursor": {
          "ref": "c7d0cfee-fe61-4ad2-a2a8-317e49bfe485",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c1fabfb4-2a0d-47c1-95a7-b3a819ca34ac"
        },
        "item": {
          "id": "7fffd748-9b91-43b0-b4cd-034a336a0cc0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9d72388b-5fd2-4967-b8b4-47e6eee25a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292d1457-d41d-47cf-8a10-b5a12cb6785c",
        "cursor": {
          "ref": "56714522-52d3-4c04-884b-28a75d23722b",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1c1f7c3a-1569-44f1-a3d2-d1b4cb0f13b4"
        },
        "item": {
          "id": "292d1457-d41d-47cf-8a10-b5a12cb6785c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6f038b5b-63a9-4c50-8751-f2bcc0e5a3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e6e1db-ceda-4ad3-bf0c-6309097e764e",
        "cursor": {
          "ref": "cd450411-1a43-4cdf-8943-f66d0228161c",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "aa812950-1c21-4ff6-bda8-bdf41ec63f99"
        },
        "item": {
          "id": "f5e6e1db-ceda-4ad3-bf0c-6309097e764e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6f27a8d8-eb79-4039-9539-c4485ea35363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c3d6ed-c616-45fd-a868-1c8ac4c7f65c",
        "cursor": {
          "ref": "7c9f6c0f-b9e8-409c-8516-5634ab1b437f",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0812543b-9df4-4d9f-b37d-cc329db3c486"
        },
        "item": {
          "id": "e4c3d6ed-c616-45fd-a868-1c8ac4c7f65c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "278a7a40-9b2f-47e2-9c1e-129fb7de17cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b038b274-24cd-4de9-9d46-068bf909cf12",
        "cursor": {
          "ref": "022a6a17-ed54-49d3-8895-2b9c467471b5",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "432a9213-d2d0-4408-8fc1-7e7c6aa54a3e"
        },
        "item": {
          "id": "b038b274-24cd-4de9-9d46-068bf909cf12",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d129682d-ca1a-47a3-aa53-61ffe3ee87be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35aea741-7734-4d22-930e-0fc6536c32f3",
        "cursor": {
          "ref": "fa285d8a-cfe6-46ef-96a6-d4e2ecb8f988",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "abcc8905-d004-40e5-ae96-94009792b3f1"
        },
        "item": {
          "id": "35aea741-7734-4d22-930e-0fc6536c32f3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "25bc531e-5c23-40de-a8e2-bd151a8442a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0706659-4628-4790-aaa6-47d26a3ae8de",
        "cursor": {
          "ref": "d461c100-4ffa-4aad-a201-31e4ad6ec4ee",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "64a1ec4b-273e-4450-be8a-64113e7da72f"
        },
        "item": {
          "id": "b0706659-4628-4790-aaa6-47d26a3ae8de",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8f3fd57b-6cd0-4e3b-9ed3-e7a860b306f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234c5786-8dba-4b25-a658-02245b4a3685",
        "cursor": {
          "ref": "c57e2ef7-dee3-48ab-afa0-d359acc879c6",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1098a834-a87f-47c8-9c70-1fc5ec6158d9"
        },
        "item": {
          "id": "234c5786-8dba-4b25-a658-02245b4a3685",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4e7c1b0a-a788-498b-8f94-b8f5f64fb809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d295d2-e6bf-4d4f-b3f0-9846a41e268b",
        "cursor": {
          "ref": "445bce78-78a8-457e-b8fe-f3a6b504f412",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "be773ab5-ce53-4a63-aa39-d46d1ababe78"
        },
        "item": {
          "id": "87d295d2-e6bf-4d4f-b3f0-9846a41e268b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5b9c9bbe-23ef-427a-9a17-c3c0810b4f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782e17f4-59bf-46f4-95ad-f586b1e61a1c",
        "cursor": {
          "ref": "02c65dfa-917a-44f4-89b8-cde0eb0eff20",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b5b8245d-97ae-446a-99e6-d3eb1480d23e"
        },
        "item": {
          "id": "782e17f4-59bf-46f4-95ad-f586b1e61a1c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3fceec88-75bc-4bba-8434-4e409b258f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbcaf0d4-035c-402c-8017-fde59cac9dc2",
        "cursor": {
          "ref": "06ac8624-118f-4f76-8970-d6bd7a671cbc",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "877be9e7-a78a-482b-b08e-4ab0d790168b"
        },
        "item": {
          "id": "fbcaf0d4-035c-402c-8017-fde59cac9dc2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d4e3fb05-e3a9-4f00-9c19-4b2b9ca2f3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611d7895-1aa8-41f4-8455-e44d9657a8fe",
        "cursor": {
          "ref": "810c08f0-958a-4315-8133-84fe99a459b0",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1dc3a8e0-06cc-4397-aea5-b36872f4d2e2"
        },
        "item": {
          "id": "611d7895-1aa8-41f4-8455-e44d9657a8fe",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fafa022c-0d72-42c0-8676-1f50ec4ea102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9167a8-f4ff-49cc-b474-58d4d3ef9887",
        "cursor": {
          "ref": "a34ac639-a41d-4ebb-a03a-c022d9c25a2a",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d1727b1a-4873-44c3-bf21-eb5a02321e54"
        },
        "item": {
          "id": "cc9167a8-f4ff-49cc-b474-58d4d3ef9887",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "44270f9f-9fc8-4b1e-b8ce-aa26f7771b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53527a50-b1b0-491f-95e8-84f6e83d4f54",
        "cursor": {
          "ref": "8adbf355-bc38-4207-b8eb-72027c5a2df9",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "eef7ebb8-d7b8-4473-a85a-34901207b1bf"
        },
        "item": {
          "id": "53527a50-b1b0-491f-95e8-84f6e83d4f54",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3083fd0e-5d8e-483d-9eb9-867233ed80ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1d9df6-b518-45f9-b9cd-9556c3aeab4b",
        "cursor": {
          "ref": "ea9a655f-1d89-469d-9734-e8a35a6ef485",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "836658d2-a72b-45cd-bdab-04cdc0818e78"
        },
        "item": {
          "id": "ed1d9df6-b518-45f9-b9cd-9556c3aeab4b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ee2c6da1-9ec7-4880-8fd9-5e70af61c479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306fd12b-266c-4cff-a7ec-b2f29b51f261",
        "cursor": {
          "ref": "8fd5a3df-e746-4d4a-bdc7-f2a63b99400c",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2dac2e55-9001-4fa4-bd90-cb2ab3bec5e1"
        },
        "item": {
          "id": "306fd12b-266c-4cff-a7ec-b2f29b51f261",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b4ea8141-ba42-47bb-ada1-e0d0134629e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84e34f2-cdfe-4e29-a127-51211e692c6b",
        "cursor": {
          "ref": "9224c049-d2ac-43fd-9b7d-7a459ce35321",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0d899d52-f0b5-4875-9ef4-6d49326a8f74"
        },
        "item": {
          "id": "d84e34f2-cdfe-4e29-a127-51211e692c6b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8f26b999-eef8-4fcb-bfb4-e5c67f7618f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200f663c-047c-4cc5-9ce0-1334fb8c9a23",
        "cursor": {
          "ref": "a92ccc4b-67fb-4666-9db5-31f8b40267be",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7b199fd5-7367-46e6-bc4e-0486e8884b1e"
        },
        "item": {
          "id": "200f663c-047c-4cc5-9ce0-1334fb8c9a23",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b20f5beb-41d5-4d5d-80ce-8dbf5627b280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6af33e-7185-4201-9f0f-ac435987f482",
        "cursor": {
          "ref": "d102b0be-fdaf-4354-a707-d138740ce2bd",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9daeb61c-eb71-4b03-9944-96aa14c8f168"
        },
        "item": {
          "id": "bb6af33e-7185-4201-9f0f-ac435987f482",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "62deafeb-ac10-4fff-8bba-19ea63978175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa217224-fa82-4090-87eb-f9a3f306fc01",
        "cursor": {
          "ref": "5b8e6e09-48cc-4181-ba25-3ca05641445d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d623f5ed-e0e5-4bfe-9e47-24ef238951d3"
        },
        "item": {
          "id": "aa217224-fa82-4090-87eb-f9a3f306fc01",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b23688d4-133e-4ee5-a880-3dbfc073dafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5194cab-6ec1-441b-85a2-03e91c11f18b",
        "cursor": {
          "ref": "8c621a1f-09e4-4ec7-8be4-f10c0c6b9d11",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "77ae9750-59e1-42e4-804e-de47949f8e0b"
        },
        "item": {
          "id": "f5194cab-6ec1-441b-85a2-03e91c11f18b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c8c4c246-e163-4380-b4ff-e819abb7804c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10dd3d0f-bd3c-4bcd-b41f-383c70e1d730",
        "cursor": {
          "ref": "e3556328-420e-4b39-afe3-1cd2fb801223",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f823d31e-a6e7-4dce-a4ea-c3406f2e3a69"
        },
        "item": {
          "id": "10dd3d0f-bd3c-4bcd-b41f-383c70e1d730",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "db10d009-d735-48e1-905d-b84fe73eb78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af285ea-49e7-4e12-a2b0-f089fe1fe930",
        "cursor": {
          "ref": "06d4b8dc-79f1-4f70-a930-4cb9d2f9cc25",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "12f8714f-de0a-40ba-a937-731923da7037"
        },
        "item": {
          "id": "7af285ea-49e7-4e12-a2b0-f089fe1fe930",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "56bf181e-9cc3-4449-892c-3f24ec90e18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4545a9-d81a-4200-b9d5-42dee33aec31",
        "cursor": {
          "ref": "ee6b82db-1b3c-44b8-8e72-40c72df4adbc",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e94a9a95-a66d-4b9a-a0aa-3e73c83aab32"
        },
        "item": {
          "id": "de4545a9-d81a-4200-b9d5-42dee33aec31",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6e4928c6-4613-4e22-a644-49f51ba5a407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4b7a17-9f57-4b0b-a963-6c16d2a6b129",
        "cursor": {
          "ref": "76c1ded9-773a-4ea1-a2fc-2125d2db1a76",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6cfa2c63-cce5-4fc5-9e4e-79864abd5002"
        },
        "item": {
          "id": "ca4b7a17-9f57-4b0b-a963-6c16d2a6b129",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "434f4924-68b1-4340-9027-aa118d7ef75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf25b32-342b-485f-ab3d-5d24a88f6dd9",
        "cursor": {
          "ref": "01605fc4-442e-41a7-acea-ef882e709e03",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1114823f-59df-4e8e-84e6-72f08c6a0ab6"
        },
        "item": {
          "id": "dbf25b32-342b-485f-ab3d-5d24a88f6dd9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bbe442fa-6959-493e-b6ac-22180437a8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c32766-7538-4012-aabc-ad383c2bbcc9",
        "cursor": {
          "ref": "d14e87b0-7814-41a1-b16a-7c1dbe6a719a",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7c2ae3ef-58d2-4a7f-858a-d1793d088cf9"
        },
        "item": {
          "id": "e1c32766-7538-4012-aabc-ad383c2bbcc9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7ae7eb5d-88e8-49c9-a747-1f833ca1fa7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a841a520-fe93-4b2f-8eeb-c6f5c67a6652",
        "cursor": {
          "ref": "c7a65f09-787a-453a-9070-b10aabeb2b01",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "09dd82db-a228-4f6b-af8a-2fe241c3a58a"
        },
        "item": {
          "id": "a841a520-fe93-4b2f-8eeb-c6f5c67a6652",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "076fbba8-945e-453a-81ab-6e83208cb395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d01edc9-9b38-440c-8abf-3a1e0b567abb",
        "cursor": {
          "ref": "0f2abce0-efae-4a5d-b94e-b3302027aa76",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "557a5d6e-820e-48ad-9a29-f6da75f9947f"
        },
        "item": {
          "id": "9d01edc9-9b38-440c-8abf-3a1e0b567abb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a13e41b4-7388-4553-ab26-c51274decd76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23426529-48a4-4599-83b1-438bdd7d88c8",
        "cursor": {
          "ref": "0763aa7f-ce1d-4c47-afdf-f9e936d0e93e",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "35305ea8-4b12-48e4-b202-8803a372ad39"
        },
        "item": {
          "id": "23426529-48a4-4599-83b1-438bdd7d88c8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "66ae75e1-df3d-4ced-aed8-fe71107b4bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959a87c1-36a6-4751-8cea-be986417ce98",
        "cursor": {
          "ref": "61959f92-ad40-4968-85e6-c7337bace1f6",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "659d4d77-732d-4ffc-94b5-cda7ff3aebf4"
        },
        "item": {
          "id": "959a87c1-36a6-4751-8cea-be986417ce98",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c8f9a750-cad5-4827-b522-d7c35f3126c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa5edbd-5938-4083-8051-42b1ba0b247b",
        "cursor": {
          "ref": "945f07b7-c893-413c-b7b7-4da25eb2f8f8",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ecec1767-6a62-4b02-83de-00b3e15fe1a4"
        },
        "item": {
          "id": "3aa5edbd-5938-4083-8051-42b1ba0b247b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ec40d952-94c4-4f53-b91c-b0b5f86f1f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b335f6a2-e255-45d9-b2f3-3d26410f2697",
        "cursor": {
          "ref": "4154bfa9-03b4-4185-ae9d-6816eb284d9d",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ba7ac0b1-f785-4dc1-96aa-b0d4a9d47984"
        },
        "item": {
          "id": "b335f6a2-e255-45d9-b2f3-3d26410f2697",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "58f112f3-7bf0-4498-8052-894a0d061836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029407f9-a618-4819-92ea-85b445c93fc1",
        "cursor": {
          "ref": "7fe32e0f-9f27-4451-a097-32f2f8116668",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "82dfb14e-5b3b-457e-a9fc-608f45edf6c6"
        },
        "item": {
          "id": "029407f9-a618-4819-92ea-85b445c93fc1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6565f6f8-bebf-4a07-a95b-3824337a5153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568ea11c-1780-4b09-bad5-54279778482e",
        "cursor": {
          "ref": "b9fabe8a-462d-491f-b45e-42760c63d178",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9e5d47a0-4a89-458e-8732-d551de57c2e6"
        },
        "item": {
          "id": "568ea11c-1780-4b09-bad5-54279778482e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "97d6a5f9-95d5-4c62-8fdb-42ddca128834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a57a9f-23c2-45ba-a259-acbc79486b31",
        "cursor": {
          "ref": "b5a180b6-63a7-4584-8d1a-d5a01fe51431",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b9756edb-cfb8-4e39-bc5d-3c032c30eaa0"
        },
        "item": {
          "id": "64a57a9f-23c2-45ba-a259-acbc79486b31",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "602f62f8-db8e-4468-b8b8-7eecc8c389f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7363fdf-3761-49c5-9345-3cd7adbeaab1",
        "cursor": {
          "ref": "525303fa-e6cd-4e43-9395-3a6e701f3f84",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7e7eb919-3367-47ee-85c8-44707cb6e0da"
        },
        "item": {
          "id": "d7363fdf-3761-49c5-9345-3cd7adbeaab1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2e904971-627a-4ba4-b8a5-d3c4edfd43f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c176b1d6-5c39-4d21-815a-47229df2ed47",
        "cursor": {
          "ref": "479872aa-1df5-4589-960d-e17b8231dace",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "28a3c201-2e33-4d21-929d-1257dcd87f9a"
        },
        "item": {
          "id": "c176b1d6-5c39-4d21-815a-47229df2ed47",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fc0781b2-7819-4d2d-8c98-955239871651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7baf0d8-721b-4cc5-8801-bf2fbfa3658a",
        "cursor": {
          "ref": "76958f74-1b08-41f3-a914-fe83353bc53b",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e5557e49-040f-460c-8018-56956ba5c939"
        },
        "item": {
          "id": "f7baf0d8-721b-4cc5-8801-bf2fbfa3658a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "41eac3f0-887d-4797-a2a8-d07fe2bda5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240cc7d2-226b-499b-9d92-4a970e5ad3ef",
        "cursor": {
          "ref": "1e3e798d-d65a-4b3e-82df-8be6809e47fc",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f6b58429-0a00-4d03-bd14-bb8bce7fb54c"
        },
        "item": {
          "id": "240cc7d2-226b-499b-9d92-4a970e5ad3ef",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "441b4bce-9feb-4b54-8426-3f82ef514b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9babdd34-f7a1-4681-a007-4702111dc2cb",
        "cursor": {
          "ref": "b772b251-3327-4d58-9455-fbced58656d2",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "285557dd-0ba9-4f14-9078-6bfd00137022"
        },
        "item": {
          "id": "9babdd34-f7a1-4681-a007-4702111dc2cb",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "de5ff112-31cd-4396-891b-0da75491d691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c01435-1f7d-4edb-90d0-b48c7498a17d",
        "cursor": {
          "ref": "4f797d08-e96f-4b81-a5c8-ce4e761ab4f9",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ccb06193-b35c-4372-b8db-eec6ec20aaef"
        },
        "item": {
          "id": "c0c01435-1f7d-4edb-90d0-b48c7498a17d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ab12c3d8-da08-4dc9-8f3d-b1028f0a303d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c883dec3-ee56-4297-aba0-9955d5e74c8e",
        "cursor": {
          "ref": "056dc773-d321-4112-9472-b8db3f659b45",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7230547d-a5e7-4f6a-9431-339496c0bb1a"
        },
        "item": {
          "id": "c883dec3-ee56-4297-aba0-9955d5e74c8e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "53670e80-512f-4d51-9c3b-463af81de289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba2bdd5-dfe0-444b-b778-c6da830ddb91",
        "cursor": {
          "ref": "c4f39aef-074a-47d6-8b1a-89ca788024f9",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ad0ec27b-822a-4ef5-8a8a-cc9e38fe4689"
        },
        "item": {
          "id": "7ba2bdd5-dfe0-444b-b778-c6da830ddb91",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4d315fbc-fcba-4de6-baad-2b1f411bb078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8664b8-9d1f-4928-ae84-fce3a9cc67ac",
        "cursor": {
          "ref": "acfb899b-7cb6-430a-9d0d-f11c09b7ec3b",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cff55d12-e33f-405e-b1ea-0c9250b904d4"
        },
        "item": {
          "id": "3f8664b8-9d1f-4928-ae84-fce3a9cc67ac",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "92f4ff31-5997-42a3-b550-78bdd3cfca62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6843b6fe-2c11-4dd8-91ac-ed1dfbcd87c2",
        "cursor": {
          "ref": "7f3f54da-5974-4feb-8a2d-27a9798a34e8",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "085e17d2-6162-483f-9172-6bbd0853aef7"
        },
        "item": {
          "id": "6843b6fe-2c11-4dd8-91ac-ed1dfbcd87c2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a8808bfc-9219-44ed-ba62-3834492b2e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc88bfa-47f9-4fc2-8c24-9180e39f448a",
        "cursor": {
          "ref": "37045fa2-22df-4403-b710-a1fad2976c1c",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "cbaf6275-a0eb-4a41-bfae-db990c614c46"
        },
        "item": {
          "id": "5dc88bfa-47f9-4fc2-8c24-9180e39f448a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6a61d628-ec88-4fa1-b00c-29b4456f6491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f471d9-bff7-492e-8cf9-84137f37b49e",
        "cursor": {
          "ref": "0c1209d5-1a04-450d-99f6-4905658a4b58",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c929d1ee-1df8-4896-b84c-8cb65e23c40a"
        },
        "item": {
          "id": "13f471d9-bff7-492e-8cf9-84137f37b49e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "493606a2-bb64-4b08-ac57-fbf9b7255a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423746ff-583b-4359-93ff-5127afe6a628",
        "cursor": {
          "ref": "cbdf96d5-be96-419c-92d3-ad1db2663463",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "29f8b71c-8d60-4075-9d5b-a198876a32c4"
        },
        "item": {
          "id": "423746ff-583b-4359-93ff-5127afe6a628",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "66f1776a-72fd-4ec0-ac9b-1389e3750d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c6069e-2cf4-471c-b875-11801b72dd66",
        "cursor": {
          "ref": "25d5f4da-0e45-47f7-8325-579a4f95f78c",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6a3100cc-14dd-4257-8d2d-1d809171ffb0"
        },
        "item": {
          "id": "17c6069e-2cf4-471c-b875-11801b72dd66",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3a246cf0-fa55-4b51-b7a7-c717507c84fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2596352e-6a07-412f-b507-27e26cb8ce68",
        "cursor": {
          "ref": "6fe13348-13a9-48cb-a22b-ae3aeb1ce159",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8984474e-d4b9-4141-9136-d9c21612aa9b"
        },
        "item": {
          "id": "2596352e-6a07-412f-b507-27e26cb8ce68",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "deffc5c8-300d-4fa5-8cb8-40c8044b8ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cc1e8a-569a-4467-8646-9d5f08e38213",
        "cursor": {
          "ref": "be76296b-da26-4555-97a7-ecb3711d492d",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "518c4fb8-e279-4f7f-8a30-7a91f2c67f7e"
        },
        "item": {
          "id": "a1cc1e8a-569a-4467-8646-9d5f08e38213",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8d09605c-db0b-4d41-9c05-570fd03f0d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87538bc-cb1e-41da-be51-4e47d28ea53b",
        "cursor": {
          "ref": "21068fa8-2642-49f0-8f21-1dc24cd88da3",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1f41bbf9-21af-4853-96d7-7e7170b9610b"
        },
        "item": {
          "id": "a87538bc-cb1e-41da-be51-4e47d28ea53b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4a20fbaf-e409-4ee8-93a3-dfbf1cc34c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb595b7f-7cd5-48fa-a8d6-2512c7d459c8",
        "cursor": {
          "ref": "09150b40-d1ef-4dd7-ba5e-bee7a7cb7866",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "263f7f16-a907-4ebb-a8b1-f7c5dc784878"
        },
        "item": {
          "id": "bb595b7f-7cd5-48fa-a8d6-2512c7d459c8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8f742246-cad9-4135-bc26-6a4ca9d4b326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b09ba78-c12e-41e1-b637-68ad83455dd0",
        "cursor": {
          "ref": "a5b7722c-9c58-4584-8361-58013f5ca817",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "dfdb8df1-f9ea-488c-b774-43e47b9898c0"
        },
        "item": {
          "id": "6b09ba78-c12e-41e1-b637-68ad83455dd0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "070e048b-85b3-4026-9ce1-92b7ef1588d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a655567e-e360-4030-87fb-827c7eb5e452",
        "cursor": {
          "ref": "5067a2f7-82fb-43c2-8a5c-70314a8f19bc",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c7cebada-fbfe-4e3e-b680-4eb0bcb22e9b"
        },
        "item": {
          "id": "a655567e-e360-4030-87fb-827c7eb5e452",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4b122d71-9e86-4ce2-ae7a-0dabf33c9537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4275bb-d553-485b-b61a-4c668f3872bb",
        "cursor": {
          "ref": "227f9729-f427-4e0e-bea3-f0b6e1eb9b18",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "057c8523-cc9f-4c2f-bad5-aa41790947b8"
        },
        "item": {
          "id": "5a4275bb-d553-485b-b61a-4c668f3872bb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "30d4a58f-0763-43c0-944d-bcd355b6de6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36958b05-f32a-466e-8217-6b38ef5b89bd",
        "cursor": {
          "ref": "4137f94e-1803-4462-b3e5-50da97657707",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "74882007-86e8-4417-8660-54f62c3e4c8f"
        },
        "item": {
          "id": "36958b05-f32a-466e-8217-6b38ef5b89bd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3da77950-40aa-41f6-97ab-99f392d84d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63730304-2c2f-4a88-bd91-69147984935c",
        "cursor": {
          "ref": "5eb34546-25d3-4c0b-aed1-4222edd1de40",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a9a55ee4-77a0-4a8e-a6fd-f9b206e6de77"
        },
        "item": {
          "id": "63730304-2c2f-4a88-bd91-69147984935c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "686fa1c3-c3f4-41e5-a5c2-c0fccbf967ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02482fed-5935-4a71-989f-450360103e3e",
        "cursor": {
          "ref": "64624b9b-f3d6-411a-9df0-f1cd3fc1ce35",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "208ed32f-2b8a-4ad2-9634-e32699f5fbcc"
        },
        "item": {
          "id": "02482fed-5935-4a71-989f-450360103e3e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "da538206-cee3-4776-99e6-5811fb2bbc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58c7cd6-484e-4f72-978c-f2f5a1429c04",
        "cursor": {
          "ref": "22fb0a65-1164-403a-a142-552b775e452f",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "254baf4c-7d2c-407e-ab1a-5db507b6a4f7"
        },
        "item": {
          "id": "b58c7cd6-484e-4f72-978c-f2f5a1429c04",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d8786f68-a838-4ea0-b38f-98802411110d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d313a67-6f79-47b0-85ce-e4655e914299",
        "cursor": {
          "ref": "72d8c5b3-b1eb-4bf6-a15d-f28b2078e5b2",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bde2f319-aafc-4cc2-9dff-814504f58583"
        },
        "item": {
          "id": "2d313a67-6f79-47b0-85ce-e4655e914299",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ece9f426-6fdf-419a-8a14-e6cc559e0d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5742d4b9-356a-44e3-8f4b-0b3c62a5e2b5",
        "cursor": {
          "ref": "99707c56-a9ea-4e58-b717-54ce61752573",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9008cef7-3b28-45e5-b2a7-dec98e91fff6"
        },
        "item": {
          "id": "5742d4b9-356a-44e3-8f4b-0b3c62a5e2b5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d2210adc-de6f-4248-800f-ca384ed1b95c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74712c01-8250-482c-b128-7da67ba620ec",
        "cursor": {
          "ref": "9499e98f-2426-42e4-9b9c-f8972b9b80f8",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ee26f6c0-8eb4-4d7d-a867-364f93cbd9bd"
        },
        "item": {
          "id": "74712c01-8250-482c-b128-7da67ba620ec",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4b30653e-35c6-4c5c-aad8-6c3df25f26f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f4aaa8-6e9f-44c3-bb42-6a91270261af",
        "cursor": {
          "ref": "d4302718-e19a-4aa1-b7cd-c9c08b9ba665",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "959fac4c-c3af-4a26-9cda-56b684adab92"
        },
        "item": {
          "id": "68f4aaa8-6e9f-44c3-bb42-6a91270261af",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "26bd573f-2674-443d-b31a-1f81cb166678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50824e07-3750-4dc7-8442-712e9801b1fd",
        "cursor": {
          "ref": "4b737697-09a8-4118-b4d7-276868b04785",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "16a55a61-49ee-4c2a-91a2-f8e2c1f5e04c"
        },
        "item": {
          "id": "50824e07-3750-4dc7-8442-712e9801b1fd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1d663588-f498-44b7-93d3-b7b229942d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e07edb7-d6c4-4454-9dbc-cfa401e5db4f",
        "cursor": {
          "ref": "2bfcd3d8-056e-4ede-8185-49d5a55494a0",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "41fff634-136c-4596-bd01-9e736869b3b9"
        },
        "item": {
          "id": "3e07edb7-d6c4-4454-9dbc-cfa401e5db4f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9863acb7-2293-46cd-a45d-2f04dfb959d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0c95d7-df97-41fd-b776-6beb1d18a61e",
        "cursor": {
          "ref": "305e45d9-e43a-4a0c-a527-e25291838642",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1f93ab09-2833-4d98-9ac9-7b6af0ed3896"
        },
        "item": {
          "id": "de0c95d7-df97-41fd-b776-6beb1d18a61e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a7efd722-3349-4914-ad77-e7e599a28586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4298ce-95af-4143-93eb-3b19edd9273a",
        "cursor": {
          "ref": "efa5dec4-7697-461f-ad21-10c654960403",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c5acdb0d-4036-4749-be12-f9ba877267ce"
        },
        "item": {
          "id": "fc4298ce-95af-4143-93eb-3b19edd9273a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8c41d5a5-29f7-4478-aaff-8fedf7282b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b8c79e-1e64-48b7-8f70-f7ce12a10a0f",
        "cursor": {
          "ref": "1711b412-ad18-4ad4-8fe6-fa941f4546e5",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2235c9fc-63dc-4fac-ad3c-0345cd93500e"
        },
        "item": {
          "id": "e4b8c79e-1e64-48b7-8f70-f7ce12a10a0f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c115dbef-c66b-4c41-8463-4755638d4b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271cacc0-8f1a-44a0-b107-382c69a0900b",
        "cursor": {
          "ref": "5141c36c-52b4-4fe6-b328-b6e7a6a7c16c",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a5ef3c99-7f44-45ae-a62e-98aa3a696f2a"
        },
        "item": {
          "id": "271cacc0-8f1a-44a0-b107-382c69a0900b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ecf0d234-f5e9-42c0-b446-921d3206ecb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a045256-3555-4de8-8d39-47413e976659",
        "cursor": {
          "ref": "33b27472-b185-4fbf-b171-5e722ac6bd09",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "17ba8416-1b86-416e-b9b1-cfff1b5325cc"
        },
        "item": {
          "id": "2a045256-3555-4de8-8d39-47413e976659",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "969d55cc-9279-421a-a162-cebc1da47e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7099b2f-5683-4eeb-ad80-51001de83376",
        "cursor": {
          "ref": "4dc5fcb3-9bba-491b-a2e5-ceeba3df71e7",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9bacf084-0341-406a-965d-cc95d0b75ec1"
        },
        "item": {
          "id": "d7099b2f-5683-4eeb-ad80-51001de83376",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ef694ae5-f9dd-49a0-b927-51cce4a51ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab12783b-d157-4aef-be93-17c45fbea320",
        "cursor": {
          "ref": "20d2a6e6-811e-4355-9ed5-aad2a10330ea",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "96759be9-e13d-4088-97fa-6026df53d281"
        },
        "item": {
          "id": "ab12783b-d157-4aef-be93-17c45fbea320",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "53f336df-bb2c-49f7-9253-b47156011764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3c7cdb-d5ad-43f0-a506-8677c3e47c90",
        "cursor": {
          "ref": "77b63b3c-b3b4-48f1-9ff2-8499f22113be",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3dc06cc4-c153-4063-a066-2cece604b9a6"
        },
        "item": {
          "id": "0a3c7cdb-d5ad-43f0-a506-8677c3e47c90",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d7d5ba47-3ef7-4faa-9186-32cb753b7046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84870be-ca7e-43d2-a145-9a6df84a83bf",
        "cursor": {
          "ref": "9d75eb3c-96c6-4b31-8320-d2ff6fd8f080",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "965b3e6a-e989-4a96-89ad-06a445c72a01"
        },
        "item": {
          "id": "a84870be-ca7e-43d2-a145-9a6df84a83bf",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "43671580-89f6-42fa-9b56-42c04dc82c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3cb9899-b4bd-41e7-893b-e4ea4f5b44ed",
        "cursor": {
          "ref": "afb3a66a-14b9-4b56-9fb9-028c63ad209c",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8d71c5ec-28a2-40f7-8d43-fe3e457c0cc0"
        },
        "item": {
          "id": "a3cb9899-b4bd-41e7-893b-e4ea4f5b44ed",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "59f4931f-c62e-4706-a4c8-a51c70b6e236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0465243f-6403-4e97-be12-616c57b8669c",
        "cursor": {
          "ref": "b51cf51d-137b-4722-9796-85c71e4175a9",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6a4f38cd-34f5-44c9-b305-917f0371203b"
        },
        "item": {
          "id": "0465243f-6403-4e97-be12-616c57b8669c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d88d8366-286f-4e6f-bd55-3bb19aab2a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5163999-446b-45a6-bfcc-a9a74a0fed52",
        "cursor": {
          "ref": "58223ca2-7e20-420a-ab35-ce55fa00fe15",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4a94ddb4-51ef-4629-a2fb-bc7050b2973d"
        },
        "item": {
          "id": "f5163999-446b-45a6-bfcc-a9a74a0fed52",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a08182c1-2200-448e-ae40-0ffa210e5aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738003ec-9b36-4455-b226-b558652aa4af",
        "cursor": {
          "ref": "fe6f659d-aad0-4569-b043-329282c6f900",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "72722396-44c6-4e5b-9754-a7d955141aeb"
        },
        "item": {
          "id": "738003ec-9b36-4455-b226-b558652aa4af",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cabcb9d3-270c-4c92-ad56-8376338255ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fce808-e719-4b05-abb4-09dcbb024aac",
        "cursor": {
          "ref": "21e5383c-a3b9-4f42-83f4-f6a69cb7756e",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "416da3af-843d-4ee7-96d3-97c794eefe5b"
        },
        "item": {
          "id": "46fce808-e719-4b05-abb4-09dcbb024aac",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "94b0afe4-cb1c-46f8-b21d-b220fb0a293e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6727dc4-4288-4d0d-a6bd-35893b5571b8",
        "cursor": {
          "ref": "bbd40fbf-6771-4676-99e9-2e74bd5ece0b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9707a021-fa8d-44cf-a7b2-8951be791621"
        },
        "item": {
          "id": "e6727dc4-4288-4d0d-a6bd-35893b5571b8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "eed58023-ddb5-4bdd-ab44-b1e065b9bd48",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf94d41-5876-485f-bd4d-2ee17ef23c3a",
        "cursor": {
          "ref": "06b9fbd3-543e-4fd2-afe8-03cc7d54df9a",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5d5400b8-6e1b-4933-953b-04f7c33148ac"
        },
        "item": {
          "id": "6bf94d41-5876-485f-bd4d-2ee17ef23c3a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ae1331cb-1dca-4a8f-b285-8695c463a8d4",
          "status": "OK",
          "code": 200,
          "responseTime": 2233,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4004aa4f-c3a0-40cd-97cf-ffe9340872a3",
        "cursor": {
          "ref": "c9e88040-3940-40eb-9c8a-93f91ad137dd",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "005c3eb2-4329-4e6b-a699-ebd818eb11cc"
        },
        "item": {
          "id": "4004aa4f-c3a0-40cd-97cf-ffe9340872a3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "913e009f-2758-4bd9-bee6-a9be972af423",
          "status": "OK",
          "code": 200,
          "responseTime": 2847,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "440564ab-0df0-4d32-87a3-2f32ba55cc20",
        "cursor": {
          "ref": "b0855e7a-e2d0-4963-ab7f-9647c04fbd48",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e1ec2dbc-8107-4c7f-991a-e8a5ae110ad3"
        },
        "item": {
          "id": "440564ab-0df0-4d32-87a3-2f32ba55cc20",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d89989c2-1da2-41fc-91f8-59c0b546699b",
          "status": "OK",
          "code": 200,
          "responseTime": 2547,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbabfe1b-1401-43ba-b476-fc53a80ecd60",
        "cursor": {
          "ref": "c6bcd268-3d19-4e03-981a-0b6c4c7ba0b6",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f8cca8f6-8bb8-4c14-bd7e-382becf70c56"
        },
        "item": {
          "id": "fbabfe1b-1401-43ba-b476-fc53a80ecd60",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cbac1473-aea8-490b-bedd-75cd21d8e898",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbabfe1b-1401-43ba-b476-fc53a80ecd60",
        "cursor": {
          "ref": "c6bcd268-3d19-4e03-981a-0b6c4c7ba0b6",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f8cca8f6-8bb8-4c14-bd7e-382becf70c56"
        },
        "item": {
          "id": "fbabfe1b-1401-43ba-b476-fc53a80ecd60",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cbac1473-aea8-490b-bedd-75cd21d8e898",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc750f43-3bc6-4885-a1cc-6190f55638b1",
        "cursor": {
          "ref": "30ad72d8-8090-4162-bc05-e8d313ee43bc",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2464f2cd-7f61-45d6-9079-b65d8c267fa0"
        },
        "item": {
          "id": "bc750f43-3bc6-4885-a1cc-6190f55638b1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "89563298-e2bf-4682-a103-831e0cc02b7b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54547f90-ec38-42e8-bfaa-2ced5a4d090c",
        "cursor": {
          "ref": "b096cf71-e2ec-4b38-b500-c8f756547f49",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f938f89c-6076-43fa-b256-f1a32ce28ce5"
        },
        "item": {
          "id": "54547f90-ec38-42e8-bfaa-2ced5a4d090c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2796c27c-103b-4e36-af66-bffbbc585b8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}