{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "518d3b5a-1197-4e67-b28e-7f0fe7fc27db",
        "name": "Clear Cache",
        "item": [
          {
            "id": "08c2b988-b84e-4237-9616-1c37b89dceb0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b3d07936-42ca-4303-b44c-61e02d4f0aa8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "58866712-88d5-41d5-96e9-5cc4915ac4f4"
                }
              }
            ]
          },
          {
            "id": "ab5ec0d6-af8c-4f4a-9fa0-416d9ef54752",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85b9dee1-76a5-4cf6-82f0-ea75da0409a4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8e9e551f-ea81-4fa4-a448-87ad1b009ee5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "60ea2350-d68f-4c01-8d7a-096a291a01a9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0b3597bf-7648-47e4-8af8-6473c019a58f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7326b40f-4e42-45ff-ad34-7e8bfc9465e0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef718efc-46d1-432e-878d-57afe34fb1d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8292ad3b-8754-4e7b-b27b-0f2768ab8afa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55d76094-1d0a-4cf9-b226-6dc290055bf9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "50467fad-8ce1-415f-a6de-684bbca14c79"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b2d02d32-fd9c-455a-9945-3ea82ff18ec6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7ed1314-3733-425a-91d9-ea75193f68d1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08727fc5-fd89-49c4-8605-452d571bef65",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7dc8c8bb-bbec-406c-a128-c61dac1a331e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1621323f-150b-459b-8806-5564f4708de9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cb0098d8-6195-430b-b103-806e91995516"
            }
          }
        ]
      },
      {
        "id": "c9ddd360-a4c2-4c04-acb9-fc014c0f3bcf",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "16ba54fa-5086-4744-9553-b84932c8ca94",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dad44a7e-eac1-4cc0-b2c6-7e591105d750",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ab2ce18e-f6ec-4b40-9242-86d3227cbe6c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2e9dad-8b84-44cf-a7d6-7d72722a7709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e98f6b4-73d9-424c-b40e-b49970aebe7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ac972f-a6f5-4694-b166-0a1d10ce103b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795a5889-cff2-4324-b210-6ebbfa9842ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "267e38a1-6fe9-47d3-9d68-193e04eb549c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06607ff-1a74-4e1e-a68f-2fad88d99191",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f90658-c17b-4bdf-a957-9648a10b4cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b8de62f-0768-4868-933d-35075854d5de"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "737acb0e-66af-4092-bd21-92f849a0066d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e789ada2-4791-4b1f-83ad-83aeef545db5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77340a0-f829-4b28-ab19-c74e27d784bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5ae52fc-dfe4-4e72-add7-0c5ca8910f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db979deb-0c51-4181-94c0-2b8d921af4c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6443fe74-1038-4acd-9de2-d1d4a24f0fe6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "98041cea-9747-4f9f-b82f-ad601485b859",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7e2b8863-ebe4-442b-ac16-f35e11b5f72b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "322547dd-2999-45e7-9a1b-3412e477126e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f8d2246e-a9f7-4609-b65c-4e2343330712"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ccb4629-0034-47ba-a901-9327fac7fc8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4bd3124e-6bb3-4291-a57c-a5fb91173591"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b11eab3-346f-43cf-a677-0aa9e4a41abe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1a20ebc-5be9-43c4-a2b6-439ee50d5ece"
            }
          }
        ]
      },
      {
        "id": "4cbff58b-30e0-41ad-a612-524c73c4f83c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "881427e0-7f82-434b-94ab-977e1a26b6e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cd812d00-8b8b-4d0c-a007-5e9f9cf3db0a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "977155c1-1dd7-4b53-8aae-43a8dd895547",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a188a7ee-37b1-4480-afcc-e7a7c569845d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a48536-ff96-4256-acd5-771f7af3e228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f37403-6c58-44cf-8a31-f0c8fe843c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6091a392-867d-4c45-9516-44588b6fbaaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62eca0a8-95b0-492f-8fc8-7fee0a9c1b31",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b41b7b-eae0-4044-9fd6-516858b5d8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7df3af8-7cd6-4ee9-9027-0e80da7efaa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9412669-0c99-48b8-9ab2-77b88073388e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15bcfc13-ab24-494b-99da-821d5623fbe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf82cfa-3f48-41f7-9c28-42e4e84e2677",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8645d14-26b5-4ce6-b954-53089f1a1afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be834466-82cd-4f21-836b-2e4f7f0257b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449bc51a-a21d-4f9d-b74d-bbbaf0ad209a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ba66757-d301-4390-9abe-643e075437e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49276a26-5228-4f5d-a095-737fc18b8d33",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d97ced-e7e8-40bf-92a7-c66a81db8904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ce15ef-6c4c-402a-b680-f29d5b6775e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31fe248-821c-4e81-91f3-dcc4f88d3fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9248dca5-04d6-4187-91b7-8d4400e943d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7d35cb-53a6-47c1-b160-d8b2cee0ab4a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8220b348-5e0d-4ce1-82b7-199dcdedb33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f3f641-e92e-41e9-adf8-92ad816bee7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f13cbf-b998-458e-b3f4-9ed997a42f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45e5ca5d-54c3-4efe-b815-2223e33b4abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e21467-5646-4172-b367-dbd1164f7e1c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3537b96-dc1c-4d33-931b-7168062e6cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bafdb170-0bd4-428b-8a08-91c0a3dcb79d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de7edaf-de50-4417-b2bb-2da44223f9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b652b409-f887-4afb-8261-fdabd53e3a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076d1d11-334d-4c9f-8795-44b63f93ed87",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fb786f-9002-42c3-add6-224f869d41ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7db3d99-dd61-4095-9ae1-26dbe0ad1ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d46b066-9ede-4b7b-b52c-2cccc2946a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e12a6e60-37e8-423f-9065-13587fb15dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36db9f87-458e-4f5a-a53f-c662cbaf5ca8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938166df-ccae-4135-b8ef-04b6d5b82a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2123b03-4b62-47f8-bdab-a32d3b90a2cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad8b4d0-1b0f-424f-805d-f7464784cc0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4877c683-0c2e-4a45-a4c8-0b5d2ddd6d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d77163-25aa-4e27-ac93-c6ddbefa48c2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e392e478-30b4-4a47-9bbe-7300c07a4367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf2ef3f-2c3b-4241-9979-70fefacad6ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29e8e9f-cf7d-4e73-bbca-e30f2bf3ce2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f9708fc-249c-44ae-8a62-52b19a9841e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa2ce15-2a79-4ace-be8a-2225e0832fa2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291577f3-7d52-445e-9886-a6285d8ecf41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c87c79-eb0d-413c-82ef-d8743ab6dd33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df19fd0-ee15-44c6-a0cc-254c2448d909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6ca7aee-56f1-4a2d-a5bd-f659de92a903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71edd3ef-b45f-427b-92c7-becd2b9091f9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0787afec-d5b9-4852-abbb-ea66384e7886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4361ba-73ea-45b1-9ba9-979090389b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00482658-11d2-4bc8-b412-a50b0224b182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27286548-8c43-4485-911b-385cad2f0d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc35728-c47d-4161-a6e1-da11050100f4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c069fe3-7086-42bb-9356-d13dab235ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d38ca4d-5189-4c64-806a-3488483ae6fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c641e535-afb5-4119-8d41-aba7e16b2883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44814f31-533c-4544-9a34-34e6d918a2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8acd3688-b17d-4252-854c-ec9fb2738e71",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4883e905-9ee2-4da1-8431-0c5e34124fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48538f3c-b936-49cd-b62c-b767f0b69be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87e563d-8060-4c29-b4e3-a5bbcc1b9332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73f95900-fb61-4bb3-b0f5-e882309a3db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db7acbc-ee46-4c16-b47b-2936de2e3568",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fa619b-5c0b-4c63-a828-20634e062e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d1d4212-7093-40a9-a2b7-112582b35e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5e5ab7-0e2f-4861-b7d7-57efd345b29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01791298-d06a-4c56-9a99-dad794d33703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd06e77-ac1b-4ae2-bea8-936188c856d4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921b1871-947f-4928-93ae-a1803d78f0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a0cffe-2a36-4ca7-b4d3-786c210217b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63aeb1fd-a589-40cf-bb8f-68f211750b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb7df6c1-fca0-4733-a1da-9c494a473d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7fe076-1b95-402d-aa38-5f33c9356bad",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e596f24-473c-4aed-af25-10e0e207f745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42a6354-7c00-4ef6-94f8-e3c2a42e1df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6101cd8-8ba9-449c-af1c-5efed67c172a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91977541-eae1-4623-a13a-4bec9ced7114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf82a16-619d-429b-bed0-231457e5c42b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a31a55c-fb28-4249-9839-52a9062fcbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5952dd-dc05-48f1-af4a-812bc3e3dfca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81b2936-ba71-4beb-9dc5-c65aa3b322d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3df41a48-6803-47cd-bc48-a9995dc84660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480dbb0d-1c10-4232-9277-f8d2a6293c95",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62cda53-4f5c-4222-9690-7b0ed555cbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b1e0e5-5a48-4a01-80b3-f7356ceac61c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b85d072-b55f-451f-8b65-330edee7c782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e16f0ed-5043-4181-91e1-569e40a86e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a48f5b3-c627-4799-820c-5aeb3d1de19a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580ddcfb-5881-4b7e-9745-756a2013abf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216df783-eb0d-439a-95f7-c6ffb71f6faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efa91e4-a61d-4b56-81b3-ad0c6ad5eac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4e5e0c-cb53-454d-a4e0-12eba919f458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa103d57-dc7e-40cd-870e-af6ccf298a55",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16087e56-b90d-44ea-9222-d1aa4c396a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c76bbe70-ce1b-4c4b-9e60-4eaebd6dd436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93d0695-5af9-408c-8826-e1bec9872679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9643ec16-3c43-4dbd-9ea3-5279180fbdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de19638-dfc5-4528-955d-d021c8ca07b7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64adc778-8d79-4eae-be8b-8a6201dc4950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ca1493-c0e6-4b0f-aa07-77711ce2d0cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541a660c-2e0e-445b-99da-f5829feefe8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df753ff3-1030-4d60-8d5c-470bee083d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e78991-dc2f-42e1-8ce7-608d8df9047b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9825839-85fb-4a06-bc47-17a3c13840a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f84f147-5ffc-4abb-975c-a91b1b794432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0175b513-eb2d-4071-ba60-8122125f4c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e23f5a3a-82e9-4208-ae61-e283707b53c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b7bafb-3cf2-4219-8420-c4dcbce32cca",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e3d256-02eb-4241-97ec-a956dfab2cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7788c2fd-b683-47ba-8263-8cbd842f436c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2df4ab4-0c20-4e81-90ca-9a92c5712fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22c9a5ea-0b58-4109-bc4f-94ed0d845c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76489466-f421-4f7a-978d-78ed7a047f81",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a3aab1-d5cf-4ffb-8e03-7807e7ae56e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02644de3-ea98-42e2-979b-2189c741789c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d111edc8-823a-4fe9-8870-d0315c1df10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd1b4b6-7bd2-4deb-ba7d-9c6c6a572614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e523719-711d-40d5-b205-d23cccc50ffb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900e1dc6-3863-436c-bc13-d463ad4ff7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a71ce5-2a5d-4f3a-b80c-f49955bc0497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad71b59e-4070-4961-85db-aced56c90c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7761d8c4-e811-4080-af7b-ea14e2e879ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b3f2a7-3700-4065-b58f-57d3b4653051",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "321576c7-8b39-43b9-8ba9-7ff63daf74a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea8d5091-d998-47a1-9cd1-4d8c40ae1ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4fc278-3fea-4a93-aa58-7dbf679b3126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eadace9b-df7a-4ebf-a4f3-67c60cd94d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d83e61-adee-4fa2-9cc9-9ded290a64f2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40944445-3679-43be-bb7e-9d793501a2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c2aa45-bbde-41a8-9a7f-6bdf4f999cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346d58a4-12b7-48fe-9d6e-56afc12581e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d92e88da-974d-4752-8351-3ed4d64ed506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5967ff4c-9afe-4ba8-9ed3-a5996a7d3c13",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee0a76b-629a-4763-9d9e-f35080d77c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed88960-63d9-40cf-b18f-4fa61c46ce01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0d3fbc-ce11-4ad6-94dd-0c7890848cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c82a352-093d-4b3a-8ec7-58e7f6e85d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ca9025-2b8d-45a2-a962-b54fb50fa454",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee34aa2-700b-4b07-84c8-a12f3e167f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ead507-c2e7-49ff-8d07-1f28f1ffad88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2160db79-e899-440f-8a08-bfbcac7f67ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3507976d-1f2b-4a6c-b95b-b5bdd3572341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897f47cb-ce41-4d28-bdcd-f70762962539",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10003b53-35b5-4a21-b683-7f87a96c5472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "966dfce7-2a4d-4128-bcf1-3af4c9ddfd47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc19cd43-0f7e-4d12-a6a5-4e4d6c27d218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7b11def-9ed4-464c-8e2f-43242966da9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f720f5f5-ac14-44c2-ae4a-7a5743ecba89",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa8afde-e0a3-4a7e-b6b3-e43a60224637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac352c21-6f9c-44b6-93d8-438ba2431909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b932f4e-1d36-49c4-a60e-5d318006bbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b680d62f-3803-456f-9ff9-880b8f71ee9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a431452-e288-4a88-832e-6035bc2360e4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b01bd3-d91e-40f2-a025-737a7dd4d420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e8b1150-118b-4d68-a62e-646f1f0544f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6d5363-28af-40a9-a25e-26f73f3e6027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5a0d0c-d515-4797-bfa3-543735197f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29aa37af-ddee-4e53-898f-cb3160d2ad8d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a630f566-f2cb-463b-8a63-29f6c30e7421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c20daaf-e366-473c-bbf6-c402b784d9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2a7aa6-eeb1-47a7-b075-a812235470e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b43b747-7412-4c51-a76b-d78822811137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7780b683-d14c-4c74-a769-83642ec3b8f9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7a6f15-5888-42b1-b952-8275502ba9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6432d5a6-5200-42d9-8ed9-082575cd9d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99d4cef-e325-41bf-b337-a6c62916e7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3801ee-7274-43dc-b887-64bce943f5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f10c26c-c873-4f2e-b9bb-9f90a41c3fe1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9597789-57f7-46c4-95d1-639543e81c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82664d0-4898-47a1-b6f2-7ad1e1109346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cde9c35-d749-4119-bd40-ca3f30344b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "43da7512-088e-495e-8de7-f0bb8fb8fc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4760398-adff-40fb-9cd1-3bc5efb436b0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db7abcf-cb93-4cf9-b741-cb54c9c1d233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d407761b-470b-4225-9300-66ff734f4038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e17e184-c211-4d15-8a36-185b2c30544f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bd7d5cad-3e35-4624-8dfc-635f97de01cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efaa2be-26ae-406e-8df2-5c314011a60c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f7838f-a063-4bb2-bb45-58c2f94f957d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde95369-5e4a-4efa-9215-14006a32a146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228626ff-6fa3-4e30-b3cd-cecef7f68d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd79b1cf-ef98-4c13-a1d5-4a4a6073677f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6840750f-c044-4b0f-8e85-865575ea5f7e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627f1b38-f1cf-4449-b5d8-89db39f329ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3f4389-4bb4-49fb-a83e-9554a27ef497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0094202-147a-4787-b799-58f3232ffa8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "81710443-17e9-4625-865c-759207894591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0c37c0-eedf-4647-bd42-6820746a23e8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72ca848-86f3-4363-b6c8-b0ce4c45f236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551a5535-fa0e-4508-b218-1e0df8b5932f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52eeae7d-36c7-4b65-8568-c3b8b6764d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9eba19-d643-4e9a-8b79-3ee9cfa34dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fea1ed6-526a-4375-bd0e-602a164221e5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02db3a56-491d-4a66-bf29-4bf0a361b6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad8a108-e739-45a0-85d2-83faac6d7d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ea43d0-313c-428d-81df-c1e9b832022b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "17c7f13c-1834-4682-a4ff-093b8b0af810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7ec616-724c-47e9-b399-305f1986e0bf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd8cf76-38aa-4e8d-b833-58af85df2059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66efb220-7287-4220-8cc1-ca7cf095c6ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f24091-d5ee-467b-b741-4bd13a3c32ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae9a235-4e2b-4fea-80ee-1d70e94699b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fadbba36-cb1f-4a0e-86c6-bcc59acce507",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f9c669-5914-4f73-a794-305314f1364c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932ed271-2faf-436d-8cd2-7303e3112a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d33123-cfc3-4833-9d61-eb30faa939a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9d5b615a-22c8-4baf-a19c-ae78dcac0515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64b3f9c-4537-4863-96d4-ec18b4f0c9cd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7107f1d9-02f1-40ae-990b-431e8953644f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779dcb31-c25d-46be-9695-f5316f25bf2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b0f830-3dd2-498c-b9b1-d6ccf64070eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1417635-b11c-4911-b94e-de55285a2554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "badbf675-2710-40b7-a3a1-2f5fcd4f20e6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3761ad2a-8197-4c50-b2cd-041c75643495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac07d362-b3ba-4599-a96d-5f20b688da4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a077369f-4072-4bb5-8471-d0f42281a752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6710a1a4-5870-4f8d-baba-5f9b16bb6781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ccf3e5-f3dc-4c5f-83cd-d213a0b33ca3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723137bf-e18b-4af0-ae07-bf2afda291f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3453aec5-472e-4299-87fd-0b4a0d15ed36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ee9891-d205-4557-83e7-eb83962c5f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "36aac1a1-0221-41f0-b362-a1dcd99688e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e7dd13-0a85-46f8-b1da-4042545e126b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c763dff-17d2-4d10-940f-cf1cb69f835e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a263b3-67c1-45fa-8a47-af8ae209daf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4425763f-c02b-409e-951c-49c8e9be04fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ee553b-634d-4760-90c6-4545afdd8a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c154a672-ef02-42f1-896e-9fd3979349b4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec26331-9316-481d-bbd9-7ece2c3fc89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2def1d3f-4dd2-4d1c-9cf3-36577018e87e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ade97b-c913-43a0-bd97-9f48788e3d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6aadc2af-713e-475b-9245-0092ae72417d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2367c2-07e2-4a56-9361-1378966679a4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b3f009-6e07-4378-97e1-6f000aa81b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec94305e-ce98-4f1f-943a-84e3546ee7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6deac5-490b-439c-b021-9097194e9365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d769dd9b-6e33-47f7-91be-2f83167fc4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382f55ba-e3cb-470f-9136-0fd1dfb4c499",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4148f630-70c6-4617-87ec-44d61d49332b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1116817d-3a15-4f07-b818-675da0f6da87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6113dd52-b802-4483-82b3-d7e64b157d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40451cd8-1f9d-467c-b81c-c16c2c9892bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84419ae6-5981-4831-8fb6-2e49931eab42",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfe01ce-ca58-400f-923e-f7a55baf30ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f7a1bd-ba28-4c73-bbcc-92a40277d42c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7491e501-83c6-41f8-b427-5e822ce5f383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "19f0b032-a52f-46a0-a782-d8d2201089c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df67be4c-5f36-49d2-a17b-c376dd77cffb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253c3c36-54cc-4a30-8525-ce6fe4c46a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a234987-bf02-493b-9293-b03e35629b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7d5002-fb56-4d33-9b9d-ec9d81b29218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5cc33c-5921-4e22-81cd-5b12d1b740a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988ae3c4-e4de-41a3-9388-5e72b02752fb",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cac551-bcf9-4e30-ad75-c4ffc6de537c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acac937b-1272-453b-beb2-5fbe63dc320d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3443e4-1dd2-4cf5-9899-4a181f40091b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ee257b-dcec-40ea-a061-d0cc81cce97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0d483b-989f-4a9b-a8f1-553cae874bd5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb44e19-5689-43ad-bbae-d977fba9d59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60cc2ef-e7c5-48c2-9443-8d528aea8305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd57370-cd99-4eaf-abae-d87bc06ad585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ba44085-7445-4383-bfc0-4066f45ea7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474cf866-5782-4103-acfd-e864b8f0bfea",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00106152-990a-4a8a-b652-bde2aff52902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d0e2786-b8f3-4242-84cd-fd65780ec1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce1b31a-ff07-4e09-84b6-6bf2b539b256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b256e44b-d240-4ff8-9f27-3f08fe894c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380db179-b545-45c3-9b65-738f3038a3ed",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63c56f7-2732-4ca8-a0e7-e1f81603631b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521a6f2b-f13a-4679-b94c-a59ab1a96f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640de10d-4034-40ae-add9-6e99d0c00bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a04920ef-a247-40bd-be73-1d7e04b425de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd3be39-f19e-43dc-aa97-5dfe7d01f758",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0380fab-497d-4923-99d7-c5aef22731de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72be7e1c-bcb2-4429-88f4-401f2650b5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d3966d-555b-4202-b3ba-0533dcf5f5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "80a0f993-484e-4bdc-b0fb-180840de64b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85da1a0-702f-47bc-bd0f-92abe0fe6809",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52751cbe-82e8-452f-85c6-de3c90ff5d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fcc936f-0e8e-4154-ba64-305ed19aec9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e023d5a2-ea57-431c-bf35-0d227a4fcd8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9353cfe1-220a-4416-9b4c-7061ca0d0578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcd641e-81b1-4a32-8514-7ac74fc80274",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f2c3c1-8834-4fd2-8f5e-b0ae101b9aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21132452-c1b6-4992-8f40-48b7814360af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9f161d-cfa9-4f84-bca2-92c33df42ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7565f98-5031-4fba-a02b-ccea1cfbb626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643173b4-3c84-478c-85fb-e64c5592978d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcd659f-360f-48f1-90bc-109a742690ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c560c152-4efb-4997-9166-28dfdd8ebe28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec66099-9835-4f22-859d-411f01d4437d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "483a9633-5083-48ac-91ae-ee995a45dd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f34bd37-1b5b-4391-89be-3835a64811f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d375c7dc-9fed-4418-b57c-e0af93840a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5978ae6f-e97b-4a6c-8f8f-fa23adabbbb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd40bc96-09c7-4ec7-928e-6902e480147e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "428d7725-2a3f-485c-9e2e-cc4adf07362d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fcffd4d-19ca-45ad-a5d6-87c8cdff75ae",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda7b734-5733-4e54-a341-6c7e8e0b1ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd235d7f-ee4e-4955-ace5-8a98e6087622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff8e018-5991-4ae1-840c-9bd18521a144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "edbafce1-6b27-4189-9034-922603b7ed62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc1e56f-f849-404f-82bf-38eede1b2442",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84662159-34a9-4e40-9409-8e28521d1551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5cce6bc-ed04-4e53-99d3-1580998fda26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8aa0086-f480-446d-956c-6b4da78b136f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "987eedd3-fd46-48ed-a446-eed22a617842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7d00a5-16fe-40dc-8d60-1a27da270d48",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0509a12-b8d4-4e2e-96d6-d8033035e7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "533bd428-aca6-4b51-ba4c-cb0cb0ff5c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6588ed0-2603-437d-aeaa-4ae2eeeef74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5433009b-1fb4-4e3d-8f89-3100316a2cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16549a7-b184-4618-ad82-880cd708c6b3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8b6cd3-4ce4-4cd8-8751-4df7a39347c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e41ba05-4583-45af-b98b-ea73a91eeeab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb04464-e264-4c68-ad9a-4a9b2298d9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a35975a-9591-4892-bb4e-5eba9ae143b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f823ac-73b0-4672-8a87-5f8b23df4b65",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a201d47-8829-43a2-a2a0-b23213507f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ba7617-17a6-44a0-8d82-23e63d6ff015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6303f6a0-09fd-4c76-a02b-529b3a9dca96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f1dbc5d-1757-4e5c-a2d9-3c025ae08ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e525ebe-5050-4b7d-8c50-f8f1fb559a7e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2993549-76aa-4f61-bcd9-8494ebc7a7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5715c901-8160-4ea6-9d22-a03eb682677a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ebdfb0-ca7b-418e-a887-11d16d67f875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb1af16-1eee-46c1-bb3b-bacd4e39a258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544635f5-d053-4026-8b51-1ef2502df2fc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "370e0524-07ce-4fb6-8769-74472ef70a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d7b09a6-acb6-40b6-a886-c68945b2712b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564f1365-5600-4838-b28f-049844763182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0221ee89-3de5-4a4d-9007-ab58655b35df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414f5834-8250-4c81-8945-7b251924d88b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ded01d-f91b-4763-8336-1eb5ea056804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a058bae5-184a-46a6-a4f2-54105a4918c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbe5997-be06-43b9-96dd-bce7e145fce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a498abf-3b2f-464a-806d-e90646d992d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24d8691-eada-4e32-8229-c5864a2153a7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7884cf5c-4674-4903-bcae-9ffc3c08f776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b220695-9d23-41ca-912b-2207f2a81a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e1cd75-3dbb-48b2-9e5b-092844e8588e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c625eb5f-46e7-4853-a629-995a17c7ac70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ee3437-45dc-4f9b-84f7-3a93e8bb9a7c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62359943-8e19-45c7-ada7-d53e51dcc857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892f161c-cfba-4342-9de2-b3cf836f36ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e705f65d-cd76-4184-9d31-71eca6b5c5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "49692c9d-bba7-4ac8-9272-34f3fc90eecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0730f5f2-c803-4706-adc7-21905d298b77",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a891652-3789-4ae8-84f2-a40dcaa30b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd7500c-dfdf-4f3c-958a-d536b5697729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78247e87-4dea-4828-b911-2130fccea507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73229ab7-8953-439a-be36-a49965a2ecf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150d221f-b361-4c5b-8df4-4c2b3adfb7f1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a413ca14-5607-4aad-b1db-72973ff8e54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8404b74c-7c3d-4dfc-8b0a-a3b5db421320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139a9ce4-eacc-4240-b29d-202aa0a9247f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "813a0ed7-67d3-4066-ac92-8a8e7401e174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca8d3a7-eda0-43db-bba0-3286cfc661c4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b2f23d-bfec-4812-be5c-f33a985d921d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c56c2c0-3785-4cc0-a015-94b2b39c0325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6997e6-a252-417c-9ad2-c5ba2621775b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3238ed5-2995-4786-b7ba-549f08286172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc391e8-79fa-4fe6-8abe-f9c493ca3764",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd4eb3e-0321-4edb-96e8-40b57b430744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be89af5c-8b25-40df-8374-008d796f2e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c17b5d9-1bc6-4677-8887-9f6ed5550899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "186529be-6139-462d-8b11-273f40bee245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0f20fb-7f95-41ff-94bc-14ba5f42da58",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29149ac7-8698-4868-afbd-24e8a58f6c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e248c9-d0ad-4821-8608-df7ba2e07c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040e2143-5ad6-44e8-b23b-c487c4cb8b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "35e3abd1-4d7f-43fc-ba77-05b6bca6bd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373f872b-ecec-4254-8588-f72e3fa1cd28",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96683580-f558-467c-ac5f-dbd9ce55d2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c58523-c07d-4c0c-9194-90445fca89b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810882a2-0b4e-4f28-8da1-fb35af0a1bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77d6b15e-0cab-4a47-a668-bb84a14b57d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a1cb0f-b81d-4ecf-ba8c-0f4f1b6bf0e3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee036be4-18db-4bd3-afa0-ef9510096f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d623e82-8db3-4c45-a695-3962d5ccba4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef76f7f-39ab-4fca-b27d-f10ef97a98c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "276044a3-55b8-49b4-be76-2dd1ce55f73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d452c1-0623-498c-be0f-801bc6837857",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187847f7-ca12-4e56-8d8e-9c58930828b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f6b617b-d84c-4f01-a080-7e2bcb9b5730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1da30d1-b21f-41d0-80d8-cfb870e16a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4cbe8a9-47ea-4ba6-b78d-aae7ae6ef8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144580b8-1a06-422a-9e43-afd6a0361a9b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8cfc96f-2147-49ae-bb20-f4996a5f24c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc78eda3-3c3c-41b3-a90e-f2ed3d36fc7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c69dc5f-d51a-411d-8af3-370920161f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9dee31c8-a19d-4800-a5a7-0f58fce890f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59b263e-69a2-4fd9-808a-451ea993ef90",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58eddf46-b8cc-4d4c-abeb-9acc08bb9c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b0fb6c-bb8f-43d4-811e-a7724c87716d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f462f0f-2814-4b2c-b44d-dadc33c46dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f04d394b-5f00-41db-80e7-78016a275207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d44c6f8-e8cb-4687-84a3-cadf03cb4e49",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37b0db9-053e-4086-9ce5-098e228340ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4adfa9-e750-4e9f-9800-a09be45f6e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee7d591-6c82-42c0-b44a-ebef7bcbe8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b188666f-40d6-4de1-b9c0-5ef1a9d9f656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8134b961-3db1-468b-904b-bc4b946ead69",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5524d2a4-ddf6-4ae3-8612-73920b52537a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d707eb6-b43d-40bb-bfe2-ddffe0c4e331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00de886-aead-44f8-8502-1787dca1ce03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4faa3be5-58c5-4fb7-a0e1-ac9af85ad87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6005f1-2937-4187-8d01-d63a62a49e5f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb8a9d1-764a-4a22-a20c-47fd0c2f8945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc99008f-9d3c-4e40-8c64-3d1a62a05d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ed4bd4-7cb5-44cd-a209-7ef2d1d0d159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c0f266-a964-4fe4-9e06-b8ca352ba6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce159ac7-f495-43a4-b55d-ae3bcda38295",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212d308c-0a7e-43f0-b715-3b89c073c0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c4e882-6664-44ae-b39b-80e1a7a8739f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f9e8e8-ebed-47ac-9a40-189d2269baef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49c7ee09-35b3-4db5-b242-e93b7ae4ed0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed901b6-6cdc-4c55-a477-807ef311a8e8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "238cc9af-ffc3-4c2d-a38b-03913afd65d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda536a5-01d9-4531-9405-ef799f5d1c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d73f93-199b-4435-aad6-f84308c352b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7dad8b88-3c7e-4a96-8d47-e2439c57e895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0227d1d0-a9bf-4ddf-b414-64121887901a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d705e7f6-c4c2-4b12-81f9-fbd77fcb0774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d30a4e7-2390-408f-8a8e-80c5290d915f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9089c32c-f978-4a40-864b-9d80dc26b9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f4f0bf7-3568-4be3-a019-a005cce9c09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cf61ef-5ffa-48e2-9282-86d6b0575723",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28e69e8-1a6b-45f1-812b-948356bb11c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c577b3e-f66a-4078-8f8d-1013f3b82ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db44a582-181b-418b-a7c0-b7a18cf91532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6da7d714-d6a9-41bf-a393-6d452e916273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2898912b-a967-411f-babd-55ee9755d54a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b883b3ef-5a20-4d75-a538-562dd96ff2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d514897b-b51b-49ab-8984-d7699b810623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358a551e-08ad-4a6f-af7f-7dc54eae416b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "766ddfe9-992b-4919-ba00-4c48806e9e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fd59a4-f39a-4775-b418-ef2c7e0b447d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8466394e-72cb-4362-a90f-71a286edc805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b749badc-02cc-4f1c-9513-17b18642b33b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41b331d-1af0-4f86-9a1d-163121331496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bec131d-4cc6-4cdd-a746-a440276c9a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff2aaba-5dc4-4ff8-9a77-4b386ebcd0d5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd2b4d9-4814-4509-b6bf-9ff2a337f339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43cb48b-0c50-48a0-80b9-773f092d8946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdedc269-c4ef-49c9-930f-d47e3ab78ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "01f94db5-af65-4bd8-bbb1-365170c0d920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a96fe7-c1f2-425f-957a-5a2efa53f191",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0d9a14-2009-41ac-82f7-baf39fc097b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b23ad4c-676c-4a46-8e90-daa317741232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f28115-686a-4b21-9a05-8c67d4bcb7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "704d81e2-de1b-494e-a737-27ee2eff8a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2687edb-bb73-4c13-bb37-64c213558b40",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a494e8e5-0635-44fa-9611-0a90392d1131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "147556a3-9857-4424-af7e-3ab71d7ff9c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c80a710-76f9-4736-bc63-1754fbe79755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e8ac539-95d8-4f32-bc14-584102b77a03"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d054a65f-6f60-4dc4-8a91-2549494c7d44",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d992add2-f162-4baa-acf1-8c58dfb1a264",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fcd1ab-d4fc-4873-8c2e-4ae4593cf532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93e931ae-2e1c-4d9a-a4a1-84f756941268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed3ab90-0d86-4e19-a7fc-a7b071fef0d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ca56117-fa93-4732-b1af-0de487ecef43"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c593456e-afef-40e6-91b7-c7a80494e2c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "759c214c-9d65-4591-b08a-2de9258432ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "11002f32-c4c5-44b4-9a43-6ee6dab58916",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3787b9c4-5cc5-414e-8c05-041766af5d77"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "241662b9-7af7-43de-ac95-191ebd3fda44",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b5c6ffe3-e7cb-45e3-9bf6-3cc18fa4f0fd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0b1defbd-cafa-4adf-95b6-9aa92f74338e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e551823-fea0-47d5-ad4c-5d49bec2c400"
                }
              }
            ]
          },
          {
            "id": "93021a43-9ff2-4658-8ec5-bd2059b2f4b3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "118e22db-a9ae-4005-91bc-5953048e70d7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "bea0f9f9-759d-4a5f-aa7e-6744826d190d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2ee8d6-c6ca-46d1-8ecf-a747ef132900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "516a974c-201d-49d7-a54f-8f52e4e82d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69d077e-8b49-42dc-a6f5-5122bb34743f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5baf8f-222b-4144-a14b-1cb1b8e271d6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d2d47d3a-2c08-49a3-b0b4-1d6cb8de85a1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa88f653-2cf2-4550-bd6a-f97ca32229a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d5e5aee-4833-425e-a9cb-e384a2e1c093"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5cf3954-fdad-4b55-867d-b1fa54e5f029",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c0096821-0975-413d-8ad2-f0cc354e4666"
                    }
                  }
                ]
              },
              {
                "id": "57f11cd0-69aa-418b-90b4-365b4172ff98",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "644ad635-caea-40f7-87c1-08d458e3c5e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1d5f66e-d146-4bdf-a86a-9bde45746930"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ba983c0-bbe5-45bf-ab4e-e4fb121da69c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2288cee8-d98a-4456-a38f-fe324fdb78cf"
                    }
                  }
                ]
              },
              {
                "id": "9694aa6c-1a41-48dc-b517-06b546675c21",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08ed8bb9-e77e-483f-8466-e6add0827f88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b00495a5-ac01-47b2-9c4b-1ae9bc3fd882"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f523ba96-e524-46ce-93cd-fc7afc19bf1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "63846070-7491-4ed9-aec6-142d4ca5b531"
                    }
                  }
                ]
              },
              {
                "id": "c26a8bca-50be-496b-bf39-95916a3d8721",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d73f5c9b-27c8-4fef-9611-074d734ebf3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84f100bb-32c4-412f-bf13-205576d05310"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97724166-9d0f-4a5d-b542-207832d12d7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "63323cec-92ae-42a0-9e70-e652b97954ca"
                    }
                  }
                ]
              },
              {
                "id": "c633f0dc-cff5-43b8-af90-8d096b9b35ce",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58eb0a6e-3c47-4eca-a18a-3496ef7bed46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f8dedb3-83de-4523-93cd-b028cd179f0a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b10930a7-5609-4869-a1ef-29edb16925ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ff1564f8-34ce-4715-bf5f-686dabedbc5d"
                    }
                  }
                ]
              },
              {
                "id": "8513018b-e225-4435-8163-566e87d85777",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b201e8dc-092b-4a97-a46d-2add574f4b6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9793f828-9b70-47bb-b9a8-0aca03006125"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05e3367a-4bc6-4aed-bb5c-e9c062a35fb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bbdf4f5a-2e02-4c7b-aa53-ff0ef4951f23"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0b0d681d-fcd8-4f62-98a3-62183d94afd8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "230a3f22-f99e-4ccd-bb4a-6566b5a30103"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ea38ad1c-85a8-47b9-8abb-68edd1bf2472",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6233ba39-24cd-4fae-8ec2-449f24915248"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c010e0cc-b4e4-47d2-9267-1ce0a15fe3b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3beed76c-9370-4ad0-bb0d-b0bcf36ab386"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35e63fc7-282c-416a-ba3b-e93a1fa60a9b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf9e5ab8-3991-4bba-a36e-9943926fffcf"
            }
          }
        ]
      },
      {
        "id": "6b14171b-9776-4f45-8f57-c4e5ab665848",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "578c5867-eba5-4342-bf77-1981efdc5b02",
            "name": "Negative Testing",
            "item": [
              {
                "id": "567e42c5-909a-4759-8be3-fcaa4f44c59b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eed3c4ae-ac29-405a-825c-3b4122324927",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "499fa8fa-d038-468b-8181-18c0d3dc3685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddcbc2df-f832-4141-8bc6-d8a479edeb68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df862e6-0c17-4574-9fc1-73da8baa7457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "329a593e-8863-4efd-b14f-8da0972069b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebb5f5b-ff34-4f39-9ef4-153b7309359d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef35ac2-d8e9-49b5-89d3-7288e5f8ae04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080e77c0-1908-44bb-bbbb-a81ea455ee82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b190fb5c-bace-4d3c-9039-0f4d27bb2b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee0404e8-66d4-461b-a2ce-049a3ec949b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d89b4a2-a83b-43ab-927d-f211ebb2774d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46936759-86a2-4205-b244-5fdb6856f36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0e970a-4f85-4e97-b00f-3e66602865ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02bc8dfb-1f9f-4978-a461-8eee35922ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa45c969-4dcf-461a-ba47-28a1655c6655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94617034-c0df-4698-8d3c-e358b1140ff4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfb2d57-d037-4741-9800-18cc826b455d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8021793-c706-495b-acba-4ced9767ea5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392d7f68-0f59-48cd-a096-a1d0bd3e936f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d34f651-846a-49d2-ac0b-21a0bf6d9129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa74c9f-d77c-4163-b8ad-df5034706449",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3da66b-95cd-46f1-a556-a9384af4ded9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434dac06-e642-446c-826c-40ee60c8a24f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff1424a-fd29-47be-b9ba-2770e1d4324e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c393394-9ea8-41eb-b1dc-dd0f2dc5b856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e919fb0b-9193-4979-8e2a-955f08dfa2e3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623cea1b-f027-4e65-8186-2a8d207c3f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b69bc9c-ce8f-4a97-9545-0f393c672e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435170f8-fb4b-4e2f-becd-d214152c4c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b5e00c-1895-45b7-831b-050b7472a30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d531e3a0-b72d-4465-8cfd-b89c07728849",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df42bae0-26b0-40ae-bb5f-f697213e914b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2ddb10-ec59-442f-b8d1-1e259ed76a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c83c6a2-e34f-409c-ad03-a9d1319f6032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "58d81a2b-5f47-4022-924e-37057c0cbdad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8340a93-6427-4efc-84b1-5be6a79738f8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db193ab-ee96-4420-b326-da4517a40b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b4fc259-1249-4179-a4c2-f5f1fd385e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d25270-1196-49fe-878d-d4217a275626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9615da2a-cd0d-455a-824d-2823e9cc3323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d8dd49-0b6c-4bd8-b5e8-9d434c73393d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "787cefb2-f10a-4362-9bb9-91df4c0a7c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af711dee-ff3a-475e-96d5-45c4cdec35c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728517ea-a6b1-49f8-8f5e-3478519e2ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf64466-6c5e-482f-9d9c-93460f9b27a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f13615d-e65e-4d5f-b8cf-484cacd9bd3e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5914258d-87c4-4d79-bdc9-a3d18628c12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f870ea4-09d6-4279-8f95-c8ceb92b5b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e7bdda-9d7b-42c4-904c-f44e15c23615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "875d9a02-2336-482d-8045-3ba935a98414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830efa8d-f402-4c14-b145-1f4f4fb6b3bb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d32cc2c-3665-4106-9f67-942355ca0e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015fc634-8056-4598-bee8-466cbbeefe49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e4fe6b-4182-4c07-8e90-68c160b41499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "80685a0b-3a57-42c3-9e47-5bd6daf91bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3683ed-6719-4d23-a2ee-6635b93bd7a4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a5fc5c-e7cb-47ad-b4cf-85af4454182a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058a4a09-4832-4fa0-943e-687cd0b6d7dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42df2d64-98b9-4b04-a586-4923fba03403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4557f208-1a9f-4e1d-ae0b-48eef802e8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0202ef35-7549-469d-a35e-94251c7fa8cc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6744fb-0306-4c56-8fda-49d6556a0ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07de3345-3cac-4d8d-9925-26fc607e9af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd11c835-7786-4936-a31f-f7a32ca5f647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3af515-48f5-48ea-a992-9b22f3194225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7a9c8a-4751-4ed5-87d1-1aeb74369914",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81824205-1a71-4516-91d9-501dce2e2504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f79e98c-b4a5-4dab-91ee-d128ebccb784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47582f4d-1b3a-4917-8318-bcfd2206151f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "882ec461-2a34-44ab-b841-bb22e48a1004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70e1753-02a0-453d-8392-16c2383d94cf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9543b8d-9b13-453c-bc4e-afe952173257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9737403d-aae5-4c07-a1d6-39f54b710476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb36ecdc-7646-45f9-9a3e-588b3751c295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c1572a2-e365-4c1a-8151-8abd5157ede3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c1d3e6-ffc3-4c30-8996-22a16c667f58",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2198905-4a10-4d17-a9ef-bfa4bbfe17bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7dc307-3fb2-42ff-8e82-96287b5cd551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43818040-ccc6-4c50-856c-2e5951668ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e05d42c-676a-4356-8996-2cd52ff476d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306fb992-74e6-4223-a459-8255aad37e84",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89baa050-5682-4d4c-8e11-10d53b4cc80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e53a66a-e6d2-4021-b4b9-11934d655382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b6f8e8-0dd3-4258-9edd-0a92f3427e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f370e277-76d5-4f88-b1e6-a19b31730833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd68cde-3deb-4e79-9350-d4af6b0f648d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8077a4-2034-4a0c-aa3f-3a28e6a14ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0deaa3ba-5f15-4b02-a38d-173ec0ecc910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09b43c1-e2da-4f40-a070-ee8e9f24817f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "06a1512c-e9ae-4a0f-998e-5ab48ee59423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6076a989-f5f7-4cf0-b6f3-076444790d07",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e26a459-dd92-4b03-97f9-f37228053a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b4d6c2-7867-4f20-a4d7-1551d352cc73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27e03f2-a6ae-4dbe-95db-094f2033a70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8e6740b-53ee-49e4-8590-a355a0dc1948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4d53fa-9f6d-40c2-a6aa-7218a9318c3c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1193430-0af2-4d2d-a462-9cacbecb2235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "172f5422-674e-430b-9d51-b6eb72b1cb2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83376910-7121-4570-bcb9-45b4f3165cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4955c7b3-702f-4da9-b92b-a906af3a89a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8f7294-7cef-43ca-8b8b-2f247d7b6328",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9949468e-a9f2-4a5a-b021-b958015b2abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed118633-3493-4bd2-95da-e3a95de7acee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53e1d11-1e2d-4397-a2bf-be85caa1a63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88d8eb23-64e8-4b43-8458-35d39848f1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb97b13f-da48-4b95-a0b4-719b7fd12d3b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ce5837-1c53-45a3-8c10-5e177fed93fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40582a8e-1a31-4798-8422-406361896920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6db01e-ffb2-467b-ac22-58dbc0cb612e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17814d9b-1dc7-4779-9f63-f39e828dbf94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9516c434-99c8-480b-ac0a-2e50e2a7309c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b3440b-8acd-47b7-b2a1-940e396ab4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a58a355-4463-431b-8891-f3d98a290a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0cdb85-a944-4841-bb92-a609eb1b15cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b3fbdc1-7a15-4a3f-9f86-515721d8e6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d211701-4e20-4c49-adf6-b57e232698b7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d340fd-c0f2-4d6a-b8c0-81399df55d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3588732-c280-4f24-80a9-0f409d4d7221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17add50-ca09-49c3-96c7-fb76a82ffebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "957ef670-0c97-453f-8beb-1f9f80fa480d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8f8110-7953-4931-91ee-8d8f11b22799",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39161f2e-cd6c-4e17-88f0-33b3a75f3173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e770d1a-fa95-4ee4-a8ee-fc4498e11463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f3ce5d-e22d-455f-98d2-f54d40680265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "895bc0da-c778-48b6-8448-3b10c3cdcfcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f6ed73-1f19-409d-8c59-7d61fa88d446",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60d69cc-0428-4541-9a85-2fc2fc1565da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "290c6986-f3d2-43af-b3f5-a26a027a2e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816fb465-3aa6-4faf-8001-fe431a4a7d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "966ca47e-8368-4f28-8a47-1be2563970cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2de97f0-6526-42cb-a30d-6c3ebec5e724",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9889991c-a83a-4d51-ab07-4d72a010fe06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "114b20af-0d01-4eb9-8e85-f877683e77e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286f66c3-bc85-4f3b-88cb-580c9bf449c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37362cd3-c713-45d5-b442-effe488dab3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ed0ee2-c012-4e84-9ef2-8f6788b6c49a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32532123-d671-40a0-9c35-191a488dfc2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fca72ac2-ee19-4d4b-a8e6-ce65bc397fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fa6746-c5d9-4482-8818-4314bb1aecd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "527ec028-36af-42f5-be15-dc3277629b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e703ca76-d502-4972-a4f0-38dab61e3f29",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fd6951-75c7-4942-a87f-778902888031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f5c222e-1e46-46ac-a506-97a4f38f78e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2f3419-d241-4c37-b583-36501c70dd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4e7976-ea4e-46cd-8b10-99e8da558499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd054de-69fb-4cd8-ab85-1fb6d95ab524",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34dada68-b881-46fa-9e89-73e7ad869df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c2622d-0ac8-4cfc-be68-1853112d2a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c04f28-5657-48f9-94f2-6c8622ef2e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6496ee0-c75b-4812-a135-d033535b37c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a056753-1fda-45d8-9693-6bc7d5739941",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50411643-885e-444c-91cf-c32bf872bc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "facb7a3e-c0c8-4192-a48a-922ece929665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebd017a-1f81-4b03-9c52-b58fe691fa87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f1922b-a6ed-4a59-b9cf-7f196b94e357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b715b2d-7900-4602-aed4-0289fe5f96fa",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79f127e-16ae-4cd8-994f-001e6b05feeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7e682d-a5ca-47f4-bea7-d2bc95ff8d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a3a99d-6ab1-4ae6-a907-0ce02231d4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e16a6e-834f-4479-915c-0d30dfade247"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4e375212-9d6e-4665-81be-b3e8080d1f53",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "218c815f-1b31-4c48-b30a-97a87672ac61",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f1f86e-9317-47ec-8e3e-c1a14e8ded12",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "150eec01-9fe1-480e-95aa-c286fe1a55fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c81392-56bf-4e2f-a847-5e7fb60a66fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "041251b4-c75d-4de6-b56e-c568d957a280"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "250f9436-9281-4a1f-ad81-6ab77630731b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "532a5982-1a8e-4b70-bf51-99f311a09c48"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5892ba4-5f9e-408a-bba9-c2bf6d2de91b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff2526c6-f34d-40fb-8736-126e5dd4168c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a79272c-3970-42c1-8bef-7cdb21913a28",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bdf0ea9c-9e9d-4bb7-ac7d-e18ed9c08de0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12caaf70-181a-4516-a139-16e0e90bee51",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbc7dd6d-8301-4a79-8340-bbb2187c7479"
            }
          }
        ]
      },
      {
        "id": "988e50af-30e3-4d24-af95-d94e68f00603",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "10a4eaa2-9ad9-41e0-8ba4-2764b0a6b6ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "632d915b-9cf1-4e21-bfa3-7c3d3ae73bb0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2578f7f2-f73c-4ec3-8949-2da35afa43f9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab55238-4126-4560-9d18-47116a288359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd0ba0be-2912-4911-a9e6-1d55dc439ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f55f0bc-42dc-4eb6-a10d-c17df3aadd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a7d0835-04f1-402d-9d27-97dd1be1b1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21a2b8a-81b5-4800-add7-29a0b694b99f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e591ba06-c3fd-440f-96c9-a3b966f7d5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0826f6a6-7522-4e70-9593-3eb2062f26eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85e0a23-3a7a-44d0-b500-c425615e9625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a042da2e-1407-4089-800d-6fcb969d34e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd51bfb6-6585-40fc-895f-8431e31580d0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "debd8820-1a7f-4e13-b65c-823a2f56f7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0dc956-3af7-4880-951f-b00978339c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c1e141-65b5-4e4a-8533-e56f7d202497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad0fca0-0ae9-41ea-8b0c-69d34196b2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea91aa2c-cbf9-46c3-808e-3d550af9702e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afb4d0a-433d-48ff-b0b6-977b1729ef5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5acc4cd1-ace7-41f2-af2b-702d2addf146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c45977c-84dc-4e85-b2d3-3a05c082e3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b3829f6-924e-4bfa-af30-fd9a3d4ab4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337997f5-de55-4f42-8850-7af0921db0f1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250730d7-23dd-4a77-b213-f9e3001f1802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deeae210-1cee-45e9-861d-658c38f1aed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d510d3-d844-4990-b294-d02b28a927c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "167ca3d0-ad4a-4697-816f-4b75a660994b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1885479a-22c8-4179-b23d-2d1a0141a685",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81d4bf7-06fe-4cd9-baf3-ed23f8682036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c254ec66-9029-4ef8-8795-4e46831b58a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f198ea02-1fe6-42b7-bc13-ef5855226d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d58b829-ad72-4666-ba8b-f32541851d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb756bd2-eae8-47a5-b9b3-7d91adb7251d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50488e45-b547-466b-812d-1d6e966175a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774d1043-351f-4022-810c-6a7a77755887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f694b86b-fe20-4e30-a831-a249d7b02601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "54d2f86e-186b-44e5-8c2f-1dd47b8abfb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf58936-abaa-4004-97cd-1d9cc165a6bd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17f3bf4-ee73-4938-aa7e-05f042c0e5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b92cb4-e9e8-4139-9dfd-e12b7c63976d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129839e4-b8cc-499d-bb1c-a8812811190b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c570f16-ff5d-49c2-8b24-0ae0dc23c06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a168c2fe-345c-4576-9bd4-f7efd50f1820",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5156b4f9-b6c5-40ca-b335-77cc82d1dc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b5155d-6550-43f3-9374-f93df398a62d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a83ac5-0114-43d7-aee1-2480f146a052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "613e0fd3-8383-4ed8-bf32-b941fda5f5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd1cbca-9c11-4a06-8cd5-ad400fbc057b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb466c3-d127-47e5-b79d-176353e84633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e2147c-583b-4e9c-a01d-313ed007bf56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d61723-6a4e-4a72-b3b1-2405b11dfe9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b67ef047-842a-429d-9bb2-9ff362988359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d064a2-a593-4444-8b87-853471ef8ce3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c92f89-9946-4190-b677-c95b76fc05d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca9e83c-5c31-4e8f-8c9f-7a77913ae139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b505a5af-ebfa-44e7-a3b6-cf11df811f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3dcbbdab-3471-421a-9bdf-055c4974f12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2117d466-29f4-467e-8166-60fddce0b300",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "828f6f8b-0103-48fd-8aac-892a105d150d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b28a3cd-f4e3-4af7-8f92-8771c91f9b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac988da-ba07-4a3c-b972-89ff454ceca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9be9e1e4-2e1a-47d5-891a-564a70337193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc09bff-d8b7-4bff-88ee-c2badd6975d3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001e1980-8ee7-4a0c-9fd2-3d83bd43fec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d799422-10db-4a4d-b8e2-1f35d10d81f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c309d081-b1d9-4d1b-89b7-be574755f576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a587f4-160d-4322-b1a7-cf46449df177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f051fd5-9857-4156-a0fe-157c6cdd0037",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8c5118-fdc2-43a5-bea7-a1709d50b985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b565574-55a1-474e-8366-aa1ad002817f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d92708-306d-4289-9ae6-28896b0870c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb7c89c-be1b-4652-8deb-4fa9178289e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f92cfb-4177-4f7c-b1cf-26bfad66634a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d337c945-f24b-49c4-baf0-14703b5bcd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565edbad-4ffd-415d-8863-c7396f4aa6cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2245177b-2f40-428d-b321-9e6c7de00c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "20cb4bce-c6ef-47b5-ab2c-ec538881d542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e4440f-4c32-414d-ae01-7be1c7552c53",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc5ac58-0c7a-49fc-9166-9e0a59743ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a389f8f-33c0-4332-93ac-78e19611456e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a43fa47-5ef5-4b30-9485-f620443cf3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8db98b-391d-42ff-8eca-952ec7b6fa79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ec9481-1bae-44e5-a642-aebfb12acbab",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67066e89-533a-44df-ac6e-7e98692c725d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14249839-4093-4c7f-96f3-d086f0c30586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad39f05f-554e-47ca-a579-d85abfd9f530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b084aa0b-4644-45f0-ae07-d149118a6c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf3ec42-e714-444b-ae5a-ce32df6f94ef",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb64e34-f310-4920-bb55-7bbb5d5f4f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f90c255-1868-4a09-8420-ea7d4a79de87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94209551-a47e-45ca-b9cf-b3001519674c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "76281765-78f4-477e-a9b5-b0eb178f8272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4324d887-5df8-4428-af74-edf1b8f31626",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e89e1d8-c96d-4a35-a187-f85a3c11a7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbacd302-4709-4ee0-a2a3-476df04f9fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22770daf-e101-4642-95b7-a3bc819722cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43a10fbf-fe35-4179-acec-d85d04117f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7c7637-93a1-4e38-9fb7-9f7f69fb5f42",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97608a5-8555-44cb-b982-5895744db5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19d3fee-30cf-44d6-915e-fa6c9e737294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3cbe0c-a95d-4345-8560-e1cb6a752144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d60cb61d-e7cc-4a39-9427-d6cdd819185a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921c1fb5-213c-4350-b40c-add4ff48a415",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc92379-f40d-4bfd-8dcd-b910741e242a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5854f3-e40b-41dc-96c9-cf17e5b2890f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5b0823-80fd-4aca-939e-2c36752ffdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97395077-baad-4795-81f3-be7e933b04f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d40236-c6b7-4ea8-9a0e-e0b6a52e701c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2015bf87-34f3-448b-82c4-5e77217f733d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1797c12-51dd-40f0-8a76-657a7bf4ec44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fc22f4-d3b1-4d93-87a2-14a55a7a62ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "350bfc60-7582-4d88-a9db-41a78b6e26eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e27e57-4b32-420f-b235-5656c68a25e8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5756ee9b-e53f-406a-9372-59753fa8cc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92477bd-0d7b-4cc2-a0ad-1face3d0f831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76e792d-03c0-4b71-b585-84075abb5e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d1e2e62-8502-49c7-96ff-3ee6d5fca7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30b093d-e1d2-4ae7-af9e-98cfc729965d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978a2c63-c769-499b-8c9d-603ca0b19715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00644ea8-65c3-4691-87f0-8b8c329817de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a9d401-5efe-4161-866a-f02c65486c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1112d53-6695-484e-bc02-0630c7a789e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d1ce75-3742-4888-b33c-f3be9a6a1440",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1d19e8-3211-4f41-b91f-b58cc71dea65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c143713-93a7-479d-9d8c-9b2e649f2a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6643007e-82f9-45bf-aa7e-992ac1dcf885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d9e316c-e325-4d4a-ba32-6ac9baaead03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c645a3ec-afb6-4e5f-8def-aff3e9a8a553",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c02cf92-5a24-43de-817e-b921c781a303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e01bd34-1425-4d15-8706-3569e7eaed57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efd80e2-eb04-4934-a265-ed20d7c0a255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41e8bb3e-3eed-4b13-a18e-48f12f735f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4ea8c7-1595-42f5-95ed-42b121f3b468",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d046bf-d057-489b-8068-f2689fb7d29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9326ac63-317d-4d7d-9da9-528af21262bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c67d35-1300-4c2f-8c0e-a5e09b015b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c780e94a-b2a9-4c19-ba8e-c30883a5bd9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b633a75e-987e-4ce1-b416-3099b78956a8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7998d8-7a83-4e00-8575-e1f3d1baba8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a6d0ce-fa5c-4fce-b81b-2b5f6c565997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015309a6-c9b9-464a-8783-934299c72dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed8b24df-ac97-43c0-8a8b-aeddba06beb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a33aa4-9196-460b-b336-c9219c75a711",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af962710-3dc3-4c3d-9854-12d26cf86634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7792c97-8bf2-4090-b5ee-b120e67b3332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8920eef2-6532-4c17-a00b-013fdba71dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55770519-93c3-46ca-a9de-3cdef19afc99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5ae070-18f6-4288-95b5-b05a5152f446",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fec8e35-e41f-4f3e-aa0b-659b383c73e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab21b12-57d4-46a7-b84a-e9715beb82bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57513b4b-a307-44c0-aea2-b3ab9405d458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4178b1-0eff-46af-bff2-0b8122f1313a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2febc7fe-8e85-4f0a-b51a-05576dbd3ea4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2da543-76ee-4d88-b6eb-61855338e19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325e5e16-2c00-44c3-aa34-f01b06d84a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93080d19-6737-401a-bc85-42244cb7af81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54286d2c-5832-4ff0-9dfe-229d759f14f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52202bfa-bb3a-41d9-9eaf-0fbcff9f5701",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8909fb-4d81-4cc7-ae20-b064246cb8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7038df57-60d5-417a-ae8e-f84932db507c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc04aae1-ab62-4bce-922e-b022462de33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97be1089-7563-422b-a41f-9e39edccae3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b2ca2f-4cfd-4b78-b2a2-959299cd5085",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b24127-64df-439e-98ec-57231e57182a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5301fcf4-409b-4c9f-adde-33364c9f89eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a914f9-390b-426c-88fa-5502a81b67fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88df89bc-88c1-443e-b5f8-94ca3ac161d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e926cd9-def2-486a-8678-6070f67caf79",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9004b5-5c20-4ec3-8ccf-5428b4800f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a74c7dbc-6c61-4720-b087-bad4e61453c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e0cf9d-bd35-4b88-a355-b1c11848eab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58d331ee-a723-4a9f-929c-5695e9844cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfaccc42-6d82-48d9-9ce7-8577aa2890d1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee97440c-b157-48b4-958b-0d24230e68ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4882c09-9d30-481a-bfb2-e605b7a2b745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4696e9-a8a1-4313-aadb-240c65452d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fbe33ff-581f-4058-92ee-54ae8ee05f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7c306d-f144-4b79-beb2-130fc678b8d1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91993976-3a35-4789-96de-3d4ab34fd5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da99db1-39b5-4624-8405-fb33d973892d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61783f28-8da7-4b81-ab10-bd63be63a715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c7c93a2-4925-4fb8-b2ad-8debb3455637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9ce918-cee8-4168-82ae-45fcec663ac2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb09bebb-930c-47fd-9dfb-5257a258f12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ecf66e-e8af-4dfe-a1ee-d36ddd5d5037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd0aa42-29ae-489c-995e-f9e88e7e66e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4679bd0-ed9a-4a17-8664-1690248b2fe6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d192b260-bbf2-400b-b604-a4b940a1759c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "03b477af-c739-4031-8d6b-2c48a1de3976",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9025e3-1045-4958-9f54-ed203ae816c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "facea2c9-8c4f-4597-8a40-4e2d6af3f92c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caba7816-56d6-42ec-a282-3ed37568bf49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a1d0c01-76d0-4c4a-ba76-406963eedd36"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c229ca4-574a-4961-b864-6fb48b83eda1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef2d944c-5e6b-4bc7-aea7-83b4bde2d235"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91e17ec4-3214-4660-a89c-b827befddeea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "224ffafb-b4ec-429c-b918-9f273ccc2174"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16e6678a-01e6-47f4-8102-99d573724ec0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ff1238dc-b9c5-4fa2-99dd-c0346a883d0b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93518805-b8b2-426a-9af5-b9f16215857f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa989944-e625-43a3-9a27-6a8f10c3ebfa"
            }
          }
        ]
      },
      {
        "id": "f4fc659e-b2db-4b71-bd43-dc8add75cc48",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d5155ce7-3bcb-4835-82b0-54c0823518e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca3bc1cf-a7e6-4937-82ba-0f78519df6ad",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f1a21d11-2606-4978-ad30-8d60f56d2d38",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf4e306-35e8-4aad-9535-fb02f7dcab3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8275cb2-0634-4ddb-9e82-d9f277241738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66992c2-2274-419a-b9bd-d3ea0a8ee7d6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2355fcee-b3f8-44c5-b333-69e3e68cc6a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65383b0-ddf0-4612-a733-0979063bbf4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b887ee98-8f52-4cdf-9057-8bae66e0e756",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016b45b2-c150-424d-a35a-4f4dee5b4fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edea0242-caa1-45e2-9e9b-00eda4eb59ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb58f77-f9e1-404c-879a-6c557ca7ecba",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9598849c-b7c1-4143-9807-90770718fbf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7745ca76-11c0-4d7e-b1c0-cce67a377ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e7abeb-8008-49f4-931d-bba2359becb4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef0a34b-307f-429d-82bb-a41ec90a2462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594f0d85-acb8-45f5-867a-a53d7cbaa3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229db1dc-e010-45df-8bf8-68211f7ab725",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08714753-a4ec-45c8-844f-d8274f6e4602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a76be9-ef14-45b9-bd59-cbdde1671ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa42296-8cc4-4e5d-91b1-e2ab84d7d307",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49887c31-8f19-43be-b03f-68231365f83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad8edf3-30ae-4dcb-91ab-0d9dc02d46d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "412dd592-e4c8-4d9d-a272-d6490d7a2738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd72fa5-69d9-4b8a-845e-ff4d0f53c9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46c373e-2870-41c1-a8ce-a50026626d87",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fb7650-caa1-4129-941a-52f3939271cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b2ea893-d357-4036-8d0b-498aa6901f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cfcbde-7b70-40db-9f21-675c671019be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c71bff3-eec7-4943-a1e4-b1fab6b8b797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121537b7-41b3-41d2-952f-cc2ecdf1c1aa",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5630b568-353a-4478-9179-e2aa03e9aa8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f031266-fe31-43cc-bc27-0d29ea38df46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0b6588-0514-4dac-b655-1b8d5fd1fc1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa5b182-3a50-4799-97a4-439c276e82b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d130d4c-ebf5-421b-9e86-23f1e339bab7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b758ff2-0349-41b9-8e97-75f0ea0cbcae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd0a43cf-74b9-4600-929b-af707af5b596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a7e0a2-eb34-441a-a5ed-943147870a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352b631c-34b6-40e3-bc39-492fcc0574ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d815a4f-8f93-4131-829d-1f59c84a4626",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b3e0d8-7b12-4051-9004-f04f3bc5fa5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de707dc-9837-4e48-a7f4-6fe75bb491fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e1d296-3037-40a3-97ec-a2ab71c4bda3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5db223-ec56-4f9b-a2db-fb4fce3f5d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038e665e-4bf0-404d-a703-b308c2f6780d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752bf0be-93e5-4b5d-9edd-89a151c8fede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb153af-fee3-40a9-abdd-b1f9ac89db6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe4b058-3135-4f74-aca6-efeffdf7a84a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3337f99-4da7-484e-9fa3-1d118d451d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66456181-1b3c-47f2-b26f-43a73709066b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d467e78e-3163-43d4-8a9a-d3527b60f92a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "096962e6-a2bb-4894-8eb0-1b1709948d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf21a84-197e-49dd-9a96-ecdd5fb44353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e21a33-b818-42d9-a7fa-c32a39cf08b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f8216c-6a64-46e4-84ec-1a1b8553e55c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87192ab5-1e0c-43fb-9e47-b597b5ca1dd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f5d799e-3389-40a7-ae7e-647a58af74c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92dadad8-db3d-4579-a920-66ab70135bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2deda8-7ae6-442c-a601-0dd5003758c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66b5f56-9d50-4be1-822f-8f4e0401ae07",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93d7a07-3d43-4af0-88bc-541f9fc1d359",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4a5c562-4bd0-430a-b57e-a20d024f89a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67ec9e3-8f52-4ff4-85ee-544362871e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b48ccf-baef-40bd-a6b9-7c35dea30010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31910d90-c764-4d6b-9d66-605d48ff404d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc3d499-5855-40db-92b9-ac142e7b3819",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eec98980-09ef-4f5c-bb5e-10bf13902d2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cccbc91-4393-4994-bcd5-c508b84eedad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163fda40-23ee-4c33-ad16-757e857179c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d9e620-91ef-4f8e-a614-3d54a4d96a8f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ec6b98-cdc3-428f-8fc3-48b5ee383f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667d9db5-b430-4dc3-b4d7-89e128e4e49b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "242cc517-7002-4a8d-9281-d233e07020a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bbb71a3-151f-4a84-9ee9-9ad821f6721e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835b3c98-9e0c-4ae4-9062-bfe4d597e5da",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38eaa8a4-3061-4582-b672-0c72b220e90c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378bb5cf-b7c7-429c-905e-d64db942cf09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c117bfd-c4f1-47f6-b02e-82d0812b0737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68b3366-9d60-4c23-9819-6b4b0c1cbcd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b901e64-9765-4ffd-9fcb-643139ec04b1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78a1c0f-4303-4d23-b958-53e914649145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ede13a-c9a0-404c-8d39-f68d95a99108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b139952-c795-4b9b-b3b0-5b59fd8d8604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40d7986-6b13-47c3-8cd3-ffe1e4848fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ffb516a-a250-4729-9d7e-a71eed589d3f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163330e7-b31d-43b5-b7ef-83f45bee4e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0128673b-c704-426f-aeda-1704b8644ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17db10d6-2498-4951-b204-f9242a152e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8873b450-d020-4369-8ab8-2da8c2004fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea030d3-3678-4efa-a369-4c62f53550a7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d22437f-b43a-4ab1-97f5-cd505b61e761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb9ce111-3ef2-4b8a-a124-ce5df4cf6f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76459393-4c18-4d3a-bbbf-ec520a787f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc77b86-abfe-45be-95d8-9ced85b52804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa19b97a-6980-4693-ba0a-dc527cf00191",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3206f440-c004-4726-a656-ed1199d8a7e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3a088d-308e-4f6a-8ae6-ef4a81b308fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df281ac-7da9-4219-b651-b77c0dbcbd83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56ff54c-5bfb-4857-9b50-6d4481c9896c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350c96d4-44d8-4494-9b17-17694e966444",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b564fd0-6e29-4d5a-81cb-341d4764804e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e64f81-76c8-4cc8-b9a4-f313b7d3050d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4f4a64-8230-49cf-957e-314190be6f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ea394c-a36e-4e9d-9f81-b8a2211dfc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f43a9f1-c490-4ef9-8b4e-493cb9df877e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7515b691-5526-4f4b-bc39-e42a88c682af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d099b23-9f04-4aeb-b9df-2bb5b8fd4458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abed127-73e8-44e8-9d61-2e2173667b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de604985-aea2-4d2b-9b99-590793ae3f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4f1afc-2918-4d05-918d-c2964a12de26",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb7259d-658a-4343-a7c6-93ae302ca24a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2db8d400-c579-44ce-bf73-80975229b6c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "522d9364-5896-4b58-b927-6ead78fc4553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7e02c9-61ce-4cf1-92e2-6b2ece3436cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea550f5-81e4-4b81-b004-89f0d9ad4add",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97864f9a-45b9-4919-9f6f-b8dd6dd2cd1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3be728bc-f362-431d-a3cf-71acb2de10da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b24113-a1ef-48a3-b128-e2264b65daa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db433cc7-c076-473b-ad78-3a410239f69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b525b881-8e75-4ab0-acb0-c62693a35862",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365a56d8-cba1-4961-a42e-29c1a435650a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9926ebfa-256e-4f06-8090-70ddcbad2359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6d9554-97ba-4f30-a6e8-22082d23cbe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a6d770-b86b-4a36-a392-2e6c06e190d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b03706-6495-4e14-a310-401c7fdaceb2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ba92ee-17be-4ce3-a1e1-3ff505cc3f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9adfa560-f01d-49c6-858a-ea12d1dff02a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad54f8f-08f2-46df-a0b6-7eb3f2cf491c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f33ce6a-9325-43b1-b59b-04418f73dee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d3c2b9-ad73-4b9a-bc29-91fbd367fe3a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2e169a-7dcc-4a7e-b2f1-bbc1a1f641ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "241faeef-c538-4ad6-8a33-3ae4ce1c5a2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc35778-3197-4cff-89ea-33145eeaf4f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4840030-2060-4674-899c-b703a6a6c5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ce45fa-c6b3-4bca-a4fe-9730ca1a12f4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3a828e-72ea-4231-a6fd-62c1016880fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fffe29e3-0dfd-499b-a1e2-0cf42b51a736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abd5e0d-a7cb-4be2-9f43-210d545f4d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959b5a7d-14cb-44e3-8467-ec6b46427c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864bd975-58dc-4e20-b606-ee2c9e2366b8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1951f635-637d-43f4-9323-714b7a5ab0e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f225ae7-9a0d-41a4-807c-fcec3b299ad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d574ed6-74f5-4219-b9bd-67da92545d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eecbcefb-8bf6-4b42-8251-f341d392d15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d57273d-e61c-4d36-8d6c-ddb82e513063",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261054c8-3f64-40c5-a9f6-318d9b0181f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc5eb62b-de21-4be2-b059-fed5a3a14c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a2ebf1-2076-439f-b54c-6f24477765d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a065ca-ecfd-4e9d-aa82-8fe4f7366302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666c0cb7-10ae-434b-a7fc-8c838be06139",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b31c36-e352-424e-a9e6-744d31f68c30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea886b00-e020-4e5b-ac97-71beebe967d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d5f8d7-9456-4d29-bf45-454227fcfc7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4bf370-6a61-471b-b8ad-b2ef4e8d0177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9124c6-2f99-4508-a92c-44f60c3b6a1e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7624a5-57d9-4d8c-a22f-9f4b844eab5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b712937-be9a-4d33-870a-385cf002e2b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbab5bd-f91d-4db0-9f72-0a22cd00b84c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12c55b5-cdf9-43e8-8a5e-9e2f8e7be22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1495befc-9044-428b-a675-045752266489",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aea0bea-ad63-4a57-a57a-194c515fb09b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3666763f-f205-4c6a-86f1-2514525135af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba227d3-547d-4f07-bc06-a9adbda9de0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0217435-240b-43d5-b8f5-ef463871cb90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94661010-ff62-4fba-a6bd-fc1916f68842",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a1e828-6d9a-4cf1-bb4d-af4cdcc557cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d80318c-6dc9-46f2-b3dc-b152a4a1cabe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0720d5f-e8c2-4325-9afd-e57438d05da4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e283cdd7-8b1d-49f6-a0cb-cf822e84b8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a7d590-38c9-4b18-a0ba-fd51c5f360a1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8858c3-aeb7-4d12-a80d-94a4bdc815c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f84912-0238-4382-b6f0-beeba8f1e8f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8ed9b4-d3e1-4c4c-b8da-9e4457913427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9561a6-a9c9-44d7-b661-c7c8a154ba1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9f57bc-3c47-42ec-879b-a58fc81c0477",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37496ee-dd80-4686-aba7-72f4bc69c60b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb03c26-e0da-4a3c-88c8-efd35662e647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae265c0e-4582-4730-bd17-40eace492362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0e36c4-6123-43de-a011-a0d7f35b039d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8c9b2f-8ed2-4ede-872f-24e0a04b4c49",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14f8e6f-5dcb-48fa-a25b-245b7052aca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e5899e-36a9-4aaf-a8dc-b99c281163c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3057909b-9520-4135-8eaf-9bd72702ae1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be5a4df-717e-4e28-8260-b331caae367e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb21dac1-ff05-41b0-930a-c75c36031a5e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a502c31c-4ab4-4d69-80bd-15674ac891c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f034458c-1bcd-4f09-83a7-9e9707ffd5da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e63b970-a20a-401a-be93-3148d0f1dcd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b278d96e-442d-426a-96ac-1dbfe931815f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08efa912-223c-4d81-b101-74d3f9263651",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e627f4d-3029-43be-8858-dab7f2655366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf0bc43-38f3-4c27-b4e6-0745286b04cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218e7dfb-282a-49ad-9f8f-90d566a1d4d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa672a7-15ab-4815-91b1-45971bcabc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d7121d-6d3a-4d4c-bd31-ca2d8197fad0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95094949-eb7b-4a6c-85c3-d68116507f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5daf95bc-8d9b-4163-a566-46471c74ed1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "044e8283-e437-463c-84dc-bf9e4b1f4c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000215cc-c67d-4f3e-827d-67913ad737b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3524f81d-1269-4e71-920c-4dc65089cf56",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac03c90a-aa76-4793-9183-40e9af39b375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec81b0d-8a16-4f27-9e11-d1a2e4674c7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "915668be-81ef-4918-a015-3353c7c51e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847878f2-e355-4376-a16e-6c9ba2ef705c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86738d7-30e5-4d0b-a461-20186ce49a5a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf0b9a8-85ea-4bf0-bc40-ade3ff1edcc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518ae0cd-a53d-409b-8162-14141dc5fffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "361c5715-636d-428e-8b0d-5d95db3498d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c93118f-3b8e-4598-af64-e335787bcc1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9faa1d18-932f-416f-87f2-e66b055d3be3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa48439-f64f-421e-b1ef-6a122dc66613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f972b6-4600-47d8-a8d0-3423d621b9bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b502c429-9dd9-4de5-81d4-6ffd91aae4d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de12810-9fdc-4493-ae90-867cc3e23a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6b036d-26b3-4c2e-8b00-e4e215a3f9ea",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa7721f-b537-4c21-9520-5d1b87dc4321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f53379-bec1-4527-9053-09751eb17c0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f90fd0b-4260-4bd8-b563-d5b2039881c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0af9ea5-da58-42e1-916c-01b7def903e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03351b40-7df9-4358-a76f-924524042987",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213c384f-3e78-466f-bb3e-96c12c6a680e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bacd1f7e-79f8-4ee5-bfa6-54e2885d0e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8308f1e2-f953-49c2-9f46-60072ca1aef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc0c77c-abe2-45d8-bc89-a253df8bfae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bd7bd0-a66b-445c-9409-1a8785c112dc",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907f94c7-c653-4686-8d88-b8e24b4dd64c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f573a21-e465-47df-94ab-4d7cc09aff4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8804bd-fa22-400c-aa33-7b50b6ba43c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4850b864-a11c-49d1-ad9b-59195e95a722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40294f4-4a9b-44d6-9947-5dfb0465eba4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8897cf3b-1a39-4154-af38-cbe78b2e720c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee8fbfb-e827-44cb-af06-f76c58142068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ac4394-f057-40f3-b29a-ca1e0e4f0fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e19149-7698-4544-8c96-917254ed6186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9d91f7-0b30-4c73-9175-7000b137e909",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0719c1f6-57cd-4dfd-970c-7164f132f26c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57fe9f02-4181-40ea-ad9e-c28fa9678ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b456483b-92f3-4ee6-8112-49ed1c7de3ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2590d189-4911-4477-aa2c-ec1389de3058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3ac06c-0de4-46a5-bb0d-82e0dad2ae56",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b1ecd6-23be-4b71-8e8f-aef57f93e098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636c3f11-5d60-4142-98b1-c396db1850d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2942ff0f-585b-4b34-bba2-73262f32a7fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea608f36-28da-46ed-a786-c0c40de62578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9b67e3-4f62-416b-a8e3-212c3b8ce3d5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ffac00-a8f2-4e87-a314-5eeea0321e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d791ddf-ce15-400d-bcbd-ad086e8c1cb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "497eda52-a8da-4332-aa73-f71acc6a6a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0649922-48a4-4ce4-a7e9-07d13b3ddbd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481b5452-f44f-46a0-ad79-f75088673f29",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a8053c-60f9-4c78-8ad1-63ee5e638040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed06c8d-c8ae-467e-b5a7-44162662983b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd03afd7-4e25-446e-9071-3e12d4bf11d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f377332b-13c0-4849-93ce-95e6a94ba61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35979b23-57de-43ba-8610-cb4fed66f4de",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e949503-6027-4093-a188-b8c0d15b2be5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebbacbea-da35-435b-8932-2e8c627a0027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "364c7428-5fdd-448c-9b16-4bda83fa2f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d417f76-2fea-4241-9d5a-24d02b6ea9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0d086c-d15b-423e-86c0-f96aa6065d86",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70ab29c-ace9-44f4-a269-8abcfebcd2c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ddb8035-7ea9-4de8-bfed-b016b34bd84d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d57651e-8a22-4830-8a30-fbc49a533f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b31370-624d-4f16-9d71-2582b435fee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687792b3-1ca7-46e4-a1bf-e49089854e49",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf51439-0dc6-47cb-964a-d4e41a75a54e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169d9a60-b156-48dc-9dba-5d43e95e6b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0a1f07-52f1-4bbe-8302-5497221882f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68db1ead-047f-4840-935a-ea2c6504a657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377ae383-1509-45e6-b02e-c20cd385b36b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca47f78e-b2c6-442c-b877-a2fe0e7cab50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38783614-2bc5-4b2f-8e74-9adb20c714ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f239ea-0e1c-46f1-a22a-64238b5953d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b531654-1bc5-472f-8194-c437230287cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29200b74-f4b6-4900-8b0e-b8ef56a21b70",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd602ef-58ec-4321-92d6-52af3710ab73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea517876-be45-4bcd-af83-e8f61debed06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f175482d-1964-4d74-85bf-6097c8aa8f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55806d3c-6668-49d4-bc03-08b5f1bc2603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7cdca1-65e9-470f-a246-bd5920f38831",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30392ba1-58c9-424a-a1d2-199eb6d61750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c26544-5a4a-4304-a392-17a846110602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ba2d6d-f9d3-45a7-8e9c-0ce83f8d4c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e1f6db9-fd5f-43e1-85ec-fd620fdace53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d10a824-cae2-41d2-8e8f-d8a37e62c30f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83174ecb-cbfe-4328-be68-c77b4e3d0b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46202869-4f22-49e5-a107-4a67d7b9112d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "301ba487-84bd-403f-a7e6-ad9ac4bbe9a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d739b8a1-9481-47fe-a41c-76c29384054a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54becf3f-3642-4504-8e9b-8b7917486184",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0487a9-9757-44fc-aa10-2bb7dc9684f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd5ce91b-3b15-42eb-8504-d6d51f243d10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eee0273-56c0-4ffe-8d88-b74a7c3cd5a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e92fc24-79f7-4c5c-b3a5-32f1b4f2af33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbc0e60-f07b-43db-a351-b11f6df6bc6a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5394f2d-5ed3-4f71-957c-f25db3209580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f19d15b-3a7b-40d5-b981-e07adc00a72a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c385f8b-553e-4371-9b98-cc5ad21b5864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcef96bb-ecbc-49f2-a736-804dfa87a684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1202db1-0c72-4704-ac56-882957e4ece8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56a30eb-7133-494a-8d8e-520e3c88672f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71435952-f016-4245-b75b-87012308f2e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "062956e3-6088-41fd-9f04-335170099d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b7dafc-4ae2-4acf-9b4c-0151ab3085c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7233b086-a849-4569-a1d6-e4887bd41aec",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9331788-c265-4734-b75b-a2a6a26580e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10b43aea-1e50-42b2-930e-1f04e0e27b94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3571b443-b136-478c-bd37-fcc7f59a6d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fee8ff-d149-4df7-9d47-fdd1b00a43bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6829528d-5814-4a0c-b72f-a66b4a560471",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c3add3-7f69-40f3-8eff-eaa8a7bb0a53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "941819e3-8c6c-4c63-8b5b-17c2670977dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af804b75-5425-469f-90d3-af163c60942b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514f6397-b115-4fed-8174-8552e71ee855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5b7a75-486c-468a-9f3b-82f209929d9b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0caaf3a-0d4e-4dd0-ac81-8d33e0280450",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea91eabb-7ae3-4ee0-b787-53c33134d6d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa13004-0e65-4723-88b3-9782cf34ae4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d25ba30-f9f3-4c7b-8909-c9dff99cd751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982dd8bd-6bca-4a2e-886c-4fe4cfe62e66",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0b71fd-2124-41d6-8006-7809aae6ea92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70fc9c3f-252e-40d2-a42c-017c388b27d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9aebb6-884e-47dd-a684-a7d9513a020d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddad621b-7b5b-4ec9-8a37-937fcb6b2788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36f2feb-5dd0-411d-8503-df4478dd5bac",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10af154b-d2ae-4f32-8ec0-0718a2d7e1b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9227713b-5555-4823-9b17-c75ad00b0e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb03424-e08c-4778-a882-2db99a165c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781d65e6-e9ec-4497-a0bc-f16aa255b38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed614c06-fe5b-4ba5-b58d-04706f7dcb2b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df332669-c7fb-405c-b0bd-bcbc0c030fe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45386ceb-fdd6-41b0-8f89-03e0a73a27c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6e1ed0-2746-48f1-b70a-f597ac34a9d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5dd951-dd80-4fc7-885e-ba8922561288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede6b8f6-374a-4c60-b755-c4970a730b69",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5c4261-e2bd-4114-ae36-9131630638d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9374868-50d9-4ec4-a4c9-1b86a67f7bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3f9303-e991-40fe-9bef-2749182b6fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd873acf-b364-4a4c-99b2-f0db75c0d9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f585a7-c787-4479-a439-117ec3e6317f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d0f6c1-df2a-4a7d-a610-1cc582b91e37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16066abc-314b-4e09-9a0e-a31409a803c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a708b6d9-c067-4e13-8349-c0cc8292f42c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "881ab136-f2b3-4a30-be0d-f79f4212271b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baef0d20-bf6d-4ae6-ad45-06aa02570b38",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d1abbd-cd20-4ec0-acfb-1614aebfcf18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "246d0d8f-b06a-44b5-b948-5d069035233b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f7ce0d-8c8b-49c6-99a2-ed502c9a2f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8300fb8f-755d-4021-8038-feb313fad5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f036d16-2ea9-4190-aa5d-170a3d49c830",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597bc960-1fd3-4e7b-80c6-80f351c96b6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c097b893-c3cd-4eef-a08b-bf6577407343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae42c6c1-1649-472b-a810-4da276ed69dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a02510-7f70-4b51-ab50-08ab6ebf23e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e78dac-ee71-414c-b66b-431c160f0c69",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75232b60-38fa-4a61-a278-ab57b3bf1bd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a838377-64d5-4600-ad91-d4205bbb8c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e657b53-4f83-4cfd-8d37-246d607cda25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f8bfe1-e523-49d9-b7de-2c548e812049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54d4d67-c6d0-4fc1-83db-6c2878990c00",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be31793b-e8db-4099-8da5-327bad971dc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf0ca2e3-cf19-415d-aaf8-3a70b128b54d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5ee9e4-db84-4931-88fe-1c1816129c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f4de600-24d8-4ac1-a375-5584792da7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16491b9b-2677-46e5-a404-dc88c7daa366",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0559786-b210-46b0-9b81-f7d2e64a95dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae8fe83b-60bd-4b71-8116-5309c4d3003a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df87e00-5332-405c-b9fa-593cfbd8cf44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85431717-f5b6-4180-8492-009293650e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d9253f-6d37-4031-8cb3-85c1af006b15",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c695170c-86e4-475d-9e00-275622dcd2c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f42c9e6-7c7f-400e-b9ca-08a3f6c57068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4618ea-2ab4-468a-a418-c27a4621429b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d6cf98-7d57-4359-8811-5f40d6cd002a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a78f680-936f-4f5e-8e21-6059c07f9ac7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f523a68-fdd1-46f1-b60d-6c5291970cfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e073c06-2363-4591-922f-9eb588da330b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "392cc1a2-9951-4474-a0eb-4d823cc0664e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecda23cc-c9c9-4fe2-a06e-00d8c90dc508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4aacfe8-675b-415b-8282-528ce623b3d1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec2ad58-2284-4802-bb63-5b300ee873db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30972673-4855-4f2b-a853-67d73870bbbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9325178-8948-4d64-9e6b-7dcbbcbe020f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "788d2dde-2ce8-4471-b17a-7d24217fbdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc47fec2-f5eb-4ccd-87a0-f380a5f1d54a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96da2340-6b88-49cc-9a43-d95751b3dae7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bdcf2da-ed36-45ba-a169-9929a79a0d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0db305-0a4d-435b-a4a4-90b4f76944f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3cf06fb-8051-44ef-b4ef-1ed2b5b913c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11f9563-1ed9-4f6e-922c-114058ccfdb0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc935b8e-3280-465d-b66a-08ea8119c571",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26cbb85a-7ad1-462e-bac1-80fe1a5cc182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62936e61-70fa-47c7-ab22-cc470aae55f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1a622b-9d14-41e1-bff4-8a839c8ed0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca906ea5-e057-4a38-9507-3468305ef880",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484f21c9-f00f-4613-b41e-e481b662dd53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7d2425a-962b-47ea-b556-ff5f45b96aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95c0bcc-1394-43b1-9f1b-bcb80bfc5696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "159cd27e-0908-4b23-85c8-02c62e3fa1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c6c16e-ed9e-40fa-be30-a818e02bf977",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68768d62-4263-44fa-9bb7-b8d309bd0d38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "475292f0-ef75-4ec8-a7f7-888923275ab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd714ee-5b30-4fdb-981e-a704f7e3adba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b51435-9bd4-44d9-ad0a-500f5d6a3a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2347cc0d-a60e-4cf2-a8d6-a448bed90f05",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763d90e4-2b28-425f-abe8-418fd38869fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e875c660-6c7e-4cbe-98af-f99360b59b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a53919-0a8e-482a-91a5-42a52ee956f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27925a35-0fd0-4e22-b8dd-6a6f9835a9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e98dac-61d1-4d4e-b0ea-ccec2c9eabfb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349c4eec-48c2-4a27-8d55-94a26ed62222",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b207e6cd-b722-4e6b-8513-056404d17a77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1adb78e0-6aff-4498-a5f2-0ce25ee099be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca08ec28-77f5-4137-a938-9b4d747a436c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011379de-f55e-4c42-81f1-f5d2104d694d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4be7986-24c0-440b-8fa3-7c11aaef7a92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d53927c5-9959-4e7c-9caa-3766362e5b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2753c9e3-b477-4929-a0e9-e22c563a8afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e168e9-7c83-41a4-8f09-b81589fd85d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e37ab03-8230-4082-83ec-ba546ae0e1f7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bd5c53-977d-4ea8-be3d-8d9137ff75e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fccfd072-a0e0-42ce-8435-e0b1f74fc939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92a2db7-1950-4bd8-bf99-dc67706b9d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fdf89ff-8d94-4b55-924a-790cbea24304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0facfabd-b83d-482f-b096-7ce3385a66e1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb01489-2326-4e7a-988a-9f42bcad9105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbf51b8a-04df-44c2-be9f-dd1a767ce22b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb5c007-4ae7-4f72-821f-631b26d2a132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d645ec-b082-4273-9ee1-b04e97a99753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e97de4c-32d7-45dc-bdd9-6eb3d073ae2e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948892b4-9d79-4fb1-b887-c7976592eb0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a3a7f09-e0d3-429e-afdb-34ad6f178794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab60fd7-6b21-4459-aae6-41253af5e899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89019c2-aa09-4767-9cae-d6d725cf5125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26173b2-91d8-41b9-a81d-a117acb2c997",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113c3e02-bc90-4cea-8c33-da8455898217",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5ce96f4-1d99-41d0-be2b-0da36dd79e71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8e2132-9fe5-4495-8576-ef7b212a5848",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd460bc-d2d9-44a9-8891-88aeaf469695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cef51f-b643-443d-bfb4-a49ae52c9890",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6403126-1703-4164-a9df-b5657bd7ed0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a40ca1c2-b41c-4e5d-bb59-06d904224d4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3dc5bf-5fb6-444b-8c87-c24783a0f5e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a58a2bb8-3aa7-492e-8c0d-89cf2e0e380c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60f20ac-09b2-4d83-bcc3-e14ffb4601f5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b79312a-bd95-4e2d-8af1-928b762dc496",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a75604bd-72f5-4b9f-ae9c-0d3a43cf9d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0a650b-7c99-46c3-84b0-2f71061142f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4e2a50-fb0c-48f8-bf14-6b6ceb8309dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306c873e-6773-4a51-8102-10630769a7ee",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7827c433-9134-441d-ad56-9c29cf485b1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07ecad31-aed2-411b-8b02-a0e0d241f17d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98199d43-bd92-4a21-8965-4ab973ff4d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f2ee75-f2d7-4760-8e66-369a62aeb0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f358cf07-a322-47cf-bb91-7831ef7883ab",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5d421c-ec49-4f66-81a9-f3800f90bf31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "243fb63e-1b6f-461d-9f2e-3ca28d880008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44449595-7e67-4692-af86-8018ed2fda6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b666d70-3dee-4d5b-afa8-52ed14478b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568af6b0-6805-4bc7-903f-76200333007b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71bcc87-f420-4333-913c-0373cdf56bbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c424eb8-98c4-4421-a9a9-d464230aebb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b50fca-6f8b-4ce2-8e63-9f766b5884aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7299675d-7fcb-4313-bb9e-4c9a22d38f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fdd2a5-3737-40af-9c43-03100601befa",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe239e7-5c77-4de8-9146-614b7d501ff5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4787bf42-07f7-44bf-86ca-7b382facc89a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd5bb12-222f-41a6-a770-02447d423b57",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0c155c-20df-45e5-8531-b1dba3bcb6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb5d8a0-ceef-45bd-aafb-f0302182d070",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c930a4-89be-448e-ab02-c5f880cdb223",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc0acf39-8695-44ea-b9c4-75111f0a0b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c5119b-7379-4298-aa4d-28b08817739a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ce03cb-faff-427a-9b1d-ed577dd6be99"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11a6bbdf-16a8-46e6-a1cd-248cf42a137c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0387e430-1c39-4cdd-baee-c0d3db80496f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a15fef0-85ea-49c2-b835-00eb10882686",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a39e93c-71f3-4c20-87db-fd85f81384b6"
                    }
                  }
                ]
              },
              {
                "id": "d0968c86-964f-49e8-81c5-f1d48358e220",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dbf1d64e-8a26-4cf5-84fa-08348018058d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a5823e-93d6-4869-b166-1457a4add4b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8bd65bab-0b80-4bd6-9a8b-a026a8996c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "768e8c42-c6f5-4bdf-a4e3-a665a0afefd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a5bdfa8-c131-43a0-8888-9803e74091f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9336455-0885-47ae-b97f-679280ce3b32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa167375-aeb2-498b-88d5-d260944054d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c47ae89-351b-4d21-b72b-5c8d48915a31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31e11cc5-f0b6-4f04-8b5b-f5d11d4152a9"
                    }
                  }
                ]
              },
              {
                "id": "1d99d2b8-ce22-429c-ad47-8e5aee3833ea",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "31d6d05b-5388-4840-a43e-8e5bb715a880",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c5df3b-8ef7-41e5-a1aa-56444f9ed4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ab9aedf1-9da3-4a00-b0fe-a3a31831ac1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf39f53-2b7c-4351-a538-b4c7ac5bebdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6afdca-b627-495f-8ec3-98714663ecb2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d4e160db-3612-49e2-b523-ea63e3381fe6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "794413e8-d2ab-4688-9a94-32b785648f30",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3270810-01ef-44b2-ac92-fc2eed00efdd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e4543092-7c87-468f-af72-ae466e81d244"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a3023c4-b784-4777-ba92-b3641f570f80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3755ac03-5ae3-4bb1-a5b8-4b95d7b6ede8"
                    }
                  }
                ]
              },
              {
                "id": "5ad56616-bcc5-454e-a74a-8373dba2f03b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "131e15e7-6ee7-4f6a-ad99-0c471059581f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3c10d790-5734-4590-b1eb-388d32561307"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29294a5c-2021-4270-844b-23c6fe7d02ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3892f17-d026-453a-9139-f6357aeb58b5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "934dce53-533b-4062-a05f-22a279c1ac7b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "99a70084-edc3-4dc2-875c-ada43ad29ec2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2f6518e-8670-41c1-91ed-27bad13f3c13",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5486b2de-9edd-4d7b-9138-7be0756ba7ea"
            }
          }
        ]
      },
      {
        "id": "175dd511-202c-4e56-89ac-4372cdb19d0b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ec3b9904-6a67-4486-bd21-943cb5eef038",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd9528ce-1526-4fb1-9e13-c60cb96e61f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60cf17c7-9f79-458e-a930-fc64c4c677b4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e384cc8-d8f8-43f8-8081-89ae27219526",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "adef7581-d9d1-4ef6-afb9-c8abc97f5b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7785a97e-e57e-4361-9c05-09b2380b4d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "385b7596-d010-4d44-a316-04aff7ec1efc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13dd0d39-1c1d-4697-8994-fbe21ce9521a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "041192d5-2db9-4efa-a9d9-8ec33ce68faa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "14c178cb-6880-4988-b65c-4269deb1f792",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bc406d4-05f1-4fe5-8ef3-c6c040bd3938"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aac14a32-9e6b-4081-b6ec-dacf5e7253c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5c107087-c704-4c3e-a4e2-142ae760f125"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c16bca51-e8b0-4a86-91dd-4ed947863d3d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "434dcf0d-a10c-48f1-af1f-51a30b65c1d7"
            }
          }
        ]
      },
      {
        "id": "b7142981-ce92-46bc-9b05-bfd3e06d0fc3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7832db44-ff70-4065-b4a7-9c6954aa2726",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4bf3cbac-f59b-44f0-81c6-74bde4d9b104",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "864a188a-5331-4334-966d-6362195e03b3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5618eca0-20a0-40a3-9ad9-3ce67cc72988",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53aebc0c-d093-4a27-8f0b-58f5f0d7c1a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a747f1-d674-48d8-bd02-7048e8034445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "252a81a6-0ca0-4bdf-9b81-104f3c063cb8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05fcc157-ed62-40cf-913c-0cdab530ffef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3926e66-c944-4182-a6fd-b7ba49e400b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b68af48e-ca68-4b6c-b72a-d7dbde099897",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13a85f64-b648-4491-b5ef-f0e7c1428cfc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a07899a2-d476-42bf-8975-d8425ba595b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "74ae6fe5-843c-42d2-bfd3-6e5546c2c6a7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63a60ce9-a2dc-4f56-8e26-f53278bf6560",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36654914-69cf-45dc-9423-f9d2f03f0753"
            }
          }
        ]
      },
      {
        "id": "fe86c91b-4a7f-4157-95f9-a040e926c7a6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "46d09312-f8e2-4459-bb76-aa8de6a44cd6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1df49fcc-36b2-47a8-9fe2-f67e16c98183",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6d71c62-4eef-4964-9bde-039bcbb4098b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ece9e7-d730-4914-ab1a-e245f7dcdcb6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2123241-c46b-412b-9742-ae4152f51967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5ce837-0517-4496-999c-84a9df455194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c766182e-0ee5-4aed-9aaf-2cca7bdd5940"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29d391d0-d7ce-49ae-841a-afcf229266fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bdd76d0-6081-43e2-8b79-de52eed2f7eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae8268d5-1bd8-4570-adbd-270292c1f90c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4e2f27c-dc56-415b-8b88-33e43d55c2b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "476fd4e4-3d80-4257-82a5-f031349f4c57",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4af10f3b-9b30-4f69-a30b-497e30b5c3c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a6b143c-d6fd-4314-a3f7-21c76ec8d990",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3adbbad1-43fd-4c6d-81e4-b0b31527208d"
            }
          }
        ]
      },
      {
        "id": "ca91cc78-cb0a-4e97-b6c3-be79c2da1f61",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b33cc22c-f85a-42be-808a-96d4ea43df01",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d436a06-0214-44bd-9338-da2083d5dcee",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b768dadf-97e5-47d5-b686-74cff689d202",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dcfbe44f-0e84-4634-bdd4-a4a1a98b4a0f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c70ad395-3faa-405c-a3ec-36755929799f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 28.95438596491227,
      "responseMin": 6,
      "responseMax": 353,
      "responseSd": 28.76806264126477,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708821417713,
      "completed": 1708821434819
    },
    "executions": [
      {
        "id": "08c2b988-b84e-4237-9616-1c37b89dceb0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "be435baf-9424-4e90-857a-1ea64e64fc99",
          "httpRequestId": "9e04e9f8-0ee8-4d0e-9667-b1da7ac0e281"
        },
        "item": {
          "id": "08c2b988-b84e-4237-9616-1c37b89dceb0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0b7197f7-3029-4559-a22b-039f344e89aa",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "ab5ec0d6-af8c-4f4a-9fa0-416d9ef54752",
        "cursor": {
          "ref": "a73a352a-9233-4e5b-a5f1-9a4956d04223",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "562f4a25-46e7-41fc-8c18-f732c7c9b7de"
        },
        "item": {
          "id": "ab5ec0d6-af8c-4f4a-9fa0-416d9ef54752",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bb5c933c-8d99-470e-9d56-9a071119ff9f",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "7326b40f-4e42-45ff-ad34-7e8bfc9465e0",
        "cursor": {
          "ref": "94f0ae2b-4d96-46f2-825e-b5215e4140b9",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c015a64b-6cb6-4557-801f-abdae7a89423"
        },
        "item": {
          "id": "7326b40f-4e42-45ff-ad34-7e8bfc9465e0",
          "name": "did_json"
        },
        "response": {
          "id": "1c63c884-c144-40c8-9999-7b0b09e49751",
          "status": "OK",
          "code": 200,
          "responseTime": 226,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2ce18e-f6ec-4b40-9242-86d3227cbe6c",
        "cursor": {
          "ref": "2893b767-696e-41b6-9fdb-68e51f08f1f4",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a96f9d20-0063-497a-8e02-ae879aac6f2b"
        },
        "item": {
          "id": "ab2ce18e-f6ec-4b40-9242-86d3227cbe6c",
          "name": "did:invalid"
        },
        "response": {
          "id": "a2ebeed0-9a70-4f82-80b8-4bd81bba2ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2ce18e-f6ec-4b40-9242-86d3227cbe6c",
        "cursor": {
          "ref": "2893b767-696e-41b6-9fdb-68e51f08f1f4",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a96f9d20-0063-497a-8e02-ae879aac6f2b"
        },
        "item": {
          "id": "ab2ce18e-f6ec-4b40-9242-86d3227cbe6c",
          "name": "did:invalid"
        },
        "response": {
          "id": "a2ebeed0-9a70-4f82-80b8-4bd81bba2ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ac972f-a6f5-4694-b166-0a1d10ce103b",
        "cursor": {
          "ref": "fb0eae25-8c64-45d2-ac08-cd342a11af0e",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c9ffafa3-3a61-4671-90e3-8eb944a9faa0"
        },
        "item": {
          "id": "97ac972f-a6f5-4694-b166-0a1d10ce103b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f305efe7-4d19-49c1-a790-d866d37225c1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 104,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06607ff-1a74-4e1e-a68f-2fad88d99191",
        "cursor": {
          "ref": "a7330a15-a485-41b3-95d3-67eb92b7fe36",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "59da09bc-e181-424b-b9ff-5d87db2512b8"
        },
        "item": {
          "id": "c06607ff-1a74-4e1e-a68f-2fad88d99191",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4c734e67-8b62-46bc-9951-59d2faef971c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e789ada2-4791-4b1f-83ad-83aeef545db5",
        "cursor": {
          "ref": "bc055da3-77e5-4558-b53a-da2088bd6583",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d135c49d-2c98-4cb2-94ff-799c245cb183"
        },
        "item": {
          "id": "e789ada2-4791-4b1f-83ad-83aeef545db5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ae54ad34-bbae-4fde-a9e9-e596d01ee3d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2b8863-ebe4-442b-ac16-f35e11b5f72b",
        "cursor": {
          "ref": "390620f1-a841-423e-85ef-be2e62715e96",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1b56c73a-96d9-4e68-bda8-abd7bbcc0e84"
        },
        "item": {
          "id": "7e2b8863-ebe4-442b-ac16-f35e11b5f72b",
          "name": "identifiers"
        },
        "response": {
          "id": "b3f35cae-198d-4f40-bb55-e9904c5e5836",
          "status": "OK",
          "code": 200,
          "responseTime": 240,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977155c1-1dd7-4b53-8aae-43a8dd895547",
        "cursor": {
          "ref": "6c34a122-efe3-42c4-b3eb-c4f07175c27e",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f59e0deb-9ce7-4c9a-b88a-df437a7e279f"
        },
        "item": {
          "id": "977155c1-1dd7-4b53-8aae-43a8dd895547",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "301df583-043e-4db8-abee-25a90df8ec60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62eca0a8-95b0-492f-8fc8-7fee0a9c1b31",
        "cursor": {
          "ref": "070690b3-676a-429a-9533-c1493df26d60",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "78e175b6-9de5-4e31-884e-df064265da1f"
        },
        "item": {
          "id": "62eca0a8-95b0-492f-8fc8-7fee0a9c1b31",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9b27656a-54cd-4244-b392-7a0bb6a4a954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf82cfa-3f48-41f7-9c28-42e4e84e2677",
        "cursor": {
          "ref": "7f2d81ed-a8be-4cc7-8521-95aa75daab30",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "45deb8dd-727b-4e1c-a09d-6735c55b1de8"
        },
        "item": {
          "id": "aaf82cfa-3f48-41f7-9c28-42e4e84e2677",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3f9db2a4-9bdd-4151-aa65-a7fb2576e59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49276a26-5228-4f5d-a095-737fc18b8d33",
        "cursor": {
          "ref": "55740838-5de7-4e17-b9dc-a252503a19a3",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2e8544ee-2a9f-4a3d-91dd-4261709238f2"
        },
        "item": {
          "id": "49276a26-5228-4f5d-a095-737fc18b8d33",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "25be3281-bc83-47ce-8dea-637f2556ef5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7d35cb-53a6-47c1-b160-d8b2cee0ab4a",
        "cursor": {
          "ref": "6161906c-7b6c-4c43-92a1-1f6d3545a63b",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2daa9485-a880-490e-91d3-faf1ea5f98f1"
        },
        "item": {
          "id": "ed7d35cb-53a6-47c1-b160-d8b2cee0ab4a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "39d774c4-3417-4a45-b607-47dce726beec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e21467-5646-4172-b367-dbd1164f7e1c",
        "cursor": {
          "ref": "0b5454bd-21f5-41bb-8d80-8ffa2c9a8524",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5758326c-8edd-4b94-9487-3cc1d6d9e95a"
        },
        "item": {
          "id": "04e21467-5646-4172-b367-dbd1164f7e1c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a510e6c0-9590-49c4-8efc-818a97df934c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076d1d11-334d-4c9f-8795-44b63f93ed87",
        "cursor": {
          "ref": "accd590c-0ef5-41f3-abf6-fa93b0b72596",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5ebc1a8d-a2a1-49d8-868e-7c6666e91391"
        },
        "item": {
          "id": "076d1d11-334d-4c9f-8795-44b63f93ed87",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "80167844-4151-4465-8808-9844910f698d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36db9f87-458e-4f5a-a53f-c662cbaf5ca8",
        "cursor": {
          "ref": "1b53ac18-7b85-4857-b805-2b3c52cb89b8",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ec78c0aa-326a-4a79-898a-19f90c19e2ac"
        },
        "item": {
          "id": "36db9f87-458e-4f5a-a53f-c662cbaf5ca8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c215b6c9-2bcc-4735-85bd-fe141f30e805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d77163-25aa-4e27-ac93-c6ddbefa48c2",
        "cursor": {
          "ref": "8a6dfb3b-5f31-489b-b947-cf1a5768ae2a",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5ffe97d0-fa86-4208-9f16-e7d40a59534e"
        },
        "item": {
          "id": "96d77163-25aa-4e27-ac93-c6ddbefa48c2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d1faa1a0-7827-44e3-aa36-a9c4cef40171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa2ce15-2a79-4ace-be8a-2225e0832fa2",
        "cursor": {
          "ref": "f14c1e5d-9067-4f8e-ad07-6a2a6527f34e",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ba89de89-ee8f-47c7-8788-7bb8e2f01e87"
        },
        "item": {
          "id": "1aa2ce15-2a79-4ace-be8a-2225e0832fa2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "81849002-4faf-423e-ae8e-fd295a7d4990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71edd3ef-b45f-427b-92c7-becd2b9091f9",
        "cursor": {
          "ref": "05238926-44bf-48a4-8dd1-e0efeb91b8c4",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3dee37f2-7073-4af7-988b-67db338b2469"
        },
        "item": {
          "id": "71edd3ef-b45f-427b-92c7-becd2b9091f9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c61f2d07-909b-46f8-b8f5-d1a49dae764f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc35728-c47d-4161-a6e1-da11050100f4",
        "cursor": {
          "ref": "75b50110-fab7-4167-acfd-998a9a29e6c0",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e8d9e6ad-96f6-4f8f-bf28-7279aa6c878f"
        },
        "item": {
          "id": "2bc35728-c47d-4161-a6e1-da11050100f4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e7443212-bef2-41f2-9c4c-e2b6610fb30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acd3688-b17d-4252-854c-ec9fb2738e71",
        "cursor": {
          "ref": "8f3ad98e-efee-4643-b611-6045933f5a1a",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2bc75caf-dc94-443e-9887-fa6348313faa"
        },
        "item": {
          "id": "8acd3688-b17d-4252-854c-ec9fb2738e71",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3b3edbd0-31df-40f4-b203-b9589d10ef40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db7acbc-ee46-4c16-b47b-2936de2e3568",
        "cursor": {
          "ref": "8bddcb60-eed1-4f5d-98bd-5f9cae23ef7d",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1cb99c33-6e75-4158-bb1f-5feff53b0f6c"
        },
        "item": {
          "id": "2db7acbc-ee46-4c16-b47b-2936de2e3568",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "12835b9d-9381-4276-b9f0-c847bade826a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd06e77-ac1b-4ae2-bea8-936188c856d4",
        "cursor": {
          "ref": "39a3b902-86f4-47ab-9544-86d854e9545f",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b3f07321-880b-41f8-881f-6ed123847642"
        },
        "item": {
          "id": "8bd06e77-ac1b-4ae2-bea8-936188c856d4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "00ee421e-f552-412b-9d19-a4d0877ff6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7fe076-1b95-402d-aa38-5f33c9356bad",
        "cursor": {
          "ref": "896b358a-80cc-4df8-8077-cfceb4a96c92",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c2c3f2a4-9a82-4e42-9a40-425fbf40b889"
        },
        "item": {
          "id": "5b7fe076-1b95-402d-aa38-5f33c9356bad",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a2886df1-132e-4a79-8ef7-967d1511b3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf82a16-619d-429b-bed0-231457e5c42b",
        "cursor": {
          "ref": "cbc92312-1516-4857-a802-1f0f31662491",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9d6f8f57-c04b-4634-9842-141c8de2edc8"
        },
        "item": {
          "id": "5cf82a16-619d-429b-bed0-231457e5c42b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b309a36e-1291-4080-bef9-6f76ef973826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480dbb0d-1c10-4232-9277-f8d2a6293c95",
        "cursor": {
          "ref": "eddd4b22-3491-43ed-aea8-e4c4db5a2b59",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1fecfdf5-ebde-4235-8c9c-27e892545bb9"
        },
        "item": {
          "id": "480dbb0d-1c10-4232-9277-f8d2a6293c95",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bb7d6df3-4712-42f7-befc-d122e405d79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a48f5b3-c627-4799-820c-5aeb3d1de19a",
        "cursor": {
          "ref": "fb1c86cc-1bbd-4ad1-a9d7-e9bca2ab5ea8",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "44c49114-00ba-4b44-9703-bdd5168efbb3"
        },
        "item": {
          "id": "8a48f5b3-c627-4799-820c-5aeb3d1de19a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "30bcfcc3-cb3a-4b74-b230-1f4bf4799f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa103d57-dc7e-40cd-870e-af6ccf298a55",
        "cursor": {
          "ref": "f41bed03-e8a8-494b-8dcc-3db693a000bd",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fe0a9802-7715-4ed5-9e53-4fb20ca777bb"
        },
        "item": {
          "id": "aa103d57-dc7e-40cd-870e-af6ccf298a55",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "21a25b09-30e9-45d8-9546-1fd6fca1acdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de19638-dfc5-4528-955d-d021c8ca07b7",
        "cursor": {
          "ref": "8c6632c9-3866-4d1a-a0d2-1d8a20f6aa0d",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d7ea8449-25af-4b5e-8680-61ff349bb038"
        },
        "item": {
          "id": "0de19638-dfc5-4528-955d-d021c8ca07b7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "acd0c0fd-ed5c-412d-8bbc-a61808abe0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e78991-dc2f-42e1-8ce7-608d8df9047b",
        "cursor": {
          "ref": "9ff66792-7a64-41e3-a475-8aaae7ce3cc2",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d8286063-81e1-46d9-a0ad-e6ebd29a7d81"
        },
        "item": {
          "id": "c9e78991-dc2f-42e1-8ce7-608d8df9047b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8867fe71-5c61-4224-9a80-edf020b00fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b7bafb-3cf2-4219-8420-c4dcbce32cca",
        "cursor": {
          "ref": "7bf60329-8789-47d7-abb5-f88730c795a8",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "06235830-b648-4e1c-a427-d149573ceb50"
        },
        "item": {
          "id": "e0b7bafb-3cf2-4219-8420-c4dcbce32cca",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0479ea54-7bc4-4938-8911-66a6c1bc38c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76489466-f421-4f7a-978d-78ed7a047f81",
        "cursor": {
          "ref": "a11444a7-d7df-44f0-850e-0778a3323a2c",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "052b12fc-16c1-42c3-ad1a-e0cf04aca2b9"
        },
        "item": {
          "id": "76489466-f421-4f7a-978d-78ed7a047f81",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f863968a-17ac-4078-b158-fe894ca44aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e523719-711d-40d5-b205-d23cccc50ffb",
        "cursor": {
          "ref": "eb0af4a3-d705-479b-9ce3-e53ebf6666d8",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5fb4e7a1-c211-4208-ac93-62b94e9804b9"
        },
        "item": {
          "id": "4e523719-711d-40d5-b205-d23cccc50ffb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4b83bb1d-871c-4a88-84fd-d7acd0fe6eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b3f2a7-3700-4065-b58f-57d3b4653051",
        "cursor": {
          "ref": "d70be919-e93e-4bd1-ab63-3f62a39ac171",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3e3986fe-5784-4002-9b48-3af30c9f436d"
        },
        "item": {
          "id": "b0b3f2a7-3700-4065-b58f-57d3b4653051",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c55c5eb8-4e39-438c-ab9c-434dcdfe4f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d83e61-adee-4fa2-9cc9-9ded290a64f2",
        "cursor": {
          "ref": "07eb078e-9065-41b0-a362-92f9432e7b8f",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6e652045-a883-4763-bd5a-feea8295dd59"
        },
        "item": {
          "id": "c0d83e61-adee-4fa2-9cc9-9ded290a64f2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5bbdaf26-af40-4a9e-8112-aac1cc690660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5967ff4c-9afe-4ba8-9ed3-a5996a7d3c13",
        "cursor": {
          "ref": "9d257a69-595b-4f3f-9b84-3b664f9ce053",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ec8b30b4-9e8a-4763-baf6-648bd794acbe"
        },
        "item": {
          "id": "5967ff4c-9afe-4ba8-9ed3-a5996a7d3c13",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2e158635-a3a8-4fa0-ae4b-72369f8885f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ca9025-2b8d-45a2-a962-b54fb50fa454",
        "cursor": {
          "ref": "227cbe01-b923-4340-ad16-4143bb3efcc6",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8dbc6742-d272-47b8-844a-df9248edd877"
        },
        "item": {
          "id": "c6ca9025-2b8d-45a2-a962-b54fb50fa454",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e173b496-1246-49ee-a191-bfbf9d09d638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897f47cb-ce41-4d28-bdcd-f70762962539",
        "cursor": {
          "ref": "3b72f3bb-559c-434a-880b-a9ff06bfd692",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1a33912f-8ffd-4121-9c8c-42727255a389"
        },
        "item": {
          "id": "897f47cb-ce41-4d28-bdcd-f70762962539",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "91edc545-1c5e-4222-b297-87f397a205a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f720f5f5-ac14-44c2-ae4a-7a5743ecba89",
        "cursor": {
          "ref": "36e009c8-ab4a-4508-8e83-96484beeae16",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7b68080c-aa52-41d0-bac7-ce1a15a838a7"
        },
        "item": {
          "id": "f720f5f5-ac14-44c2-ae4a-7a5743ecba89",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d8dac1c1-09a5-4b60-985e-54294bfa2b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a431452-e288-4a88-832e-6035bc2360e4",
        "cursor": {
          "ref": "4ece8eec-77f4-4fe8-a738-e610f2204e0a",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "636d6812-63bf-40f0-9e05-6ebf7e49e7ae"
        },
        "item": {
          "id": "8a431452-e288-4a88-832e-6035bc2360e4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "986f581c-749d-4907-a06e-199b36173aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29aa37af-ddee-4e53-898f-cb3160d2ad8d",
        "cursor": {
          "ref": "0383de3a-10e9-4749-88f4-0d320cb0e066",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "32b2f56c-b6ad-4248-9229-d901fc5eef27"
        },
        "item": {
          "id": "29aa37af-ddee-4e53-898f-cb3160d2ad8d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5bcfd0d8-df50-4242-9a0c-2d8f957f2c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7780b683-d14c-4c74-a769-83642ec3b8f9",
        "cursor": {
          "ref": "70ad4b6b-7d84-4708-8c1e-2ddda3dd2d95",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b13d761c-b960-4358-b555-7d45551c9b53"
        },
        "item": {
          "id": "7780b683-d14c-4c74-a769-83642ec3b8f9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "21e28dce-574b-468c-96a1-4715f5d48c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f10c26c-c873-4f2e-b9bb-9f90a41c3fe1",
        "cursor": {
          "ref": "2fca8bba-73b2-4c2b-8757-ddffcbc4c36c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fb636c15-ea21-4015-a6c8-9d97c06408ad"
        },
        "item": {
          "id": "8f10c26c-c873-4f2e-b9bb-9f90a41c3fe1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b973f465-7d78-48a0-b130-13067d712dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4760398-adff-40fb-9cd1-3bc5efb436b0",
        "cursor": {
          "ref": "62771991-1465-4afb-8114-beeed37a38e3",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2d715429-c2a1-4f55-bf06-b0d92eeddb43"
        },
        "item": {
          "id": "b4760398-adff-40fb-9cd1-3bc5efb436b0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f82d4c71-03b2-44ad-9c1c-728d573297c7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 47,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efaa2be-26ae-406e-8df2-5c314011a60c",
        "cursor": {
          "ref": "248ee8df-a9e5-4057-8cbe-1fb155dcf3e5",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "640ffd81-097b-44a7-be05-74c0b98ff9c1"
        },
        "item": {
          "id": "9efaa2be-26ae-406e-8df2-5c314011a60c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c71a5628-4c1a-460e-ae13-5a934a93535d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6840750f-c044-4b0f-8e85-865575ea5f7e",
        "cursor": {
          "ref": "ccaeacbf-6d10-47bd-9efd-ec2795bf0316",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "495a9f4e-0ca0-461a-a8ec-37fe9073f501"
        },
        "item": {
          "id": "6840750f-c044-4b0f-8e85-865575ea5f7e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "83ab5662-3c39-4f08-bbc2-d5a90fab9431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0c37c0-eedf-4647-bd42-6820746a23e8",
        "cursor": {
          "ref": "b6d7495d-3461-466b-b603-31b664beef6c",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "69c0d40a-2df2-47bf-95a4-4ad5fd8e9fa9"
        },
        "item": {
          "id": "8c0c37c0-eedf-4647-bd42-6820746a23e8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "790f48c3-7c8f-41e0-ab73-b0332d65f9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fea1ed6-526a-4375-bd0e-602a164221e5",
        "cursor": {
          "ref": "d733396e-9244-490a-a030-9242258eb216",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b958257c-9d4f-44be-8323-dd5abef060c2"
        },
        "item": {
          "id": "7fea1ed6-526a-4375-bd0e-602a164221e5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "71a72d8c-2b35-40a2-bcf8-6ae6cecc8f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7ec616-724c-47e9-b399-305f1986e0bf",
        "cursor": {
          "ref": "23c79f0d-3c78-4dfa-976a-8ef4f10d3212",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "aab65fcd-506a-4d18-b108-e16a5e78f940"
        },
        "item": {
          "id": "2e7ec616-724c-47e9-b399-305f1986e0bf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "56844efd-6300-49cf-ad91-c996bfefaa0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadbba36-cb1f-4a0e-86c6-bcc59acce507",
        "cursor": {
          "ref": "456e6247-a1b5-42bf-bf3c-2dbb6e5777b8",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6b1ea44d-c71e-46b6-b72d-6aa7e94d3d27"
        },
        "item": {
          "id": "fadbba36-cb1f-4a0e-86c6-bcc59acce507",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c6ccd625-4567-449c-a89a-f9ed2db6607c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64b3f9c-4537-4863-96d4-ec18b4f0c9cd",
        "cursor": {
          "ref": "252a3808-ce60-4f67-bf02-91585cc4f9cc",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ee6e94a5-ff03-4620-bcf0-360c2c9a68d6"
        },
        "item": {
          "id": "c64b3f9c-4537-4863-96d4-ec18b4f0c9cd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5d314ccc-e3fb-4f23-8d76-620212c726af",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 35,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "badbf675-2710-40b7-a3a1-2f5fcd4f20e6",
        "cursor": {
          "ref": "2ad658a2-396c-44b0-a129-eba45a5bec8c",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b58d7014-3c9a-47f3-b08c-ba494234255d"
        },
        "item": {
          "id": "badbf675-2710-40b7-a3a1-2f5fcd4f20e6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f46177d9-87f4-4dac-b3d5-4882259ca2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ccf3e5-f3dc-4c5f-83cd-d213a0b33ca3",
        "cursor": {
          "ref": "bd541559-fad6-4c0a-b558-63daa089634c",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "75a6e19c-f8c6-4900-b55b-eea874dfd680"
        },
        "item": {
          "id": "69ccf3e5-f3dc-4c5f-83cd-d213a0b33ca3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "237d7997-9129-4e0d-886d-e573f693e1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e7dd13-0a85-46f8-b1da-4042545e126b",
        "cursor": {
          "ref": "33f6f982-3db9-448a-b791-a7e347a643bd",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a928f9ce-2ec1-4afb-bde0-0b35188a1e6c"
        },
        "item": {
          "id": "49e7dd13-0a85-46f8-b1da-4042545e126b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3981f9e2-0630-46b8-9a0a-0bcff8cc853b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c154a672-ef02-42f1-896e-9fd3979349b4",
        "cursor": {
          "ref": "f58e0207-480e-4bf8-ba91-1b2146544f41",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "20d163eb-3587-42fb-b981-4848546fc20d"
        },
        "item": {
          "id": "c154a672-ef02-42f1-896e-9fd3979349b4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a44c8782-0514-417a-9ac7-2889d1a1e864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2367c2-07e2-4a56-9361-1378966679a4",
        "cursor": {
          "ref": "a769a5d9-8ed3-4546-bfa0-33e097ea2c34",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d979a305-1455-4431-b632-003be9a1ff65"
        },
        "item": {
          "id": "aa2367c2-07e2-4a56-9361-1378966679a4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "92e90366-8e85-429e-ab0f-e0a18ce04432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382f55ba-e3cb-470f-9136-0fd1dfb4c499",
        "cursor": {
          "ref": "bcf6d772-dd3c-45bb-8bee-978d161c50b8",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1b947b6b-bae3-49f2-95fb-7851c3c0411f"
        },
        "item": {
          "id": "382f55ba-e3cb-470f-9136-0fd1dfb4c499",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "aa9c1ac0-a2b5-4bbb-baf7-f090517f9ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84419ae6-5981-4831-8fb6-2e49931eab42",
        "cursor": {
          "ref": "77749439-7eca-4c1b-bfc7-301f3dbd25bf",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c078605c-9830-4b34-937b-f7d199222577"
        },
        "item": {
          "id": "84419ae6-5981-4831-8fb6-2e49931eab42",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "441fa3c5-527c-4030-ade7-68feccfe1fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df67be4c-5f36-49d2-a17b-c376dd77cffb",
        "cursor": {
          "ref": "8a53a052-0b9d-4169-892e-889fe4f4210f",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "86a8cf94-ed50-487a-81dd-0e283396f72d"
        },
        "item": {
          "id": "df67be4c-5f36-49d2-a17b-c376dd77cffb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b279fd43-237b-4577-b83e-35c3a8f5b862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988ae3c4-e4de-41a3-9388-5e72b02752fb",
        "cursor": {
          "ref": "e5c2f713-e44a-47da-8a76-390cc748fb70",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "02abc734-59ba-4ed5-8570-e61c7f9bc47a"
        },
        "item": {
          "id": "988ae3c4-e4de-41a3-9388-5e72b02752fb",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1a0d1301-2099-4242-8c39-4efb14681047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0d483b-989f-4a9b-a8f1-553cae874bd5",
        "cursor": {
          "ref": "c5c63a37-7a57-437c-a44e-8d45a83a26f5",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "06738482-7894-4278-8e5f-e8d97ef3ee9b"
        },
        "item": {
          "id": "ce0d483b-989f-4a9b-a8f1-553cae874bd5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "05c9fd01-40a5-4871-90e7-bd14624d213a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474cf866-5782-4103-acfd-e864b8f0bfea",
        "cursor": {
          "ref": "aaeecfb1-78d6-4474-94a2-3e350d9295af",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e6dcf222-5c60-4ecc-a38e-62eeee7b9b8d"
        },
        "item": {
          "id": "474cf866-5782-4103-acfd-e864b8f0bfea",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ada09e13-58ca-4cac-aad5-3eba7aa12d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380db179-b545-45c3-9b65-738f3038a3ed",
        "cursor": {
          "ref": "f873272e-dfe6-49c6-8a02-2c2421dcafb5",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "42bf8a32-1a50-44ce-8f0b-2be7b665899b"
        },
        "item": {
          "id": "380db179-b545-45c3-9b65-738f3038a3ed",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0bf5b9b6-ee01-4b9b-8e8c-816cf8f86d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd3be39-f19e-43dc-aa97-5dfe7d01f758",
        "cursor": {
          "ref": "aa9dbf85-68c5-4f32-81bf-14f3a8537867",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d1f7d398-4a83-4a4b-b6f4-4d562c2b889b"
        },
        "item": {
          "id": "bbd3be39-f19e-43dc-aa97-5dfe7d01f758",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "dc3cd6c6-90b6-4e7d-ac45-9ddb1358ce6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85da1a0-702f-47bc-bd0f-92abe0fe6809",
        "cursor": {
          "ref": "2e5c4fc8-1cd7-45dc-9fcc-5f2f3c7c7dd9",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f5878a85-8542-4898-85ce-3a89eaafec40"
        },
        "item": {
          "id": "c85da1a0-702f-47bc-bd0f-92abe0fe6809",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "10aff502-26c7-4045-8372-077ba518191c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcd641e-81b1-4a32-8514-7ac74fc80274",
        "cursor": {
          "ref": "f5aa0c5e-2ec2-463d-817f-5d0f7d06c245",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0f26804c-185d-4add-9ca8-dba5012c2143"
        },
        "item": {
          "id": "1bcd641e-81b1-4a32-8514-7ac74fc80274",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2b5c8f7f-c42b-4f7c-858a-2ede56c78b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643173b4-3c84-478c-85fb-e64c5592978d",
        "cursor": {
          "ref": "15ad1164-fbcc-47fd-afe7-c46e9dbe0bb4",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "36f08c6e-3c42-450a-bc73-331ff7951ab6"
        },
        "item": {
          "id": "643173b4-3c84-478c-85fb-e64c5592978d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "00e301ba-4914-44a1-9ca1-49bfc953e264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f34bd37-1b5b-4391-89be-3835a64811f3",
        "cursor": {
          "ref": "e7a12e3c-ae89-4406-a521-52e2e19155c6",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "39be32ac-a552-4546-8f4b-7193ef7e3283"
        },
        "item": {
          "id": "2f34bd37-1b5b-4391-89be-3835a64811f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8aff5a48-6caa-4ecd-b79a-a742b9001fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fcffd4d-19ca-45ad-a5d6-87c8cdff75ae",
        "cursor": {
          "ref": "c5671578-a6be-4598-adf7-6d59616854f0",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "93e0daaa-e1a4-400d-88d8-777f693b417a"
        },
        "item": {
          "id": "3fcffd4d-19ca-45ad-a5d6-87c8cdff75ae",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "51842961-3740-4816-a61c-c6438fba9801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc1e56f-f849-404f-82bf-38eede1b2442",
        "cursor": {
          "ref": "0530d21e-efaf-4661-b009-374a1bd8dcb0",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b112f6d0-c4c8-4bb5-b4aa-a2d8b4fe9d47"
        },
        "item": {
          "id": "ffc1e56f-f849-404f-82bf-38eede1b2442",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3937754c-d334-4162-9152-2460635dc0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7d00a5-16fe-40dc-8d60-1a27da270d48",
        "cursor": {
          "ref": "344c779d-d8b4-4347-9c0a-82dfb55d4d99",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "aff1a4b1-a0db-4df2-8d39-30f248422ab6"
        },
        "item": {
          "id": "2e7d00a5-16fe-40dc-8d60-1a27da270d48",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5b1e0354-7642-4f49-8f94-201126958939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16549a7-b184-4618-ad82-880cd708c6b3",
        "cursor": {
          "ref": "c0e49a8f-66a2-497b-8827-5e594b2a199b",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e55b8f76-b5bb-4e7d-8d1e-9897ccfb86de"
        },
        "item": {
          "id": "d16549a7-b184-4618-ad82-880cd708c6b3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "14264875-071d-4d48-8428-5da5553afcd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f823ac-73b0-4672-8a87-5f8b23df4b65",
        "cursor": {
          "ref": "e6042e34-4d47-40f2-8868-65f08a901ff7",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4f6dca82-9534-462b-a77d-cf899b93482a"
        },
        "item": {
          "id": "68f823ac-73b0-4672-8a87-5f8b23df4b65",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "eb8c2da4-4f5d-491e-9b36-e0ac91730fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e525ebe-5050-4b7d-8c50-f8f1fb559a7e",
        "cursor": {
          "ref": "9548bc9f-58c3-4c12-b99f-7ce5cda33f1f",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a287a299-11b8-4178-8fb4-ab90b89a40dc"
        },
        "item": {
          "id": "6e525ebe-5050-4b7d-8c50-f8f1fb559a7e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3e521743-46f4-4cb9-87b9-826993636308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544635f5-d053-4026-8b51-1ef2502df2fc",
        "cursor": {
          "ref": "bd2b4dff-7104-4e39-b61c-8ac4b18a00e4",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e4dc6410-8ef3-4396-b614-b2fa4cacf88f"
        },
        "item": {
          "id": "544635f5-d053-4026-8b51-1ef2502df2fc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b02424a6-ca04-4a18-982b-91bd02cad224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414f5834-8250-4c81-8945-7b251924d88b",
        "cursor": {
          "ref": "47f88cae-278a-490c-aa15-9e857dbb6449",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7b393311-65c6-49aa-a9f3-cfd139543bc7"
        },
        "item": {
          "id": "414f5834-8250-4c81-8945-7b251924d88b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6a43d089-ff62-4ab7-a4e7-a79a959f4879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24d8691-eada-4e32-8229-c5864a2153a7",
        "cursor": {
          "ref": "20dec98c-92d5-4f4a-949f-2e2601a6fcb0",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "77fb55e9-4df8-4642-9cda-a0b420a3b529"
        },
        "item": {
          "id": "b24d8691-eada-4e32-8229-c5864a2153a7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "dc4ccae0-b0a0-465f-9b36-95d80698e151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ee3437-45dc-4f9b-84f7-3a93e8bb9a7c",
        "cursor": {
          "ref": "c00a6a7d-fd71-413b-996d-cfbc9e8a4ebd",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a6ff0dbc-3b59-4496-8f95-ac7469d4da9d"
        },
        "item": {
          "id": "e8ee3437-45dc-4f9b-84f7-3a93e8bb9a7c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f16064d5-64a4-4eff-9f8a-9d97c3ed050f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0730f5f2-c803-4706-adc7-21905d298b77",
        "cursor": {
          "ref": "cc3be520-e290-428c-8c83-ba355e201e3b",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d1eb0c5d-ede1-440d-b046-8d28bebf1872"
        },
        "item": {
          "id": "0730f5f2-c803-4706-adc7-21905d298b77",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0f825c3e-333b-48bc-9539-e76411d5d38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150d221f-b361-4c5b-8df4-4c2b3adfb7f1",
        "cursor": {
          "ref": "5c97cda8-aaa6-4e29-9544-9126a85d2dca",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "32173b92-6398-41c4-86b1-76c7e3c93057"
        },
        "item": {
          "id": "150d221f-b361-4c5b-8df4-4c2b3adfb7f1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a88a93db-5a89-4a1e-810b-89467e91f53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca8d3a7-eda0-43db-bba0-3286cfc661c4",
        "cursor": {
          "ref": "5ba06faa-59ec-48d8-94e7-426f9d2d109f",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "69add56b-5699-4842-b76c-8f1b8f715709"
        },
        "item": {
          "id": "0ca8d3a7-eda0-43db-bba0-3286cfc661c4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "74120b2c-7766-41a5-a7af-e39051ce320f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc391e8-79fa-4fe6-8abe-f9c493ca3764",
        "cursor": {
          "ref": "5034754a-bc00-48b9-82a0-46af156f4f06",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cf7b8572-7717-4f42-8016-484b8bb604f5"
        },
        "item": {
          "id": "efc391e8-79fa-4fe6-8abe-f9c493ca3764",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ee6f104a-38ff-4efd-a150-3caeeee4fdaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0f20fb-7f95-41ff-94bc-14ba5f42da58",
        "cursor": {
          "ref": "3880b0d4-c33b-4779-bf89-f35daf80ee4b",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a7b20144-7e4f-4f37-ad42-e6c12b5261c7"
        },
        "item": {
          "id": "1c0f20fb-7f95-41ff-94bc-14ba5f42da58",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1998ab6b-e90c-44d3-8803-4284a6bf8efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373f872b-ecec-4254-8588-f72e3fa1cd28",
        "cursor": {
          "ref": "499c437e-3a26-4031-bdde-0bb07fd94116",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a24df1c8-3d8c-4871-af42-54e9e5675aa7"
        },
        "item": {
          "id": "373f872b-ecec-4254-8588-f72e3fa1cd28",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4b6b57df-583b-4682-a695-4afb54f9308d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a1cb0f-b81d-4ecf-ba8c-0f4f1b6bf0e3",
        "cursor": {
          "ref": "d5c43fcb-7fbb-4801-83a9-121e9e8d38f7",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5bed1496-5bf3-4695-a0f2-2dd72521387d"
        },
        "item": {
          "id": "95a1cb0f-b81d-4ecf-ba8c-0f4f1b6bf0e3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0f38e82e-4d4c-4f6b-ae1d-86a422c6415d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d452c1-0623-498c-be0f-801bc6837857",
        "cursor": {
          "ref": "a6e6de34-fb73-40ec-8176-2a0f49db4472",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "db82ec30-6979-4782-ae73-5231303c611e"
        },
        "item": {
          "id": "24d452c1-0623-498c-be0f-801bc6837857",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "40950926-b228-43df-b85f-45d1b0fc31f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144580b8-1a06-422a-9e43-afd6a0361a9b",
        "cursor": {
          "ref": "7bebddcd-faad-4a5b-95ea-65e7c8906368",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "27c080bf-5f99-4fd1-93b3-22f4bfa7e816"
        },
        "item": {
          "id": "144580b8-1a06-422a-9e43-afd6a0361a9b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f82d6cc7-50fb-41ab-95f9-7d35be863121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59b263e-69a2-4fd9-808a-451ea993ef90",
        "cursor": {
          "ref": "078d69e2-8f9c-4a5d-b84f-1271b3d4595a",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c6d00d60-5445-4e9d-b843-27df06515d03"
        },
        "item": {
          "id": "a59b263e-69a2-4fd9-808a-451ea993ef90",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1e715c5b-b12e-44b1-84a6-7a6c7e6c0bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d44c6f8-e8cb-4687-84a3-cadf03cb4e49",
        "cursor": {
          "ref": "a5cb3aa5-342a-4e77-9c68-ea575b961f87",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c52c0886-26a9-48d7-bb63-1c95b483ac63"
        },
        "item": {
          "id": "5d44c6f8-e8cb-4687-84a3-cadf03cb4e49",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "847e3b93-4e87-41f4-b055-3d7752c31333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8134b961-3db1-468b-904b-bc4b946ead69",
        "cursor": {
          "ref": "14e38afa-454a-40c0-a989-4f57f84f5b71",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a9be865e-6081-4089-a0e0-2ed2b1776d74"
        },
        "item": {
          "id": "8134b961-3db1-468b-904b-bc4b946ead69",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "69c23281-ca38-4789-a965-f35c3a712d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6005f1-2937-4187-8d01-d63a62a49e5f",
        "cursor": {
          "ref": "4eb11213-ada5-4d43-bdd9-1afc4e3fc596",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "72cf455d-af66-447b-bbc2-98b1f5c5571d"
        },
        "item": {
          "id": "5a6005f1-2937-4187-8d01-d63a62a49e5f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0521ec15-8975-4bdf-b9a9-2ed2dca7011c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce159ac7-f495-43a4-b55d-ae3bcda38295",
        "cursor": {
          "ref": "8731103c-3824-4fab-abe1-29d873350a71",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "55d7435b-2406-41ca-bdc8-39b89977842a"
        },
        "item": {
          "id": "ce159ac7-f495-43a4-b55d-ae3bcda38295",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a1974e29-ab66-40bd-836b-4ee6ffe893b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed901b6-6cdc-4c55-a477-807ef311a8e8",
        "cursor": {
          "ref": "174d8a15-dd72-4e80-898c-f7dc8276a38e",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a8012438-8941-49ba-b227-05a25ba457cf"
        },
        "item": {
          "id": "8ed901b6-6cdc-4c55-a477-807ef311a8e8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f75c5353-9efe-40e1-9726-28a17314eb93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0227d1d0-a9bf-4ddf-b414-64121887901a",
        "cursor": {
          "ref": "25c9b007-56d9-404b-9673-678e713c5630",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d59dcb52-6c67-4d65-a120-267f854818b1"
        },
        "item": {
          "id": "0227d1d0-a9bf-4ddf-b414-64121887901a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "55682998-6cf4-47f0-9d92-1065c3a70ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cf61ef-5ffa-48e2-9282-86d6b0575723",
        "cursor": {
          "ref": "29acbd46-0a83-46da-93a6-17f2441d1d42",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e660af7a-de27-4293-bb5b-4ba46942bb25"
        },
        "item": {
          "id": "89cf61ef-5ffa-48e2-9282-86d6b0575723",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2895dbe5-8383-48bc-9484-394a49bbb867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2898912b-a967-411f-babd-55ee9755d54a",
        "cursor": {
          "ref": "c4bcbdbd-8440-424c-9d69-4e6ed85a5eee",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "092c5434-9a34-4059-8faa-22942b83ef55"
        },
        "item": {
          "id": "2898912b-a967-411f-babd-55ee9755d54a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b248dbd4-d7e1-4b0b-b2a4-f84ab3e2ca81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fd59a4-f39a-4775-b418-ef2c7e0b447d",
        "cursor": {
          "ref": "8389d650-130d-4981-b1e5-6bc13543e166",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fa2f83db-fe47-4c6e-a2f5-0bb2050fb14c"
        },
        "item": {
          "id": "79fd59a4-f39a-4775-b418-ef2c7e0b447d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e8be9838-1048-49cd-bd60-76e4a3b6b5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff2aaba-5dc4-4ff8-9a77-4b386ebcd0d5",
        "cursor": {
          "ref": "49355000-0ace-4d12-b090-c5d92f8685d6",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5ec9d75b-d928-42f7-a61e-5160e8e9987a"
        },
        "item": {
          "id": "6ff2aaba-5dc4-4ff8-9a77-4b386ebcd0d5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d4cbb8b3-4812-47ee-ab5e-e15427b3ddda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a96fe7-c1f2-425f-957a-5a2efa53f191",
        "cursor": {
          "ref": "2b67692c-98af-4b03-8a4c-794ec44165ac",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0c69eca4-5257-4a92-af7e-4e0e762741e5"
        },
        "item": {
          "id": "a9a96fe7-c1f2-425f-957a-5a2efa53f191",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8d2960fb-ca73-4a50-9b80-9975a5627ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2687edb-bb73-4c13-bb37-64c213558b40",
        "cursor": {
          "ref": "5fc56598-f44e-4969-af3e-09adb43cab06",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bd101faf-0cc6-4565-8bdb-dc08bdcae72a"
        },
        "item": {
          "id": "a2687edb-bb73-4c13-bb37-64c213558b40",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f80e88a1-0433-4976-9a12-cb7bf17b6dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d992add2-f162-4baa-acf1-8c58dfb1a264",
        "cursor": {
          "ref": "b33e90ee-8197-4d28-81de-b7fd12e32e40",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f4b26a0f-f875-4180-a513-7b8439b9b3a5"
        },
        "item": {
          "id": "d992add2-f162-4baa-acf1-8c58dfb1a264",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5d09c370-b8c0-45d8-b929-204ea0cf0a12",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea0f9f9-759d-4a5f-aa7e-6744826d190d",
        "cursor": {
          "ref": "241adcd8-2b33-483e-98f0-63c0e24e6b29",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ed36cdd8-fcde-4376-bd8e-e45c693abea8"
        },
        "item": {
          "id": "bea0f9f9-759d-4a5f-aa7e-6744826d190d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f3aad761-c48e-4b01-8f61-183c29bae371",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d47d3a-2c08-49a3-b0b4-1d6cb8de85a1",
        "cursor": {
          "ref": "92defc40-ebd3-44a6-9035-47650758fa3d",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1a84f5fd-15fc-4fa5-acd4-048737808347"
        },
        "item": {
          "id": "d2d47d3a-2c08-49a3-b0b4-1d6cb8de85a1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "499c2205-c751-42f0-aadc-95a1564ed3c2",
          "status": "Created",
          "code": 201,
          "responseTime": 172,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f11cd0-69aa-418b-90b4-365b4172ff98",
        "cursor": {
          "ref": "8314731c-09ad-4fe4-94d0-6122a17cd4eb",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4fb1b4d0-6154-48df-81c9-4493ae3b76f9"
        },
        "item": {
          "id": "57f11cd0-69aa-418b-90b4-365b4172ff98",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "59d7530a-f5c0-4326-94cd-01e755ca6b5b",
          "status": "Created",
          "code": 201,
          "responseTime": 67,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9694aa6c-1a41-48dc-b517-06b546675c21",
        "cursor": {
          "ref": "5d5755f6-b34d-47e7-9e36-6482427c3773",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "37610223-a15e-4e84-864e-d4e2b0d0474a"
        },
        "item": {
          "id": "9694aa6c-1a41-48dc-b517-06b546675c21",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b763ddd2-c0c4-423e-be23-b765193dbcd7",
          "status": "Created",
          "code": 201,
          "responseTime": 54,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26a8bca-50be-496b-bf39-95916a3d8721",
        "cursor": {
          "ref": "908b2325-c170-4585-bae2-a23cafae93a8",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d831836f-3122-4a31-b617-bc0de176c59d"
        },
        "item": {
          "id": "c26a8bca-50be-496b-bf39-95916a3d8721",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fbb34e65-420e-4125-87b4-6e6b159b4d58",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c633f0dc-cff5-43b8-af90-8d096b9b35ce",
        "cursor": {
          "ref": "40e0dbf9-fd6c-412b-9438-905fd447422e",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d457cd46-748e-4d5e-bc67-c95c4bacc414"
        },
        "item": {
          "id": "c633f0dc-cff5-43b8-af90-8d096b9b35ce",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "acbbea35-3a6e-4044-a65e-859c0df9183d",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "8513018b-e225-4435-8163-566e87d85777",
        "cursor": {
          "ref": "4cb36139-4669-4780-bc00-ffa818694a92",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3daa6709-4e63-4bd4-baa7-264854d04013"
        },
        "item": {
          "id": "8513018b-e225-4435-8163-566e87d85777",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f00de663-303b-4a41-853b-2733110f3b7c",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed3c4ae-ac29-405a-825c-3b4122324927",
        "cursor": {
          "ref": "01f9c705-9c5e-4c07-975a-749eaa550e0a",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9518cd1c-d801-4cd7-9afc-9ee6ea298cf4"
        },
        "item": {
          "id": "eed3c4ae-ac29-405a-825c-3b4122324927",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "025ca7d8-c59b-4601-aa2e-d471da6661d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebb5f5b-ff34-4f39-9ef4-153b7309359d",
        "cursor": {
          "ref": "e2427567-1ae3-484c-a5b2-e21d180e9b9f",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "01c29a12-5052-4635-a72a-3438fe382342"
        },
        "item": {
          "id": "9ebb5f5b-ff34-4f39-9ef4-153b7309359d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "59605904-12ae-44e3-ab92-5d8499be666f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d89b4a2-a83b-43ab-927d-f211ebb2774d",
        "cursor": {
          "ref": "346897b1-9d49-46ea-96d8-87949ce8a73a",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "737bc8b8-dbcf-4b33-ade3-fdf6cd3933ae"
        },
        "item": {
          "id": "4d89b4a2-a83b-43ab-927d-f211ebb2774d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f89e9588-8019-416d-98f7-7f91dc5feeb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94617034-c0df-4698-8d3c-e358b1140ff4",
        "cursor": {
          "ref": "da27b495-3ead-4aec-aecf-bcdaec4e0bdc",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6b763be5-2d02-43b6-926c-a9654518af17"
        },
        "item": {
          "id": "94617034-c0df-4698-8d3c-e358b1140ff4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "75b77b77-d40d-434e-8b72-1bf09523fc86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa74c9f-d77c-4163-b8ad-df5034706449",
        "cursor": {
          "ref": "fb64dbf9-acb7-4e3c-8f10-2ba77438c09e",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7d2a1ce2-58e2-4ec9-8992-8b4a87556190"
        },
        "item": {
          "id": "9aa74c9f-d77c-4163-b8ad-df5034706449",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e394dca5-357f-433c-809c-ccfafeb6993a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e919fb0b-9193-4979-8e2a-955f08dfa2e3",
        "cursor": {
          "ref": "88b99e27-47de-4f8d-a0fc-039fbf35b806",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "429817b0-ceb0-4ff5-a98e-648900f4f423"
        },
        "item": {
          "id": "e919fb0b-9193-4979-8e2a-955f08dfa2e3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5f176983-8209-4f8b-a98d-de7310db16ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d531e3a0-b72d-4465-8cfd-b89c07728849",
        "cursor": {
          "ref": "98586f02-8441-4046-890c-63d005d6e5ea",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1d131e54-1957-4dfb-b210-058914414b1e"
        },
        "item": {
          "id": "d531e3a0-b72d-4465-8cfd-b89c07728849",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "343fe257-a431-4e67-b36c-f36e44e28481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8340a93-6427-4efc-84b1-5be6a79738f8",
        "cursor": {
          "ref": "d4383320-89a8-460a-957a-caa68e1fa392",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a31474ea-457d-44a3-a78c-0891ace81943"
        },
        "item": {
          "id": "e8340a93-6427-4efc-84b1-5be6a79738f8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "06436459-750d-4789-9cb7-6a9f59923830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d8dd49-0b6c-4bd8-b5e8-9d434c73393d",
        "cursor": {
          "ref": "847d327b-3e31-4b0f-8241-3b5e8805f7c1",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a7175bb4-6252-46a3-9085-3781ed742d91"
        },
        "item": {
          "id": "14d8dd49-0b6c-4bd8-b5e8-9d434c73393d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f3df1509-2a3b-43c6-879c-3d8d1fa8a320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f13615d-e65e-4d5f-b8cf-484cacd9bd3e",
        "cursor": {
          "ref": "4139683e-8588-45d0-84d2-d0a2f05c1057",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e6673ff4-0ee3-48ec-a928-e11157ad5578"
        },
        "item": {
          "id": "9f13615d-e65e-4d5f-b8cf-484cacd9bd3e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4c8d31e1-aac9-41d3-b47b-2a2501658973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830efa8d-f402-4c14-b145-1f4f4fb6b3bb",
        "cursor": {
          "ref": "0f79a5d0-42fe-476a-9849-e8f17e1609d1",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "10740b20-9a5a-4801-8396-d306333f3e77"
        },
        "item": {
          "id": "830efa8d-f402-4c14-b145-1f4f4fb6b3bb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "74dca05b-7db1-4a06-857e-05decccafca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3683ed-6719-4d23-a2ee-6635b93bd7a4",
        "cursor": {
          "ref": "f2db823f-fadd-4779-a056-2f2bc357c656",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "841512ed-7a64-490f-8e7a-a80bde2de14a"
        },
        "item": {
          "id": "dc3683ed-6719-4d23-a2ee-6635b93bd7a4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c1e179f2-16ba-41a9-97f1-f3a5f12532d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0202ef35-7549-469d-a35e-94251c7fa8cc",
        "cursor": {
          "ref": "6bc35683-2110-4fe3-8356-e99e1032780a",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "34553df3-c87e-4f28-81cc-7baa1549c79f"
        },
        "item": {
          "id": "0202ef35-7549-469d-a35e-94251c7fa8cc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b90f0855-f12e-4bda-bb8f-3a25c1f6255b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7a9c8a-4751-4ed5-87d1-1aeb74369914",
        "cursor": {
          "ref": "5ce954a7-27da-4195-bdab-ab6487f9d857",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e4013742-766c-4061-9898-90442c751eba"
        },
        "item": {
          "id": "5b7a9c8a-4751-4ed5-87d1-1aeb74369914",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ebd6a52e-0072-4c08-a9b1-1aa3478911c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70e1753-02a0-453d-8392-16c2383d94cf",
        "cursor": {
          "ref": "6f581228-cfb6-466b-9edb-d73b66e85cb0",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b574b692-5a9d-4cc1-94b9-faba35e86a58"
        },
        "item": {
          "id": "e70e1753-02a0-453d-8392-16c2383d94cf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "72d766c1-08b3-49fe-a63f-fed1008c177a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c1d3e6-ffc3-4c30-8996-22a16c667f58",
        "cursor": {
          "ref": "45a29917-fd23-4b26-9232-bcf46bc5901d",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "645743b7-23ff-4d1c-a86c-f2628b5b59f9"
        },
        "item": {
          "id": "d0c1d3e6-ffc3-4c30-8996-22a16c667f58",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5c3a7115-0840-4813-bbd1-17ca1ee46d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306fb992-74e6-4223-a459-8255aad37e84",
        "cursor": {
          "ref": "be7adbd6-b947-4f4c-a952-60a101c31206",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3095959b-ba35-4a0e-8a5e-d08cf477a071"
        },
        "item": {
          "id": "306fb992-74e6-4223-a459-8255aad37e84",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0a7aa4ec-94ab-495d-b14b-6398ef1c3287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd68cde-3deb-4e79-9350-d4af6b0f648d",
        "cursor": {
          "ref": "8e476ab4-46c1-4fd5-8303-c79d91f0858d",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b5f20209-73fe-4c7c-a11c-f4055a78f331"
        },
        "item": {
          "id": "9cd68cde-3deb-4e79-9350-d4af6b0f648d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "65fbd864-cb4a-454c-9fbb-ae4ed5109014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6076a989-f5f7-4cf0-b6f3-076444790d07",
        "cursor": {
          "ref": "16071c8b-729a-4cfa-8c55-ef011c58469b",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "072c6928-7eb0-40dc-a1e2-ee210d360bf0"
        },
        "item": {
          "id": "6076a989-f5f7-4cf0-b6f3-076444790d07",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5c233373-c249-4362-a44f-fcc9edc9cd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4d53fa-9f6d-40c2-a6aa-7218a9318c3c",
        "cursor": {
          "ref": "5d67b96b-a6cd-4517-b668-37b10abdb5cb",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f0ae0d66-e626-4648-a760-07762df6e0d9"
        },
        "item": {
          "id": "2c4d53fa-9f6d-40c2-a6aa-7218a9318c3c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d298793a-ddb6-4fc3-b9e8-67fceb1b4793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8f7294-7cef-43ca-8b8b-2f247d7b6328",
        "cursor": {
          "ref": "b107617e-8160-4605-a7a6-8ba0a9216c2c",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3fd8b2fa-ee8c-42cb-aee1-d5a190f08344"
        },
        "item": {
          "id": "7f8f7294-7cef-43ca-8b8b-2f247d7b6328",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "04bd14df-db92-45b9-8950-8c03c6660e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb97b13f-da48-4b95-a0b4-719b7fd12d3b",
        "cursor": {
          "ref": "fac1a451-625b-4ba5-95af-9c51fe408ddf",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fb01b0c8-3c6c-47b9-bfff-ba647b4cf40d"
        },
        "item": {
          "id": "cb97b13f-da48-4b95-a0b4-719b7fd12d3b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8a3eca1f-c813-4bae-8b29-e8b31dd62c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9516c434-99c8-480b-ac0a-2e50e2a7309c",
        "cursor": {
          "ref": "3e2b6b43-df28-4889-a307-98434fc68ef6",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9510e66f-6ab4-4a5e-b33b-32e4897cee11"
        },
        "item": {
          "id": "9516c434-99c8-480b-ac0a-2e50e2a7309c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0a198aea-9b76-4343-8751-f2b68a6b9a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d211701-4e20-4c49-adf6-b57e232698b7",
        "cursor": {
          "ref": "2e0a610d-75b7-43b5-b774-6a84900338c6",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "57d9e59c-c817-4718-b09d-e5a38da33448"
        },
        "item": {
          "id": "5d211701-4e20-4c49-adf6-b57e232698b7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "081e43f7-4c4f-4f7c-8a3d-9876f39fbaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8f8110-7953-4931-91ee-8d8f11b22799",
        "cursor": {
          "ref": "ff0e06c9-7ddb-433d-8eb8-fa72f825c984",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3dc9f3f5-aa72-4d0e-9465-1d513450122c"
        },
        "item": {
          "id": "dc8f8110-7953-4931-91ee-8d8f11b22799",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0e510ba8-9410-4893-9b23-aedd5746a9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f6ed73-1f19-409d-8c59-7d61fa88d446",
        "cursor": {
          "ref": "a8c0def8-dc3e-4f0e-9c9e-fd3eed4ebd05",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "efe434ff-e4a8-4df5-97a5-aacfcf5105d3"
        },
        "item": {
          "id": "62f6ed73-1f19-409d-8c59-7d61fa88d446",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "91e1ba4b-73fc-432a-8549-8fd719198110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2de97f0-6526-42cb-a30d-6c3ebec5e724",
        "cursor": {
          "ref": "f238c8cb-1e91-4621-b145-35fab0794573",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "70a99a48-6f37-400b-bd86-c16dafaa5235"
        },
        "item": {
          "id": "e2de97f0-6526-42cb-a30d-6c3ebec5e724",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6a9f4ebb-234a-4e84-b8ba-e28427c8cdc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ed0ee2-c012-4e84-9ef2-8f6788b6c49a",
        "cursor": {
          "ref": "3fcda6d0-2cfe-48d9-b018-8d04b7d7a7f1",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9cd438a6-0a34-461c-b059-3c3ef6ecf4c7"
        },
        "item": {
          "id": "43ed0ee2-c012-4e84-9ef2-8f6788b6c49a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7f91d61a-3fb3-46a4-974b-cdd8f2bf712d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e703ca76-d502-4972-a4f0-38dab61e3f29",
        "cursor": {
          "ref": "f275be01-9dbc-4eb9-83d4-f296000f10e8",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "42ef0de1-1845-42ff-954c-d88f0171e4d2"
        },
        "item": {
          "id": "e703ca76-d502-4972-a4f0-38dab61e3f29",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "733d592e-ed09-498a-9cdc-efc64feab034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd054de-69fb-4cd8-ab85-1fb6d95ab524",
        "cursor": {
          "ref": "e90c156a-a512-4ea0-ad7d-018c1f635796",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1c8d9989-86c1-46b4-988b-ea94410b7041"
        },
        "item": {
          "id": "ccd054de-69fb-4cd8-ab85-1fb6d95ab524",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3ab27fe7-0ba0-4a10-8ee0-b18ce87d08e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a056753-1fda-45d8-9693-6bc7d5739941",
        "cursor": {
          "ref": "d35836a1-4c0b-4357-b2c0-e66ccb2136ee",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c7918634-c144-45f7-96c5-1b9f07a2708d"
        },
        "item": {
          "id": "4a056753-1fda-45d8-9693-6bc7d5739941",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f949ac06-042b-4136-a718-56aed8794cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b715b2d-7900-4602-aed4-0289fe5f96fa",
        "cursor": {
          "ref": "57173db1-32ce-43e9-871e-e1ba0fdd5f1f",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e7cd7a50-e7a5-411a-91b8-13afcce6113e"
        },
        "item": {
          "id": "2b715b2d-7900-4602-aed4-0289fe5f96fa",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "bd0eaaf3-b99b-4db7-a16d-19fcaa5d24df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218c815f-1b31-4c48-b30a-97a87672ac61",
        "cursor": {
          "ref": "d591f95a-8d36-4c08-8310-7619922aadb6",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ad869606-66d0-4211-aa09-9aa025016dfe"
        },
        "item": {
          "id": "218c815f-1b31-4c48-b30a-97a87672ac61",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9d23cd25-96c0-4e0b-9072-e4758cfde75c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2578f7f2-f73c-4ec3-8949-2da35afa43f9",
        "cursor": {
          "ref": "dca212e6-c3a3-42ac-8f07-a00a56c44e81",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "63f6f142-6b76-4e1d-8b3b-f9a2bcfe1ea9"
        },
        "item": {
          "id": "2578f7f2-f73c-4ec3-8949-2da35afa43f9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "abd57f8d-cf16-40cf-92aa-fbed38845a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21a2b8a-81b5-4800-add7-29a0b694b99f",
        "cursor": {
          "ref": "bc47d30a-3c88-43fc-988f-01b309713820",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bec74cbe-37f5-4cf6-b896-0aaaddefcaaa"
        },
        "item": {
          "id": "a21a2b8a-81b5-4800-add7-29a0b694b99f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "748717ad-7ecb-4285-8212-58f7e85be694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd51bfb6-6585-40fc-895f-8431e31580d0",
        "cursor": {
          "ref": "bbf6c9f9-705a-4fc6-b053-b332e10e3fca",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9197b4e8-3123-4fe2-a292-3466a3c747d8"
        },
        "item": {
          "id": "cd51bfb6-6585-40fc-895f-8431e31580d0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c4508e9c-176e-401d-ba3c-3f556984e91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea91aa2c-cbf9-46c3-808e-3d550af9702e",
        "cursor": {
          "ref": "6a995d4e-34c3-4b7b-941f-e527f00811b3",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "376c8e27-e0c4-49c5-a2cd-21602087ee5f"
        },
        "item": {
          "id": "ea91aa2c-cbf9-46c3-808e-3d550af9702e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a110e028-8b32-4d6d-87d6-c722b000adfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337997f5-de55-4f42-8850-7af0921db0f1",
        "cursor": {
          "ref": "7af4f131-a0ae-4dff-be54-9a1f213fa8ab",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "dabc91bc-6b24-4fb2-95aa-be05572ad77c"
        },
        "item": {
          "id": "337997f5-de55-4f42-8850-7af0921db0f1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bc9f5cdd-3765-40a7-90da-a43de5fd8363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1885479a-22c8-4179-b23d-2d1a0141a685",
        "cursor": {
          "ref": "a44d37e3-8e8f-434c-8e1b-1fa4a23a1011",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6300f566-ea04-46b3-99af-480c13cd2eb9"
        },
        "item": {
          "id": "1885479a-22c8-4179-b23d-2d1a0141a685",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5341bf30-78f3-4512-8d43-1719bbae7cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb756bd2-eae8-47a5-b9b3-7d91adb7251d",
        "cursor": {
          "ref": "b0141178-81dd-465b-bb49-71727998306e",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "92bd0bcd-5520-4e5e-adbe-ca92696861bf"
        },
        "item": {
          "id": "cb756bd2-eae8-47a5-b9b3-7d91adb7251d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f6532550-9212-4e41-b5b9-b19c46aa6b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf58936-abaa-4004-97cd-1d9cc165a6bd",
        "cursor": {
          "ref": "4ef638b3-3bd4-4be6-9c1c-cb98d3d8dbb0",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a293e68b-1182-4457-987c-c482725ec14c"
        },
        "item": {
          "id": "cbf58936-abaa-4004-97cd-1d9cc165a6bd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2659258c-4153-462b-b6bd-56292c13971e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a168c2fe-345c-4576-9bd4-f7efd50f1820",
        "cursor": {
          "ref": "0a43a8e2-aa49-4b28-aa4e-2acae89c6201",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a58104e2-4515-4d61-af83-036474403f78"
        },
        "item": {
          "id": "a168c2fe-345c-4576-9bd4-f7efd50f1820",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4b934105-0931-4d9e-8d85-7a824c6df0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd1cbca-9c11-4a06-8cd5-ad400fbc057b",
        "cursor": {
          "ref": "eb54b69d-6a0e-4aea-a30d-f7705d23073d",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f57ef226-4bac-4991-a5af-af0ef94ba7c1"
        },
        "item": {
          "id": "cbd1cbca-9c11-4a06-8cd5-ad400fbc057b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0022368b-8508-4666-b022-70107d079ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d064a2-a593-4444-8b87-853471ef8ce3",
        "cursor": {
          "ref": "8695c797-c8e1-42dc-85fa-622325edd1bd",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e710cae5-75d1-4f2f-bc30-adedc2c57346"
        },
        "item": {
          "id": "d7d064a2-a593-4444-8b87-853471ef8ce3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2e0479f4-bba1-42d6-a47d-bb29477d42dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2117d466-29f4-467e-8166-60fddce0b300",
        "cursor": {
          "ref": "4927761c-3819-4bae-a49b-aa8f6f17a9cf",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5ad2b818-c4fd-4b2f-843d-45245b4f95ee"
        },
        "item": {
          "id": "2117d466-29f4-467e-8166-60fddce0b300",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f77c106c-fa09-4f84-8327-665aa1f7d6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc09bff-d8b7-4bff-88ee-c2badd6975d3",
        "cursor": {
          "ref": "121be750-1917-4306-ad19-cdd2dd9f5388",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7f397df6-ba3b-4dbc-980c-e06299b8fd21"
        },
        "item": {
          "id": "6dc09bff-d8b7-4bff-88ee-c2badd6975d3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9f7f3621-a82c-42d2-9649-b5caa2b43b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f051fd5-9857-4156-a0fe-157c6cdd0037",
        "cursor": {
          "ref": "d77a77d0-f7c1-4e29-a4c4-75232cd7fe81",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "469dffc0-c833-4452-ab69-a25c82f3deb4"
        },
        "item": {
          "id": "9f051fd5-9857-4156-a0fe-157c6cdd0037",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "63676e18-9d33-4631-8ea9-5f3ae266e645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f92cfb-4177-4f7c-b1cf-26bfad66634a",
        "cursor": {
          "ref": "4cad772c-1453-48e3-a3d4-9e517bc5778d",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0381a612-ca6e-4c2b-a3fe-a2f51a475135"
        },
        "item": {
          "id": "31f92cfb-4177-4f7c-b1cf-26bfad66634a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fc9737f4-8afa-4954-9601-cde1320a1bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e4440f-4c32-414d-ae01-7be1c7552c53",
        "cursor": {
          "ref": "00baa6c9-54ab-4d1a-8737-e44a825b0428",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "fae22de1-a322-4a1d-9865-be3bc6bdcbb2"
        },
        "item": {
          "id": "a2e4440f-4c32-414d-ae01-7be1c7552c53",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "10c5b14d-1f74-41dd-9832-3971b799447b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ec9481-1bae-44e5-a642-aebfb12acbab",
        "cursor": {
          "ref": "13764168-64cc-4143-9f14-ac28c1af5d18",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4ffd3e04-3705-4b05-8450-ebb7333c4de5"
        },
        "item": {
          "id": "02ec9481-1bae-44e5-a642-aebfb12acbab",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1d31182d-a07a-4b85-9944-9d71b7f4b0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf3ec42-e714-444b-ae5a-ce32df6f94ef",
        "cursor": {
          "ref": "b7d0baa6-69ab-432a-aca3-35f6048491b9",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fe74a39b-10df-4c92-ab86-a772223abb40"
        },
        "item": {
          "id": "fbf3ec42-e714-444b-ae5a-ce32df6f94ef",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4b23e23b-2a77-4357-a8ed-3f23bb614b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4324d887-5df8-4428-af74-edf1b8f31626",
        "cursor": {
          "ref": "7dda4a62-237c-444b-991a-a8567234b55f",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9bc17e57-26b6-4fbc-bca9-7ec1b2e9862d"
        },
        "item": {
          "id": "4324d887-5df8-4428-af74-edf1b8f31626",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0ebc84fb-ebfd-4f01-bcf3-dd1862d04321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7c7637-93a1-4e38-9fb7-9f7f69fb5f42",
        "cursor": {
          "ref": "f3136467-7762-4b29-a8fb-faf9d2a5d7bb",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "70f8eada-fb90-49b2-8c7b-75a191de32de"
        },
        "item": {
          "id": "7b7c7637-93a1-4e38-9fb7-9f7f69fb5f42",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0e23c56c-b1b9-4015-be3a-e128ce443d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921c1fb5-213c-4350-b40c-add4ff48a415",
        "cursor": {
          "ref": "ba875cc6-0e45-4759-859e-5d0e28f2bfaf",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1dd12aa8-9d04-47a5-8486-15d0e5716c71"
        },
        "item": {
          "id": "921c1fb5-213c-4350-b40c-add4ff48a415",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fc9641cc-ea50-4aa8-ae10-e0642e4303e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d40236-c6b7-4ea8-9a0e-e0b6a52e701c",
        "cursor": {
          "ref": "3e2e7be0-49c2-48eb-9821-fa90170809c5",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8b816bda-6dfb-4062-a8c9-41ca82b424e5"
        },
        "item": {
          "id": "29d40236-c6b7-4ea8-9a0e-e0b6a52e701c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "041837e1-aebb-4432-aff7-e81fe11a0ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e27e57-4b32-420f-b235-5656c68a25e8",
        "cursor": {
          "ref": "de6bada7-fa2b-4076-8a0c-c0b4d546c134",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "702db5e1-4da9-4bde-98a1-ec6c80d6f788"
        },
        "item": {
          "id": "83e27e57-4b32-420f-b235-5656c68a25e8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "397272cd-c905-4ad7-a9ff-3c3190a9f618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30b093d-e1d2-4ae7-af9e-98cfc729965d",
        "cursor": {
          "ref": "cca3ffe8-2e75-446d-8db0-c401b8ea9720",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6ff2374e-2f6c-44de-b49d-e1849a4b5825"
        },
        "item": {
          "id": "e30b093d-e1d2-4ae7-af9e-98cfc729965d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9a9c6194-d920-46c6-bec1-879a7946159b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d1ce75-3742-4888-b33c-f3be9a6a1440",
        "cursor": {
          "ref": "62600571-f208-4608-954a-8ad170fa2903",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4b379194-31de-4cba-b1be-e87e61f62b19"
        },
        "item": {
          "id": "f4d1ce75-3742-4888-b33c-f3be9a6a1440",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cb80e0a9-f2b2-44bd-9058-f5d40e3096be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c645a3ec-afb6-4e5f-8def-aff3e9a8a553",
        "cursor": {
          "ref": "c85bad97-7916-4b72-a35a-af23bbe26c32",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4fedb378-c15f-46e8-bd5c-c2c019c7f677"
        },
        "item": {
          "id": "c645a3ec-afb6-4e5f-8def-aff3e9a8a553",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c554e831-c04f-4651-9d57-a7638419023d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4ea8c7-1595-42f5-95ed-42b121f3b468",
        "cursor": {
          "ref": "00d1b718-f756-4258-a3b6-5b68bb34d8ad",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "69a9c009-0183-424f-9e9b-028734f4f83d"
        },
        "item": {
          "id": "9e4ea8c7-1595-42f5-95ed-42b121f3b468",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b6b3f952-d768-41cb-a51e-50686e7ee72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b633a75e-987e-4ce1-b416-3099b78956a8",
        "cursor": {
          "ref": "9ffd36b2-88bc-4451-ae4e-74d27d12db1f",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1c524e89-015a-4bc7-aeeb-b17a00fead25"
        },
        "item": {
          "id": "b633a75e-987e-4ce1-b416-3099b78956a8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5028aa77-6089-4c59-8e49-7ae5cd863ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a33aa4-9196-460b-b336-c9219c75a711",
        "cursor": {
          "ref": "9ffacca4-204c-4b03-b466-c1eeac3eb247",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a231eab0-64bb-43a0-9c26-3cef0c769652"
        },
        "item": {
          "id": "b4a33aa4-9196-460b-b336-c9219c75a711",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "13e9b2bd-21a9-4ace-8d7a-bfcb9a6eb80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5ae070-18f6-4288-95b5-b05a5152f446",
        "cursor": {
          "ref": "1467ba26-7352-4708-81d7-f93bdf1b7fef",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "048cf08e-6667-4727-8df7-ef1e58dde257"
        },
        "item": {
          "id": "ba5ae070-18f6-4288-95b5-b05a5152f446",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6f482142-8673-420e-b693-ebaefafa33a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2febc7fe-8e85-4f0a-b51a-05576dbd3ea4",
        "cursor": {
          "ref": "51c259fd-f7d2-4e36-a5d6-8851da3b8b81",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "70269d53-d18d-4487-89b2-5e71233af173"
        },
        "item": {
          "id": "2febc7fe-8e85-4f0a-b51a-05576dbd3ea4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "380cd88f-33d4-4b3b-bd96-066df4ee524a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52202bfa-bb3a-41d9-9eaf-0fbcff9f5701",
        "cursor": {
          "ref": "3020d3db-3d80-434d-8821-6d358f747c18",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6b36b8d0-ee2f-4e3b-93ee-2a106e6d6613"
        },
        "item": {
          "id": "52202bfa-bb3a-41d9-9eaf-0fbcff9f5701",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "da36f848-e1a8-4992-8266-fce0e925acc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b2ca2f-4cfd-4b78-b2a2-959299cd5085",
        "cursor": {
          "ref": "32909b31-b0ed-46a8-bd88-fdde78c00a22",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1f590f55-867e-4db6-8e20-af8d4da57837"
        },
        "item": {
          "id": "a6b2ca2f-4cfd-4b78-b2a2-959299cd5085",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5f304373-3329-4623-8b2b-089f99d458a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e926cd9-def2-486a-8678-6070f67caf79",
        "cursor": {
          "ref": "cf92efa6-95de-476d-b4ed-74a6923a3234",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "31bf839c-0acc-4e32-a942-a143600da2ce"
        },
        "item": {
          "id": "3e926cd9-def2-486a-8678-6070f67caf79",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "82a43cd0-2543-4906-9735-947e016bff01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfaccc42-6d82-48d9-9ce7-8577aa2890d1",
        "cursor": {
          "ref": "709b0636-a48a-4607-b3fb-5a2ac6d515ab",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d3b7641f-27cc-4d04-84de-c83976059bba"
        },
        "item": {
          "id": "bfaccc42-6d82-48d9-9ce7-8577aa2890d1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9708fbef-4cb1-4050-af2b-1736764f6c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7c306d-f144-4b79-beb2-130fc678b8d1",
        "cursor": {
          "ref": "6959c86e-231a-49a9-bc77-a0703dd5a408",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "218280b1-28d8-4fa0-90f0-4750f0ddb209"
        },
        "item": {
          "id": "cf7c306d-f144-4b79-beb2-130fc678b8d1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "bf74f8f2-4228-4893-ae44-40e4aa538504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9ce918-cee8-4168-82ae-45fcec663ac2",
        "cursor": {
          "ref": "3954386e-6677-41b7-a3f4-4b1a438893fd",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a52f66a8-2353-477d-913b-9b62b856c33b"
        },
        "item": {
          "id": "de9ce918-cee8-4168-82ae-45fcec663ac2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "00497cde-b8cf-4b93-b108-4c795211c4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b477af-c739-4031-8d6b-2c48a1de3976",
        "cursor": {
          "ref": "479ee3c4-f772-43d7-bce3-37f7370840d2",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7d631e3f-af27-4808-bae4-a9863a55d1a6"
        },
        "item": {
          "id": "03b477af-c739-4031-8d6b-2c48a1de3976",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3301127e-1e2d-4ed7-8705-8022e12e640e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a21d11-2606-4978-ad30-8d60f56d2d38",
        "cursor": {
          "ref": "6558adc9-bed3-4352-b346-76b0b0380c88",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fcac6cb3-fdb3-4951-aa2a-54ad3c223cc3"
        },
        "item": {
          "id": "f1a21d11-2606-4978-ad30-8d60f56d2d38",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cea9f832-411d-4c2c-9212-2618f30825ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66992c2-2274-419a-b9bd-d3ea0a8ee7d6",
        "cursor": {
          "ref": "f12fecdc-d655-49e4-a32f-7389966ace42",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b818b206-9aa1-4ff2-8c12-6b92ee142b4f"
        },
        "item": {
          "id": "a66992c2-2274-419a-b9bd-d3ea0a8ee7d6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "eecfb15c-f1db-4967-aca6-20befed4af3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b887ee98-8f52-4cdf-9057-8bae66e0e756",
        "cursor": {
          "ref": "96994996-93a2-4cb9-9cc1-1b16d4b22f85",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8ac1a136-d40e-4051-a3fa-220054912c74"
        },
        "item": {
          "id": "b887ee98-8f52-4cdf-9057-8bae66e0e756",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d07a4660-c16f-4740-a210-9c005f4b44d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb58f77-f9e1-404c-879a-6c557ca7ecba",
        "cursor": {
          "ref": "e8f9a0c3-f8f4-46ff-9ace-4586614ff152",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "63f9db95-fa78-419c-a766-5014a0d1c6c5"
        },
        "item": {
          "id": "7bb58f77-f9e1-404c-879a-6c557ca7ecba",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5e2791bb-6ec9-44f3-a824-af007977fe0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e7abeb-8008-49f4-931d-bba2359becb4",
        "cursor": {
          "ref": "2916d6dd-90e1-44e4-990d-45f7b25d7991",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3ab1d494-95ca-47cc-8739-c8c76fe553d7"
        },
        "item": {
          "id": "52e7abeb-8008-49f4-931d-bba2359becb4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c3166eef-1273-4449-9470-4f1f368d51a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229db1dc-e010-45df-8bf8-68211f7ab725",
        "cursor": {
          "ref": "b5ed7096-85f2-49eb-8277-ec36552e75c1",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d77ef014-1c2f-4bc0-a08e-93ce64df7e9a"
        },
        "item": {
          "id": "229db1dc-e010-45df-8bf8-68211f7ab725",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ed45fe87-2c30-47aa-b0ec-2449e01f5074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa42296-8cc4-4e5d-91b1-e2ab84d7d307",
        "cursor": {
          "ref": "8479630e-dc46-4bf1-842a-194853a8fb7e",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cce7115d-7866-442e-a18c-75b24089651d"
        },
        "item": {
          "id": "1fa42296-8cc4-4e5d-91b1-e2ab84d7d307",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bc0e3e13-2c27-44a9-abd3-a98ccbe7bf95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46c373e-2870-41c1-a8ce-a50026626d87",
        "cursor": {
          "ref": "53e4b482-f9b2-4d42-8354-14c3c9b0d4b4",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9c6a8a55-07a3-4957-b274-1b0d51bcf51c"
        },
        "item": {
          "id": "a46c373e-2870-41c1-a8ce-a50026626d87",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a7d95075-9327-4ae0-b166-e6331431ea9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121537b7-41b3-41d2-952f-cc2ecdf1c1aa",
        "cursor": {
          "ref": "9773f8bb-fde7-45d9-9fcb-444a66f2f3e5",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1a9d5cdf-e4cc-4aa6-8484-1a85df59cb2a"
        },
        "item": {
          "id": "121537b7-41b3-41d2-952f-cc2ecdf1c1aa",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3209a465-2bee-442d-a13e-ffb9cfecc9eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d130d4c-ebf5-421b-9e86-23f1e339bab7",
        "cursor": {
          "ref": "eca7e5de-5041-41b4-a494-b7a1165e9986",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5ba712f7-5891-472b-98fc-2bb329223f8a"
        },
        "item": {
          "id": "0d130d4c-ebf5-421b-9e86-23f1e339bab7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a818344e-9303-43f6-9ec1-10db622db0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d815a4f-8f93-4131-829d-1f59c84a4626",
        "cursor": {
          "ref": "87b2dc53-cf65-41df-91d4-481ce6127f83",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4dd5b27e-c49f-4fd2-a8dc-46a4ea3009e7"
        },
        "item": {
          "id": "1d815a4f-8f93-4131-829d-1f59c84a4626",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cb8d5ef7-b0e4-4e97-b415-d8418b0f5bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038e665e-4bf0-404d-a703-b308c2f6780d",
        "cursor": {
          "ref": "fd8c3f0c-61cb-4003-9d81-58d42342f564",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8eb0e515-ab49-4b2d-92d1-72163eadd322"
        },
        "item": {
          "id": "038e665e-4bf0-404d-a703-b308c2f6780d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7152ebc5-2880-4829-937f-912daad8588d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66456181-1b3c-47f2-b26f-43a73709066b",
        "cursor": {
          "ref": "f48b2745-e711-4db7-9b57-bc9ae47945f3",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "60f47591-1279-428d-9327-83040569c699"
        },
        "item": {
          "id": "66456181-1b3c-47f2-b26f-43a73709066b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6af04e76-8645-4632-bb2d-e13f69268f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f8216c-6a64-46e4-84ec-1a1b8553e55c",
        "cursor": {
          "ref": "a175e749-0826-493f-a780-8e06b1ea32ce",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "64c2efe4-f134-4b5e-83e2-22a00249100c"
        },
        "item": {
          "id": "83f8216c-6a64-46e4-84ec-1a1b8553e55c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fa7a20e5-5e29-4fee-a45c-5bc2fa28a5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66b5f56-9d50-4be1-822f-8f4e0401ae07",
        "cursor": {
          "ref": "83493ef5-2d77-442b-a0e4-659cb1bfb3c8",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "541a2fa0-46a5-446c-b7a5-c6a85f2c1a93"
        },
        "item": {
          "id": "d66b5f56-9d50-4be1-822f-8f4e0401ae07",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "862c9336-99dc-419d-981d-dc25226d62ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31910d90-c764-4d6b-9d66-605d48ff404d",
        "cursor": {
          "ref": "cdd16918-5190-4f53-820e-eb27d40619af",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "911ca2fa-4040-4cbd-9bb6-3e67ddad8ad2"
        },
        "item": {
          "id": "31910d90-c764-4d6b-9d66-605d48ff404d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "620a9ab8-0561-45ba-a1f4-36cc198afe18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d9e620-91ef-4f8e-a614-3d54a4d96a8f",
        "cursor": {
          "ref": "78b1afc1-42ea-4cf7-b2bf-19abb1f087f5",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0158c76d-e777-409a-a014-2559abd76468"
        },
        "item": {
          "id": "84d9e620-91ef-4f8e-a614-3d54a4d96a8f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "841763d2-183c-4c87-b535-b19655e32315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835b3c98-9e0c-4ae4-9062-bfe4d597e5da",
        "cursor": {
          "ref": "922d9845-04ca-4984-a7f9-f5077ca3db8a",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4b2cb94e-ec77-41a4-b5ff-2c38c32ebd79"
        },
        "item": {
          "id": "835b3c98-9e0c-4ae4-9062-bfe4d597e5da",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "962ce8fc-c453-42cd-9732-dbdd73fa89b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b901e64-9765-4ffd-9fcb-643139ec04b1",
        "cursor": {
          "ref": "f98b16d2-72c2-483f-a702-fd41e1773788",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f6cd1c89-924d-46fa-bc38-0c2aae508885"
        },
        "item": {
          "id": "5b901e64-9765-4ffd-9fcb-643139ec04b1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fa84bbbf-7b3f-4ab4-bd13-e5ee608adecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ffb516a-a250-4729-9d7e-a71eed589d3f",
        "cursor": {
          "ref": "a69adcc2-ab0d-4d1c-937f-19b1be751229",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d47bf104-2468-4afd-89b3-e77deee112e0"
        },
        "item": {
          "id": "0ffb516a-a250-4729-9d7e-a71eed589d3f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "db99e919-afb8-42e1-8a62-e63cf4f799f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea030d3-3678-4efa-a369-4c62f53550a7",
        "cursor": {
          "ref": "15a0250a-d279-4026-874d-f76c87783732",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "990b01c1-7fb0-440e-bc07-f10126210544"
        },
        "item": {
          "id": "2ea030d3-3678-4efa-a369-4c62f53550a7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "595f4a98-ec95-4136-b09a-2b37cd52f017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa19b97a-6980-4693-ba0a-dc527cf00191",
        "cursor": {
          "ref": "b65f4715-2f8e-4fc7-a784-060d0a471698",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "df7b1832-63d5-48b3-8267-98eb3089afeb"
        },
        "item": {
          "id": "fa19b97a-6980-4693-ba0a-dc527cf00191",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "aa22cd84-c412-426a-8c72-da501a877492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350c96d4-44d8-4494-9b17-17694e966444",
        "cursor": {
          "ref": "35c0237c-76c7-46d3-82f6-2a0ae50e3ace",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d423741d-678c-404d-96ef-5bc8a5249733"
        },
        "item": {
          "id": "350c96d4-44d8-4494-9b17-17694e966444",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "50a70fcd-0fe7-417d-b695-8aec7e336313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f43a9f1-c490-4ef9-8b4e-493cb9df877e",
        "cursor": {
          "ref": "b96db5fd-48f9-422b-be6d-e50f6e6637bd",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d15539f6-587c-48bd-907b-30c380c12625"
        },
        "item": {
          "id": "4f43a9f1-c490-4ef9-8b4e-493cb9df877e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "676de35f-32dd-489d-b884-70cf18cf5e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4f1afc-2918-4d05-918d-c2964a12de26",
        "cursor": {
          "ref": "599a937c-4cd4-483a-926a-90d5e6608c6d",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6757ee88-c8cc-4890-9d86-d956595363ed"
        },
        "item": {
          "id": "ae4f1afc-2918-4d05-918d-c2964a12de26",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6486bb7f-87b9-4d72-bfe9-9d6d6efabd0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea550f5-81e4-4b81-b004-89f0d9ad4add",
        "cursor": {
          "ref": "25fc1eaf-7741-4e88-9dfa-b52e718b1d80",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "59d86a09-4980-48bc-919e-9c75914864af"
        },
        "item": {
          "id": "aea550f5-81e4-4b81-b004-89f0d9ad4add",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ce398e0e-fdad-4aa7-97cc-d8146048ae86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b525b881-8e75-4ab0-acb0-c62693a35862",
        "cursor": {
          "ref": "339eaa5d-7ae6-44f7-9282-de0c20d9b045",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c1b5cce5-ca68-40a4-876e-e45a4d7c51f5"
        },
        "item": {
          "id": "b525b881-8e75-4ab0-acb0-c62693a35862",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bcf49479-6d69-4842-87a6-67928ecdb566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b03706-6495-4e14-a310-401c7fdaceb2",
        "cursor": {
          "ref": "a96dbe09-346a-42ce-b357-9ec77d691a57",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "55dbb811-f38c-430b-bc96-6543a6f195ca"
        },
        "item": {
          "id": "a0b03706-6495-4e14-a310-401c7fdaceb2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d49509ec-95fd-4e70-96ef-5e39429ef1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d3c2b9-ad73-4b9a-bc29-91fbd367fe3a",
        "cursor": {
          "ref": "374416d8-cf63-4942-9795-6e82f935d33d",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6edecc2d-0f5e-4111-8faa-ae112164264d"
        },
        "item": {
          "id": "17d3c2b9-ad73-4b9a-bc29-91fbd367fe3a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f718b1e3-802b-4832-adab-28ebdb7847ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ce45fa-c6b3-4bca-a4fe-9730ca1a12f4",
        "cursor": {
          "ref": "96082432-cb69-4256-9ea8-47b774b228e6",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5527504e-e002-4e40-9061-bd8dc093bb42"
        },
        "item": {
          "id": "07ce45fa-c6b3-4bca-a4fe-9730ca1a12f4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3b354ec8-bdab-4f8c-9da0-8f4ae4b6b473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864bd975-58dc-4e20-b606-ee2c9e2366b8",
        "cursor": {
          "ref": "a43cd1ab-7e67-4952-ada0-d256df8013f5",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3d527b24-6bf1-485b-b7bf-9ccaac2ac220"
        },
        "item": {
          "id": "864bd975-58dc-4e20-b606-ee2c9e2366b8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "99e61b0c-8c8b-4276-bee7-353789935bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d57273d-e61c-4d36-8d6c-ddb82e513063",
        "cursor": {
          "ref": "329200b7-a51a-40dd-b56c-a813278b4aac",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3a1bccd9-910e-4668-a394-0c2a8c926054"
        },
        "item": {
          "id": "7d57273d-e61c-4d36-8d6c-ddb82e513063",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9ba8f277-7dae-416d-b759-05b2b56dd92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666c0cb7-10ae-434b-a7fc-8c838be06139",
        "cursor": {
          "ref": "1089ca69-60d9-451d-b97d-dd59733ad245",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "96dde621-911b-4c65-b9a6-bbfe39ab6dfd"
        },
        "item": {
          "id": "666c0cb7-10ae-434b-a7fc-8c838be06139",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0c2da4ee-0f6e-4f2d-8aa9-9f150f80cab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9124c6-2f99-4508-a92c-44f60c3b6a1e",
        "cursor": {
          "ref": "bfdfc333-031b-4974-90b8-88840a7de054",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4fd2e13d-85de-4e3a-af4b-fc261bac9e4e"
        },
        "item": {
          "id": "ae9124c6-2f99-4508-a92c-44f60c3b6a1e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4f5c9f5b-cf4c-4d38-860b-2fbcdf7738ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1495befc-9044-428b-a675-045752266489",
        "cursor": {
          "ref": "fc79aa7b-7461-4e1b-bdf3-bcbe75be24be",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "01ad4c87-cc87-467b-8244-fcb8307927f7"
        },
        "item": {
          "id": "1495befc-9044-428b-a675-045752266489",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a32e3291-c984-419b-9e48-f1050b3b078c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94661010-ff62-4fba-a6bd-fc1916f68842",
        "cursor": {
          "ref": "cbb8f8e6-ea8a-47bc-92fc-f3d389c17de1",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4d076cc8-2ec1-4ad4-935d-ba25132b4372"
        },
        "item": {
          "id": "94661010-ff62-4fba-a6bd-fc1916f68842",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d96a7f3b-c47b-40ab-b59a-cc5a82b2b289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a7d590-38c9-4b18-a0ba-fd51c5f360a1",
        "cursor": {
          "ref": "6ab4aea8-0948-4ce8-88f4-b557f40e8d7d",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d0e7b55b-488d-4625-b3c5-8ca63d44e222"
        },
        "item": {
          "id": "22a7d590-38c9-4b18-a0ba-fd51c5f360a1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "09dea6ba-d8d4-4727-a8fe-ce4f7237c768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9f57bc-3c47-42ec-879b-a58fc81c0477",
        "cursor": {
          "ref": "ef3a9097-18bb-4f21-9a1b-6abd5df7c5a2",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "280acaf1-2bea-4fdc-8852-67a4bbf2e328"
        },
        "item": {
          "id": "5a9f57bc-3c47-42ec-879b-a58fc81c0477",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "381e85ee-6dda-4ba3-acba-cd16624aac36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8c9b2f-8ed2-4ede-872f-24e0a04b4c49",
        "cursor": {
          "ref": "adf51e03-0671-4415-a7b0-3396eb1ee496",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "145352af-1e53-4ed1-887b-fd4d22e9aa75"
        },
        "item": {
          "id": "1e8c9b2f-8ed2-4ede-872f-24e0a04b4c49",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "caa3e639-c23c-493d-9ba9-26382374fd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb21dac1-ff05-41b0-930a-c75c36031a5e",
        "cursor": {
          "ref": "b173c0b5-b506-4484-a3b1-56a91d24fbae",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "dcf5be84-6716-4728-85c8-4ace078f01ca"
        },
        "item": {
          "id": "fb21dac1-ff05-41b0-930a-c75c36031a5e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "af527496-8398-4675-8d09-38aa4f0674fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08efa912-223c-4d81-b101-74d3f9263651",
        "cursor": {
          "ref": "38676f8c-17ef-4673-9dfa-6da0acb45403",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a9ee897c-c670-4fc3-8e51-f99a424e8be7"
        },
        "item": {
          "id": "08efa912-223c-4d81-b101-74d3f9263651",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8c32d283-d774-49d6-a158-99d3e6f7f32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d7121d-6d3a-4d4c-bd31-ca2d8197fad0",
        "cursor": {
          "ref": "88a3b51e-c066-4880-bf76-d60447c53beb",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e64b8965-7a60-4f5e-80aa-326a443035e9"
        },
        "item": {
          "id": "63d7121d-6d3a-4d4c-bd31-ca2d8197fad0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "47bb55e8-1a53-4190-ad82-11329cedbbe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3524f81d-1269-4e71-920c-4dc65089cf56",
        "cursor": {
          "ref": "5673dc76-970f-4947-ac4e-cbafa3e6a74d",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2be48cf9-2c47-4459-a219-bfc636be0ad0"
        },
        "item": {
          "id": "3524f81d-1269-4e71-920c-4dc65089cf56",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8189db20-c904-4e9d-b1ea-dd9225df8c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86738d7-30e5-4d0b-a461-20186ce49a5a",
        "cursor": {
          "ref": "24313902-2184-489f-a18f-804185e5bad7",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c4e9527f-aae1-4cc2-a078-82001f7746ee"
        },
        "item": {
          "id": "e86738d7-30e5-4d0b-a461-20186ce49a5a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d5678404-dd56-4e28-8eb4-77079df89f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9faa1d18-932f-416f-87f2-e66b055d3be3",
        "cursor": {
          "ref": "1ee37c31-fb83-40d7-9a51-bc362f1ffa89",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "40d8e8df-a6ab-46eb-8dd6-385d82963ce9"
        },
        "item": {
          "id": "9faa1d18-932f-416f-87f2-e66b055d3be3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0e4b3e09-59c3-490b-9bbe-0d344e182218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6b036d-26b3-4c2e-8b00-e4e215a3f9ea",
        "cursor": {
          "ref": "c941beff-f856-4602-8648-c4437e9328f2",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c5058c69-e590-4aac-93e7-814cc71c23ee"
        },
        "item": {
          "id": "4c6b036d-26b3-4c2e-8b00-e4e215a3f9ea",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a87048e0-6156-45b4-bcec-d05eb4f71b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03351b40-7df9-4358-a76f-924524042987",
        "cursor": {
          "ref": "bb076d93-93e3-4d85-bdc6-306a6a6d002f",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "10ae03ed-8fc8-42db-a207-2b95c912cb45"
        },
        "item": {
          "id": "03351b40-7df9-4358-a76f-924524042987",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "85e85f25-f231-41a6-8be2-941f9c1edfa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bd7bd0-a66b-445c-9409-1a8785c112dc",
        "cursor": {
          "ref": "b28247d3-7090-4bd0-b384-593219e2db88",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c485edf6-7df7-42db-bda8-2c6ca6609bb2"
        },
        "item": {
          "id": "77bd7bd0-a66b-445c-9409-1a8785c112dc",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1ec321cb-7801-40e6-a73d-41dba83ce295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40294f4-4a9b-44d6-9947-5dfb0465eba4",
        "cursor": {
          "ref": "e2b77bf0-acaf-4ab7-843a-67df10ff3520",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9047775f-015c-48cc-a615-da340028e3df"
        },
        "item": {
          "id": "c40294f4-4a9b-44d6-9947-5dfb0465eba4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f6e80a2f-f730-4677-ae44-27c1fedc9208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9d91f7-0b30-4c73-9175-7000b137e909",
        "cursor": {
          "ref": "e1210378-5c8b-4861-b3fb-7b5e933d0df3",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "650f10f3-2482-4ca0-a4c3-6009777633ba"
        },
        "item": {
          "id": "2b9d91f7-0b30-4c73-9175-7000b137e909",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8fe08e11-30f1-4999-a8f2-a51b4d997528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3ac06c-0de4-46a5-bb0d-82e0dad2ae56",
        "cursor": {
          "ref": "da9f8152-e102-4dc9-9f39-a90841f9c945",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8614ffa0-5534-4a24-9a0c-05f4de769042"
        },
        "item": {
          "id": "5f3ac06c-0de4-46a5-bb0d-82e0dad2ae56",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6cc21dda-b1ce-4734-8eba-59e9979ee440",
          "status": "OK",
          "code": 200,
          "responseTime": 29,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "ef9b67e3-4f62-416b-a8e3-212c3b8ce3d5",
        "cursor": {
          "ref": "fea1f43c-c422-4f9a-8733-a5338043f42d",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "12f6ce8c-18bb-4fbc-9cb5-4ab22ec1e363"
        },
        "item": {
          "id": "ef9b67e3-4f62-416b-a8e3-212c3b8ce3d5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1e18d916-5bff-4bf9-896a-a2ef5fa0084e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481b5452-f44f-46a0-ad79-f75088673f29",
        "cursor": {
          "ref": "c9df817e-842b-4688-9111-ea6ca5894d33",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3e1bbf0f-44bd-468b-82f6-775230c7402e"
        },
        "item": {
          "id": "481b5452-f44f-46a0-ad79-f75088673f29",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b558f4bf-b120-4bcd-b6ab-269c592ff618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35979b23-57de-43ba-8610-cb4fed66f4de",
        "cursor": {
          "ref": "48fb6ff3-7ad6-4c3d-850a-5314e6cb1669",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8d96eaf2-4826-47e5-bd8f-3fa76eb370f3"
        },
        "item": {
          "id": "35979b23-57de-43ba-8610-cb4fed66f4de",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7417e833-40dc-4159-8714-ddef15a12a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0d086c-d15b-423e-86c0-f96aa6065d86",
        "cursor": {
          "ref": "b35540c7-5384-45e3-b149-9904e63c9cd4",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5fde4cd4-d32b-47fb-a3ad-bd7d8650b64c"
        },
        "item": {
          "id": "ab0d086c-d15b-423e-86c0-f96aa6065d86",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "240f1352-f02d-478e-8dc6-96198c92be3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687792b3-1ca7-46e4-a1bf-e49089854e49",
        "cursor": {
          "ref": "b146eb07-9cc1-4345-b6ff-41fc8a5f5803",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a8f0195b-9404-413a-93f1-6fc102a4c94f"
        },
        "item": {
          "id": "687792b3-1ca7-46e4-a1bf-e49089854e49",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2fa87503-83ee-41f6-9d85-de63c80256ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377ae383-1509-45e6-b02e-c20cd385b36b",
        "cursor": {
          "ref": "676c9539-1e14-4020-8e30-98146fc8b52b",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "dfebbf19-73eb-4b72-8224-81e33cdfa18f"
        },
        "item": {
          "id": "377ae383-1509-45e6-b02e-c20cd385b36b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "69680b90-67f0-49d8-8060-d2737fd5407d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29200b74-f4b6-4900-8b0e-b8ef56a21b70",
        "cursor": {
          "ref": "a8ae34b2-dac5-4b3a-9d0e-d84738636041",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b4481479-b9a7-4497-813e-a45692b96d39"
        },
        "item": {
          "id": "29200b74-f4b6-4900-8b0e-b8ef56a21b70",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a6fc8407-174e-4ba7-b4c6-b976b2d7673f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7cdca1-65e9-470f-a246-bd5920f38831",
        "cursor": {
          "ref": "83491397-d4f9-4733-8e9e-b7682e2db51e",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "882926d2-b6af-442d-bfb5-2102b6160d61"
        },
        "item": {
          "id": "9a7cdca1-65e9-470f-a246-bd5920f38831",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "579392f5-372b-4205-ae59-65295895b31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d10a824-cae2-41d2-8e8f-d8a37e62c30f",
        "cursor": {
          "ref": "b7c63e8e-83a0-42f1-bb9c-3ec56c8dea24",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ee683fb3-3efa-4483-9e68-4644e5079791"
        },
        "item": {
          "id": "2d10a824-cae2-41d2-8e8f-d8a37e62c30f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0592aeff-ab60-40e4-8ad8-a442bd320ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54becf3f-3642-4504-8e9b-8b7917486184",
        "cursor": {
          "ref": "a1c77874-761b-48ac-90c1-e719e4453333",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b2b8f7b3-ee99-4fea-9bb1-61ff4c741ac4"
        },
        "item": {
          "id": "54becf3f-3642-4504-8e9b-8b7917486184",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3a5114ff-62e7-4944-a5f2-5925298d74ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbc0e60-f07b-43db-a351-b11f6df6bc6a",
        "cursor": {
          "ref": "3c296744-bef2-45c3-ac5d-56a132ca3bc4",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "66ab772e-b521-488c-bf2e-72910adc8677"
        },
        "item": {
          "id": "adbc0e60-f07b-43db-a351-b11f6df6bc6a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9fe043d2-e84e-4a0e-aafb-e5400fbf8076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1202db1-0c72-4704-ac56-882957e4ece8",
        "cursor": {
          "ref": "f55d7829-0bae-441a-90dc-dfcfeec62fff",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "df38e65b-21ee-401c-9e7d-17c60fd8992e"
        },
        "item": {
          "id": "f1202db1-0c72-4704-ac56-882957e4ece8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "67bded5f-32d6-4b1c-b73b-4a66de4e07df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7233b086-a849-4569-a1d6-e4887bd41aec",
        "cursor": {
          "ref": "8be192ba-2c3f-4482-9397-5e072a0ce549",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "68a593e5-a687-460e-9356-f993cf46c3cd"
        },
        "item": {
          "id": "7233b086-a849-4569-a1d6-e4887bd41aec",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5c6e12a9-3133-45da-9f10-d7fdce61217c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6829528d-5814-4a0c-b72f-a66b4a560471",
        "cursor": {
          "ref": "4aa32af0-4ddc-4771-a5d9-6cb718ed6abf",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7c13d1bf-22c0-44f8-900a-606f170f455d"
        },
        "item": {
          "id": "6829528d-5814-4a0c-b72f-a66b4a560471",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "90aee815-edf9-4d8f-a211-d5207bff8d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5b7a75-486c-468a-9f3b-82f209929d9b",
        "cursor": {
          "ref": "6865f259-ea11-4eb9-8683-1ba5831285af",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e14c6deb-d996-4c69-a7cd-151b71bd2bc3"
        },
        "item": {
          "id": "0d5b7a75-486c-468a-9f3b-82f209929d9b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1dfcc59b-e7fc-43bc-9396-c75f17a94dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982dd8bd-6bca-4a2e-886c-4fe4cfe62e66",
        "cursor": {
          "ref": "e40958b7-8cd9-4201-9d2c-7e138ccc54c7",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "eedc39f0-39c7-4745-933f-7714f040f698"
        },
        "item": {
          "id": "982dd8bd-6bca-4a2e-886c-4fe4cfe62e66",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "96cf1c0c-95ae-485a-829b-925c2b3d8143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36f2feb-5dd0-411d-8503-df4478dd5bac",
        "cursor": {
          "ref": "06627597-4fcc-47d0-96aa-e6d22cdc1f9b",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "842a27e3-f655-42be-a10e-771b791227fe"
        },
        "item": {
          "id": "e36f2feb-5dd0-411d-8503-df4478dd5bac",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "600c8079-32b9-4f1e-b6f6-e83f0d71335a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed614c06-fe5b-4ba5-b58d-04706f7dcb2b",
        "cursor": {
          "ref": "875de1bb-2b09-4560-81e8-2291b4cbe2b4",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "50587fa0-0616-4568-9076-f0a8eaf48719"
        },
        "item": {
          "id": "ed614c06-fe5b-4ba5-b58d-04706f7dcb2b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f174464c-3c2a-4bae-9f00-9d00ba27a66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede6b8f6-374a-4c60-b755-c4970a730b69",
        "cursor": {
          "ref": "5e80624d-4eaa-496c-a8bf-96d07ebf0587",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0a1e63c4-f42f-4b4a-bf38-63efb43f0dce"
        },
        "item": {
          "id": "ede6b8f6-374a-4c60-b755-c4970a730b69",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "aa12df03-d206-4a35-8145-cbea2ed050e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f585a7-c787-4479-a439-117ec3e6317f",
        "cursor": {
          "ref": "248528f5-e6a5-4eed-807c-7533db0e8dc5",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "49096aff-a6a2-4864-8f96-5d940d9b232b"
        },
        "item": {
          "id": "76f585a7-c787-4479-a439-117ec3e6317f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3e497fe5-0e3e-4b9d-85b4-2e3b6cc7c895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baef0d20-bf6d-4ae6-ad45-06aa02570b38",
        "cursor": {
          "ref": "a3be96e8-a13e-4113-8b28-397e1dcefa59",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3818615a-e55b-447a-a567-93322570cdd4"
        },
        "item": {
          "id": "baef0d20-bf6d-4ae6-ad45-06aa02570b38",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "92cda0bc-7a50-4d22-bb4f-ea9070e2696b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f036d16-2ea9-4190-aa5d-170a3d49c830",
        "cursor": {
          "ref": "88dc2097-0325-42c8-97a8-fb1395ec6f40",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "579a5987-e4ca-4105-9932-1acaa7257da2"
        },
        "item": {
          "id": "2f036d16-2ea9-4190-aa5d-170a3d49c830",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b5bace99-82b0-4d14-88bb-9600f2117f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e78dac-ee71-414c-b66b-431c160f0c69",
        "cursor": {
          "ref": "94dc96b0-6782-48b1-9a9f-35577fd7ca60",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f11f6d5b-d3a3-431a-ac28-cf45f978e25d"
        },
        "item": {
          "id": "14e78dac-ee71-414c-b66b-431c160f0c69",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ad14eeb5-b843-4d48-939d-ae3b7cd7a07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54d4d67-c6d0-4fc1-83db-6c2878990c00",
        "cursor": {
          "ref": "19d3e1d2-3434-423e-ac1c-9db7a8374837",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7e8c4c9a-2fe7-41ac-a5ed-b984f241e2df"
        },
        "item": {
          "id": "e54d4d67-c6d0-4fc1-83db-6c2878990c00",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "81df480d-14fc-4f82-b4c1-33c39c75f19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16491b9b-2677-46e5-a404-dc88c7daa366",
        "cursor": {
          "ref": "14206d4f-cdca-4eae-9994-39b80bfbe951",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ce18ed0b-ef97-4499-af6e-f5f0545e67d0"
        },
        "item": {
          "id": "16491b9b-2677-46e5-a404-dc88c7daa366",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4ad63286-1db8-404e-9dc7-8f11ff31910e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d9253f-6d37-4031-8cb3-85c1af006b15",
        "cursor": {
          "ref": "557b8670-26b2-499c-874b-bf744deb24f8",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "fa6e4b17-d9bb-4b1c-b711-67362f08d407"
        },
        "item": {
          "id": "b2d9253f-6d37-4031-8cb3-85c1af006b15",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "617b28ef-0608-4f28-b0b5-86158ca213c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a78f680-936f-4f5e-8e21-6059c07f9ac7",
        "cursor": {
          "ref": "79e48a77-7306-4fb9-b953-8e19be88fcf5",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "05ba6da3-cc5b-4f96-88e1-7604db5e3597"
        },
        "item": {
          "id": "1a78f680-936f-4f5e-8e21-6059c07f9ac7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "df28e742-59c4-4f9c-85b4-db3ec6b113a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4aacfe8-675b-415b-8282-528ce623b3d1",
        "cursor": {
          "ref": "e59f729c-3d6d-4a82-a06d-540f6f494da6",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6093d295-1c25-4e91-a1b0-570f37aeca03"
        },
        "item": {
          "id": "a4aacfe8-675b-415b-8282-528ce623b3d1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "be5f7034-a6b8-4bbc-8e81-cc4dee93bc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc47fec2-f5eb-4ccd-87a0-f380a5f1d54a",
        "cursor": {
          "ref": "6fbb5ef8-3e2e-4c42-a18d-d1321780a2c6",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ee1585bd-13a2-498b-9283-f047bb027820"
        },
        "item": {
          "id": "cc47fec2-f5eb-4ccd-87a0-f380a5f1d54a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "43d4a1ca-82b8-4613-a47f-89d02b6d68d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11f9563-1ed9-4f6e-922c-114058ccfdb0",
        "cursor": {
          "ref": "d02eaaa6-7a33-4c4d-a3d1-b12ce03898ca",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "af7ef995-095d-4851-a2e2-8ecd5214547a"
        },
        "item": {
          "id": "f11f9563-1ed9-4f6e-922c-114058ccfdb0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9078e992-cfcf-4e0a-a9ab-cfe65410bcf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca906ea5-e057-4a38-9507-3468305ef880",
        "cursor": {
          "ref": "d1330398-a6c5-4eed-bd49-f1cca97c29f0",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "64adab53-e1a2-44ec-9718-66cb1a21f5f0"
        },
        "item": {
          "id": "ca906ea5-e057-4a38-9507-3468305ef880",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2c534d94-6023-46ea-8ceb-118af1fdf396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c6c16e-ed9e-40fa-be30-a818e02bf977",
        "cursor": {
          "ref": "8b473fc2-97b8-4cfe-973f-392230af5320",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "09f6468a-6511-4fcd-90b6-763b29ea0c7c"
        },
        "item": {
          "id": "e5c6c16e-ed9e-40fa-be30-a818e02bf977",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c7555f35-b8a1-4416-89f3-c5a9a966091b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2347cc0d-a60e-4cf2-a8d6-a448bed90f05",
        "cursor": {
          "ref": "2dbb5fe2-50ce-4c2c-b0ea-bcf977c75900",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f11bf829-eb73-4279-9f92-7d67d683de2a"
        },
        "item": {
          "id": "2347cc0d-a60e-4cf2-a8d6-a448bed90f05",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "39d6f3a8-4bc7-43ff-abe6-82b1e16523a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e98dac-61d1-4d4e-b0ea-ccec2c9eabfb",
        "cursor": {
          "ref": "4fc610dd-c1ea-42d9-b4b1-1b30942a73d0",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "16b5df9b-2271-4a38-a3a1-4a7a6e8c86d0"
        },
        "item": {
          "id": "24e98dac-61d1-4d4e-b0ea-ccec2c9eabfb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e7f9fa62-6bd4-4dea-9abf-b91d641edc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011379de-f55e-4c42-81f1-f5d2104d694d",
        "cursor": {
          "ref": "45373a9d-50ca-4656-9c3b-fce77fff321a",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6f2eaabd-4849-4fcc-8e8f-ce29837bab99"
        },
        "item": {
          "id": "011379de-f55e-4c42-81f1-f5d2104d694d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2aaf134f-94d5-4b44-9bb8-c99d5c948a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e37ab03-8230-4082-83ec-ba546ae0e1f7",
        "cursor": {
          "ref": "dd8f8430-6452-4b23-83c7-89c456ae4910",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "79eeb97e-9a97-46bd-830c-002f528ca05e"
        },
        "item": {
          "id": "7e37ab03-8230-4082-83ec-ba546ae0e1f7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3d8598f0-80ab-4946-84df-c9f437c8f547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0facfabd-b83d-482f-b096-7ce3385a66e1",
        "cursor": {
          "ref": "01b13709-d9bc-4fd1-a0e8-2e2ccf0d6a40",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "44f32b55-52e3-43b2-a66e-a3efc909f5c3"
        },
        "item": {
          "id": "0facfabd-b83d-482f-b096-7ce3385a66e1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f96d9a18-f730-4bc3-a13f-038195bd09fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e97de4c-32d7-45dc-bdd9-6eb3d073ae2e",
        "cursor": {
          "ref": "64e480b2-a30a-48de-89d8-cc18bbc38fd6",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "4fba65e6-906a-4494-98f0-874de01bacde"
        },
        "item": {
          "id": "3e97de4c-32d7-45dc-bdd9-6eb3d073ae2e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "473131a5-915f-4da2-8236-7abf5d14cfa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26173b2-91d8-41b9-a81d-a117acb2c997",
        "cursor": {
          "ref": "6426cbf1-c3b8-48ef-8b08-f91cf187f1cb",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f7d51236-9bad-4391-a13b-98d494723a8f"
        },
        "item": {
          "id": "f26173b2-91d8-41b9-a81d-a117acb2c997",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d901a16b-8c84-4fcc-9b96-6613070c9080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cef51f-b643-443d-bfb4-a49ae52c9890",
        "cursor": {
          "ref": "003ef87c-d19e-4ad9-9495-056a332dc24a",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "f3400667-f825-4890-8411-e7d9d196bc4f"
        },
        "item": {
          "id": "e4cef51f-b643-443d-bfb4-a49ae52c9890",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a163cf6a-5856-40a7-8818-2bf2aaba18d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60f20ac-09b2-4d83-bcc3-e14ffb4601f5",
        "cursor": {
          "ref": "d75901d5-6e22-44e9-a369-f4a668642f62",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "74c5be4a-25e9-41f0-a053-072de3784af7"
        },
        "item": {
          "id": "f60f20ac-09b2-4d83-bcc3-e14ffb4601f5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d5fdca12-cc7f-4b1a-9b4a-4cbb7880832b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306c873e-6773-4a51-8102-10630769a7ee",
        "cursor": {
          "ref": "5582c362-7e26-477a-88e0-373e49bd5f67",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "dc782b7a-ba60-4039-a012-ecc0921a745a"
        },
        "item": {
          "id": "306c873e-6773-4a51-8102-10630769a7ee",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "867e8159-ff4c-4f31-b668-f8f389b6536d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f358cf07-a322-47cf-bb91-7831ef7883ab",
        "cursor": {
          "ref": "464bbc97-ed9b-44c6-993d-f46a88aeeae2",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ee3e7343-dc83-4189-95ca-17e1902b2fea"
        },
        "item": {
          "id": "f358cf07-a322-47cf-bb91-7831ef7883ab",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "72973ebd-aeea-4151-ada6-a8a24daa3b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568af6b0-6805-4bc7-903f-76200333007b",
        "cursor": {
          "ref": "ad34203a-1157-44b0-bbd5-a4e7feb54ee3",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "42cb269e-b67a-47ca-ae80-11ba737b59b6"
        },
        "item": {
          "id": "568af6b0-6805-4bc7-903f-76200333007b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "42caa994-2ca9-4bd0-9fcf-802ba76326c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fdd2a5-3737-40af-9c43-03100601befa",
        "cursor": {
          "ref": "e0980fb2-a668-46ee-bbb0-a078cddbfbbe",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "cdc824b3-13eb-4a54-82d5-cd981362aaf5"
        },
        "item": {
          "id": "32fdd2a5-3737-40af-9c43-03100601befa",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d174b393-49d5-4650-98d7-d8c70088b959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb5d8a0-ceef-45bd-aafb-f0302182d070",
        "cursor": {
          "ref": "a675121b-3846-4466-a0f6-54c7ccf384e4",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "749d184f-4a46-40dd-8d8e-93d03524ab7e"
        },
        "item": {
          "id": "bfb5d8a0-ceef-45bd-aafb-f0302182d070",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4d8cc7cc-d6b2-4f7e-8471-61a504317444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf1d64e-8a26-4cf5-84fa-08348018058d",
        "cursor": {
          "ref": "ab0e14ec-99a4-4f9e-81b1-c12c2727dd10",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9bea2d77-cae2-4c63-957c-6174bc0235a6"
        },
        "item": {
          "id": "dbf1d64e-8a26-4cf5-84fa-08348018058d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ec281a18-33d1-4d9b-b439-249a28e133b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d6d05b-5388-4840-a43e-8e5bb715a880",
        "cursor": {
          "ref": "b920349a-87a7-4754-a335-d050d0f58ea7",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d0f3cf77-6d0f-4f06-a331-eeb24b7dbc59"
        },
        "item": {
          "id": "31d6d05b-5388-4840-a43e-8e5bb715a880",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7a57b78a-92d3-44b9-8593-fdb49e2bf3a7",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "794413e8-d2ab-4688-9a94-32b785648f30",
        "cursor": {
          "ref": "3f049140-4b82-4356-9e6b-557ff72745f6",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "23b5ad5b-28f4-477c-ac4a-077023b67929"
        },
        "item": {
          "id": "794413e8-d2ab-4688-9a94-32b785648f30",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9d30102b-0787-47da-9a53-aa6fa6bd78b0",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad56616-bcc5-454e-a74a-8373dba2f03b",
        "cursor": {
          "ref": "c47e748f-707b-4037-9c7d-40aaebbc543f",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "01ffeb18-a82c-4e43-a3de-862bc3a8108d"
        },
        "item": {
          "id": "5ad56616-bcc5-454e-a74a-8373dba2f03b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "97f2b782-1d2e-4c85-a672-6d84336c4380",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cf17c7-9f79-458e-a930-fc64c4c677b4",
        "cursor": {
          "ref": "aa993d1e-270e-4aae-890a-83316ead1a8e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "20858d76-e62c-49ea-8e6d-12f38514edbb"
        },
        "item": {
          "id": "60cf17c7-9f79-458e-a930-fc64c4c677b4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "02eec2fd-7eaf-48c9-be65-3ee5d19ea1d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cf17c7-9f79-458e-a930-fc64c4c677b4",
        "cursor": {
          "ref": "aa993d1e-270e-4aae-890a-83316ead1a8e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "20858d76-e62c-49ea-8e6d-12f38514edbb"
        },
        "item": {
          "id": "60cf17c7-9f79-458e-a930-fc64c4c677b4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "02eec2fd-7eaf-48c9-be65-3ee5d19ea1d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864a188a-5331-4334-966d-6362195e03b3",
        "cursor": {
          "ref": "80a8445f-69dc-4815-935c-23a1a631f17d",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "5fca4cad-cf58-49cb-952b-d4b4b4f34f05"
        },
        "item": {
          "id": "864a188a-5331-4334-966d-6362195e03b3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c6976c54-ae07-4391-a39b-b83a2ae3bd4b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d71c62-4eef-4964-9bde-039bcbb4098b",
        "cursor": {
          "ref": "8cf09c2e-6e1c-4ea3-b834-03cc9cca588d",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "bc1ec471-5767-4cdb-9c5c-708b76173b75"
        },
        "item": {
          "id": "e6d71c62-4eef-4964-9bde-039bcbb4098b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "50e206da-491d-49e7-9969-2dd550427d7b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}