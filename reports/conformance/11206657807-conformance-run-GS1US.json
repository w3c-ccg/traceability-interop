{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3ff6bf19-1167-4757-9a5f-10fdea49816c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "25357665-e9cd-4369-b232-89fe3f53d51c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eda51f5a-2ad8-40d9-b34c-1c68fadd8553",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "28723332-7a6c-4f88-9c71-c99c38b07e77"
                }
              }
            ]
          },
          {
            "id": "2f7700cd-5341-4ae6-b008-bdf237456b07",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "33f2c3cb-7a50-456a-bba9-388ff57c40d0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eac6028b-2e9c-4cdc-b45d-7eda0fb1b6f3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5782517e-33c4-42eb-8d96-c5ebd133fa89",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "553af7df-c378-44aa-8a3e-57d7b1500b41",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ede1fa92-6ad2-4cf0-a44a-1eb86b738a41",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "27dc8405-ffd5-490f-8bd5-2d2986c10fbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7fab290-3327-412b-9c46-573490df7872"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9ee9ca55-15f7-419e-a9b7-9c9270cee1f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4d63996f-9ee1-4723-9878-7cc561019b96"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1de44801-2d85-4915-95c3-a14208026ddb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "064d24f5-c9f4-4bc0-90aa-82cb73fd05b2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "017fb498-f986-4add-ac41-4f3b3069f4c7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6d353fe2-6514-48a5-840d-978437998300"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e461145-5a67-43c6-86f3-bce3d25bccb6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26ad489a-e6f3-4937-a822-2a633ed24614"
            }
          }
        ]
      },
      {
        "id": "f122036a-74d8-4687-a83f-31b2f9417f6e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c98f4ba3-8f62-422a-be7d-d5b8661a0b25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f613e0ae-0431-4d2c-9d80-be1ead2ef24e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "78b37f69-f01f-4843-b955-70393a7d791b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c5482f-473d-4f0f-b058-25f1a604e33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62e28cdc-2ea3-41e4-a299-d0aaa02a68df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0f3417-80dc-4aed-bd7c-22f31144e952",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261db976-7888-4fc5-a7ba-80d2c72868d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a24e2a8-a6d7-4d35-a5ed-70ee5005bdd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81c99b7-90e5-4583-aab8-46e8ff9dc1e4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6252cf2e-4f0b-4fe3-85b7-a0a6f9914f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd6ccde3-57be-4162-9746-1270e451b8fc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c1be9fc3-a8ca-4f6f-9f02-1a3867f09f45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5bfb993-eb05-44bd-ad1b-5d7970fa1ace",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d689a77-b493-48ed-9578-cf06bdf70b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "046723ba-e8c2-4401-a78f-347b21063163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40408774-c20c-4c60-8d76-5e9725a2ea4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e6e6e2-7f99-418b-b388-0f3a9a851d82"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "12ce4033-bdeb-4f6d-925f-c18c9413ff0e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "11afbe81-57fc-4c6e-8e8e-a7a6e240d3e7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6daa34e0-6136-49bb-bbf1-4d9c50032a68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ef134292-a6f8-453c-9b17-6831c0c76dbd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14a5dd4f-df1d-40bb-a011-fa636a4fdea4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ff9b81a5-30d1-4c7e-9e03-c67e96956219"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0bdfa679-9b34-4e64-9e0a-60dd211f960c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6bc80cf9-d11e-49f5-a29d-74e92ed6b302"
            }
          }
        ]
      },
      {
        "id": "1e06d1fe-2a06-4fb1-8b06-d7f4f59679e0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "53a97441-f6d5-4f25-b42a-28ab0ba94724",
            "name": "Negative Testing",
            "item": [
              {
                "id": "946bde61-ab64-4d80-bafd-5f51d5573487",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a0d8b763-5896-4b8e-94b9-951fa912f175",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5378d7-a01a-4c2b-8bca-994e80c96b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab7631e8-7a36-4c00-8f91-4ddfa851396b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873e5a74-3948-4323-affd-a1e3d23a3fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55e7fadb-4926-4d11-8207-9c33973ad314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb9fc02-f6fb-4c89-8802-3a25e6fa50ee",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f183c7f8-99bc-4a06-b9d7-b83e3ed4832b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cfd4170-7bc4-4684-a2bc-86bda0b6e819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d35c8f-2eb6-4fb6-be7d-536a45fce7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "989f4cab-1715-4614-a49c-8c5c8973d9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce68f95-48a3-4c6e-9498-f3913ea9d08a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2ffe27-ff95-4c54-9165-a4eb499ca4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8879134-6011-4a97-b3b2-5055603a831a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d911899a-86d3-4057-bb0c-95dfbcc4f366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9432642-1472-4631-ad14-505e197d2b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a45d6c-38de-4320-944a-b905bace1ad0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9054273a-a64e-4eed-8b1e-f3126473ea10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17ef8b5-1296-4405-8379-13dbeb22b79e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf67e57-1357-428a-af7a-74ec09aa24be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7706766-87ab-450d-a01c-9efa8f3eedcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd60b5c-d655-4ccd-9468-93168e5fd2a2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a87d99-eb33-4716-b4f9-b4d5c0ee6098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154050da-67cb-41c9-9114-1f1723a3dc2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ba52e7-3461-4d3e-970f-8bfe225a1dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89cea9eb-2f94-44b9-8d4b-84aec6357121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2876e98-3654-4c8c-9b93-80359eba7917",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf626f6-5f44-41c1-aedf-9d906745979e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149e70be-4dd8-437a-966c-296f9fe6aa5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7dbb7c-7102-4e95-8a73-f7a4e594673a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "228e7c78-c9cd-4208-8fb1-461c9eecac79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8fe1ef-d853-42c9-8a55-0117f680f7a0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68dea6a7-5358-4fdd-82a4-c38913071302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26e4981-9827-4e97-8cff-60b4bf7d4803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f02ea7b-c924-48fb-aa00-2b6a29e8b663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5705526-b76d-424e-9c9c-a1e6801d8738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388e7666-60c6-4b62-a2eb-664b1f6e6105",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74849e8-ffbd-43db-89cc-a8674110fa09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5bf0c81-2183-41fa-b7fd-c3a57c3495b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c198a0-4ec0-490b-8d76-e8a0d67ff61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40400730-e479-4f50-8d51-78f5bbe6864b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7552ae-497e-4ea6-9c9d-f236ac5fc592",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad24620c-908d-4550-a597-fa72a50147db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4888580-5839-4401-84ae-ee375ae2840e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff6b91e-3fc0-43e8-bdf6-e13aea5a3ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac4dfc1c-f3b4-4ab0-a383-84cf32c1c65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42ec021-b65d-4841-957b-e8c87b62b239",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6fb490-2787-4327-a173-5e279463fca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab37c86e-b42c-4e22-a305-08fc66b4b6cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b379802-7d34-420b-a488-5392265446df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50ad6b92-0f99-4b5b-bb1b-a3f34898579d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b3d4a4-1bea-4f91-8a42-4ea584261cf4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b62e0b-912e-4309-8e4d-8bc23fe01165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6731c3e8-e927-47ee-8553-69f8a4e47ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16797a56-dad7-4d67-8745-470acc4b8cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "116ea264-560e-41f7-a289-4095db46089b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8cb0c4-d5bb-4698-b424-3e9bf0ce07c2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e21f81-4c1a-43e6-87e3-70f9443074ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5167a362-2baf-4b3d-80e1-35ee7b4ad794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce3f4c4-db7a-49a5-bfdc-df7eefc58aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "911fde3b-1a6a-41c0-bb6b-caf3ab1045ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2fb5e6-02e8-41d0-8e0d-5b0eec40d20b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c960d237-c3e0-4539-bc21-f4cec4bc90a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abdf8f4e-b757-4ecf-af3b-02ac3f6935d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909295e9-81ab-4ff9-ba33-d4a8b6df7d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf587644-dd61-4865-84bf-79710affdbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b31a41a-e8db-4d2f-8676-0f699c95f2f1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaac5a52-1f63-4e85-884a-3a9f84f7ef71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d8a3cf-c3ab-4ba7-8692-220f411db4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a47bc98-d069-4448-b2f2-b418f42edd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62769225-4972-4f0b-8406-8ea8d504f01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c45454-ef90-4757-97be-bdafe42cd45e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c48f71-d382-4cb8-9375-b0d7db69d29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4cdac32-e702-4e06-8606-7cb52548b2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33efeb0-b0df-42b7-bd59-9c25be6735db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b482fc2b-69a4-45a2-93f6-08265e801833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5212556-391e-4d79-a428-2b8f14f4fc6b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c6bbc2-da5b-4c86-af72-7cae54162778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b0cb78c-f185-4e9c-a788-f1298fbf585e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1b8adb-a456-439b-a247-7706eec047d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61d95559-1c17-4adf-a3ea-be6faf8cd054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8235b6-fb14-4ee2-aad1-57d1f32f701f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df8bbf3-a1ed-4416-a5ba-cd65b1637044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2deb6fa8-d280-48d8-8329-227ded909dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd681545-5516-40db-aa85-3326952e8c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4faa08ef-14f6-4237-b460-54a395b5c874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d7303b-3c65-44c7-976c-942eb69f4277",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2abe0e2-8e6d-4f89-8881-7d460049bf7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b3bace7-db06-43a0-9f1a-0d47b19d8f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19aba833-032b-4695-a31a-eba62aa62b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b486aaa9-db85-4539-9564-ba088331f503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1099684-f840-47d5-9058-020b6b42e192",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ab6187-1866-4bb8-af87-636ea8658571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ef16b3-9bce-4d46-a656-708438c1026f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e53a9c-5cc1-4da8-8794-99050539f409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "306a81a7-b991-4251-8dbc-4d5bec0b21f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b8df69-9deb-4f65-abf9-5ef6d0802176",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fefd58-7f1b-4a02-91a6-1666d3a0eda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88f8378-928e-491a-9506-d53b9e78133d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d1e4d0-2956-430c-8394-d0f0e4f59736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb56b499-2396-421f-9168-ab721718b15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf2514d-cbfc-41f3-acf7-5a2f9f4179c2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458d1c15-f45e-400c-a29f-b0e9a64d4257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6036fc4-ca3f-4822-9b62-7394b5f2a7c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b31acbc-96c2-4e86-a21f-4d8c97e974b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c536b662-b40b-4a90-b94d-8b51a5183ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9b0f01-b39a-425c-8ae3-983fafc3bf1c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8345e0f9-65f3-4f27-b9b1-76641936ceaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea974ba5-3187-45f9-af11-0c8d5ace0525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4e5519-3292-403b-b673-0f9756476439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75e15f23-1b02-4205-98f6-959ba6ef1000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc968c33-1469-4bed-899b-f05372f9c9b2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bec423-00a1-4de1-9749-9dec8bf88539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e97be7-018e-4e8a-b8e6-4d351a78f300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e907355-b0ac-4883-bb0c-d6830fdbfd3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1eaecca9-463e-4184-8f83-3fcfdfde991a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae74bf7a-436a-4cf3-9e3e-3fa8b7991743",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7577cf0b-7fee-4b06-986b-521dcdcacbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9cbde91-677a-423b-9fd4-0df2fd14a336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469d622f-77f7-47d1-aa1b-03af08d58fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c53198f-8f54-40e9-8fc7-0e42fcf12263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0553e2c3-28f6-48e6-b550-9ebb00143148",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34647a3e-12ab-44c9-8437-c3f52caf3906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac62c3e-7ff8-4d4b-b350-07802d89e53f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311177ae-5add-48ad-965e-cc71d97be804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "495c8476-cece-4a31-986c-ecd201434c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c9a6c7-c195-4dfd-8ef6-e8b102b68396",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49d3d1c-b826-43e5-a211-46528594fd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee287f9e-1798-4d7e-9561-7186e576cc5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f078dc-eca8-41ea-8dc3-93a7c8dccaca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "81c55878-a17a-4592-93b3-c1ddf9f672e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41bcba1-b07f-498b-8cf5-3498224f1250",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7464c046-f351-4282-a8e8-846c277d26c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa24174-8c12-48ae-baaa-f7a1fb9b2970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a6e50f-f78f-400c-80f4-8f1be82312cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1388f97-742a-454f-a23b-497dbc6cbd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a46a7dc-f1a5-445c-89f3-12a7290c372f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2a96fb-b015-45bf-aadc-248e4092818c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5c7ab8-2d17-4ff6-af2a-e116e283970d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c9b67e-2c62-4eac-84c8-43a50ef4aca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b3b8906-deb3-42c2-8981-4d5bfb93b92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db0aa40-783d-49f7-af16-d1645a5d1210",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d3927f-f404-49cc-93c7-72796cb059fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2cc6bbd-0eb9-443a-881e-f060292964fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4618b8-b1e1-4286-8f2f-a5ea3f8ebe99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e588856-e8f8-45a6-a6b2-8975070d8636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57feaea-45d1-401c-8b96-3e71e7652bd7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ed58d2-2460-44d7-83b7-4371196ea04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a67c2a2e-af34-42af-9024-a5d7c6acc3d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f96a4a-8bc8-4381-a1f6-20d5dc9b18ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "513c4e6e-33e8-4bbe-beb5-4d4e85aa4540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ede23b8-647e-4805-b5fa-8f96a83448b0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048fa0ba-201c-4a95-9cc1-da21e0663537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f03e3c1-9c65-4348-b64c-0ea1c0d2f737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15561bc-25e0-4095-87a6-582e577ed0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "48fe7ac8-a811-4d99-9146-7b00bb40728b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7d4e69-7ce1-45d1-a155-5f451bd9ab1d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4f542c-5600-461f-a376-643988e4b025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c348d98-1589-4b4f-9f5b-d6af4c241b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2637a2b-888a-4073-a3ec-dec43c15e134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "939a7995-9e72-41ca-8424-ba167281be3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d801d5d-f89d-4926-86b9-555c46fa282d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9364178-f025-427f-a256-51dee36206e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bebe2d1-f90a-4dde-ae19-44340eb4bf4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7f547f-6fe2-4ff2-8675-8f50296c7697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7bf0596-34ae-4273-8a44-9b0bbc8841d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43f6fa1-ed42-4ca7-9a4b-6dcde965c42a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551f2565-19a5-4b85-acd9-570aabd449be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03bb26b1-79ee-4d46-b730-2f589d9d3a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69cec503-60ca-4544-9acf-79b8a75a41e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc74cfa-390f-44a3-b3c3-2a8eea6f6503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ce91dd-1838-495c-bc45-958ddb1ac7c2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfd3697-7142-4015-b302-3cea87197af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22cb6196-6fd1-4c64-9f9c-76dc043f7f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439f62aa-ea85-4109-941b-9689154bb166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c0961086-9756-4620-bf00-e32ae43b529e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f109c3-d093-49d8-a4a5-fdd9a1b31cad",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6538ada5-091e-43cd-9420-1aba6e625924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52758330-976f-435e-976c-13e93b49d7c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af900049-cc7f-43cf-93cc-d7a7d2f5b3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5db778ca-bfb4-4c9f-9c88-b5f506a05d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cfb72b-233a-43a3-9a72-8a2d3299ca1f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "207c231d-ea1d-477b-88f4-a05697fb9299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa30175-9882-4263-a905-f78b120995a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2706f5d5-9303-444d-85fe-7dbb5b011b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0585951-500f-4fc0-bc14-b2728ebd7f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbbeffd-136c-497f-a2e2-ff3102adb974",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230453fc-e796-433b-8640-252f0175f513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2996badd-2fbd-4fdf-a6e4-8447d5b0ef7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f479f3-6321-4519-bfad-a59556acd90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "864a45ce-fc25-4eb1-b967-7c29ab820c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c31619-138c-4f1b-9dce-3033bf137d4f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488593e8-a1bd-4dc9-b583-43d9ad859819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ce6dc2-cf0c-40c5-a4f6-beaa99bb19be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093e1414-90f7-4937-946a-054d10fbc8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7382b715-a5b7-46da-935e-a5bd7871045c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb43b68-6ec7-4535-9ea8-c6549779dada",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261e33a6-6ebc-42a2-a98a-e991e618a8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3eca9f9-f1ea-4657-a701-fdda1d80c78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ab8264-1e0c-4dc4-b085-fbf1762b2a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "83ba334f-b517-4d85-b451-e87660fcb2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77febaac-940c-4e70-8e28-0aaa3a91777e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833c3c5a-e926-4c4c-b60d-2cafb574d097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77c7fa7-6a9d-46ef-8c67-d0d870f7d5ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281645cb-ac23-4596-afd7-14951c23634e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b1fd312-a4b9-4c72-af0e-af9cf4ba742c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce8de36-d111-46a0-8b63-2a5649f3dc4a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f5f66d-cf26-45e8-a7dc-14b62d1925c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6cf2139-10cc-4ffa-b5bf-e635fb0ac566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4151ff9-4948-4b8b-8016-557a5e3fba6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8d89c8cd-3d18-45fe-826d-881e1cd13bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1fe6cc-a9e2-46b1-884e-b9b295472ff7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb2cc04-cd7e-4cca-a281-78c159e443aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b37b4ce-1339-4d24-bf92-fcce2a115e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5980f6-85e6-46a3-9caa-b36ccefdc0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "080d8ed9-ddbb-4c14-98ce-c92e3565477f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b059bfd0-d49f-4fff-86ca-69435b7f4cfa",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf0c8ce-69eb-427d-ab12-a2004bd6e90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4a9f834-d399-4536-932b-920f7ba30ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59f186f-e532-4cdf-be54-481bf10b255d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8316c8-5816-4931-9c43-a4f63405cbcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c915c610-df6b-4042-ae16-4027bf8f39e4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7c496a-2cff-4372-83fe-8b03ff4a62bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02efcb0-460d-4819-9635-c83802ea60bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4f5a9d-8d96-4bdf-9161-43d9e00e6d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b11ae6d5-3f9a-4d6d-b329-8e9697e2389e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf96e2a-e0c0-4615-af9d-f9f38d508380",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bde3d9-d2c1-4a38-80e7-e9470341b1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d360516-8b8f-4287-aee3-73f42b9a23d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9484908-25fc-435d-b2ea-aa0d3902c864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed8b181-0347-48a5-b22b-9f56df5dd9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7174491-6ea1-4013-88e4-e69e430ba09e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30309fa-7ef9-4b13-b591-ef6ff2723627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a794160-b17f-4f4f-aa77-eb7503176990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c015cbd-2b75-4a63-9d31-68430003b2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd05e48-edd7-4ff8-88b7-4f64429a2e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e25d3a-1ca5-4b96-9386-040b0dced638",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11656410-d9a0-4a70-baa1-0bce6f2c8a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54dae74-1056-42bd-8aae-c17746cf774f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4634c874-9eb8-4808-b3d0-44a7c6070f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6adac16-0893-47e4-ad49-51d84458ab4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257501b7-71c8-46b0-8335-c3f4958412a5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335ab941-e9f3-4abe-828c-33c82c4bf3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89da39db-5366-4bb7-bf5f-27898a0145ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39e6df8-c9ec-4fa3-9142-3c2306af2378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7ec2bb-5bde-4a20-beea-93dee6dea1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3890dd-5a53-4523-bd45-8fba817ab41c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de29a81f-9d54-4246-9ef3-6714c0b0dc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3417489d-a830-42e1-b307-661b77b241cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a524b2-6d78-42da-a0ab-24508eb07141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7289be5b-1d89-492f-a797-e893c94948c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfa0bc2-41ce-4458-a8bd-ee2a81af8117",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756015cb-7700-448e-bb52-272cf824b089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef72b405-5bdd-4c76-b500-de0600b92f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb6921a-96dd-45f7-b33e-a71c15b7f7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f355bbf-07f5-4e03-81f7-5f3bc0c9e456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11583ce-3388-42b2-aaf1-a4ceada3ab9a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c74febc-f22b-4345-a330-50032e9d6952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e67b9fc-c601-400e-8612-8d54574e7a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d74e91b-c4f9-425a-94b8-aedd42bed219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9114fe8-77f2-4db5-9c8e-85c15eaef873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0aa7e9b-4b2b-40cd-8383-b9a7a50fac66",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2730b785-167c-4168-b66d-84a5cd499f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d7f0ed-baa1-4331-8798-4e7daa3cdfb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836c1d68-72e6-4d1c-ba14-9bddfb0d581d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b88785-b871-4d62-85d7-d6fae049e355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1375b21-1167-452e-acf9-e18eafa84820",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bf7f28-4df5-4c88-8d4f-0fe43c21239e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7763992a-1784-4182-8b5e-37d450559e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4838d9-d6e3-4381-a449-9bdab7147528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0eaf621-a32c-41a1-921c-7e7dbb1f0619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d35b31a-2cfd-462b-b449-f306599f6011",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae46f293-4712-4628-8d41-3e94c9b94622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950e85d9-1725-4cbf-a9bf-753bbbd27e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858d2117-87a9-4269-98a3-b46f04157b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75b1cfb0-e69d-49ce-8ab4-b895c7eaa760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd334d9-b37c-40e5-bf53-33ec22007d91",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ac2013-8b30-45c3-a050-3414bc371e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a181cf12-5787-40e2-baf4-037ea33ce65a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f81d7af-1826-4de9-8d46-065fd083dc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c9393f95-66f6-4197-919e-648ebb445d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da68096-9ad3-4005-a913-062d171650bc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ae5b05-2bd2-41cf-8a83-b166ecd9a830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e1b890-243b-497c-8b18-b02014385283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771710e7-527d-4942-b7da-3ad49a518b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "336b2d61-bc15-4812-bcc2-cec4559a41fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b0d369-7978-414c-8419-72c92c286ccf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c24de74-e8e6-45e8-8d9d-a81e2059a027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1404730b-86af-454b-a23d-69e74e4932b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfcd254-96ea-453f-a810-3bf2e8ad5ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "332e3b79-a5de-4691-94bd-1996d201f52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b95b80c-0821-4934-b1f9-e308b5c02ff9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99631b4b-87f2-46a8-89b9-a049279c6888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58739715-f753-4af3-b4c7-119b870fd0ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e5f4e3-0e6c-4243-86d7-29fdbc208ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fac1e0f-1c9f-4abb-88f3-e98d689873e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739c58ed-41d7-4b09-b4f1-03cf94e9808a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39869069-f4c4-4395-b37d-b01f81ba0dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f363513d-93ec-4798-97a4-f4ae9551c5eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa73150-531c-4e72-bcde-af2d23076318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0186e095-ea46-4a5c-8317-8d631fe5224c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f180c7f-8ae0-4ad3-a327-20f8c9f506fe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fa4f50-ad14-46de-8574-8bafeefc4be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c1b67e8-45bd-4fc8-8c1b-a13a3946604b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3d4c04-21f4-48bb-b22e-98aec214b2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6555b06-cb4f-4d0c-97ea-db0d508f863e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6b8771-dac7-4a4a-9c45-0c22c71534e9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21d8a7d-cbb2-42e5-b8ff-37dfe9684a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9802c19c-81f0-4b9a-961d-d025b4783158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d589a258-cb77-4e66-b83d-b4e889df1c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd014c1-397b-4b85-819d-dbca75dbf2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15536811-5b6e-42df-8593-01a0fda86029",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6401baf3-93e0-496d-b933-6ed94c096c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b23510-1396-4255-a093-4b05ae20ee7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b1e362-a029-45d6-a12d-304bf100169c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "775f2381-ce61-4e21-b7bc-862ffbe1de8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4710a88-2913-439e-9121-790d4e9062f9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2aca57-5cf6-4d44-8ac4-48823074891f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f4c3f4-6154-4ec5-91ca-0285ba88b714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558443a2-96d9-4059-bdc3-7e556f2d5bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01415492-50ee-4b94-9617-21fb94236277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1849b0f9-eae8-4419-ad3b-7ccf28fcf266",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ebe88f-3992-4dd7-8d2b-4562931f64f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "090a23cc-e0d7-444d-9d9f-c70c19c3f22f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec85472c-661b-45cf-9ebd-38908411ee8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f70b7e1-32da-40b9-b4d6-5386dc50ef27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f761e606-a072-4e60-908a-e26fd0775d23",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5907a2e2-9ff5-4c2b-9a9f-f4e99f080cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31390f07-3388-4457-8694-76e9126ae9e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8532ed7-1262-4fdd-a80c-9b10dbca2583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "136c64ef-3ee3-4bf2-9c4e-b0d891b97dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb583094-3a69-4b3d-82fa-8b6bc4401971",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "231dd88e-ab81-4a7f-9e9d-85176f1469cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44161e38-0cc3-44cc-bcf0-4d5be2580fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fc45e2-c7d4-46eb-9289-946f608cdef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d898294-2e2d-416a-bec6-22fb7af195d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db5e360-6315-4664-9d97-efd0a5c19ffa",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c91daa-1d35-48d4-9baf-b862e1bcce50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7955ba1a-c3e0-4519-b0c9-16b54ac544eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbc48e4-1548-486a-bdc6-17cfa6d4a0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb115ed1-3663-4853-ae4c-a415c05b5ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20deb14b-5fee-49a9-9033-7250b4f1a629",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa026fe-4b6d-446e-b75f-5bbb4a0ac4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb95d719-3018-49d5-b1fb-ea8a76c33477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efe20fe-2e48-48bc-91ab-ad3e86c5d24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "74f3916d-56b5-428e-8cf9-95b88cf52c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432fe46e-8e81-4b41-bef7-937399b5fd5e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8513a1e-4834-4f63-8053-1bc9b07725af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "074b7b93-1402-4118-9ff2-bd08bb1ba860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda3157d-a139-4e22-bb5a-bb8ae3c27189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c58396cb-fc19-48e7-b742-ffaac7fc36f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeab3f52-4652-4641-964e-9d4f897b93a5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4414ed7-c17e-4877-bec1-261aa6d4da2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b63ea75f-71f5-4c72-9a46-c812456852cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfb0bd7-e77e-4ae2-900d-225b304448ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc6ec8d3-9948-4130-ab3e-fe68de13ccac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc470c8b-5a5f-4c16-9512-d2115f8bd1b7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9096b4-608d-4d3a-94f5-1a12e602993c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ced5c7f-73e8-4182-bea2-dbe41357b77d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b77915-7a25-441a-8fe2-636f29491728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc1d04d-192f-49b2-9031-c047f381c4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d62c3db-3327-4535-bbdf-4e031c6d337e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208be650-ff7a-44d7-a786-bc22006ba08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4317dad4-89b7-4077-bc42-e38e17dacca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9371743e-2385-465e-89c1-0303bfee1875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4eb036f-3fb2-4aa6-8e4f-ff5b5c5f85fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1be336b-59e7-4e92-bc76-fe9ff81ae4f8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8513de7d-6259-46b2-859a-3d185e076f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07564d4b-b4f1-41fa-aea4-b7c9332113f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a116ca-ee23-440a-a969-3710123c2200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6013335-5204-43c3-8692-12f08abe0b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfd7518-0c6e-4918-aff7-cf6120b04466",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a4be3e-91dd-4988-80fa-c2b755869e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220663d9-a001-459a-8a02-07d07dfba473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7004b94-2766-4956-a74d-e4d3b81d5d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba665e2-5524-47c4-bd6b-d13a65efc3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe05bc79-5405-4152-8dc1-38538f7daa1c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "668ed215-4405-4ba2-b7eb-06ab49364593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "871faa13-f82e-425a-a04c-e48454ab065a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8236b383-e276-4bae-b5b9-6f34f398e841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3aab24a-7bdd-46a3-9f7f-5ee5794ef0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70a768e-f268-4eb8-abce-ef12be05e0ae",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d188e07-a510-473f-8860-27b709ac42de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f6cbef-0cf8-4d9d-b4c4-00fc37104b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a27d339-bbbc-489f-8c07-5f5a3f97fac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f15607c9-c1b6-44b9-9f34-a60c6ee1039f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70632306-c952-4471-9ab4-4c97ee839ebb",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda45caf-2e54-4ec3-a09c-f7febf94a822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c98e51-1f9f-40c9-8cb2-06884ec6b14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6cd2c4-f12b-4cfa-83a0-6bec2dbcc514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9da5dd80-2157-4ea7-843b-ce55fcc00ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8286a108-baf9-4cd9-b869-4ecc78fe954b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffe8229-c044-459e-845f-85aab72c1019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0097a50f-3ef9-42a7-8630-bd980e17cb05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eafbd0b-e92b-40ed-abae-d5987497fd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f688cac-4a9c-48ad-b207-0932ba2a7156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69939bdd-551d-4db7-90ef-d58caaebaded",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471f0217-3bb9-466b-ae93-9f7c55b77d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09a8408-a250-4116-a4fe-ea65d641dc15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271468b3-651b-443b-a662-b899ab6c4c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "36743709-926c-4008-b935-ddd8201d180e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ff08fc-e60d-4384-a9d7-17e4a6821cbe",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b61844-b1a6-4694-8721-c2a412ff44da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01cf26c1-92b3-4132-ac23-0e0042ea960b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46be82e4-ddae-484b-91cd-726b7666301c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6dc85b9-7743-4e2e-9553-b65b49579f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9723674d-4dfe-407b-8896-323965af69f6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a230cf25-9d4c-4300-a9a5-e64e11a5bd38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b78f883-bfed-4196-b38d-7bf270f48750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bd4df5-b928-47f7-ae24-c4007300d601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b560b3c-5da9-4f55-8516-7410e3b6b7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232bfd4c-977e-4a6e-83ff-091d25fafcc5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92c7750-cf16-4ff4-8622-6885b966806c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283b16e9-bf0e-4842-b70e-572034e3a8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a9cc32-229b-462e-9423-aacb9e610224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62b3c964-301d-4e73-ac79-639b738b1ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573e5f4c-a53e-4d1c-844c-12a40e957de1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68136e46-4d83-4877-ae85-4fb896adf371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56300de-c8e5-430b-a2cf-0a9c0bdc78f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da68dba-cf4d-43b5-b5ce-4ab58442deab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07221149-2b6e-4ff9-8e57-2c0ba60630a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800ecb52-5f1b-4d9a-a870-5bd0daf45aea",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b45dd3-a539-450d-adc0-64abfbdd2106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85713906-c59e-49aa-b596-7b6c4e498247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d64a4d-6070-4171-b500-0ff7506df250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98ab2b77-a48c-431a-8e27-6c2d9e6fa35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0920f58d-616a-457d-97ae-f255656f70d1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5821a8-8e23-4652-8161-fdd355986adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3ccba7-2ba4-4825-a748-2a9a676c6e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a94e4f-1784-4dbb-8228-3fcc7038da11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "851d9692-d476-49b0-bd2d-246fa3656f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47dae48d-beac-4a07-bb43-58009cfd9904",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211d945a-6679-47fd-b236-729fde48712c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d805d33-48b6-4337-845e-48b016fdc626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e668c68-021b-41fa-abb8-ebb62746a02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "707076d7-585f-49cd-80e6-a6ab59983ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d08463c-a008-4e1b-b9d2-32fb27b83a27",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b7336d-8c68-423f-8f16-c4e7418c6114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ac8c87-d594-484b-bb03-4457341ba6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbdf376-bd73-4920-a6ac-623540672e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ebb0d2-8e73-438e-b09a-1101c31148c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbabddca-b817-4cb3-ab5b-18aac116272d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d84526-57a4-4af2-a931-36203530a436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c45ed0-39f1-44b4-b660-e88f21b03b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd17a63f-a1b4-4667-b418-08d14bc72e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c47686-a7ec-4307-b3d7-c7ab0d9d6d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9a97a3-631a-40e4-82bd-13a0aba366a0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56c557f-dcf0-466d-a442-c2ed8502cafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6914edc2-18c9-4415-a66e-1830310573e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58822938-c21e-4f05-b85a-67a480f12764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "096d0fcd-e152-481e-9031-9c0c6b58b973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b49ba2a-51e3-4cf6-8cae-b9c0897bc8a5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda44667-bd2b-43e0-a10b-d17527a2aa5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444417d8-56a5-4722-8da6-24e36df0aeb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c2d52b-229e-43a3-9371-83106cdd336f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "32afd1c8-ab7e-48e8-b916-21f0975d1999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a993858b-6e6c-4013-bad3-404767c88dd0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb61137f-231e-4ce9-9266-f5a965aba84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "301476bc-6968-4e4d-bfa7-bdd643d7c2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5970a41-c770-4317-b111-280bd97d271b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e9cb363-e745-4432-96a6-21369cdaeb65"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0010f5a9-1ce5-4152-bd48-cf991d78f395",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "407f7fa4-e47e-47d6-b578-fd6cb67d2c42",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a91fad-60de-4965-94bf-72dabbf4ede9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02b2c1fc-0410-44a9-a62d-4694ede12465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9d570e-d5c5-43cc-9cb3-2f45f0cd37d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3899f05c-971d-4aa7-a519-6de7722e26f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a91f3b8-51dc-4939-8288-cfcbd7a8fda2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbc17df2-6265-4b22-8586-834d1a63ed3f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "89393a3b-47fc-4323-9034-90a9429de426",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22fe0fa2-5d67-4269-bc0e-c24a4e3e99aa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "831acd31-ae45-4c3d-90d5-660f8782def6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "106e5f14-46e4-486b-a10d-4d120482eda3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c9be61cf-df70-4d80-b2f9-e52ccf17ba88",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5a9be5db-0b00-43ad-a66d-cde0f026bdbb"
                }
              }
            ]
          },
          {
            "id": "d973affb-a6fd-49bf-9f74-41189cffe972",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ba6eb46f-06f8-4cd7-8c98-ce98b771c8f6",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6ac4765e-f3de-4b15-b9d7-8a322378d4be",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea7a9fa-f1eb-4603-99e1-65ee9a7e9da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a694f84f-3129-4095-a880-4b46f0710514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c50077b-9b8c-48ad-b7f1-db5650d55b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d1811e-3b44-43d0-bc77-d19bae744a4c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "05eb46f1-11ca-4cd6-89ba-c3ecd4a17b98",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcfeea94-7ea8-45a9-9026-8f91b3b5f144",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0819ae99-694d-4618-9686-3e37a9445045"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d24413ed-9416-4693-aa16-e8df4c8762c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a76d8ddf-4c7c-4ca9-9712-50b5489494d1"
                    }
                  }
                ]
              },
              {
                "id": "03049619-961b-4d5f-a472-f2548e20a8d9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "502e09ec-6237-41fb-a372-4226d6ba4a7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b999eb17-3cd1-4706-bc8e-55f7b42a2ff5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af4c8a2d-1606-4bf9-9456-4614ce137193",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4985600f-25e3-4f3a-b73f-0b3309a10423"
                    }
                  }
                ]
              },
              {
                "id": "c1248808-bb2c-484f-b316-d246f0477368",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f480edc-cff9-4d2e-a95e-862cbb8759da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6945ec9a-3e33-4dbf-8536-c3c938e00fb1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83e8c6dd-58f1-442c-bb27-64104f0a55b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e233d215-e0be-4a78-bf7b-622e7e4067a2"
                    }
                  }
                ]
              },
              {
                "id": "7fab81d9-daaa-4b06-9253-9260deb911da",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "acd72d3e-8fdd-48f3-9866-e5351becdcbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f1ba56b-277d-4901-9891-13db2f89cce2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c44668e-1362-48cf-838e-23894c3c1d70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c2f14ebf-b0d8-48d5-930c-cb388230ad9e"
                    }
                  }
                ]
              },
              {
                "id": "36f65889-f33c-4b8a-bd16-1f7980f066a7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "361d6241-1b5a-4656-812d-1c0788279d5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "430167b7-b552-419d-badc-8e1910cb3e50"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81f4a74c-bf65-4ad3-915d-f915eae34a8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "86d39b4c-f1c7-4e6a-a512-4c03e70e47af"
                    }
                  }
                ]
              },
              {
                "id": "f1704ead-9304-431f-bbd1-217d67e602d0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "595aabc3-5fb5-4a60-b303-5b8d1e499b09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed9d7762-aa40-4a72-b938-18fac4584a75"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22075457-a7cc-480b-9b36-f9cc54123210",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0bef5694-4851-421e-8bca-9af5f0d87a4b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a6e461e4-a91c-4df5-a777-c500bd96f806",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b0e8077e-b785-4642-892e-26aaff2345b6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6c6cfe14-52ed-4c74-8286-bb3e2ae8a413",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fc177d84-609a-41f8-9f5e-4aa4204cc0b3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3a24fb4-a0a5-4827-b56e-36858068d990",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f1b7786b-d0de-4481-b505-4cea220e934f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf085598-c325-46de-abc5-ad32f7e06433",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe32762d-903c-47d4-85c7-b607b4ee4a77"
            }
          }
        ]
      },
      {
        "id": "e85f861f-da6b-43e5-8875-685e17d5a2db",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "04590806-2e4d-43e3-b680-edbbdeee9d0a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "993e6cc1-e16b-4e0e-8e52-cc21f32d5588",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "44c5eac3-b05d-4778-8d73-e6f67b41463b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978c5c5c-d230-4206-83f4-e57355aaf235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21bffb3d-1ceb-4fe3-bded-5d54bab00455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c62e755-ffc9-42ec-8843-157114c5fa67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc885a9-77be-4f59-90c3-3f5959aadb1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4663240f-52f3-4a48-a440-5993c4e33da2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8413fca-c106-4a26-89f1-cfea7ac2e622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb5628b2-7e95-42a4-893c-aecd9bddb214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0f0c31-e7f1-4501-be35-e5f6d64531b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40d66033-c8c6-44e8-bef4-2456a1531917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87f5e6e-6d81-4404-aa52-e5d557b4c57f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3452d88b-ceb2-4cfb-90ca-4b0a8ae70a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f05dc9b-fc4e-4d6a-a1fe-5981aa122bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f16f30-22c2-4320-890a-60bd242ebc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14c7615c-3e3e-46d7-8edb-06e1a29d6aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497a8715-eddf-4a9c-980a-930080ab6fa7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54830985-3656-4b4f-a5bf-1838202d0afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "524923f0-d99b-41bc-8841-54d1a738b08d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aea6437-9d5c-44f5-8f2c-39df4f5b87df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10c8c27d-5046-49a4-ab74-b2dfdab51592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c19d9f-2fe9-4188-9fe0-801fcaf4c34f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f940e7b3-bffd-4c0f-ae29-8f8c2838fa5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be18b23-6b97-42fb-8021-f499f9044c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb004378-9a05-4bc0-8fc9-854e30a67e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa94631-c437-421f-a496-20758da95266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbb45ed-b57c-42f1-8b96-88f379d79d59",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c078dcf-ef8f-408e-ac29-474145dafc39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e864ee-368b-4574-abe3-90bebb943d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb1fa20-82a2-498d-8724-3a23e1622482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6271ec2-8cb0-427e-b41c-7027c4b78fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac101ad9-1504-489f-b856-91d371e8a094",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2312560-3814-4684-b390-4dc683eeff32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "528a0e24-dfdc-4ec8-8b32-527329144bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32480d07-7778-4bb1-a2cd-530d77d078b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "812a858b-86b6-4cc6-9e6f-18c48fa8a0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc83cf94-59f6-4ec5-81a7-bca897a074c6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfc11ce-5a5c-4ff2-a316-28171b67dcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b0cdb8-fd50-4434-b275-af5f4aaa31c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6afed89-c02d-4ec2-a7f0-42dd3f3ea033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e96496e-10fb-42d6-aaec-f4e0420fc0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eddc289-33c9-4e3d-9d58-736ce63a01e8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82921633-e42a-47a6-a424-14a37e04eb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c8c735-8cd7-40c7-aadd-68109fd84031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e03df4e-9f26-4d67-a289-f35db713b9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5bd21d-fe45-4813-aae0-765c59c7ca12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4d1622-9a88-448a-b371-cb1f20f3f729",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4db76d2-f183-4f18-b5eb-adbd13a5d493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6541da3d-6c92-46e2-8dff-aa006d152045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32df9aa5-9646-48d1-b0f4-769048a160d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c29d1700-54f7-442a-bb9e-92d28ccd303a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b90542-2602-45e9-bad7-6cc95191435f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f15d19-075e-483e-90b6-1b6dd82e744e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b593da-02a0-4971-b5d7-7a5b3da49cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33bb322-2ab1-4739-be69-2e18d01e54f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c843fd4e-2cc3-4413-9b77-d78d9a533f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53663e7-234b-4391-962a-d422f7a00efb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ab319a-7913-45ef-842a-31b3738252d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "637e1c7e-1694-4a09-8bbd-c5a8a08b5070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f743b5d-7c2e-4c28-8320-91390ed28056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc6af8d-763e-4212-8138-b9e341b136a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6485ec4-fdcb-4021-a3ad-f42473535fef",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d209cc-add7-4074-b2fd-e74eef7c24e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac8c7998-789c-4765-94af-0eb222f8ecdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7495483-b6a0-4083-ab06-800c2bc7462d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f914eca-27b2-49bb-a80e-d10fbd28aa0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8e8486-3d1d-4915-9fdd-32e28c290fd9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab2409d-6909-4691-8eca-e759dabc046a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e84dade-7d8f-451c-92a9-528153d4cb0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09446c56-b066-4300-90eb-5bddec303353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f42230c-9ec0-4993-98b7-ff3167291b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8e0774-0f23-4f1a-a29c-22ea64a1f0fb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5813c8-fc1f-4bb7-852e-a6592de04380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517538d6-c6a9-4ab2-9c5e-9b22e7d93eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a468c9ff-1f99-4466-99d3-4a730d114bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef7893f-0e9d-4646-b587-e044e6129b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9dcf02-d902-4645-976f-04f20cbb47a9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f13aa8f-08c2-4198-92cf-528871ec411a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f5ad6fd-ad52-499b-a80c-e189f8c7939e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ca26f4-bbec-43da-a894-0a38f8a9b838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "044dde55-c168-458c-bd34-05472776e287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f110f27-af0b-4fc6-a9a9-2db8c68fed76",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054d803c-48b1-4063-aefe-60f2f7175d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75bcfab1-d7e3-4535-90d6-a10d74aa51e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d75f31-4aec-4548-9d32-f2a929ad87cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "134adea2-4cfd-426b-9ea2-42d7198bd457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c037aeda-f02a-4222-ac75-108881c8255c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca18fe2-47ca-4096-a129-fcf6172fa4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d123543-ff95-4950-bb5f-d48d39fe4669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f413272a-1ea3-4ca0-91b3-6613c8219079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f67fe5c-89b2-425b-a4a5-334d91367672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cea9a09-3cb9-4df6-a4ac-52978b0986c3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e50ff7d-0a45-4886-8376-b9d492b2f41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f0d4e7-0b8e-41d7-9a07-c3bfdad30e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da503c0-0027-4636-bcc4-8d2ee40256fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a747fe48-b1a8-446a-a740-936efc6afa8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbf0305-2007-4f69-8ecf-63a349a3c897",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c5630a-5ed0-4ad3-a00e-d2ad46d99cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fad9203-5611-4eaf-9cb6-bd5a11711f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a08a76-2f29-494e-994d-9cd6826bd5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48ecfa4f-7bd0-449a-8beb-8fabdb5f6681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539a320b-9c36-4a1d-9579-62df2ff99e50",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9ba12c-98d5-4fef-91c5-156078cbea3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f365a497-56a3-4050-859e-9441c4b24adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ceefa9-1988-4e78-bf2d-bb1795c274cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64c65a7e-a43e-4c92-9087-a00a0df19457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e19865-950e-4e16-bb75-2213f9a8a24c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133bc4ba-2eed-4b33-a974-076b38b48d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e7ce851-3fd9-442d-b15c-732251c21803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85cf3d5-9d63-4b31-a7d9-b027047ee2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d94b54f3-d63b-4f55-a885-b32977600188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076f6392-ba44-4ab2-9fda-d8072d761461",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09232f6-78b7-4874-9151-41a744716ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1432d9a9-5942-4f37-90ed-1162dc73ebde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415eefaa-6225-4a38-8892-9fb78ed4f00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56aa6407-2a84-44d5-991f-629ebd4e9646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85221355-da06-4d0c-bfb0-77587a8459ac",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2854bf5-ccdc-48b1-9b7f-cb2a38ea7aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa8001a-29a5-4e07-b643-012b4cefd80c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270a1ff4-444b-4aec-8583-55d85e3f1b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77940510-0e94-4712-ab8f-20a7460b5f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b28ee7f-75dc-4989-a277-42a16c24331b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4d6a07-63f1-475e-b260-8ea00d799dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b82f36-88eb-4fb0-ba98-27ede21c1806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54aeec2-98c1-440d-9e9e-74a7878da918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5607f321-d4b3-4e07-ad4b-d843bc2b2301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504fb01b-5671-44c5-92a5-41452c3ae978",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ee0518-1cee-4117-a8df-678fa4cbdc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0821b1-141f-4e5e-8f68-a446f5a31c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2065f0-c0c8-4837-9494-22af1050060e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ddf9668-0072-4469-a072-3a610deda787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98adc0e2-7dd3-4e77-9760-87ac46ec457c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec16fd4-5f35-4ab5-90f4-0b9ee1348616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7f9dd8-082e-4206-b76f-87062a8bd27c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641b541c-ae63-48d7-b56a-477eaae7119b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cacbde14-0d35-45f1-82e2-4a1bafda51e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5562048d-fde6-4787-b6ad-a4d557d5cb46",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07296530-51d9-4580-a67e-461bdb62e833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9c1a10-0293-4b7d-88f2-92d95413e650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ec9c5d-ae7d-407e-803d-5d04204855f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9152de2b-7496-4b5d-892e-c6233a48a2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198a4ee5-859e-4abb-8cdb-00c5f01e1e6a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5f5778-3443-4beb-a910-ee8e68c3ab95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11db4a23-cd92-4a4b-b785-1217cb64fc6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5663d6-edc4-46f8-8d65-4dedc48117d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99200bcf-84a9-4637-b4d2-b66acd7f5978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6ad9ab-f6fb-4766-9a3f-25c81e2abbf5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6291fc00-fcc5-4e3d-8892-9cfbb0c958c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd20431-c94b-4fa0-83c5-75c4412175f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6569053c-68bc-440a-aace-915e20a2d5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e65ac9-5f7c-48a4-867e-49e6a005a68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c557fb2-956a-49af-8c3e-45643c96b2e6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77dec7a3-f4f6-4d36-a523-a6fd7af93e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f9e306-58f6-4b3e-ba25-bc935a3d9885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610784c5-3499-4f78-8724-b8df3e567099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "424d1f2f-cb14-480d-a68b-c662eae257ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd38abc-ca70-49c4-8458-63f2e069c4d5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7025dd-dd8c-4c58-acf3-028c250050f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f352f2-6a2f-4e59-8499-d4e2bc486afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28d95da-323a-4f5e-ac62-ddbfacd5424a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f43caee-4fd8-4fca-b10a-1ee437b924f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8788df2-e4ef-4204-8d7b-6311d4433141",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f24e12-290e-485f-a67a-0310d9dc7d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfc1877-e900-42f3-8bcb-65f6891963a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242143b6-478c-4769-a9a6-1a266f5f23f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efbd8c12-9df4-4e09-85ad-45e4f1f2e00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7bb6bb-51cc-47f4-a743-f74c917bccde",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba255c1-0f92-4ce0-8ac0-e0017481c05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5498238b-9e9a-4a21-9ccd-f84dc668a51e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a98bc2-069b-432f-af10-fc132789b351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c2b769-7e41-4857-9d95-59dd084b8368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f49ff5-aa31-43ee-8111-7fbd522775a6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232212f7-bc32-4a27-ab1c-4fb8a412bafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db3846a-5a29-4674-8056-5a060a08e2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0838a53f-fa90-4879-b552-c80177e1c91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec0f210-725d-4550-bac1-c34125d9144b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7efee7c-91bd-48e8-888e-551a3f92db89",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "000c9954-883e-438a-90cf-58057721bf70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14288f40-6134-492d-9321-fd8f66b26e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f820d1-355e-404b-8b72-d79440d3f236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef40bbe-cc71-4e89-889d-3576ec25cc22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fab5fc-2dec-4823-87ce-7a3f3cd61982",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415ef837-ecf2-4776-b92f-2e8bcd9e2df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70677329-31a5-44ba-ae08-505289d1c973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47639fc9-06f6-447c-893c-31c035ca1fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "446ec7ed-d74e-43cd-b1da-a86f361605a4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "594f71df-6c99-45b5-9427-0397d8ea6cce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a46ea85-a163-44a8-a879-924d7dab4e63",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b190a2-5fa0-49e5-a92d-0e7f280dcfc9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c44f9351-5d4b-4c1f-adfa-816f46792a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8bb4f3-04dc-4a16-a1e8-559fc174f8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a5c9718-48f4-48d5-bac6-a9426f9b188e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48272e49-a81a-46f8-9a2b-4e3947b7e6cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f7b7850-41ce-440a-8df6-0636a1df7c42"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "02040500-2dcd-41c6-88dc-664547f90014",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0369da8-94dd-4f52-ae18-7815267ceb94"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c5bd856-6f15-46a8-933d-e4db6fcffc07",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "72a1e6a7-befa-41d1-a491-6bd91d2d615d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9be16ca8-31fd-41fc-8098-3ec0567c96d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "782ed8dc-eafe-47fc-8823-0883ecca86d1"
            }
          }
        ]
      },
      {
        "id": "3bdacc5b-8a32-4872-9a56-14052fb2dc22",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "763da699-f025-4860-a1fd-c5b73f44193e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "858894fd-7173-489a-900f-e1475e745e51",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8b369185-e72d-4e52-acde-f754982838d2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7c4cac-74ce-47be-a237-7ff7217e76ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49aac3c-5830-43bf-a618-6fada85a0bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e3311e-0684-42e5-ac06-c93c285b76cb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36652338-940f-4a49-9ab0-7e8ea57bc8e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9821c55-8145-4a23-9a63-e0c3ad0114da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582965e3-a486-4a9e-b178-28709b8fc4c5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17506253-b294-4499-bad2-003e13a919a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde8d99e-0a18-4422-95c7-9bd6f1e144b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0414a60-4920-4891-9114-9d2b242070f0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3390898-ecc3-41ac-b2c5-7ec34b082107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2904bdb-d94c-4f5b-bc19-75f34e0f551c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b173298-bfd7-4bef-82ba-4b7596638111",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7a30e4-6487-410e-a656-2603f0c96e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4483bda7-a8c8-48a5-a0a3-54ce339a7f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b76ebc4-1a46-4b05-83b9-8f39b457e73a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5ef638-9512-4e1b-8239-4d322b5aa339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2cbcc9-39c3-4875-a641-4993143a5f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1deac12d-39e0-4063-9aca-b7522832c4e3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5de0ca7-9fef-45d2-9d4b-dd3ec24dc99f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38540a5-0faa-421d-a2ab-efa9662da0ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a45d04-41ee-43c7-8a52-a76d3c57d4ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d5a098-1096-4690-a0cb-d5bb90ff5472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fbd72e8-7cdb-4934-924d-14625e08e19a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26613b12-d0f0-4fdf-9419-a165f7dbe7cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae8ce769-58f3-42bc-989b-97bacfc52f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30ad8c5-b147-4d71-8c88-1baef76c448d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e62ea53-259d-4e7b-9d85-31531822c05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b73e2af-f017-41d6-b2ef-ba0af2bd7c92",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de28035-0550-458f-b3dd-65af21743edd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fbcd631-9543-4c4f-bcdd-f3c76b2a2326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4757cfc-5fbe-41dd-8fb8-90a8109f3b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a74619-cf38-4b5d-b22e-436712722ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d16319-4606-45eb-a4e9-13059037a632",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa870a3-f1e2-46e3-a0aa-a0ed99a438bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fd975e0-9656-48f8-8df6-598e460f2072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93988d27-c186-4fc2-8f92-556ee6237da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4876a0-1603-40da-bb95-cfeddae47bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4118ef6-bb90-45ca-beb9-981ef00d6cbf",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7aafbf-1b2b-4ee7-ad2b-191d31e08c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3dd1622-42a2-418a-b198-f91b4f2dffba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff77da0-f4ae-4f12-b576-96fa0cc2c684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea7805e6-0238-4568-a6ac-33d3a60d13e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cda831-565b-48c3-bd63-73586996a2f5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4870c7-1789-40eb-b388-8c27908c3b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f8b2ac-5e34-4fca-beed-281e391e5a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f55bf80-744d-461f-8534-c9d3093d4d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad8f2a2-3812-44e4-b497-d3aa2166d06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d9d76a-5a43-46e1-8f55-ecd1fc8c850c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8382be6-dbd9-45a4-a5cd-e4c6a6c321fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "425027fe-9c49-46c1-8845-e132d19edf2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1949ca-45d3-498f-b1a7-ad7623c0203d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42c676e-3591-41fe-9043-af263eb410cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a12ca8-a0b9-4893-9d83-15a58a4083cd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8713c93e-69b7-4405-8b4f-1ef9effa74e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9f19c16-df1b-4042-8849-032cdb191dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4e523c-b3bc-4046-a308-9730a54947e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67102fc1-706c-48a9-ae24-857a4a645b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b775a4f-c88a-492a-a8bd-51642f75b251",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8483f9-4283-4f49-b5ae-17e292372d19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "014aa712-2f9e-4a63-b0a4-b01952e6b2b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "603340f3-e95a-41bf-b750-3a7633b9d6d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "370a62b7-ba63-4ea6-b52e-949abebbbec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190a292e-ee88-4df6-a5b9-30e97749acea",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27c30b5-6675-4f72-a1b5-01e798d01a4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "172575b5-66fe-4de4-99a0-4accc80fd1db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0a511a-132f-429e-9a9d-fdd6a6f092c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b033c5-8a40-4083-b71d-c0004ec4ab93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e1b66c-f30e-4e43-b5d0-1a52e6291e2b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5a0a94-62e2-45dc-886c-d04b7d769daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed383db-9016-49c6-b2f3-f624800293fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a49f361-8af1-4885-add3-a50241636144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c742ff4-f13e-4772-948c-6297f07635c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf86e00-e714-4c28-b38e-27d448bff649",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6122f6a-93a7-4eec-bff4-8cba7f933f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd5e80f-42db-46c1-b62f-a0efd8465b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6082c5-17a1-4a18-b8fc-bbd486ceff34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3399082-6dc1-49e1-a510-0b9f3f993871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95dbe605-eecb-4e4b-8513-62965401e7b2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc358cdd-4468-4589-b21e-fb9d503ee2f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e6a87a-7ccb-4dfb-ba7a-e9df6d763911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4c92cf-0460-4301-9685-36f93922806a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7936f4-06a6-49ce-a112-cd249d2f59f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb32ad95-8c0f-4772-a2c9-47dd0a9cd032",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61715857-985c-43da-84b7-a3b4449d6f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7c8e00-2bc5-4203-8015-863c0c8d6c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465184e2-9ae6-44e8-990d-47391367b3a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6a03a7f-13ea-4338-b8b4-c043d3592027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67bd0ab-a9b0-456b-87e8-7234d8ab8932",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022b6dcd-8f2e-43fd-807c-bb1c3c3a96e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "728cd2bb-9bbb-442b-9ded-e128dc3edca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa16e69-b8bc-40bb-86b0-a4f9d8a60377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823da6dd-59eb-4b9e-b595-d3d181b1004d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76e5835-1349-42fd-838a-e2fd92e21367",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dba0a94-d37b-4bf3-a816-4a88003a902c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa4f72b-fc02-4d2a-9b4a-eb158c2d350b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "763a4278-3b7e-4281-8de6-43bd50a7d751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c815dc5b-5ae3-485c-92a4-b582846d2aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae99ff5a-db27-48ac-ac29-010b9f0e7a2e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b0c24e-7264-4860-9509-24e1a21ac4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1536744e-997b-4d4a-ad3a-cfc3233b5827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0410aa80-9df5-490a-bff8-ef41c66bfa80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19e1062a-8728-444c-ad73-bc9d5c2d653e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c3a818-8f31-4c58-907b-4b313c7ec412",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162b8ceb-d983-4405-902a-1559b2323897",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a59dffc-aaf3-41a7-89a3-c9c157f7fc14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4665007-6ec6-4ad9-ac5c-cbf87b6931c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e784890d-e75b-4a80-94c7-6409d09d0916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e3802a-b526-4eab-923e-429343ff7b0d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252a1b0c-b00c-428d-8f9c-1751e62a2184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09a9d051-10f6-4600-98f4-7b0fb459d9d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a453cc85-24ee-4d3f-84ee-933ab4964075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d712e2db-1d85-4f33-b495-890aff435f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a75aa73-2af0-4439-94c9-4a436e661ab8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4fcc55-0846-453c-8252-b9e46c1737e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30de7c0b-5e71-4c6e-b68f-266e255bc26b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc98499-aea4-4b86-b81a-cd5a9f952688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e81e97-5e0d-47c1-8165-d72e4bbbd156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c946e94-1787-4d6d-b3e2-8ebb6a14ebdc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3480369-ee50-43b9-a538-b034324a5420",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40d218da-b474-48e0-a7e1-0d90c18b319e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f526ab86-66a9-4be6-bc0f-1188b5a7bbbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e8f2e32-61f2-4e0d-a456-c35265cea6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da794175-5811-43f2-933d-30847d9933c6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade4d749-e80a-42e9-9403-cac1609308e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e508477-6ad1-4b24-8696-c6d45346c841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f5a2c6-282a-451a-ad66-7f170fe92f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f9edeab-3408-40f8-85b1-a24310650605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca1b9fc-0877-40a2-a625-2d4846c1a324",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67778e4-68c1-4599-b522-0c9455631b60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71d3b335-14b3-4fea-854c-caf7ad8d8544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "250c9476-f386-4bb3-8867-f7256f629a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc7c132-3afc-470b-bc28-d8d1a3591245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f61bb03-e65f-469e-864f-a646d1253d5f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a5e7d0-3e67-4a6a-b2df-4f2803255d0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74b22787-869c-4ff2-b151-ce715b667278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2bf597c-b7de-4e7c-aff5-5dd5c0483427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b384f61-924e-45aa-89f5-f28fd593155c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310321f2-29d2-489b-969b-18717b620de8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b92a002-a113-471e-9beb-bb76509e78e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec647eba-4ec4-4669-8342-95d5b6bab149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "700d8720-870c-4284-bc64-b05e95278a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bea3d09-b5b4-4289-b620-2a1fa17c26f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b873a1-d6dd-48b1-a9bf-e9266807e81e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67b8a43-46f8-4c72-b310-0fc7ae604508",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84576cad-7b82-490b-b928-2ebb1f3f8ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4a15ac-03f3-4187-a38f-54b204cffe82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a607a600-66df-4803-ad9e-c5edfe99966c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63262962-b751-4104-8b24-f6b01de57b81",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed73356a-a539-4f1a-8714-84fc3619f792",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cbec070-f72c-42cf-8a73-a8cdb913c41a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28ebdea-ff9c-440b-b14a-0e8b0aafe101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d271212-9651-4203-99a7-b4c19bc0a621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78a40d4-65f6-446f-9c37-c8f1027f5856",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d321a458-0a5b-4d62-8ea6-024ac6d190e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d466cc58-3002-46aa-ab24-0079f7617c37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5436800-a92d-42e2-88e2-e6505124fd6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e46aff0-ad4e-4343-bb2a-236e7d553f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d974aa6-28e8-4755-8d39-f83abe658b84",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f292b66c-d6df-4440-b33c-8954fdce6dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb0e0df-d6bf-4d47-8932-c84b9719f077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d7a7d2-fc9c-4c2e-ad6b-0d82740dd081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf985bc-d6c7-40a1-b739-5226aead7fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4dfc2b-ca99-47f5-ab9a-bacb93690f3e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc07245-331c-48dc-8d6a-8f466703f474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15969007-6d83-4dd7-89a3-ec1e523e4c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d9a5df-b213-4eb4-8a32-6311f0adaa9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b2fc15c-556a-4e95-ae2d-a872aa731c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f3abca-86d4-416f-b842-803a32b742a5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d15c29-9cbf-42fa-9db4-513925922e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5e3f71-6c93-416a-b129-1ae115bc340e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf18d0f4-bb24-4fb5-908c-b6a6d16cb5b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9932a905-0e28-4392-8ab6-508c16b6b448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32aa6c5d-eec6-4b68-b8b2-56825343d793",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a0b56b-b438-4959-9c93-8e953aab16af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990242e3-4022-403e-95c6-a27b71beec66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14dd06e5-7de9-43f8-82c8-0c24803a616e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6cde66c-6e8d-4b58-9e04-26917e47961a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d8ed41-7276-48fb-8b7b-b4261490fad9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ee4d2a-af2d-42ef-8f6c-e393b58ebe5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8ee646-fc91-4f32-8849-8c0f906fb603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76b09a7-60a3-4f50-bbce-c210582ecad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd8a510-45ae-43f6-b04b-7a03e4d00f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8faefcf-dd2b-40e9-9f1e-78a4b2bc197a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e6d411-b440-4be7-8301-b4af630b2f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9053c85-551c-4fe8-9ff0-ce31221afe9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "153aef59-0e73-48aa-8c8e-af4a72e907df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cce056c-6a9e-421d-8271-90e0ace4ec03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c51c39-2583-4a8a-ba23-a0cbb5ad7031",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6e4146-e4de-4644-80e3-993027cfb5cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab294fe-af9a-48af-b4b5-aefbc03a7dbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2554bd44-a1ed-423b-aa06-83bd4ee15421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf36db4-d050-4539-b4b5-199c409d5e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f8ed07-0f7d-455d-802a-28698467d7bd",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a5e626-d998-4fb7-aa4d-c6a79d285199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3c4010-08ca-4c64-b6ea-2a46c6d4510a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4caee562-cdc8-49cf-b16a-e0fb8ee52bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "465fbed3-a9d9-4e3b-b1cf-59f9341484f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea6ba64-f545-4580-b017-0c37928284ee",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb478fbc-f050-4486-93f2-f87b7077a39f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4a23a4-0b8f-4d57-ab9e-cc5f9a3ae37b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a11a01-a9a4-4c1a-a7a1-e969d87ffa3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f169dfc6-10bb-4fd9-800b-ff49368d50c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ace295-8aed-4381-88f8-d99691546d5e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2410d7a8-ff68-4bb1-b0d4-a3250303d955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5d99cc-010f-4f66-8d58-2e7922b80a42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccb0d98-e361-4caa-a42a-483d737bf5a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a08f7d27-3dff-4825-8ed6-ad140cf1afe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f8e0a4-df16-444e-9fb8-fb814be1b5e0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b0eab8-1e8c-45aa-a5bf-af2e46babaa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c9f217-4b9e-4494-92ab-3c47a7bebe31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "547dda9e-4fbd-4c27-9f18-4e8f32a98b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb334ec-99ed-45f3-aa22-fcd6585c7cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db57deb7-a670-4756-9ac5-62c0e4de85ad",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2d6b6b-1dcb-4dc5-b5ba-a31e4d957cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4821f62d-b0ef-4652-a39a-1a12372d058b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "811c466a-d6f6-4c86-82e2-8034c6cb1b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0a46ba-2a8e-41a0-9f17-5e9d885a7b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ca47b6-d7da-4363-aff8-9656b51a0bfa",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db140c5-abc2-4371-b170-522dc5578064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e68277-6e11-427f-9b3a-895c01ef79c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c164e416-a84b-4016-8927-b19dfe31181e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134e66c9-ad5d-480a-b36d-ebc99acd152b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf1361b-7e8a-4cf4-965e-b7e2035e281e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5b75f0-7b66-4a8f-9f32-5983341e00ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa059af-d724-4f02-9b05-e99bd5da66ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2d2e9a-a7a9-4a9d-917e-16f1810613ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4b7b521-e364-4fd4-a7ff-f2c52826f101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec99a05d-c261-4f14-9afe-ca2b634f93c4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386b187c-a2c3-4d8b-9191-ed8a40af222e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf024a70-52f6-4024-bc4f-aa900d86c6ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70b6dcd-f43d-4dfa-862d-ffc45133615c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01f0121-3fe5-4189-9deb-80c5bd089182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7943f8fe-d29d-4bef-9331-19874324b716",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6fffbf-2654-4fcf-9016-e2269a0eb5fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bdaa782-c5d9-4914-8324-943b76b0b954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70904377-47ef-426e-b222-ed7683d5ba0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319cd181-23f8-45d0-8dc7-396d98a218cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41183f63-7065-4943-b699-a20e073d615d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f09d95d-2ca8-4aa6-9a99-6bde10fe5375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d56046-d01f-432b-aabf-29d656835dfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6142230-e0ed-495f-9f2d-6fb1708aa7e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61cd270e-c279-4209-bd84-1ca2270825f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21222f5-86d6-4c12-8ab4-54b6b4b199dd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f38e1c5-9960-44a6-8ccf-5d41c3b34de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed060615-60d7-46ff-a76e-26d4a3dda08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c973a48-1fae-4eb9-b0bc-0b5fb9c9aaaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85859f2f-46f0-404c-b931-b213c64db90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c953c0fd-5835-4ec3-87bc-9b3266187f36",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57789af7-d0ac-4348-bf12-bbbe78276d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01589c00-977f-4ed1-a972-fe15545bb91e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f8327f-ce33-4e32-ae45-a2fc815b4439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cab9709-55b2-4f98-8b15-e0b26a51f9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1ad651-6c1a-4a8f-beb5-49ed7b6b4521",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e687ea-749e-44c8-852b-95527200d566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c976b42c-17d1-438c-a4d2-5bd9bb5f7917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cb0904-ccc7-4cef-8d3c-1b14b0f79086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8bf0d25-0d98-46cd-b897-5a9811da2cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fe5d8f-5d08-426f-86b3-89f7f970c0d8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624c9976-bfbb-4e94-8c5b-ba8676bce8cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6675d9-1fac-4ef5-a059-9dbf40f055dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a6b15b-9764-40c6-8d52-130743d612df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb933e4c-c747-4102-99f0-5f5fbf73616f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba852ee4-9cce-4fa3-be3c-8549e17fa4d6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4e004c-7dba-472b-9a9a-76b2bd010eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a70723-dc99-408f-ad4a-6435145273de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "298ce2d4-a32b-44a4-9e90-36f6b97292da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5597f1c7-cad1-4f69-8125-4b893bed0043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b3bb93-80fa-4466-84d7-9c9b1debf217",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6459e17c-d343-4a59-b8cf-611cf58f7c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca4e3de-983a-4756-bf71-d17fbc534a4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "409b1628-1957-401a-bab4-239bd675cce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d790f4-77d9-4a22-aa98-f0e20a9aa8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db866d1-fd03-4ee8-bfd5-634ef51fd2c9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3b4cf1-f6aa-40c7-9da7-50b35335caa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4985c70e-5611-4cac-8823-d47d68c064c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb96044-ed46-42e9-884d-bed715fab6ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ac263d-f8bf-4b63-bd5f-6ee60957734e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a368b9aa-21da-4d14-b819-fe35f380d2f0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92100040-a7c7-4716-a839-720807433e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165fe735-8388-4892-98d4-2044a2cd6d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc138efd-a47d-4bc8-bb75-5a229632bef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60eaa82b-f136-47c7-9005-1041f79f0f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef144e5d-9c8b-4e60-8147-e199004f7788",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884392d2-d085-4424-a1b6-bceef773cb8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8503b26-d6bd-44a9-96ca-46ff128b52fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af58d0f8-bf9c-42c4-9486-91b0a83c3287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a66fe1-0ede-4880-9bc7-1b88d07a5303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b98d8e-d5f2-4262-b505-1296219b3a6d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ebaedf-9c2a-4a0f-887b-a8e069bbb671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99411ace-b43c-4219-bd4e-476e592e5255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18f1fdd-b4bd-446e-93c5-d97d9d35f9d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b849d7c-ba68-4511-a1de-d84cab2ccf60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db22bf2-3762-4f1c-a6a3-5f6e80934c1e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a34595-cb81-44f4-80f7-6a4145c7dc72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0095eac-e293-4593-9ef5-7def18d72798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "546d7c68-71c4-4236-9878-2d03a4a175f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b663aebc-7796-4183-b8c8-988e59717b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc05a052-3b6c-4e17-84a2-ad7ead2a4bfd",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c660ee-40e5-48ec-acf6-95e6b107cfdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351380ac-17ce-4a57-975e-a40014997eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1150e1-9bf0-42a2-8eed-4ac9a57262e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117dbadb-1724-4fb9-9d01-bc3afc34b535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb42501-a230-4020-8c2f-83fd75a88299",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c8bba5-9521-4860-b4d4-28e18327d509",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fddfc742-bb3d-4807-9412-ea545392bda3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba3e006-63e8-45e6-b5fb-187e5451297a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4128e13-e0cb-4118-90f8-b0055eacd11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a385a4b3-e376-4cea-8ea6-1ffcac389506",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f2bc0b-0cb1-4d40-9465-f3759b06c333",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b5f50c7-0fc5-487c-9231-1b0411d5a576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb30ae7-70d6-4e85-8bd6-48c4dadec041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058d267c-4fdc-4c52-8904-395b7a3b5f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26415ea2-17c6-4a70-a46c-69c9905d89f9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013c20be-36f4-4584-a2e1-ac42aea225e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5c39829-423f-4cfa-92fe-d95f0e973160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70318e22-34c0-437c-b028-151e2d9bc6e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b05d83a-40db-40f7-ae9b-94f3a30d0542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db247c49-5acb-4010-b80f-c0a35437d091",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18e0d2e-0d18-467e-b8f3-d7202cc56d27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18bc6e1b-555c-4bb3-b453-39a73417eb60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00aad4ed-3d56-4be9-86c9-fae728e5044d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d042e1c2-5d77-4841-897a-f6794b7b9305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e612bb9-dcd8-439d-ade1-622db0d7c224",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48bcdc2-611b-4835-a87f-370d28fbadf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84f4ad0a-3f09-4828-be0c-9be13225d19a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd0c211-c640-4dfc-b7e5-d4f8f9b7864f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5018cf33-9c02-4e44-b750-62af1b301460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9dacd03-eaf3-40bf-a2ae-91f545511ab5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7caccaa-a57d-4577-ab55-99ae54a8ee68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "363fd712-4b5f-4a2e-b86d-97c3c0c72f23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4709a11b-7e3e-4384-8a47-762e4b54dd3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa9ba694-a75f-4064-94bf-ef2c6b0e0836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad657354-2b25-48d9-b332-d9aff2db52a3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05ced75-d63e-45e3-86bf-43b775d565a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15e486e2-1156-4ad5-a57b-68fef57018bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d38bb1-7c90-4636-8a57-be2762bc3e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50aed70d-fc44-41ab-b881-01418c3db40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b87785-b63d-4056-8601-295d9393d48b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0296d8-2738-4360-aebc-89f5d804d47c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a284eb57-9ddd-48dc-9503-98a4197bd61d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ec4e39-5fee-40e3-926c-18a6f6e94efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d17e89-4ff0-465d-96fd-baf37794abe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b009a594-eeba-4137-b925-8491d1553351",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2575325d-415b-4dce-a651-3b80726bd9dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9138011-2f8a-4525-a700-0097f5593d4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bb7f82-3176-4d3b-b5fa-548eb81ced2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76a573f4-44cb-4e3b-befa-d31a1fed1cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b8bb22-d9b9-4601-8c0a-b3e92f8a15b5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89fad7a-3c7d-4b1c-b2b3-a047d845119d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db927c07-9a0e-4ecd-b935-0c74b22b34da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab90c32-b036-4fee-ac44-bb011bb81295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6536c4be-2f96-4b19-997a-9b0bbfa0f923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7d1177-cd30-4c4a-b358-85d0ed1cceab",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc471165-c438-4ec0-8423-1fbede39cf2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "399efdcf-87c1-4108-9c47-2f166900fc5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "175412ab-449f-4e99-b62f-189191cb35b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f03b5a-112e-4272-9c9e-2141cb408d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5792d365-55fd-46e1-9f44-ab7df2c48be9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454976c0-ba09-4d88-aec2-913272b8f28c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8570509-4c75-4eea-a6c0-7b84f1010204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "492fcea8-1a69-4971-8c0e-0ee5d89cec46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ce0c49-c5a7-47cf-ad02-d4d50c15b2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f93c8f-c055-4858-b120-5b1eff27471d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cee878-7143-4308-8c47-021faa77f336",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc2b89b9-aeed-414a-ba3b-59f6edb373cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d574fd-0884-4186-9ae1-c79686345a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa0f14c-1f89-4f25-a886-75c7cce9c4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a638c4a0-603f-479e-8786-de4d3ab773e4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c06c0b2-f86f-4e31-995a-8fb75764dc7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44d46a79-7b5c-4032-bf03-9df30d112a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3216ac26-528c-4525-8098-b8fceacb3def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "979f54af-4ed2-46fe-88ff-f00dd23c2483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9645c157-f8cf-4f65-b4a2-63f4bc168cb5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48cfcfe2-9fdc-45bd-9910-f9c578f452f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a91d84f0-6a69-4ee6-b65e-493ddd634768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3af4a9-f21c-49a4-ba60-28139435aac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "772465da-9235-445a-b58d-88d3e97d1db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38408245-1858-4bfd-bfb2-54ae7d8c579a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd10e9b-fc75-4cc3-9672-f5d9554c494e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17c7b3d7-99ed-4ed8-ad37-bab4d1d81795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64bf812-24f0-4c07-b33c-62166b0c5b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1098a561-47c5-4da8-91e1-ae9a21b6e09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3db134c-9403-41c3-8f6b-3f80f1f19b3d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7670b96-e751-4ba3-ac14-8d71674ebe34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e456779-18e5-47bc-8a25-62e5fa473eaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c52def-187a-4059-9cf8-e4eff0bc35a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56ca9b4-81d7-4c6d-aaaa-345d63d28694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003ccefd-b826-4020-b8fb-dbc81ba82473",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5f54a1-0d9d-414d-a5d1-845d560f1dec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc9b2a99-79d9-46b7-a2b0-25776a6c677e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee872835-afe4-43bb-b373-13108829d020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf5b868-e605-4a07-b5b0-8c560460bb6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec18e6a-0928-4992-a17a-2ef58ad0e911",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08427e68-21fb-4dc3-99ba-7a0dc11efdf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f51aff39-df74-4874-b21c-cda1cffc13b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5083c62-cc3c-4c68-9de8-28af694d5241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f33463-60e3-42ad-8151-2f4b0f112c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a88325-42cd-4980-bacd-b29b01ad845e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad536d3-36cc-4fa6-af17-ec5a78e8655d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c38dea0-e6c8-4615-850c-1b04c6e5562b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "623957fa-d179-484d-b59d-73f2bb373aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa013e30-c95a-4ac8-98a9-ee910cd24448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd73179b-bd6d-4f1c-ba74-dde5fa55883d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308c71cf-bbd2-4955-a258-959256b4a304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c4edb71-989b-4f61-ba4d-87786265bac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be512d5-7529-4952-9430-a304766b3d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe03ff2d-9ca1-49db-bc4a-bbb2adebd175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69a86aa-77da-4972-9bbd-4a4d1df9b979",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06354aa8-ff0e-4ada-a898-a9f74b8c502c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f6dab90-9399-489a-982a-017614a0f655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d71b32e-3922-4fa6-b4e9-39cd3d0aa062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3036ece5-6c1a-4d42-85ea-a916d26c7410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3f3193-9bf0-4474-ab29-eacd6b146ff6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73889cdd-0fa1-439d-b6f3-ab1a9e525cbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d81b7a8-83be-4715-9be3-c488b2c10f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5424ffd6-833a-452e-99eb-37bb70cf217f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d75735ad-f220-449f-82a4-3505d127c33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34dfc3e9-a8ac-4577-82af-ebdb5acfd0ae",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7caf1ad0-6eff-4a00-8e57-61c4ed2d4b7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14ffec71-4a12-4e5f-9519-c1441825594e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29265608-f0f4-4a6d-8115-5592a9c507fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ddfd80-676a-4592-a5ed-95ca5ea24c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eeb414a-193e-4094-9ab9-b3ede18eddb1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74db8ba3-b610-441a-a4ab-c4fb8bb48396",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f82298ae-a483-4459-969f-12d772f3ae44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "750fc255-0a8a-4ca6-b3f9-76c0dbfa5025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f78746-6d4f-498b-9671-3534dcd96df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa97c94b-52a8-483d-8c0a-8b93abf23b83",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a098c74-b1c2-4cd2-bb2f-388f1a6caee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bf3daa8-d8dc-4c2e-968b-d13bc98844f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91ca9ee-1a3b-4c11-b330-e33b338f1fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c61e168-f9be-4b1a-8416-b8f8fb6afb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35a5659-9fab-4316-97eb-b147604c8567",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5f62fa-034a-49c8-a5bc-dd6aa6b960b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a46b4601-5d5c-4cb1-9f10-8257d3b32365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5200f91e-b66a-42a5-9b76-a01d5ab26e8c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4b3312-6e7c-4efa-a7c7-bd734edaa447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0e21ba-720c-4a06-950f-0350fd44b42b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a472a96-8fd5-46d8-9e8f-cc0477a33c33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12991cf1-131d-4ae7-9b46-1de14d8e0e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb718a9-ffb2-48e3-a9b0-6abe01c3acc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7023aff9-d115-497f-b8d3-e6f028a51d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3891cbe2-b5a3-461b-8b3f-03c7d65d88b2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c865538d-8543-417a-9fdf-92774f154ffd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ca232cd-7bb6-4bbe-a808-68231782ef50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01c1c44-1e48-4693-bd71-60aae776b138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e8493c-b679-4522-bfdb-beb23522ed89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b401d35d-8edc-455b-9c7a-26072281e6e5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603888cb-af33-4b0a-bc1c-7a321456d4d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2f475d2-407d-41b3-a36a-5730b51dc94a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b71b9e-7718-4e45-a49b-1e9eecf58d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3b3257-7b26-4aed-9c1b-c834b9b62062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07d6073-ad58-4b1c-ba7c-d16abd27ba63",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22647c8-7d5a-4d29-a600-9e167b0cca63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84bed56e-0dce-4d40-af7c-c262e0bf5a67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec568210-23e1-4432-9b5a-9f31decace3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbca966e-7319-4788-b22d-7897f2b0b4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976246bd-cd24-455d-ab76-f863d8dc3c93",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4be953-3004-4a34-9c4b-c756ad301a24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b535f6d6-f7ef-47d6-a3db-fdfc1f7e6a8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f31311f-50b1-4151-8e5d-dca9b4442544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99acadad-4e54-458c-88db-07804a8719f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5354860c-8251-4ac2-9aab-264b2e891a58",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f200cc-20ce-46ec-8919-97acfd756893",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d94e691-e799-4a6e-aa0e-cbb35a6711f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbcb20d-ba54-4b9e-ae76-22e0828aaf7a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af2ad61-6492-4ee8-9c8f-9a1690e11d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d675a6-6b1f-491a-a7c2-ea3f312fcce3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2072854-999a-4c93-9672-8f2ef6f8d7ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5644de20-3fe7-4179-ad17-91b84224019c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc96e2f2-9489-419e-9f7e-ba4ee8e6acfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e44bd863-d043-4b9b-898c-289890eb31a2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2401d529-03f2-4879-9f2c-7a819382510c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d7d308d-c37f-4194-b5fb-6129e65538a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bad531e-e04a-4fef-bf03-4c2bc6a7d4de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7d3da22-187c-4d04-950c-31e3a7a79bf7"
                    }
                  }
                ]
              },
              {
                "id": "b0145625-45e4-4ef4-ad16-7b6da4eee766",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5615114b-378b-450b-a795-27c1738bb064",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b213608-3cc5-433a-bbe5-ac597833db5d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "125c57be-e7a9-49f6-b718-93354208037d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3553be-ee20-4a6b-b070-5f9f45830872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac83636c-707b-4f26-9eb0-943c16265b61"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4767fe2-347e-4505-9ed4-a0d2dceca9c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8776ab9-cf43-4271-9cc9-a42701817f89"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a944af33-469d-4d79-b61f-f43a3ce01bd3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e4dd28b-daa0-43f5-bf72-90c493102af6"
                    }
                  }
                ]
              },
              {
                "id": "ecfa2438-7989-4b40-a0ce-e69f01c18675",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "53a8089e-e651-4cf3-bb2a-ba52607becad",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5a7406-807c-49e9-bea8-c959ca7776bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "548d6392-dfcd-4da5-aba0-f167b55bc992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f2dcd5-c4f0-4400-8b42-639652adb199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220d54e9-9a3e-4c1e-9112-f5c1241f5d75"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2d0a2a59-2b19-4424-baac-621e85c92480",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1c356a6c-b1f5-4927-83b1-5b9939ea386d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a9e5ded-f64c-41e9-870f-2d1bde2065c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c80ef982-7305-48aa-b993-5c53a6f1a817"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c303fda-e6c2-4dcf-a689-84d9ce67f65d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36d94d50-9fea-460b-8e8d-5393baf5176c"
                    }
                  }
                ]
              },
              {
                "id": "b760e345-9fb7-4a8f-96de-1efd84239876",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db40cb08-e6ee-4a38-9f72-9a04d5d32a5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "87973649-db75-49ab-90a8-7663385ad05b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f98f3480-718a-4a42-90ad-321b63c510ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce4a707b-3f17-4c13-b5b6-002efdb94dd5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a7062a6-c138-45a1-b6d3-98fceb7c1e36",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0bf97c8f-32ac-4413-b7ec-4ed4ae6b3f1b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec21d145-a040-4e52-8a5b-25d68c512040",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f79faca0-82f8-42d4-8500-8e613dea61c2"
            }
          }
        ]
      },
      {
        "id": "c9893ada-2062-40ce-9c90-18876d3ce398",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8f19c568-37a5-4f12-a3d1-ee851b1c2041",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb096f70-8a48-4e82-863e-4fddb802b31a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2874210f-22b2-43fa-a083-60d858e34f4b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3120316-93db-495e-b670-7713d7f86329",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fd7d54c1-6ee1-475d-a7f5-195b566dd34c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5b11a5-e302-4666-bf73-840e2df53b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59c20243-a89c-4bc7-8b61-3289fd4805da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93ea22d5-d749-41bf-9df1-aeee2f45abb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11bc5967-069b-4ee9-aa8d-71324491df24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a5d4b7b-806a-4170-b480-b1b510ae0ebc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7104203-f20d-4e4f-9acf-58f349a8de8f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9549e6e1-877d-400e-b8c5-ef3706cb4556",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fd1e547e-856c-49b5-bb1d-6ce0983c84cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb05b7ac-2d82-4085-90f0-dd5f6eaadcbd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52df2b00-55e9-406c-871e-233822e2cb18"
            }
          }
        ]
      },
      {
        "id": "9f997a85-9036-4484-96d3-c4a9df1a673c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8a61099a-c5e8-4298-a728-2f345eee313a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f79e32ef-734d-42f6-80e6-a026a6bd805a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "deb15cad-5051-4cb9-b260-764b930c7392",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1448ca26-c3e7-4fa3-aa2b-3d1611b2887c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f25c218b-b683-4c6b-a69c-efc0c9b1bd44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cae82fe-1fd6-4003-a88d-ad85ac4f5528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1ae27d1-7e79-48fe-8746-98ae282ecf5c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1a2e3b7-53da-437a-89de-d72eb1354e94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d32edf97-afc5-413f-8003-7b4a3b2501d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f0de451-9a1a-450b-99c0-44a12e38d1b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61a0fc73-94bb-432b-97b7-f78a903bf693"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d809c80c-139e-4c8d-9d02-d7c5b4bb6a83",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "83735b85-4214-459a-9dcc-81d3ff6d3fe8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c1836a9-ebe9-45a6-ba9f-b30b1710817c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9ba0e3f-9a00-49f9-a7bb-da2ea1565ebe"
            }
          }
        ]
      },
      {
        "id": "695b8ccc-99c8-4cc3-a592-10f76e0d6bfe",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8a562119-3c05-4ec9-9f92-e6a0cec9254f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "54126423-8c11-48b5-8211-037d977484ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a5f486c-62d9-49ec-9494-50872c7c0a96",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192e8bdf-fb29-42b5-91f1-058fa7822d71",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33ab98b9-be77-4d41-8a19-4356165f2af3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04cfaed4-85e5-4254-b406-f1b920c8a1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8247e0d-b58a-43ce-a01e-ce730fce2a2f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35c91b7a-a317-4bde-8a3a-0fab8c1c199f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e22c1c8-6175-47a5-b538-4b918cb7c9bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "883f6090-2442-49c2-ae7b-8872528b3a6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8612d729-25ad-4dd6-b491-c8c195226edf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "feb8783a-d24d-4339-a4cb-f31f3beb9547",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3962764f-6eaa-4513-93c8-d14798b3610a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93993c47-f114-4d1b-8204-ccc3616b415a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac5d6d2b-882f-41be-8dc3-fab2da650789"
            }
          }
        ]
      },
      {
        "id": "d5027e82-9133-4405-a69b-996eb0c2759c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "662a9e95-3147-4eb8-a95e-1e3e719e06d2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f49f266-2f36-4447-94dc-9b3eb91ebc65",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a3020fbe-383c-4a05-94e6-cbbc148e5d81",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db5404c4-cc35-48b0-a771-5949fd37237c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f475659-d859-40af-a37a-1f4011f90452",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 39
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 161.5714285714286,
      "responseMin": 6,
      "responseMax": 14252,
      "responseSd": 930.0788704273513,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1728262072460,
      "completed": 1728262121980
    },
    "executions": [
      {
        "id": "25357665-e9cd-4369-b232-89fe3f53d51c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2b8ac423-cd79-4a7d-825d-391cec09df31",
          "httpRequestId": "a616915a-0c31-469b-8b97-809e809ca27d"
        },
        "item": {
          "id": "25357665-e9cd-4369-b232-89fe3f53d51c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "986d3121-2f68-4987-993f-6987a9265b53",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "2f7700cd-5341-4ae6-b008-bdf237456b07",
        "cursor": {
          "ref": "7884b707-51a1-40f2-a6af-82c8d0e475a4",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "67f177b5-bf45-415d-8a1b-6c272380a1f4"
        },
        "item": {
          "id": "2f7700cd-5341-4ae6-b008-bdf237456b07",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "daa804b8-6b3c-4cde-8227-7bf9415f0ddf",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "ede1fa92-6ad2-4cf0-a44a-1eb86b738a41",
        "cursor": {
          "ref": "a5eade42-b64a-4a63-9cc0-025ee119c26b",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2ff666a8-4ddc-45c2-97db-c9552b0f3f53"
        },
        "item": {
          "id": "ede1fa92-6ad2-4cf0-a44a-1eb86b738a41",
          "name": "did_json"
        },
        "response": {
          "id": "afa4d0df-d8b6-4138-9180-ae56860dd135",
          "status": "OK",
          "code": 200,
          "responseTime": 405,
          "responseSize": 3607
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b37f69-f01f-4843-b955-70393a7d791b",
        "cursor": {
          "ref": "87b5baf7-6616-410c-9654-85f85e77b1f5",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "515002cd-6e2b-488f-bfbb-fdc2c768be87"
        },
        "item": {
          "id": "78b37f69-f01f-4843-b955-70393a7d791b",
          "name": "did:invalid"
        },
        "response": {
          "id": "72795d09-e62d-4fa4-88d5-f2cc8264b85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b37f69-f01f-4843-b955-70393a7d791b",
        "cursor": {
          "ref": "87b5baf7-6616-410c-9654-85f85e77b1f5",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "515002cd-6e2b-488f-bfbb-fdc2c768be87"
        },
        "item": {
          "id": "78b37f69-f01f-4843-b955-70393a7d791b",
          "name": "did:invalid"
        },
        "response": {
          "id": "72795d09-e62d-4fa4-88d5-f2cc8264b85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0f3417-80dc-4aed-bd7c-22f31144e952",
        "cursor": {
          "ref": "225fac6f-f353-4d58-8323-19b6f20b8265",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7434ae94-40f6-41d0-aac4-7ca3b3ab851a"
        },
        "item": {
          "id": "7b0f3417-80dc-4aed-bd7c-22f31144e952",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "32f88d21-49a6-4644-80b4-fbb7d3522251",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81c99b7-90e5-4583-aab8-46e8ff9dc1e4",
        "cursor": {
          "ref": "4f3abd5c-f9b8-40cd-b5d0-7cdbada802b2",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "03121084-db34-4451-b22d-42c3126be567"
        },
        "item": {
          "id": "f81c99b7-90e5-4583-aab8-46e8ff9dc1e4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "856288f7-c686-4492-b1db-a9e54b31be28",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bfb993-eb05-44bd-ad1b-5d7970fa1ace",
        "cursor": {
          "ref": "d404074e-1364-4067-ba98-8612e3a14a4f",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ab6e83a6-1cb1-444a-bcf7-d234103b283a"
        },
        "item": {
          "id": "c5bfb993-eb05-44bd-ad1b-5d7970fa1ace",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b3155c72-1df6-41b2-8508-5845c01b46e7",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 200",
              "stack": "AssertionError: expected response to have status code 401 but got 200\n   at Object.eval sandbox-script.js:1:7)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "id": "11afbe81-57fc-4c6e-8e8e-a7a6e240d3e7",
        "cursor": {
          "ref": "ccf172fc-52f6-4c23-ab6a-0c65e2455ec3",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "009ddee8-45ec-4cab-be49-6f618ea4e9dc"
        },
        "item": {
          "id": "11afbe81-57fc-4c6e-8e8e-a7a6e240d3e7",
          "name": "identifiers"
        },
        "response": {
          "id": "77ae80e7-f366-4f57-b7e9-2a6ea479f352",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d8b763-5896-4b8e-94b9-951fa912f175",
        "cursor": {
          "ref": "00701369-ec64-466f-ac43-677d0ec70838",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e7868caf-c640-47c8-8f2a-71bdf3a9ce95"
        },
        "item": {
          "id": "a0d8b763-5896-4b8e-94b9-951fa912f175",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "663ba04d-2776-4393-8fe8-4b2f575f41a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb9fc02-f6fb-4c89-8802-3a25e6fa50ee",
        "cursor": {
          "ref": "c868757a-fc94-4589-b115-3009136cf424",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a5c07975-800c-49d3-b321-3aac70f02912"
        },
        "item": {
          "id": "fdb9fc02-f6fb-4c89-8802-3a25e6fa50ee",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0a36ff20-5203-49e6-ad58-1f31087011cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce68f95-48a3-4c6e-9498-f3913ea9d08a",
        "cursor": {
          "ref": "3090942e-a936-4781-a69a-b01135454518",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b5286969-9651-4dd3-b9aa-6c360c864962"
        },
        "item": {
          "id": "7ce68f95-48a3-4c6e-9498-f3913ea9d08a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b95ced4f-584a-4387-b516-14027b0f97a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a45d6c-38de-4320-944a-b905bace1ad0",
        "cursor": {
          "ref": "82601297-d631-408e-85ca-7fd7ed630860",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "13c0dac3-4870-4864-8e46-7f70003c16d9"
        },
        "item": {
          "id": "b7a45d6c-38de-4320-944a-b905bace1ad0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "25290ee9-580e-4842-a650-1d8014e2937e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd60b5c-d655-4ccd-9468-93168e5fd2a2",
        "cursor": {
          "ref": "48112e1f-7cc5-465d-b867-1b830aeb02b2",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "641859b3-1752-484f-9199-095af494476f"
        },
        "item": {
          "id": "efd60b5c-d655-4ccd-9468-93168e5fd2a2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c09c6631-c76e-4860-8cf0-29a212cc232d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2876e98-3654-4c8c-9b93-80359eba7917",
        "cursor": {
          "ref": "b3b61d0f-2c14-4cdc-a9f6-0a9e10c71ec4",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4ac0af92-b094-49fc-92dd-83289d6f2378"
        },
        "item": {
          "id": "a2876e98-3654-4c8c-9b93-80359eba7917",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "717edeb2-55f6-4a38-bd0b-b37ea1d400dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8fe1ef-d853-42c9-8a55-0117f680f7a0",
        "cursor": {
          "ref": "3900fff0-5af8-4b96-b161-f3a9b172c751",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7e90de29-0d96-4645-b55b-a4cc208f5437"
        },
        "item": {
          "id": "3c8fe1ef-d853-42c9-8a55-0117f680f7a0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ff0d5c29-6a4d-438e-8de7-bcdea92f6004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388e7666-60c6-4b62-a2eb-664b1f6e6105",
        "cursor": {
          "ref": "d8dd3bac-4e4e-4e38-a21d-fccb08513dce",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9b261d1e-337f-4f17-a922-1cc30b631dd0"
        },
        "item": {
          "id": "388e7666-60c6-4b62-a2eb-664b1f6e6105",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a98b5d92-f103-48e7-9bcc-ab3080e61836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7552ae-497e-4ea6-9c9d-f236ac5fc592",
        "cursor": {
          "ref": "dbe47fa4-a5b7-48a3-8d16-30f50ea712fa",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "84410c09-5a93-43e5-a3f2-4e7868239e83"
        },
        "item": {
          "id": "fe7552ae-497e-4ea6-9c9d-f236ac5fc592",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5baae18e-f5b0-49d1-83f8-e7d4f742a8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42ec021-b65d-4841-957b-e8c87b62b239",
        "cursor": {
          "ref": "d3b3f7d1-52b8-44ef-91d3-d5842264db27",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2ba712d9-6942-4331-a84b-43309efdb39b"
        },
        "item": {
          "id": "e42ec021-b65d-4841-957b-e8c87b62b239",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "212fbda3-31f0-46a8-97af-b66aa15ad25c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b3d4a4-1bea-4f91-8a42-4ea584261cf4",
        "cursor": {
          "ref": "8c2fc716-ebc7-4648-92a6-25411f042104",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "42fbb56f-9c82-4995-a0ed-6778fbbf607f"
        },
        "item": {
          "id": "92b3d4a4-1bea-4f91-8a42-4ea584261cf4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1824ca06-390a-4888-a2fb-87bc1a291d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8cb0c4-d5bb-4698-b424-3e9bf0ce07c2",
        "cursor": {
          "ref": "f01d95db-26cb-471e-b8ce-168d33d07cc9",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ae691ad4-60c5-4dd2-9375-2ed71c17282d"
        },
        "item": {
          "id": "9d8cb0c4-d5bb-4698-b424-3e9bf0ce07c2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8a706dfe-0069-4d3a-a56c-cb27bb847b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2fb5e6-02e8-41d0-8e0d-5b0eec40d20b",
        "cursor": {
          "ref": "2cdfabab-b0eb-4e13-b926-b99428937549",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "720980ca-903e-4337-8b32-7bd7bdb7c8ee"
        },
        "item": {
          "id": "6a2fb5e6-02e8-41d0-8e0d-5b0eec40d20b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "88c96514-32a9-41c1-8c3d-508550a6f1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b31a41a-e8db-4d2f-8676-0f699c95f2f1",
        "cursor": {
          "ref": "adfbc6fb-b34a-4c2d-8f17-191774ef2ce4",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "cf513f67-d618-473f-8fc1-431d00ebbbf2"
        },
        "item": {
          "id": "3b31a41a-e8db-4d2f-8676-0f699c95f2f1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b17e5100-5d38-4a7a-a2c7-7d2aa020ae9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c45454-ef90-4757-97be-bdafe42cd45e",
        "cursor": {
          "ref": "3a3bd841-c8b5-4622-b9ee-6179741ee308",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0353337b-91aa-4a6e-9433-76cdd23f7f64"
        },
        "item": {
          "id": "67c45454-ef90-4757-97be-bdafe42cd45e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "888c6159-1fed-4eb2-87da-52af7ba7166e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5212556-391e-4d79-a428-2b8f14f4fc6b",
        "cursor": {
          "ref": "27a1578f-6788-48b9-b888-79d53702d310",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "861ceb91-9d5d-4229-98c7-6a22fb479fc3"
        },
        "item": {
          "id": "b5212556-391e-4d79-a428-2b8f14f4fc6b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "121352ab-b659-42bd-881d-324b12d959bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8235b6-fb14-4ee2-aad1-57d1f32f701f",
        "cursor": {
          "ref": "46ba682d-95ab-4cce-a7f4-20d666306e6f",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "576ef616-6bc3-4341-b658-6f4d068cdb82"
        },
        "item": {
          "id": "ae8235b6-fb14-4ee2-aad1-57d1f32f701f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c8915a45-421d-4e74-8c4d-72e91bcf3e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d7303b-3c65-44c7-976c-942eb69f4277",
        "cursor": {
          "ref": "5369ca0b-c775-4246-9319-cd36d9ae761f",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a481c47c-8f88-408d-96e2-432993f7e0e9"
        },
        "item": {
          "id": "54d7303b-3c65-44c7-976c-942eb69f4277",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "45d63c62-f732-4b7e-afd6-fe72cfb47a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1099684-f840-47d5-9058-020b6b42e192",
        "cursor": {
          "ref": "05556d95-3cfb-4aee-9b63-500212c01c65",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b78e18c4-bc9e-433d-be70-b4f9b82d2fb8"
        },
        "item": {
          "id": "c1099684-f840-47d5-9058-020b6b42e192",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "608b3b7c-64fb-41b8-babf-82db249a4620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b8df69-9deb-4f65-abf9-5ef6d0802176",
        "cursor": {
          "ref": "0d0bff48-5b02-4b33-a642-df4a3b9ad90d",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "621e73c5-e1b8-480e-8775-2c0b6ae43139"
        },
        "item": {
          "id": "63b8df69-9deb-4f65-abf9-5ef6d0802176",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4cf2a309-f785-4289-8f10-c71dbdc70dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf2514d-cbfc-41f3-acf7-5a2f9f4179c2",
        "cursor": {
          "ref": "5c3ef655-4b90-40f6-8b1a-98956b51ce7c",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6c3bf9ec-762b-4113-b97b-a90cf87febcc"
        },
        "item": {
          "id": "3bf2514d-cbfc-41f3-acf7-5a2f9f4179c2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "89c21b42-f08a-42fa-9f63-d2fd5604e8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9b0f01-b39a-425c-8ae3-983fafc3bf1c",
        "cursor": {
          "ref": "b0a9a5e6-0350-48b8-9a1c-f45873ac38d8",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1843dd35-fc65-4c5a-9331-46cce67d67f3"
        },
        "item": {
          "id": "6b9b0f01-b39a-425c-8ae3-983fafc3bf1c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "62895d2b-14b4-4eb2-a15a-e8dcdbe6d26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc968c33-1469-4bed-899b-f05372f9c9b2",
        "cursor": {
          "ref": "d596df9a-10da-48bd-be2c-e956f3fd6e39",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c0bb5acd-4fea-48c8-beb9-0b94defc91f1"
        },
        "item": {
          "id": "fc968c33-1469-4bed-899b-f05372f9c9b2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a6c565ae-f213-44fd-b0a0-71ad25fd7d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae74bf7a-436a-4cf3-9e3e-3fa8b7991743",
        "cursor": {
          "ref": "d7906eee-f61e-4684-8f8f-0ee8f2658a3f",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d7d66ab8-d3c3-40b5-a7ba-d888f5ce4a46"
        },
        "item": {
          "id": "ae74bf7a-436a-4cf3-9e3e-3fa8b7991743",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "da3fec60-4353-4428-ac00-55c4d298d4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0553e2c3-28f6-48e6-b550-9ebb00143148",
        "cursor": {
          "ref": "39a833eb-f4e1-4c8a-bad9-bd31473f975a",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2da04f29-9809-49aa-9af6-26e1278894e0"
        },
        "item": {
          "id": "0553e2c3-28f6-48e6-b550-9ebb00143148",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "fd44ecd9-9ac5-4c74-b734-56c901ab08aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c9a6c7-c195-4dfd-8ef6-e8b102b68396",
        "cursor": {
          "ref": "bbf9455c-8cf5-49b8-84d7-06f2e06fc253",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a956fbf4-38cf-4c1b-b0a1-bf50fcc8e01e"
        },
        "item": {
          "id": "09c9a6c7-c195-4dfd-8ef6-e8b102b68396",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9b4233a9-903b-4e5f-9505-ed9783ee09b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41bcba1-b07f-498b-8cf5-3498224f1250",
        "cursor": {
          "ref": "877e86c5-884a-4a01-a2d5-9d05c72c6caa",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "68801fbc-38be-413d-8101-5a995c29cd1d"
        },
        "item": {
          "id": "e41bcba1-b07f-498b-8cf5-3498224f1250",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1e111e1b-9927-433b-9ca0-f20275c6e8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a46a7dc-f1a5-445c-89f3-12a7290c372f",
        "cursor": {
          "ref": "98251972-372e-4072-a0f4-39aa05b89995",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "996abf7f-5f5d-4918-acb1-d07dc3798bfa"
        },
        "item": {
          "id": "2a46a7dc-f1a5-445c-89f3-12a7290c372f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fd78a92f-79bf-4acb-a238-b3bfe28d4b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db0aa40-783d-49f7-af16-d1645a5d1210",
        "cursor": {
          "ref": "10d31514-adc9-45d9-9f05-7eb75bbab578",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d27fb973-1ca0-41ec-9649-b27434978d68"
        },
        "item": {
          "id": "2db0aa40-783d-49f7-af16-d1645a5d1210",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c59976b3-df6c-4164-ae77-26ea000fabc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57feaea-45d1-401c-8b96-3e71e7652bd7",
        "cursor": {
          "ref": "117d0608-c0ac-4fcf-9c81-2efa4c9fd1fd",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "798317e0-5fed-4a4b-ad50-05cef3f1982b"
        },
        "item": {
          "id": "a57feaea-45d1-401c-8b96-3e71e7652bd7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fc5cfaaa-2811-4ac2-a8ff-45819c5df9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ede23b8-647e-4805-b5fa-8f96a83448b0",
        "cursor": {
          "ref": "9bb16fae-3c9f-4e14-93b7-5ace5c0b1a5e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "452007f0-84a7-4895-bd93-ae7c8c5346be"
        },
        "item": {
          "id": "7ede23b8-647e-4805-b5fa-8f96a83448b0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ac42c819-1c09-46fe-9131-e3ef59aa362e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7d4e69-7ce1-45d1-a155-5f451bd9ab1d",
        "cursor": {
          "ref": "c9517a2a-ab2f-4a15-b36c-0f27d83d9150",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fe30a7e6-3f97-4e45-854f-d8a758945663"
        },
        "item": {
          "id": "9e7d4e69-7ce1-45d1-a155-5f451bd9ab1d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "51824fcc-6d11-4077-8a9d-0560ed6321dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d801d5d-f89d-4926-86b9-555c46fa282d",
        "cursor": {
          "ref": "c9693a68-c93f-472e-9518-4d44615d3b93",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "65fad910-4e62-4da6-99db-e84f71f86b69"
        },
        "item": {
          "id": "8d801d5d-f89d-4926-86b9-555c46fa282d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "569b6a24-9ecc-477b-bb47-de84aa0c9fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43f6fa1-ed42-4ca7-9a4b-6dcde965c42a",
        "cursor": {
          "ref": "71c224d2-69f1-4832-a2e5-f9369fadff75",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e406866b-580d-44b0-b148-1fe1b6181b62"
        },
        "item": {
          "id": "b43f6fa1-ed42-4ca7-9a4b-6dcde965c42a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e6380e92-9001-4cca-9d87-8ec4f689262f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ce91dd-1838-495c-bc45-958ddb1ac7c2",
        "cursor": {
          "ref": "84d7bbd8-57aa-4ff2-9a77-8be27beafd0c",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d9768573-e384-4897-9f7c-b5c201805738"
        },
        "item": {
          "id": "64ce91dd-1838-495c-bc45-958ddb1ac7c2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e048d5b8-7086-41b1-9cd6-e2687d3f63f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f109c3-d093-49d8-a4a5-fdd9a1b31cad",
        "cursor": {
          "ref": "640600ed-048e-449f-8c62-6c47ca1784a6",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e11b5645-4162-4b0b-8ba0-fc13e6c871fc"
        },
        "item": {
          "id": "93f109c3-d093-49d8-a4a5-fdd9a1b31cad",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "06cbfb9f-189f-441f-a89f-69aaf9e82d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cfb72b-233a-43a3-9a72-8a2d3299ca1f",
        "cursor": {
          "ref": "c6f2efb1-1413-474a-92f3-463ba08fd79e",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8d48c737-a155-4d88-86b6-7d534fa16dcc"
        },
        "item": {
          "id": "16cfb72b-233a-43a3-9a72-8a2d3299ca1f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "768236df-39cc-40b4-9e71-c6eca9ad766c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbbeffd-136c-497f-a2e2-ff3102adb974",
        "cursor": {
          "ref": "2dbbc948-9743-4007-87f8-c3598d5207ac",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4f988748-f019-4a6f-8f48-1dcb85aafdf6"
        },
        "item": {
          "id": "4fbbeffd-136c-497f-a2e2-ff3102adb974",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "02403a2c-3b20-4f9c-b780-444bc6261142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c31619-138c-4f1b-9dce-3033bf137d4f",
        "cursor": {
          "ref": "a66b9e4c-c2d5-4ec6-8bbd-225c8fb51894",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "251c0398-367f-4f02-8640-3fcb2fe815d9"
        },
        "item": {
          "id": "b0c31619-138c-4f1b-9dce-3033bf137d4f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b047ab7c-cc45-4d39-9207-62c186de3533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb43b68-6ec7-4535-9ea8-c6549779dada",
        "cursor": {
          "ref": "a128dc8a-2034-4979-a435-59529753ad80",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8baf9451-0cde-4076-9e35-16b892ac8ad0"
        },
        "item": {
          "id": "1eb43b68-6ec7-4535-9ea8-c6549779dada",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e5ec5ea1-33fe-4155-9a13-e20bdbc5952a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77febaac-940c-4e70-8e28-0aaa3a91777e",
        "cursor": {
          "ref": "d991ea0f-60c1-41ac-b148-b70d67479373",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "58371c7b-63c3-42c9-b99f-6c23833b211c"
        },
        "item": {
          "id": "77febaac-940c-4e70-8e28-0aaa3a91777e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1a5e3351-0b4b-47b9-bca7-554579a9c1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce8de36-d111-46a0-8b63-2a5649f3dc4a",
        "cursor": {
          "ref": "14c463be-e24e-48c9-822e-775caf8ef5c1",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "00255072-03f3-493e-bb3e-bc4ecf1c9aa6"
        },
        "item": {
          "id": "3ce8de36-d111-46a0-8b63-2a5649f3dc4a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6ebb5663-b9ce-49a9-b948-1e84c19f1e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1fe6cc-a9e2-46b1-884e-b9b295472ff7",
        "cursor": {
          "ref": "a72e5f9b-a2b3-4556-bbd0-3b5bce94477c",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "369301e8-b513-49aa-9cd2-3b2073e8c1fe"
        },
        "item": {
          "id": "9b1fe6cc-a9e2-46b1-884e-b9b295472ff7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "84ee940e-874f-4857-85b2-fdd1aa9a19fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b059bfd0-d49f-4fff-86ca-69435b7f4cfa",
        "cursor": {
          "ref": "e10460ea-a191-4e56-8362-e05d21398390",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "95cf7903-54d3-466a-9184-4a3de0b9c143"
        },
        "item": {
          "id": "b059bfd0-d49f-4fff-86ca-69435b7f4cfa",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e5b6a681-58c4-4f8a-90aa-def7d5e7b0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c915c610-df6b-4042-ae16-4027bf8f39e4",
        "cursor": {
          "ref": "5234ccdc-5399-4a60-b28f-d6ed68ad7c08",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "10f62e12-53c5-4d4a-af9b-a82c848091a1"
        },
        "item": {
          "id": "c915c610-df6b-4042-ae16-4027bf8f39e4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d0b27f91-4514-4b75-abe1-457f89317db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf96e2a-e0c0-4615-af9d-f9f38d508380",
        "cursor": {
          "ref": "07b0a3d7-6a5a-4c6b-8312-ca7b3015f20c",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a912cb99-7b85-4048-bfba-eabbbb57fee8"
        },
        "item": {
          "id": "bcf96e2a-e0c0-4615-af9d-f9f38d508380",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "588ffea6-d053-45bf-b244-381f8f879d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7174491-6ea1-4013-88e4-e69e430ba09e",
        "cursor": {
          "ref": "b5c918e7-624a-4609-9607-293b970c20c3",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "22bb9439-174d-4cf8-aa89-486517d6a9b7"
        },
        "item": {
          "id": "a7174491-6ea1-4013-88e4-e69e430ba09e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0d9edd79-bc19-483c-96ef-ebdd8541642d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e25d3a-1ca5-4b96-9386-040b0dced638",
        "cursor": {
          "ref": "340abbc5-49b8-49e9-98bc-cd73047690ae",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5defb962-be8f-4d2f-a909-133f31f95415"
        },
        "item": {
          "id": "26e25d3a-1ca5-4b96-9386-040b0dced638",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bccae6a5-49d7-4472-a0a9-772e24ad8a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257501b7-71c8-46b0-8335-c3f4958412a5",
        "cursor": {
          "ref": "f0b2209b-e633-454d-bf26-119905c788dd",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ca23662e-5cb0-422f-a006-f04d65389b57"
        },
        "item": {
          "id": "257501b7-71c8-46b0-8335-c3f4958412a5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fa7b1daa-55ee-4acb-a09b-e0fe3cfdc4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3890dd-5a53-4523-bd45-8fba817ab41c",
        "cursor": {
          "ref": "7f31454e-e01b-4002-bfd7-fee73829f64a",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "714a1794-c160-4ea9-820f-dfd7ae2fa89b"
        },
        "item": {
          "id": "6d3890dd-5a53-4523-bd45-8fba817ab41c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "36522bb0-da8d-4239-baa1-4ad527776932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfa0bc2-41ce-4458-a8bd-ee2a81af8117",
        "cursor": {
          "ref": "1fb80618-e87e-48ca-86e4-887108ad82ab",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3d3d1360-90e5-4bd5-8138-47da1b300b41"
        },
        "item": {
          "id": "8bfa0bc2-41ce-4458-a8bd-ee2a81af8117",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "51fb448a-5ff2-4ffe-a8e3-cecdedf4d2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 169,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11583ce-3388-42b2-aaf1-a4ceada3ab9a",
        "cursor": {
          "ref": "c9105588-9207-4be7-9eff-f1c8388f8309",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "34f6e177-01f3-438b-9349-1f83c15fa502"
        },
        "item": {
          "id": "a11583ce-3388-42b2-aaf1-a4ceada3ab9a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "191ac927-c922-45a3-870e-99f26a2ad2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0aa7e9b-4b2b-40cd-8383-b9a7a50fac66",
        "cursor": {
          "ref": "e0b6e24f-a13e-40d0-a636-eeac62523b66",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "74f90636-575e-4e0b-87c6-b92f7558531d"
        },
        "item": {
          "id": "f0aa7e9b-4b2b-40cd-8383-b9a7a50fac66",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b077c1b1-fd88-41f9-9bdf-2c01446ae2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1375b21-1167-452e-acf9-e18eafa84820",
        "cursor": {
          "ref": "174ef27a-392c-4f9d-b8e2-fb920caf4098",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fe41aea2-683d-40dd-833f-05bbe901903f"
        },
        "item": {
          "id": "e1375b21-1167-452e-acf9-e18eafa84820",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ee1761ed-49fe-4649-9ddb-e0123e031944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d35b31a-2cfd-462b-b449-f306599f6011",
        "cursor": {
          "ref": "cdfa6c3f-087d-417b-9d8d-664c7237007d",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "af61c1e4-603b-4c70-b072-83261350b1f4"
        },
        "item": {
          "id": "8d35b31a-2cfd-462b-b449-f306599f6011",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "293b9896-1473-4e08-9660-716e35e198b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd334d9-b37c-40e5-bf53-33ec22007d91",
        "cursor": {
          "ref": "cf4123c7-2fec-4766-b373-1b479f1dacac",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e8f191b3-4bf2-4328-9727-b6705f4f3f56"
        },
        "item": {
          "id": "7dd334d9-b37c-40e5-bf53-33ec22007d91",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0d0040d5-5a2b-4521-a6f5-914248abf616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da68096-9ad3-4005-a913-062d171650bc",
        "cursor": {
          "ref": "cfc89e9e-ad7c-459c-8e20-da5032093d4b",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "aeb1d1b9-ff0f-45ed-9acf-b3628c987469"
        },
        "item": {
          "id": "7da68096-9ad3-4005-a913-062d171650bc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "42512e7c-c4b3-4b34-8ef8-17f38b715902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b0d369-7978-414c-8419-72c92c286ccf",
        "cursor": {
          "ref": "16d57c28-a1c4-4aad-8d4d-730b6ca389c7",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4aa2734c-c72f-4a72-b9dd-a8310587f61c"
        },
        "item": {
          "id": "c8b0d369-7978-414c-8419-72c92c286ccf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cf7b469a-9137-48d7-ace4-b060c422b987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b95b80c-0821-4934-b1f9-e308b5c02ff9",
        "cursor": {
          "ref": "cfdc3c5e-67ff-4b77-9dff-fe2417e5f57e",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "871c6152-828b-41c3-98a0-276222940f1e"
        },
        "item": {
          "id": "4b95b80c-0821-4934-b1f9-e308b5c02ff9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2db3f462-495c-467a-8526-d41919aaf2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739c58ed-41d7-4b09-b4f1-03cf94e9808a",
        "cursor": {
          "ref": "5169eb6d-da42-4bb6-8ffc-71b0cb50ea5a",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ce1d12c0-e19a-495e-ae02-0c4aa2ee7dc5"
        },
        "item": {
          "id": "739c58ed-41d7-4b09-b4f1-03cf94e9808a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "81165dff-88bd-4f67-af42-c6fd1cca1def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f180c7f-8ae0-4ad3-a327-20f8c9f506fe",
        "cursor": {
          "ref": "eaca3ed1-d3bb-48bc-9267-92937ea8becd",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "fb3241de-97e8-48b9-8aec-e3f07779d599"
        },
        "item": {
          "id": "4f180c7f-8ae0-4ad3-a327-20f8c9f506fe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "71c0b2ed-c52f-474b-89ee-274711d7ad1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6b8771-dac7-4a4a-9c45-0c22c71534e9",
        "cursor": {
          "ref": "5ec006be-8691-4a54-be35-0305c78c8b1f",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a5685587-3f9e-4aff-93ed-fc1474795faf"
        },
        "item": {
          "id": "af6b8771-dac7-4a4a-9c45-0c22c71534e9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "20c5bcb1-3cc2-49fe-a659-ac3a72a3239a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15536811-5b6e-42df-8593-01a0fda86029",
        "cursor": {
          "ref": "daeb76b1-0f76-4cfe-b474-cb53ae9c47ba",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "87303057-0875-4f0d-ae7a-621792bb5c82"
        },
        "item": {
          "id": "15536811-5b6e-42df-8593-01a0fda86029",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2ac7ea4e-c76e-4e30-bebd-e32612c0349b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4710a88-2913-439e-9121-790d4e9062f9",
        "cursor": {
          "ref": "17a9c917-5f2f-4914-bb2d-85b4e0bf0010",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "537d27a7-afbb-4a1c-936e-f8e64c2d3af5"
        },
        "item": {
          "id": "e4710a88-2913-439e-9121-790d4e9062f9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e648075b-60f0-42f5-b60d-27042ade92aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1849b0f9-eae8-4419-ad3b-7ccf28fcf266",
        "cursor": {
          "ref": "7d55d5bc-c5db-43ca-862d-3bb9d9e3b150",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9a3a75d2-0924-4ed8-bba6-741daa22f437"
        },
        "item": {
          "id": "1849b0f9-eae8-4419-ad3b-7ccf28fcf266",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6a04cf2e-5b40-4580-85b5-3a7a2106adca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f761e606-a072-4e60-908a-e26fd0775d23",
        "cursor": {
          "ref": "ab626abc-b297-4c09-8153-1a8338c8f778",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "18f0b339-2abc-456b-ac64-d3b73ac7c02a"
        },
        "item": {
          "id": "f761e606-a072-4e60-908a-e26fd0775d23",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "de0ab3e7-4ff0-4daa-9592-74828a8f79b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb583094-3a69-4b3d-82fa-8b6bc4401971",
        "cursor": {
          "ref": "38f42d93-e055-4680-adeb-c63e0cdb586e",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9d459231-a820-4acf-9e3b-cf22b1cb594f"
        },
        "item": {
          "id": "fb583094-3a69-4b3d-82fa-8b6bc4401971",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "52157c31-fecd-4ebe-a66e-e9b360a1bb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db5e360-6315-4664-9d97-efd0a5c19ffa",
        "cursor": {
          "ref": "0984a62f-49bf-4647-9ddc-6d81542c802f",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bc73d8a2-de68-47b1-afe0-3484d8ff54cc"
        },
        "item": {
          "id": "4db5e360-6315-4664-9d97-efd0a5c19ffa",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b47aa22b-3335-4f68-b17f-8e5fa9fd36f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20deb14b-5fee-49a9-9033-7250b4f1a629",
        "cursor": {
          "ref": "f64ff74b-4e58-43dc-ad0d-858d6e791010",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b72318ff-62e1-421a-89de-8b1acd771663"
        },
        "item": {
          "id": "20deb14b-5fee-49a9-9033-7250b4f1a629",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0ed0c6fd-2c02-4e97-be51-1716d057ec8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432fe46e-8e81-4b41-bef7-937399b5fd5e",
        "cursor": {
          "ref": "3b2de336-3b99-45d0-8cc3-5f5646c74175",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d0c03519-9eb7-4ef6-8a3e-0055da82b8df"
        },
        "item": {
          "id": "432fe46e-8e81-4b41-bef7-937399b5fd5e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1ed3e5bd-15ef-4de6-ac66-c20ace56ce1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeab3f52-4652-4641-964e-9d4f897b93a5",
        "cursor": {
          "ref": "92097d07-9366-49e1-a34f-116eb02b945e",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "528d7dc6-a388-4ac3-8cb1-876809a5a779"
        },
        "item": {
          "id": "eeab3f52-4652-4641-964e-9d4f897b93a5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e71a7780-b247-4ba9-b672-85e0e7f8082c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc470c8b-5a5f-4c16-9512-d2115f8bd1b7",
        "cursor": {
          "ref": "ed414764-1255-4bee-afbf-d0944b18c32a",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9b3733aa-5464-4bdb-b088-5365f1a3e2b2"
        },
        "item": {
          "id": "cc470c8b-5a5f-4c16-9512-d2115f8bd1b7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9d14edce-66b2-4e88-987a-496b8e1e8767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d62c3db-3327-4535-bbdf-4e031c6d337e",
        "cursor": {
          "ref": "8de8df09-43ef-470d-817c-595889c5ad51",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "dddb6c8b-cc16-405d-a01d-9d33ca79f954"
        },
        "item": {
          "id": "1d62c3db-3327-4535-bbdf-4e031c6d337e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3fdff1a6-eac2-485d-93ec-3e1864cff7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1be336b-59e7-4e92-bc76-fe9ff81ae4f8",
        "cursor": {
          "ref": "5a8460f8-fdf2-4fb7-8a30-a8debcb7f2bd",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a6a09117-2f0b-4647-b250-722a3952cd19"
        },
        "item": {
          "id": "d1be336b-59e7-4e92-bc76-fe9ff81ae4f8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6f76f739-d02e-4e9b-afe7-7c9f7c5f2c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfd7518-0c6e-4918-aff7-cf6120b04466",
        "cursor": {
          "ref": "1b85d87d-7312-4aa7-9dce-ed07c10be7fd",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "01c882e9-6387-48a2-9999-a1f297099f8c"
        },
        "item": {
          "id": "8bfd7518-0c6e-4918-aff7-cf6120b04466",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "44881862-c5e5-4145-9f3f-74dcebe2f216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe05bc79-5405-4152-8dc1-38538f7daa1c",
        "cursor": {
          "ref": "6f34b5df-655c-4774-8147-f2766672f55d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "73c92a0e-4ee1-4d0c-970c-f77fdd3a9e7f"
        },
        "item": {
          "id": "fe05bc79-5405-4152-8dc1-38538f7daa1c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "30b899ca-908b-4326-9316-7af303d7c009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70a768e-f268-4eb8-abce-ef12be05e0ae",
        "cursor": {
          "ref": "778b7b55-c445-449d-b76e-eb2947005885",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6098066b-a4da-48d6-830f-5d439ca436e8"
        },
        "item": {
          "id": "c70a768e-f268-4eb8-abce-ef12be05e0ae",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7e96eb7d-7055-4e43-a622-b06189622c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70632306-c952-4471-9ab4-4c97ee839ebb",
        "cursor": {
          "ref": "864ee1d8-6d08-4524-be3f-4cca1c85f098",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "23e442bd-56c6-42ad-97df-55cde1a3380d"
        },
        "item": {
          "id": "70632306-c952-4471-9ab4-4c97ee839ebb",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d160dc7d-f31f-4047-8016-018bea9e8db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8286a108-baf9-4cd9-b869-4ecc78fe954b",
        "cursor": {
          "ref": "5acd2141-4981-45de-95e6-d29042cf0cdb",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a5c041ab-2a72-4ab9-85f8-ce0130c93dfa"
        },
        "item": {
          "id": "8286a108-baf9-4cd9-b869-4ecc78fe954b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "603dc93c-d4df-4114-a14c-fa17a24f8c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69939bdd-551d-4db7-90ef-d58caaebaded",
        "cursor": {
          "ref": "7a9b56f4-bebb-4e41-8eab-75be366180cf",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0ba72bd4-f507-4e22-9e56-07107b21c2eb"
        },
        "item": {
          "id": "69939bdd-551d-4db7-90ef-d58caaebaded",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ed24552b-c89c-4838-8796-b1d03bb15e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ff08fc-e60d-4384-a9d7-17e4a6821cbe",
        "cursor": {
          "ref": "b61de62e-8cd7-4596-851c-064e321f5255",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "659889f6-2da2-4261-bff2-e2b70d328a95"
        },
        "item": {
          "id": "a8ff08fc-e60d-4384-a9d7-17e4a6821cbe",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7a0f5ba2-cf3d-4d57-bb6b-461132e2a8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9723674d-4dfe-407b-8896-323965af69f6",
        "cursor": {
          "ref": "94886f28-0d1d-4785-8dc6-073ccc2b3bd3",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "dd5a3810-530c-4592-8a43-97f5f6b12788"
        },
        "item": {
          "id": "9723674d-4dfe-407b-8896-323965af69f6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7badace5-4ac0-4032-9412-78bc5dbc9b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232bfd4c-977e-4a6e-83ff-091d25fafcc5",
        "cursor": {
          "ref": "00399924-0e7e-4098-9d0c-834b65502d51",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d42ef813-b62f-4079-94b5-a934b1443af2"
        },
        "item": {
          "id": "232bfd4c-977e-4a6e-83ff-091d25fafcc5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1f4dfecf-0cfb-4067-9e20-7f715ebcfbd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573e5f4c-a53e-4d1c-844c-12a40e957de1",
        "cursor": {
          "ref": "9339cb92-6846-48b5-8fc8-f149a7cf2b79",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4346de30-73b3-4302-84aa-6ac020a09321"
        },
        "item": {
          "id": "573e5f4c-a53e-4d1c-844c-12a40e957de1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "234deda0-7234-4e02-b596-129dcdef8885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800ecb52-5f1b-4d9a-a870-5bd0daf45aea",
        "cursor": {
          "ref": "c3c7bbc6-ee62-499d-b539-9936de46727a",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "241350e6-91ca-4173-9aa9-0f01535451a3"
        },
        "item": {
          "id": "800ecb52-5f1b-4d9a-a870-5bd0daf45aea",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b95c6263-370b-4dbd-8b9d-b31e88b28622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0920f58d-616a-457d-97ae-f255656f70d1",
        "cursor": {
          "ref": "8871738b-4999-468c-aa80-d248f15719fe",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "68e29014-0d6a-48bf-a24f-a4a3dd20ee5c"
        },
        "item": {
          "id": "0920f58d-616a-457d-97ae-f255656f70d1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c15817e8-965c-4c6a-a0e4-49bbe3e151a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47dae48d-beac-4a07-bb43-58009cfd9904",
        "cursor": {
          "ref": "feef5e41-1416-4e0e-af12-ae4d5c1215a3",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6e044545-d968-4908-bd90-483c9a823be9"
        },
        "item": {
          "id": "47dae48d-beac-4a07-bb43-58009cfd9904",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "09be5bb9-2f4f-4a49-88e8-dd5f60ccd3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d08463c-a008-4e1b-b9d2-32fb27b83a27",
        "cursor": {
          "ref": "8bad3ac0-b8a7-4740-af72-818f31dfa811",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "49e29460-b81a-471d-bc69-54901b17f03a"
        },
        "item": {
          "id": "7d08463c-a008-4e1b-b9d2-32fb27b83a27",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5ec6ca78-5b62-4da2-a3eb-f46d34a4fd08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbabddca-b817-4cb3-ab5b-18aac116272d",
        "cursor": {
          "ref": "02f04dfd-b273-42cf-a1ad-73aeec0137c5",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "dd38d9b9-86e0-4226-abc7-8ca11be4de6a"
        },
        "item": {
          "id": "dbabddca-b817-4cb3-ab5b-18aac116272d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4f6751d0-3844-4956-b702-e4d770f6f789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9a97a3-631a-40e4-82bd-13a0aba366a0",
        "cursor": {
          "ref": "d151dd6d-2178-4384-bac8-cf31abe071ab",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "89d06cb5-477b-4942-93ac-830dbd6e9f09"
        },
        "item": {
          "id": "0a9a97a3-631a-40e4-82bd-13a0aba366a0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f0f7b37c-5d58-4c94-991c-5f861a7b05a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b49ba2a-51e3-4cf6-8cae-b9c0897bc8a5",
        "cursor": {
          "ref": "c64264f1-3a14-4b51-9ec8-eed2f6d3e400",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "620e4764-b44d-484c-9223-f03f4b8360ee"
        },
        "item": {
          "id": "0b49ba2a-51e3-4cf6-8cae-b9c0897bc8a5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3cc1c2e1-2fbc-4bb0-9ba4-ae0687c3806e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a993858b-6e6c-4013-bad3-404767c88dd0",
        "cursor": {
          "ref": "aea3bd23-e74d-48c0-8bab-672347b713ad",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f3266da3-a750-4512-9bf8-88d786a4e332"
        },
        "item": {
          "id": "a993858b-6e6c-4013-bad3-404767c88dd0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1430bd79-e179-4a00-9197-ea009e0ba96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407f7fa4-e47e-47d6-b578-fd6cb67d2c42",
        "cursor": {
          "ref": "d3a16df2-e6ca-4383-851c-5486b6dac3a1",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a7015a20-50af-4750-8a33-65e4c1ea1d93"
        },
        "item": {
          "id": "407f7fa4-e47e-47d6-b578-fd6cb67d2c42",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "70d0beba-9fdb-42b0-a5cc-871458d4dcee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac4765e-f3de-4b15-b9d7-8a322378d4be",
        "cursor": {
          "ref": "d7a556e5-91ee-49cd-855d-27ade2311f95",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e52c09b3-dbd1-45a3-89dc-f11f4bbeaabb"
        },
        "item": {
          "id": "6ac4765e-f3de-4b15-b9d7-8a322378d4be",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f6b47245-7347-4dba-97cb-e5eb7f09b533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "05eb46f1-11ca-4cd6-89ba-c3ecd4a17b98",
        "cursor": {
          "ref": "f2af3ccd-721b-467e-9a72-b4859c0468df",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d44cf9fc-2ef8-4286-bbcf-2be85d3a859c"
        },
        "item": {
          "id": "05eb46f1-11ca-4cd6-89ba-c3ecd4a17b98",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ff4b4978-07a2-4d10-b91e-3a3933d87e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "03049619-961b-4d5f-a472-f2548e20a8d9",
        "cursor": {
          "ref": "615ea840-f653-48de-9aed-aaa35d4dd744",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5c942de5-ec3b-43f0-9e3e-a60ac206d5e5"
        },
        "item": {
          "id": "03049619-961b-4d5f-a472-f2548e20a8d9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "76372679-a7fd-400a-bf8f-01924c790c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c1248808-bb2c-484f-b316-d246f0477368",
        "cursor": {
          "ref": "2384314b-bd18-44ef-b5ca-325132708cf3",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8c73c63c-8318-49a3-bd62-e5f219b8d498"
        },
        "item": {
          "id": "c1248808-bb2c-484f-b316-d246f0477368",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "dd474bf1-1673-4ff7-8093-a9ceb26f6141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "7fab81d9-daaa-4b06-9253-9260deb911da",
        "cursor": {
          "ref": "491e1f2f-3e34-448d-98e9-c7570309b543",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fa6ddd3c-1046-4f24-9131-a736d4ca32ae"
        },
        "item": {
          "id": "7fab81d9-daaa-4b06-9253-9260deb911da",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2ebd1bd3-1182-454d-bfe8-65e352a629f3",
          "status": "Created",
          "code": 201,
          "responseTime": 14252,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f65889-f33c-4b8a-bd16-1f7980f066a7",
        "cursor": {
          "ref": "3a5cc2dc-db01-4134-8ec1-51905e668520",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e65c7f41-f4af-4c16-bfaa-1e6e2c9cf2d5"
        },
        "item": {
          "id": "36f65889-f33c-4b8a-bd16-1f7980f066a7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dc3c8ba5-2ecc-46cf-9751-7763b5d91444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "f1704ead-9304-431f-bbd1-217d67e602d0",
        "cursor": {
          "ref": "1a548599-0c28-47d9-8e79-6254f1010d73",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e55eb356-3b18-487c-9bc1-fb20bfab20b8"
        },
        "item": {
          "id": "f1704ead-9304-431f-bbd1-217d67e602d0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "924b321b-d30e-44ba-8b9d-a95e3514718a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "44c5eac3-b05d-4778-8d73-e6f67b41463b",
        "cursor": {
          "ref": "1db64f12-328c-408a-b15c-ed6452ac428a",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c37600bd-8163-4a2a-81c2-9acc45252a8c"
        },
        "item": {
          "id": "44c5eac3-b05d-4778-8d73-e6f67b41463b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "20c60d59-0981-416f-ba9f-1499854c4cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4663240f-52f3-4a48-a440-5993c4e33da2",
        "cursor": {
          "ref": "2e5d1973-089a-49fd-9be5-c79e2b094100",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8d98ad34-a284-4221-a476-59bf86b505ae"
        },
        "item": {
          "id": "4663240f-52f3-4a48-a440-5993c4e33da2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "97005928-6ecc-4e54-a650-cabaaef0b427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87f5e6e-6d81-4404-aa52-e5d557b4c57f",
        "cursor": {
          "ref": "ab50d2c1-2aae-484e-a536-34171db2bad0",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7c0ff539-e24e-408a-8fda-c83f0afc7bde"
        },
        "item": {
          "id": "b87f5e6e-6d81-4404-aa52-e5d557b4c57f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "36d1e525-b354-4c86-a64b-c4388c4309ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497a8715-eddf-4a9c-980a-930080ab6fa7",
        "cursor": {
          "ref": "c65557e9-ee72-49a8-a1c1-16e42ce7d603",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "86e8fba4-7586-43d0-839d-8c84df5cb8b0"
        },
        "item": {
          "id": "497a8715-eddf-4a9c-980a-930080ab6fa7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2948813e-bbde-42f0-8cab-c74ee0ff2de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c19d9f-2fe9-4188-9fe0-801fcaf4c34f",
        "cursor": {
          "ref": "5748c492-3a32-449e-82b9-3fe3fa233b3d",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "acb52902-6622-4530-a5ee-865e0cd9f054"
        },
        "item": {
          "id": "d9c19d9f-2fe9-4188-9fe0-801fcaf4c34f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ff36a396-75a9-41d9-b92f-335bdd051f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbb45ed-b57c-42f1-8b96-88f379d79d59",
        "cursor": {
          "ref": "12109717-eec6-4e66-ae92-db4abaa81d9c",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "69ec5f7e-80ff-463c-91e1-7133dace4c04"
        },
        "item": {
          "id": "7cbb45ed-b57c-42f1-8b96-88f379d79d59",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4cf16de2-3330-4dd3-b96a-b338d50c59be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac101ad9-1504-489f-b856-91d371e8a094",
        "cursor": {
          "ref": "7b5c83eb-b0f1-4d9e-8811-e4b298b8bb81",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0d6994e7-2c71-498a-94b8-64c6a909b68b"
        },
        "item": {
          "id": "ac101ad9-1504-489f-b856-91d371e8a094",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9ca20166-3263-4e6b-847b-ab421267b7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc83cf94-59f6-4ec5-81a7-bca897a074c6",
        "cursor": {
          "ref": "c2917b07-01c0-499b-adda-02db84f4d953",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0a8515fa-3303-4a1c-a0b0-d40668ecf3c4"
        },
        "item": {
          "id": "fc83cf94-59f6-4ec5-81a7-bca897a074c6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4ad76608-7166-4102-9a83-8cf0e1c2e57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eddc289-33c9-4e3d-9d58-736ce63a01e8",
        "cursor": {
          "ref": "7bf62439-ac5f-413f-b668-935d507a0c6d",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9004111f-ce80-47ae-bcf9-e3188d831bb1"
        },
        "item": {
          "id": "1eddc289-33c9-4e3d-9d58-736ce63a01e8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a6e73b3a-728f-48a9-9fd3-4dcb633f4b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4d1622-9a88-448a-b371-cb1f20f3f729",
        "cursor": {
          "ref": "e9180a22-4701-4e38-95df-3b6058e17c70",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c90c83ad-b2df-411f-a0cf-61995d15befe"
        },
        "item": {
          "id": "8f4d1622-9a88-448a-b371-cb1f20f3f729",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8e4a1cd8-96c2-4286-be41-54df77dfda2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b90542-2602-45e9-bad7-6cc95191435f",
        "cursor": {
          "ref": "b7ca9d31-0645-4882-8b95-84cc837374ad",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e0561bda-0cf5-49b9-8fb3-f9c656af2246"
        },
        "item": {
          "id": "f2b90542-2602-45e9-bad7-6cc95191435f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "28771eb3-d4f0-46dc-ac6a-7d47e22ae7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53663e7-234b-4391-962a-d422f7a00efb",
        "cursor": {
          "ref": "2b32f9a9-e0ee-49a7-872c-bbabe25b5188",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9e324285-4c3d-4d83-850a-ba74a45e80a4"
        },
        "item": {
          "id": "b53663e7-234b-4391-962a-d422f7a00efb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a2466f92-fb21-4d8b-988f-1772097f0263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6485ec4-fdcb-4021-a3ad-f42473535fef",
        "cursor": {
          "ref": "d7e6d9aa-0414-4fbc-b67b-8728e59ed304",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b92e79fc-f259-4fb2-85b1-d7dddd72f801"
        },
        "item": {
          "id": "c6485ec4-fdcb-4021-a3ad-f42473535fef",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ee8c4808-0bd6-44df-b8ab-01822ecda4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8e8486-3d1d-4915-9fdd-32e28c290fd9",
        "cursor": {
          "ref": "4e57b827-372e-45d8-a86d-815b64937d93",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "444eaa1c-b202-44ae-8205-ed122aab0637"
        },
        "item": {
          "id": "1e8e8486-3d1d-4915-9fdd-32e28c290fd9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fd5c1049-5b0e-48ed-90f6-4b1888db9065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8e0774-0f23-4f1a-a29c-22ea64a1f0fb",
        "cursor": {
          "ref": "7aef89ab-302f-424b-aae7-ef8538763834",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f1d9605b-9001-4594-8ed4-36eaf53be7be"
        },
        "item": {
          "id": "9c8e0774-0f23-4f1a-a29c-22ea64a1f0fb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "065eae45-0c83-410d-a5d6-66ae7e410f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9dcf02-d902-4645-976f-04f20cbb47a9",
        "cursor": {
          "ref": "cbcd8bb5-b1b6-40b5-a130-7dea17fd28fc",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a64034ef-4458-4ea4-a0c5-e1ab46b1d8d4"
        },
        "item": {
          "id": "ad9dcf02-d902-4645-976f-04f20cbb47a9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "be86d0ef-6125-4e5e-ac9c-e95c17acff2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f110f27-af0b-4fc6-a9a9-2db8c68fed76",
        "cursor": {
          "ref": "f62531ea-88b2-4c27-a074-8f75cac7401c",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c7d8b7e6-357e-43cd-8735-96ad8bfd15ae"
        },
        "item": {
          "id": "8f110f27-af0b-4fc6-a9a9-2db8c68fed76",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e61d6794-69bd-41c0-9072-1c78b9cb601f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "c037aeda-f02a-4222-ac75-108881c8255c",
        "cursor": {
          "ref": "53aaa60c-4110-4cd3-b619-39233229eedc",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cd96e865-4f2c-4c9c-924d-638767620a22"
        },
        "item": {
          "id": "c037aeda-f02a-4222-ac75-108881c8255c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "be4e44e3-0e1f-4a51-b8ac-5d44cc1a652e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cea9a09-3cb9-4df6-a4ac-52978b0986c3",
        "cursor": {
          "ref": "62a186ac-dde9-47eb-9bf3-07d486f428cf",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "487f3b23-0fd2-43a4-beeb-cc27a22f3da1"
        },
        "item": {
          "id": "2cea9a09-3cb9-4df6-a4ac-52978b0986c3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c274c1ae-c740-4ba1-8433-055c7b9d221a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbf0305-2007-4f69-8ecf-63a349a3c897",
        "cursor": {
          "ref": "14264887-7246-4149-b4be-2e044153c870",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a12f5bc1-86ce-46bc-be0f-472cbfc8f1b7"
        },
        "item": {
          "id": "edbf0305-2007-4f69-8ecf-63a349a3c897",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bc469600-a7be-42b6-b99f-f97fb263cc3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539a320b-9c36-4a1d-9579-62df2ff99e50",
        "cursor": {
          "ref": "698cbdf2-8824-494b-a599-7e231bb706c7",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2ab19a3c-67c1-4c74-82c3-ab2629c57cc5"
        },
        "item": {
          "id": "539a320b-9c36-4a1d-9579-62df2ff99e50",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "32eabab6-b143-4a3e-aad9-201bf323b87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e19865-950e-4e16-bb75-2213f9a8a24c",
        "cursor": {
          "ref": "a49b1445-7846-4720-9d9c-d11f9b16d40d",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0daa13a0-d79b-4575-a62c-76b178041d7b"
        },
        "item": {
          "id": "e5e19865-950e-4e16-bb75-2213f9a8a24c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0f93ffd6-9aa0-44a7-8833-1c656d4b311c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076f6392-ba44-4ab2-9fda-d8072d761461",
        "cursor": {
          "ref": "7ba66650-c19e-48f2-90ae-8b0941a12b14",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "05e7d105-675d-4d44-836f-07975e8b8170"
        },
        "item": {
          "id": "076f6392-ba44-4ab2-9fda-d8072d761461",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "46474257-787d-4a3f-904b-464ef842fef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85221355-da06-4d0c-bfb0-77587a8459ac",
        "cursor": {
          "ref": "6487dcd3-d11b-4e8d-88b1-7834bb71b246",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "44fdaa41-8754-4860-b972-3a0d21d25e70"
        },
        "item": {
          "id": "85221355-da06-4d0c-bfb0-77587a8459ac",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "93f0699e-999d-4e16-b263-7c370b108919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b28ee7f-75dc-4989-a277-42a16c24331b",
        "cursor": {
          "ref": "9f8e1462-8213-46e8-93b2-a978af43cb8e",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0eee83c0-fd6c-4ff0-8938-44f322255d36"
        },
        "item": {
          "id": "7b28ee7f-75dc-4989-a277-42a16c24331b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e1d2e11f-cca3-4f08-b467-7786dfe5e877",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 83,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "504fb01b-5671-44c5-92a5-41452c3ae978",
        "cursor": {
          "ref": "19a73e33-4a2b-4b56-a653-b968161e6730",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e028e025-8eb3-4f56-bd3d-22bd11e93891"
        },
        "item": {
          "id": "504fb01b-5671-44c5-92a5-41452c3ae978",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f70be390-e082-45c2-83d9-649b60b911f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98adc0e2-7dd3-4e77-9760-87ac46ec457c",
        "cursor": {
          "ref": "70aeff69-7e31-4d1e-8c23-571fab16b556",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "363b3ea4-a426-4ca4-b773-1eb8c97f97f0"
        },
        "item": {
          "id": "98adc0e2-7dd3-4e77-9760-87ac46ec457c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "09bdeead-b120-444c-addd-b965e7e23e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5562048d-fde6-4787-b6ad-a4d557d5cb46",
        "cursor": {
          "ref": "2d0d5105-7c81-4415-8ecc-f619089d639b",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ca73c329-202d-4e7c-baca-591b1cc3265a"
        },
        "item": {
          "id": "5562048d-fde6-4787-b6ad-a4d557d5cb46",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cfb11064-7dc7-4683-81a3-5fb8a545e983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198a4ee5-859e-4abb-8cdb-00c5f01e1e6a",
        "cursor": {
          "ref": "2ffc9dba-19b1-454a-aa4b-df074920f6a8",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "55076ed8-7c92-4aa8-9d19-205a627660b5"
        },
        "item": {
          "id": "198a4ee5-859e-4abb-8cdb-00c5f01e1e6a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b80909b6-50ab-455c-ade2-ee0a4c47bb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6ad9ab-f6fb-4766-9a3f-25c81e2abbf5",
        "cursor": {
          "ref": "753e1f93-868e-44dc-965d-728eac489f94",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7d16014b-e43c-4b38-99a3-45fd1eee02d1"
        },
        "item": {
          "id": "bc6ad9ab-f6fb-4766-9a3f-25c81e2abbf5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a4ba6ea6-bb7f-45f6-ae54-4b1c4e6c5af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c557fb2-956a-49af-8c3e-45643c96b2e6",
        "cursor": {
          "ref": "e4a006e0-679b-4d6f-b502-479df507ffc7",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fed9d035-9db4-47f9-84ea-0a67fb23c185"
        },
        "item": {
          "id": "3c557fb2-956a-49af-8c3e-45643c96b2e6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c7d464c8-2798-474d-93b1-f46d166c38ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd38abc-ca70-49c4-8458-63f2e069c4d5",
        "cursor": {
          "ref": "ded3a577-460c-4a56-8a06-a39d2055c000",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c3376e68-9c6a-4de5-888e-0b2e390c6ba4"
        },
        "item": {
          "id": "ccd38abc-ca70-49c4-8458-63f2e069c4d5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "982fe4b4-5c8c-47a6-b69b-047f17be4f5c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "e8788df2-e4ef-4204-8d7b-6311d4433141",
        "cursor": {
          "ref": "210133dc-84fe-40c9-a673-bf4f4d2880a8",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9f26d22b-f3fc-4cc2-b717-0caeae57f9c2"
        },
        "item": {
          "id": "e8788df2-e4ef-4204-8d7b-6311d4433141",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1f04de0b-805d-4160-bf5d-bb10fe0c56aa",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 116,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "2e7bb6bb-51cc-47f4-a743-f74c917bccde",
        "cursor": {
          "ref": "feb79ab9-3bc2-427c-b443-09f4cc175446",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "625c8cae-d6bf-4ed3-9cbf-d486d642b702"
        },
        "item": {
          "id": "2e7bb6bb-51cc-47f4-a743-f74c917bccde",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5f39da1d-c4d3-4cbc-b953-2cc9b5492894",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "91f49ff5-aa31-43ee-8111-7fbd522775a6",
        "cursor": {
          "ref": "a283ab9c-bb2f-4007-9539-8ee77c15b3c0",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e1746e87-0e0e-47f6-ac7a-1ae9ba5bf199"
        },
        "item": {
          "id": "91f49ff5-aa31-43ee-8111-7fbd522775a6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "43c59d0c-858e-4ead-873f-25dc8192da53",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "c7efee7c-91bd-48e8-888e-551a3f92db89",
        "cursor": {
          "ref": "0aa705e8-bffd-48c7-8d0c-105ae63327b3",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "23207705-a493-4c5b-89a8-ec62e10dd3dc"
        },
        "item": {
          "id": "c7efee7c-91bd-48e8-888e-551a3f92db89",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7c1ba84d-a4b5-4872-a36a-51519e7766d0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "51fab5fc-2dec-4823-87ce-7a3f3cd61982",
        "cursor": {
          "ref": "fc8c11d1-eba0-462d-b632-b4e42d0d3708",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0aac686e-9285-4ee2-9b48-07ac37159424"
        },
        "item": {
          "id": "51fab5fc-2dec-4823-87ce-7a3f3cd61982",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "302fa145-a0ff-4a4d-b5a1-30dbda701b33",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "3a46ea85-a163-44a8-a879-924d7dab4e63",
        "cursor": {
          "ref": "6af0c0a9-68dc-4778-8c55-a0c521606f8d",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fd6bf5d8-bb61-4ab4-9e6a-d802b5077958"
        },
        "item": {
          "id": "3a46ea85-a163-44a8-a879-924d7dab4e63",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1cf6d81e-76c5-478b-b138-1ae0bf7712b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b369185-e72d-4e52-acde-f754982838d2",
        "cursor": {
          "ref": "ca959d7d-ea69-49b6-8589-87ae8fb7fdc4",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0ab2f523-2d60-4f74-9b3a-009863e83861"
        },
        "item": {
          "id": "8b369185-e72d-4e52-acde-f754982838d2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4ca5aaae-7f1e-441c-ad7b-156d244492bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e3311e-0684-42e5-ac06-c93c285b76cb",
        "cursor": {
          "ref": "7e65dcd7-2813-4a39-b54f-b5bde71e062b",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "901c869a-6803-4a19-9fed-1cbe25ceff1a"
        },
        "item": {
          "id": "28e3311e-0684-42e5-ac06-c93c285b76cb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1fa0e5c0-1d0a-4084-821e-349a45ee2078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582965e3-a486-4a9e-b178-28709b8fc4c5",
        "cursor": {
          "ref": "38ffe9f2-1986-43cc-9e39-6fb007290bd6",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e198b7ea-750e-411f-ac24-9d3fa3cc7b21"
        },
        "item": {
          "id": "582965e3-a486-4a9e-b178-28709b8fc4c5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d9846f69-2782-4857-bdba-90e45ab51f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0414a60-4920-4891-9114-9d2b242070f0",
        "cursor": {
          "ref": "23af5fd3-b59a-4b6b-a16c-888108675c86",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d7c40030-886d-4048-9941-97fd13cc1c84"
        },
        "item": {
          "id": "a0414a60-4920-4891-9114-9d2b242070f0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5ef0fcc2-1cdf-42c2-87de-32fc6190e5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b173298-bfd7-4bef-82ba-4b7596638111",
        "cursor": {
          "ref": "7f6aad6d-ac22-4236-a6e3-7215c888c721",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "14a93ebf-3218-43ca-a5e4-661fa8972938"
        },
        "item": {
          "id": "3b173298-bfd7-4bef-82ba-4b7596638111",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "603ab373-5c54-476a-9c99-2cd9369e9535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b76ebc4-1a46-4b05-83b9-8f39b457e73a",
        "cursor": {
          "ref": "4b46a883-0f4b-4dde-9c16-b5d8b600c894",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e71a49e5-edc7-4bdd-a040-99ffbdc59bc9"
        },
        "item": {
          "id": "0b76ebc4-1a46-4b05-83b9-8f39b457e73a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c049cdfd-031a-4610-8dee-2b269a892651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1deac12d-39e0-4063-9aca-b7522832c4e3",
        "cursor": {
          "ref": "c6ee72ee-def7-4586-ac9f-bb9342fdf04b",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "42c11bfd-fe1f-4534-bad9-8dd24ac94902"
        },
        "item": {
          "id": "1deac12d-39e0-4063-9aca-b7522832c4e3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3e5184c3-70dd-4294-9814-30fbf051d782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbd72e8-7cdb-4934-924d-14625e08e19a",
        "cursor": {
          "ref": "691dbf6d-c53f-4c41-88d0-cc4d0cb08377",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "eab324a0-90d0-4974-81dc-edc02a8bc787"
        },
        "item": {
          "id": "3fbd72e8-7cdb-4934-924d-14625e08e19a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "233951d4-33ab-4db0-8c1c-c69da32aec15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b73e2af-f017-41d6-b2ef-ba0af2bd7c92",
        "cursor": {
          "ref": "8c2fb676-070b-4bc9-ae42-7ebb12ad1069",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "11bbde4f-600d-4658-951f-6c8bf4837e36"
        },
        "item": {
          "id": "4b73e2af-f017-41d6-b2ef-ba0af2bd7c92",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d9ebba23-12f1-4926-81cd-5836eacf10eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d16319-4606-45eb-a4e9-13059037a632",
        "cursor": {
          "ref": "c7f35da9-e3de-40be-8f34-05cff24238a2",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9bc0634c-604f-4094-894d-f419c4033c39"
        },
        "item": {
          "id": "31d16319-4606-45eb-a4e9-13059037a632",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "670cac6b-5bae-4518-98f2-e50a11dae85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4118ef6-bb90-45ca-beb9-981ef00d6cbf",
        "cursor": {
          "ref": "17aa826f-c47a-4b5e-a703-342d9e84a0e3",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7354dae9-60dd-44c9-83de-e50cb0603e90"
        },
        "item": {
          "id": "b4118ef6-bb90-45ca-beb9-981ef00d6cbf",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f2ce767d-b4f0-487e-8250-57fd9d79cdb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9cda831-565b-48c3-bd63-73586996a2f5",
        "cursor": {
          "ref": "c90a1cc7-f107-433c-95ca-57e45943ee3f",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2a8e3256-f3af-4981-a1fc-b7215885d0ef"
        },
        "item": {
          "id": "a9cda831-565b-48c3-bd63-73586996a2f5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3c63eabf-e59a-416f-a300-15499c60f56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d9d76a-5a43-46e1-8f55-ecd1fc8c850c",
        "cursor": {
          "ref": "83d14865-c184-463b-bb55-6e7423619e36",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d244ea4a-14e0-45ff-9201-0c6b4d2bfc74"
        },
        "item": {
          "id": "39d9d76a-5a43-46e1-8f55-ecd1fc8c850c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c05df671-947e-49fb-a85c-57faf6ed948b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a12ca8-a0b9-4893-9d83-15a58a4083cd",
        "cursor": {
          "ref": "4a07b54f-075f-4bb4-ab2e-f1f622b0df7c",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ec3fbea1-0af7-4efd-a416-3e77b881d15c"
        },
        "item": {
          "id": "79a12ca8-a0b9-4893-9d83-15a58a4083cd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8c355b20-ef16-4564-8c99-996e7920c69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b775a4f-c88a-492a-a8bd-51642f75b251",
        "cursor": {
          "ref": "03b3e5bd-6430-4c41-b3fb-d77df2479891",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7a20fff5-b10e-4cd6-86d4-6741450052e3"
        },
        "item": {
          "id": "2b775a4f-c88a-492a-a8bd-51642f75b251",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7c2acee5-94ff-4d8d-932d-3ea99e0bc069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190a292e-ee88-4df6-a5b9-30e97749acea",
        "cursor": {
          "ref": "be27ff4a-1c38-461f-9e78-fb26b997a4f7",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "863c7a67-810a-4b5f-bdfd-ca906e951be1"
        },
        "item": {
          "id": "190a292e-ee88-4df6-a5b9-30e97749acea",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fcfe1b81-4146-4c68-b6a2-688c4fa833bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e1b66c-f30e-4e43-b5d0-1a52e6291e2b",
        "cursor": {
          "ref": "13631d78-f6b8-451a-9e8e-538800d8051b",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2f5d2696-b7d3-431e-aa14-bc87daf8f386"
        },
        "item": {
          "id": "d2e1b66c-f30e-4e43-b5d0-1a52e6291e2b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6ef466eb-034e-41ac-a820-7efe424178ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf86e00-e714-4c28-b38e-27d448bff649",
        "cursor": {
          "ref": "519ca0d8-30a5-4585-a043-46a4207782be",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "02a36919-92ea-43f9-8e83-3064becc828c"
        },
        "item": {
          "id": "daf86e00-e714-4c28-b38e-27d448bff649",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "44511325-d477-4f28-89aa-0243c7db8ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95dbe605-eecb-4e4b-8513-62965401e7b2",
        "cursor": {
          "ref": "802ba9cd-bd18-41d2-a995-2ebf0e06c1ca",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "80d84854-ddb6-4403-8b6d-e3f6c4a83709"
        },
        "item": {
          "id": "95dbe605-eecb-4e4b-8513-62965401e7b2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a8097767-8a0f-44c7-b9c6-c0565ff2f457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb32ad95-8c0f-4772-a2c9-47dd0a9cd032",
        "cursor": {
          "ref": "5502c0da-5905-417d-80a2-c82255ec8e3f",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "161c1dcf-96d7-4a98-8764-7114dbb278a2"
        },
        "item": {
          "id": "bb32ad95-8c0f-4772-a2c9-47dd0a9cd032",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "18155e37-742e-4761-8586-b89f0a71c47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67bd0ab-a9b0-456b-87e8-7234d8ab8932",
        "cursor": {
          "ref": "3a7d89e8-0268-47de-a4bf-76c88d5b5fbd",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "db76a898-ac33-4f69-9f02-c6300678c516"
        },
        "item": {
          "id": "e67bd0ab-a9b0-456b-87e8-7234d8ab8932",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "94a2d6e8-f3c8-4bc2-b68c-7ec8dd8a6f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76e5835-1349-42fd-838a-e2fd92e21367",
        "cursor": {
          "ref": "b344eaeb-91d7-4563-a7ef-40b232466923",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a791e2a9-1311-4c23-9999-293e0eb7a99b"
        },
        "item": {
          "id": "d76e5835-1349-42fd-838a-e2fd92e21367",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "15ba3be1-9e74-4146-b806-096c24a98b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae99ff5a-db27-48ac-ac29-010b9f0e7a2e",
        "cursor": {
          "ref": "b915ef83-d168-4876-a775-768a61ed575d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3c7dcb35-d814-466f-bf0f-da1c33d3dc7d"
        },
        "item": {
          "id": "ae99ff5a-db27-48ac-ac29-010b9f0e7a2e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d183fdc6-3369-4f6b-8085-68ac56f215fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c3a818-8f31-4c58-907b-4b313c7ec412",
        "cursor": {
          "ref": "63ea0ae9-99a7-4d85-b123-e64db5da61c4",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "cff8ea6a-8a0c-4d59-a5e6-00430d685adb"
        },
        "item": {
          "id": "04c3a818-8f31-4c58-907b-4b313c7ec412",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "649d765f-9586-44ba-b570-33f1f822fc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e3802a-b526-4eab-923e-429343ff7b0d",
        "cursor": {
          "ref": "24312a1f-293f-4947-a093-b4e2228ff88c",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "120f982a-2798-4e8f-adc2-05b4de244f74"
        },
        "item": {
          "id": "73e3802a-b526-4eab-923e-429343ff7b0d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "244895dc-25c7-4d9a-bc4f-e8484d35f42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a75aa73-2af0-4439-94c9-4a436e661ab8",
        "cursor": {
          "ref": "6f7c05c6-3164-4f8f-92b6-9bde6173a795",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9dd32a4f-3431-4a1e-971d-2e4e5e02e6e5"
        },
        "item": {
          "id": "1a75aa73-2af0-4439-94c9-4a436e661ab8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "96b7a758-d0c6-453d-911f-fb8ff4b6a6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c946e94-1787-4d6d-b3e2-8ebb6a14ebdc",
        "cursor": {
          "ref": "be44a36f-781e-43dc-8187-c63992159248",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "507108f2-0bf1-4c23-9b73-fba0d6b56969"
        },
        "item": {
          "id": "2c946e94-1787-4d6d-b3e2-8ebb6a14ebdc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "948ab7ac-c512-44a0-a886-bac00698dd43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da794175-5811-43f2-933d-30847d9933c6",
        "cursor": {
          "ref": "40954bc2-16eb-4f92-8668-dc7bc674e718",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c45d8780-9290-41fa-856d-a190de7b4abf"
        },
        "item": {
          "id": "da794175-5811-43f2-933d-30847d9933c6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f1d5bd99-18b4-4db9-86d2-d4f8df50369c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca1b9fc-0877-40a2-a625-2d4846c1a324",
        "cursor": {
          "ref": "20b3d7fc-db84-48f3-9aae-3f6fcf6def5b",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "cfc39b56-210c-47c5-bb29-be8acf565703"
        },
        "item": {
          "id": "7ca1b9fc-0877-40a2-a625-2d4846c1a324",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2392e20d-4b0f-4b6b-bc1c-d7b6ac2b3b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f61bb03-e65f-469e-864f-a646d1253d5f",
        "cursor": {
          "ref": "0063730f-ca27-4de1-9b0c-4c3c8863e759",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "528a81d4-4a9f-4bb3-b6a7-c827bd0696ba"
        },
        "item": {
          "id": "9f61bb03-e65f-469e-864f-a646d1253d5f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d2d7e260-42a0-4f63-88e5-15c569c3a748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310321f2-29d2-489b-969b-18717b620de8",
        "cursor": {
          "ref": "2348bb41-6f92-4217-8992-bc134daeda40",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "81613234-4aa0-4269-ab84-03a7ef11332b"
        },
        "item": {
          "id": "310321f2-29d2-489b-969b-18717b620de8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "eba57adc-2bd3-4d39-b69d-1483cb7d77ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b873a1-d6dd-48b1-a9bf-e9266807e81e",
        "cursor": {
          "ref": "813c4e7d-dec7-42da-b3f5-e27420eb7e10",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d5f9af43-5309-4b3d-af70-0cf3c2932fdf"
        },
        "item": {
          "id": "e8b873a1-d6dd-48b1-a9bf-e9266807e81e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ec750a8a-7403-4df5-b6da-10901f9e6b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63262962-b751-4104-8b24-f6b01de57b81",
        "cursor": {
          "ref": "41a52edf-e4d0-47bb-b0a6-a0557b2907b5",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ca3be7db-6a11-4192-8a7e-3cb6ed898e9f"
        },
        "item": {
          "id": "63262962-b751-4104-8b24-f6b01de57b81",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ca323153-caef-489a-948d-98e303bf1e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78a40d4-65f6-446f-9c37-c8f1027f5856",
        "cursor": {
          "ref": "5404ff69-7b3c-404d-961b-0fb81c9254b6",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "29b9d683-07ca-4da3-a74c-59a11a2e746d"
        },
        "item": {
          "id": "c78a40d4-65f6-446f-9c37-c8f1027f5856",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4c0632ba-337c-47fa-8cc1-6cac63935e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d974aa6-28e8-4755-8d39-f83abe658b84",
        "cursor": {
          "ref": "1d371ca8-a7d1-4512-bf0a-7f326808d37f",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c9474698-5743-43cb-80d7-11dc0f2249ec"
        },
        "item": {
          "id": "6d974aa6-28e8-4755-8d39-f83abe658b84",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b1eecd88-2d62-47c2-b3d2-7916e3c7df32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4dfc2b-ca99-47f5-ab9a-bacb93690f3e",
        "cursor": {
          "ref": "1c267342-f157-4902-93cd-95cba05d2db3",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6e64be38-2a56-4f2e-b69f-4981e781ebd1"
        },
        "item": {
          "id": "ad4dfc2b-ca99-47f5-ab9a-bacb93690f3e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2e22c2fd-0d23-4644-a826-a728dd881a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f3abca-86d4-416f-b842-803a32b742a5",
        "cursor": {
          "ref": "4fe87007-94fa-41f0-8ab4-56849762efc5",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "20b7bdd4-cb3b-4452-89f1-c339bd6af3da"
        },
        "item": {
          "id": "b3f3abca-86d4-416f-b842-803a32b742a5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d1c30354-3dc8-47cb-802e-7895ad18f125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32aa6c5d-eec6-4b68-b8b2-56825343d793",
        "cursor": {
          "ref": "1b2850b5-14fe-4c2c-b177-098a7ff163f1",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b360f34d-1ad3-49d0-85f5-f1edae89af72"
        },
        "item": {
          "id": "32aa6c5d-eec6-4b68-b8b2-56825343d793",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2c600ac3-8753-4c59-b72f-7c39a2783568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d8ed41-7276-48fb-8b7b-b4261490fad9",
        "cursor": {
          "ref": "a619dd39-0dc6-43c1-9482-2ac10a369366",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1dc815ec-6f50-43b8-97ed-f2fa35bdb353"
        },
        "item": {
          "id": "89d8ed41-7276-48fb-8b7b-b4261490fad9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9f39872e-83bd-4970-afbe-ec5b9eedde03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8faefcf-dd2b-40e9-9f1e-78a4b2bc197a",
        "cursor": {
          "ref": "83af5540-6d9a-42f4-ae0c-0e840edaeada",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "67432448-4eb6-40d4-a00c-4949ed751d41"
        },
        "item": {
          "id": "c8faefcf-dd2b-40e9-9f1e-78a4b2bc197a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "53d50b23-0d03-44e4-9cc6-6a7077330666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c51c39-2583-4a8a-ba23-a0cbb5ad7031",
        "cursor": {
          "ref": "b8ec09e2-bfd3-4ff1-b1f0-c8474df83b31",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "eea2d0d0-b4f9-4f15-bfbc-c117a78c6dc5"
        },
        "item": {
          "id": "60c51c39-2583-4a8a-ba23-a0cbb5ad7031",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "aab00dd6-5000-482b-885c-f6a636470827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f8ed07-0f7d-455d-802a-28698467d7bd",
        "cursor": {
          "ref": "cc1a7f85-b91e-4723-b099-7ac697acb922",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f2e02a8a-3e04-49d0-9b0d-e79deaa63397"
        },
        "item": {
          "id": "70f8ed07-0f7d-455d-802a-28698467d7bd",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c1ec04e2-17e6-432f-a2b4-9c60db05ac64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea6ba64-f545-4580-b017-0c37928284ee",
        "cursor": {
          "ref": "20047c9a-7667-4ee4-b54c-46170d1ff6c4",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "743d6e9b-8766-4473-a321-40d867fa58c6"
        },
        "item": {
          "id": "5ea6ba64-f545-4580-b017-0c37928284ee",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "adc54c52-fb90-464d-8b87-5fe898be5a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ace295-8aed-4381-88f8-d99691546d5e",
        "cursor": {
          "ref": "95812ee2-d448-409b-8e43-81d6eeca15d9",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9790a05d-8d25-4fad-8f30-065d627c9af9"
        },
        "item": {
          "id": "76ace295-8aed-4381-88f8-d99691546d5e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "959948c8-7eb4-4199-a82b-0a8457a23427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f8e0a4-df16-444e-9fb8-fb814be1b5e0",
        "cursor": {
          "ref": "f26e0e9b-bf68-4851-a840-82dcf4e544b0",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7953148c-41d3-43bb-8899-db250a582a18"
        },
        "item": {
          "id": "93f8e0a4-df16-444e-9fb8-fb814be1b5e0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3b100830-b3bf-4942-9ea9-c4f440fc446a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db57deb7-a670-4756-9ac5-62c0e4de85ad",
        "cursor": {
          "ref": "6f261369-1a64-4cf0-a682-619a5c6351e1",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "271e500c-d16f-47ef-ad81-18a2791cf988"
        },
        "item": {
          "id": "db57deb7-a670-4756-9ac5-62c0e4de85ad",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d1da76f8-f953-4138-ba1f-237520f16077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ca47b6-d7da-4363-aff8-9656b51a0bfa",
        "cursor": {
          "ref": "8a289c55-b9fd-4a06-85ac-083ac400a1aa",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c927977f-639f-4a23-bc28-bb8618dbe116"
        },
        "item": {
          "id": "93ca47b6-d7da-4363-aff8-9656b51a0bfa",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f1138654-1c5a-4005-95d5-79632fb36288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf1361b-7e8a-4cf4-965e-b7e2035e281e",
        "cursor": {
          "ref": "1127e16b-00e7-403c-a00f-7c49ab2fa0e5",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2e56ea1b-c433-4596-a624-2f05456d0b8d"
        },
        "item": {
          "id": "edf1361b-7e8a-4cf4-965e-b7e2035e281e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "cbcda4f7-9ec1-4769-a66c-b44c44365d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec99a05d-c261-4f14-9afe-ca2b634f93c4",
        "cursor": {
          "ref": "0c7cae2b-278a-44ba-b035-c365a79f4e53",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1056eb0b-b393-4ff6-84a9-b69c896f24d8"
        },
        "item": {
          "id": "ec99a05d-c261-4f14-9afe-ca2b634f93c4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a13d26fa-d5b6-40fd-9f96-983a05a7311d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7943f8fe-d29d-4bef-9331-19874324b716",
        "cursor": {
          "ref": "11bc2076-f8e1-426b-a184-fbd3bbc2c5da",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5ba8b850-2fe0-4d90-ba77-0a174197460e"
        },
        "item": {
          "id": "7943f8fe-d29d-4bef-9331-19874324b716",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "38e5ef23-b94b-4a95-9459-e7d775c2482b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41183f63-7065-4943-b699-a20e073d615d",
        "cursor": {
          "ref": "c349f424-2a05-46b8-85b3-8cc56f25ad57",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "89461991-f0f5-4457-8554-a7d7af91c4ab"
        },
        "item": {
          "id": "41183f63-7065-4943-b699-a20e073d615d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "16f089fe-2fbb-45b3-ba55-2d848c95e398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21222f5-86d6-4c12-8ab4-54b6b4b199dd",
        "cursor": {
          "ref": "ff933c6c-fcd6-4db3-b61d-48a518e10bde",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2370b955-a4b2-4e63-babb-080f2fdcb880"
        },
        "item": {
          "id": "a21222f5-86d6-4c12-8ab4-54b6b4b199dd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b2237e33-cc3c-48d4-aa37-02cbeef96806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c953c0fd-5835-4ec3-87bc-9b3266187f36",
        "cursor": {
          "ref": "6c11d86e-f6fb-4d92-b429-4706746aa650",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "72fd7368-3a0d-4830-a7a9-1cc057060342"
        },
        "item": {
          "id": "c953c0fd-5835-4ec3-87bc-9b3266187f36",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "22c84c89-b5ff-4d74-b259-f66c4b32e07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1ad651-6c1a-4a8f-beb5-49ed7b6b4521",
        "cursor": {
          "ref": "580a1892-dfd9-4c05-bb5b-be2b01ac5c57",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "655e2d64-24b0-41b6-9d1e-c849d3cdee94"
        },
        "item": {
          "id": "ce1ad651-6c1a-4a8f-beb5-49ed7b6b4521",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e4038464-1a63-4ddb-b59d-4685478ded1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fe5d8f-5d08-426f-86b3-89f7f970c0d8",
        "cursor": {
          "ref": "527c61ee-ea92-41d3-a8c7-6cf153c5acc8",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e9587609-36cd-4658-83f7-fb581b258e11"
        },
        "item": {
          "id": "06fe5d8f-5d08-426f-86b3-89f7f970c0d8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3f255991-395f-42c8-ace8-879f2e82136d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba852ee4-9cce-4fa3-be3c-8549e17fa4d6",
        "cursor": {
          "ref": "04b7cd32-b8bc-40f2-8e88-dcbbd5f6d5cf",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c9e81079-e763-4ad0-b72a-979a7ab09894"
        },
        "item": {
          "id": "ba852ee4-9cce-4fa3-be3c-8549e17fa4d6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7365ec3b-958f-437b-8ef6-d1d3011e81ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b3bb93-80fa-4466-84d7-9c9b1debf217",
        "cursor": {
          "ref": "8cf07c42-b025-4791-b115-4d2600159e64",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5fd582b8-2336-4e66-9caf-1f3ed585208f"
        },
        "item": {
          "id": "d7b3bb93-80fa-4466-84d7-9c9b1debf217",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "855067b4-d40e-49e1-bfe4-e1f872a911f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db866d1-fd03-4ee8-bfd5-634ef51fd2c9",
        "cursor": {
          "ref": "372dd77e-8f5a-4a36-a05b-a50e8e5256b0",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d8c14cf6-23f8-453b-82aa-c0450c3756aa"
        },
        "item": {
          "id": "0db866d1-fd03-4ee8-bfd5-634ef51fd2c9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0a229099-3e96-4b22-8cef-1a53f707c4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a368b9aa-21da-4d14-b819-fe35f380d2f0",
        "cursor": {
          "ref": "40293a0f-0553-40e9-a087-45c1195d3b88",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5f03923f-c2f4-48e6-bfad-0d4929928c22"
        },
        "item": {
          "id": "a368b9aa-21da-4d14-b819-fe35f380d2f0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b379f3e0-7015-401d-b292-c063fec2e6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef144e5d-9c8b-4e60-8147-e199004f7788",
        "cursor": {
          "ref": "c4bb45e8-b7e8-46a6-aee3-59704251de51",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9a8672aa-ce8c-4802-9cd8-ebe128c43eca"
        },
        "item": {
          "id": "ef144e5d-9c8b-4e60-8147-e199004f7788",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3be8097b-22cb-4977-9f94-d0a01c5ce22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b98d8e-d5f2-4262-b505-1296219b3a6d",
        "cursor": {
          "ref": "1a7d3d82-014b-45e0-86ce-b6ea985445e7",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "348e2f9a-fe80-43c9-bf13-b4225427b838"
        },
        "item": {
          "id": "b3b98d8e-d5f2-4262-b505-1296219b3a6d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4d167f75-3d7d-4c5a-a87c-df303a899a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db22bf2-3762-4f1c-a6a3-5f6e80934c1e",
        "cursor": {
          "ref": "03b2494c-a42c-4137-b59b-23804f927484",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "02ac79a7-44fa-462d-95d6-7dc2e16df23e"
        },
        "item": {
          "id": "7db22bf2-3762-4f1c-a6a3-5f6e80934c1e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ec324b9e-145d-4c3f-9d3c-d9af3e6d5f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc05a052-3b6c-4e17-84a2-ad7ead2a4bfd",
        "cursor": {
          "ref": "ef2ea24f-76ef-40a7-99a2-7b4d91a74489",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "83b748ac-c6e0-499a-a63b-352e5840cb23"
        },
        "item": {
          "id": "bc05a052-3b6c-4e17-84a2-ad7ead2a4bfd",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d23ade75-5653-4d1a-9299-f223958ec160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb42501-a230-4020-8c2f-83fd75a88299",
        "cursor": {
          "ref": "03296329-d589-482b-8dc4-4072bbf93c0f",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "cc038a7c-ca26-4e78-8db8-0ace10f4b4fc"
        },
        "item": {
          "id": "dfb42501-a230-4020-8c2f-83fd75a88299",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "15304244-f5a7-4068-99bb-3d88bbbdc05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a385a4b3-e376-4cea-8ea6-1ffcac389506",
        "cursor": {
          "ref": "0b94805b-7a2d-431a-bfa5-044ebac4ca9e",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ba54aa2f-de67-4521-8111-4413318fe173"
        },
        "item": {
          "id": "a385a4b3-e376-4cea-8ea6-1ffcac389506",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4e105afb-c188-476a-b1a2-9a8f41e21f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26415ea2-17c6-4a70-a46c-69c9905d89f9",
        "cursor": {
          "ref": "f0b52e18-f6c2-4afc-9a79-6d697396ab4f",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "90004d56-5264-4a97-b331-25bb2158700f"
        },
        "item": {
          "id": "26415ea2-17c6-4a70-a46c-69c9905d89f9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8177bc5b-0352-485f-ae3c-2cea6ed80f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db247c49-5acb-4010-b80f-c0a35437d091",
        "cursor": {
          "ref": "3094ac29-b4d4-4f75-b8d6-7e8f006c2d52",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "051e68d3-9ee6-43f7-ab6b-0907ab4dd186"
        },
        "item": {
          "id": "db247c49-5acb-4010-b80f-c0a35437d091",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "fcd01130-7bfb-4c2d-b6a5-b4071fc8270c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e612bb9-dcd8-439d-ade1-622db0d7c224",
        "cursor": {
          "ref": "1a77b6b1-d1df-44fa-8d15-3207ee71593d",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7a92fe93-a203-48ac-aa68-17bfbcf950cc"
        },
        "item": {
          "id": "2e612bb9-dcd8-439d-ade1-622db0d7c224",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d353a84f-2d69-47fd-b10a-83bfec798859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9dacd03-eaf3-40bf-a2ae-91f545511ab5",
        "cursor": {
          "ref": "630d2223-28f7-44de-aeaf-250d881661f2",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1713312b-d8fb-4e4c-968f-f5776a941803"
        },
        "item": {
          "id": "a9dacd03-eaf3-40bf-a2ae-91f545511ab5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f9e69062-b16d-4a15-a605-7e021f7dd559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad657354-2b25-48d9-b332-d9aff2db52a3",
        "cursor": {
          "ref": "99134615-498b-4777-8539-8c393d2d8c80",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "96285511-b877-4c8e-8d16-599d3155f92f"
        },
        "item": {
          "id": "ad657354-2b25-48d9-b332-d9aff2db52a3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3ce78067-a3b7-4c85-a542-9f6d9d4c84c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b87785-b63d-4056-8601-295d9393d48b",
        "cursor": {
          "ref": "1d86b65b-5664-4f90-9945-db86df95defb",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a274f142-c72a-4164-85a5-9889db47fe8b"
        },
        "item": {
          "id": "17b87785-b63d-4056-8601-295d9393d48b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "75603f40-3dda-4cbb-ae94-7e4f311aba76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b009a594-eeba-4137-b925-8491d1553351",
        "cursor": {
          "ref": "33803ebc-8074-48e6-bb6f-29778b069a72",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a124d41f-0df8-405b-8941-5626328e159c"
        },
        "item": {
          "id": "b009a594-eeba-4137-b925-8491d1553351",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6c860d72-8247-4c69-aad2-882236a7a38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b8bb22-d9b9-4601-8c0a-b3e92f8a15b5",
        "cursor": {
          "ref": "e50eedb6-5828-4ef8-9db1-2c0371b37864",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "afe71fe6-a227-4ae7-96e9-08b659bea017"
        },
        "item": {
          "id": "86b8bb22-d9b9-4601-8c0a-b3e92f8a15b5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ac82634f-e903-4bc9-8ffa-aa4e57ed739a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7d1177-cd30-4c4a-b358-85d0ed1cceab",
        "cursor": {
          "ref": "b4ffdae6-51c4-44bc-86fa-00b200d3ca87",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d2573712-9c92-407c-9766-aae78f88e7ed"
        },
        "item": {
          "id": "6c7d1177-cd30-4c4a-b358-85d0ed1cceab",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ac8bbf05-993f-4999-bbaa-2d98b14c04a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5792d365-55fd-46e1-9f44-ab7df2c48be9",
        "cursor": {
          "ref": "fb61c9da-7b79-4ff8-b12d-192c315a0dc3",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9518b3bd-5ca1-4ca3-8059-d2567274be76"
        },
        "item": {
          "id": "5792d365-55fd-46e1-9f44-ab7df2c48be9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "dca11e04-5e3a-42f2-a9c0-006ff108bfb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f93c8f-c055-4858-b120-5b1eff27471d",
        "cursor": {
          "ref": "e208dee2-f3f0-423c-b853-c889b8474cb7",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cc6a3e5e-033c-4b90-9396-9e03732dfefc"
        },
        "item": {
          "id": "a0f93c8f-c055-4858-b120-5b1eff27471d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e8d11ce1-8f4d-461d-8bc4-caddb2734003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a638c4a0-603f-479e-8786-de4d3ab773e4",
        "cursor": {
          "ref": "29feb164-f5f2-4f9b-b35b-fc4ff349058a",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5ffbad20-622e-4d4b-8517-09fdb8971562"
        },
        "item": {
          "id": "a638c4a0-603f-479e-8786-de4d3ab773e4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9b9c93e1-4d58-4b64-9445-3653cbc978c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9645c157-f8cf-4f65-b4a2-63f4bc168cb5",
        "cursor": {
          "ref": "95c0574e-83f3-4d13-8b66-15908118ec3f",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "aebbe0a2-5375-4687-8047-9b401008e177"
        },
        "item": {
          "id": "9645c157-f8cf-4f65-b4a2-63f4bc168cb5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e0e3198c-e76e-4e0d-afcc-32eea4b755c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38408245-1858-4bfd-bfb2-54ae7d8c579a",
        "cursor": {
          "ref": "bda3f5e1-0ab9-4a07-b9c9-2ed812ea131e",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "19a957cb-bd71-4df7-92a6-2ed637054d31"
        },
        "item": {
          "id": "38408245-1858-4bfd-bfb2-54ae7d8c579a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3a4a3846-d380-4620-af5f-de8d154f9eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3db134c-9403-41c3-8f6b-3f80f1f19b3d",
        "cursor": {
          "ref": "92283313-3bf8-4161-aff2-f7ffbb79b8a3",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8b6b50aa-54a1-4d9d-9666-d851829e9caa"
        },
        "item": {
          "id": "b3db134c-9403-41c3-8f6b-3f80f1f19b3d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "61fad0c4-b77e-4935-b5f3-524e7889661f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003ccefd-b826-4020-b8fb-dbc81ba82473",
        "cursor": {
          "ref": "c4219001-0eb0-44ea-96d4-cba36c5a49c1",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9315f3dc-fea4-400a-9206-99095fa274ec"
        },
        "item": {
          "id": "003ccefd-b826-4020-b8fb-dbc81ba82473",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "10b5706c-9c2d-4f9e-bccb-03f44d4dba19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec18e6a-0928-4992-a17a-2ef58ad0e911",
        "cursor": {
          "ref": "0f7eb522-6f68-43fe-b09a-544920a9d890",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e530e359-cc7b-4778-96b8-459120e86fc7"
        },
        "item": {
          "id": "1ec18e6a-0928-4992-a17a-2ef58ad0e911",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "039d5739-3915-45f8-92ff-789fc47ba9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a88325-42cd-4980-bacd-b29b01ad845e",
        "cursor": {
          "ref": "3e4f4383-75e1-4e78-bce0-62c2edd6877c",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6abdbe9e-a9d9-4d50-8282-a6d7d593b4ba"
        },
        "item": {
          "id": "71a88325-42cd-4980-bacd-b29b01ad845e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bdab6fe2-6075-4793-a8c2-39288c557f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd73179b-bd6d-4f1c-ba74-dde5fa55883d",
        "cursor": {
          "ref": "e34430fd-6fbe-4656-8ca1-240744c39088",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1724ae09-dc54-4b33-87f5-442fa28b5c4e"
        },
        "item": {
          "id": "cd73179b-bd6d-4f1c-ba74-dde5fa55883d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "513a162f-13cf-4ce6-94f2-ad8eb3fc7bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69a86aa-77da-4972-9bbd-4a4d1df9b979",
        "cursor": {
          "ref": "f0b09310-b53b-4f8e-a30f-cadf41d0037f",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c3f5a8b3-b8c2-4415-a441-27fd2cf89af4"
        },
        "item": {
          "id": "f69a86aa-77da-4972-9bbd-4a4d1df9b979",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "82f8b074-7c50-4b59-a0d8-85619be8773b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3f3193-9bf0-4474-ab29-eacd6b146ff6",
        "cursor": {
          "ref": "8a28387a-92d5-43d3-b484-bcc8f8d5313e",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "18c035d2-2038-49d8-9179-123d5f0e1b2a"
        },
        "item": {
          "id": "9e3f3193-9bf0-4474-ab29-eacd6b146ff6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e9d5dc81-306d-40bd-b9ee-5917f9079ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34dfc3e9-a8ac-4577-82af-ebdb5acfd0ae",
        "cursor": {
          "ref": "f6951754-6079-4293-91db-b7b51f5f7b9e",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cf01440d-8ea9-4c55-8e48-372a2040de4e"
        },
        "item": {
          "id": "34dfc3e9-a8ac-4577-82af-ebdb5acfd0ae",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e8255bad-4953-496e-9ca2-73df54f15d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eeb414a-193e-4094-9ab9-b3ede18eddb1",
        "cursor": {
          "ref": "e13b34bd-26ea-4e12-8530-c042047f1178",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "647c886c-fef5-421c-b9ae-c05bae7f3612"
        },
        "item": {
          "id": "4eeb414a-193e-4094-9ab9-b3ede18eddb1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8c961816-c0b5-4f07-a959-455e1973c2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa97c94b-52a8-483d-8c0a-8b93abf23b83",
        "cursor": {
          "ref": "c1b5987a-97cb-434f-9c8f-8310cca319e5",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a7c3c223-7a4f-4524-bf7f-ad894262cdba"
        },
        "item": {
          "id": "aa97c94b-52a8-483d-8c0a-8b93abf23b83",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3acb85e0-7f9c-4492-aff5-5b9aa5a842e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35a5659-9fab-4316-97eb-b147604c8567",
        "cursor": {
          "ref": "040646e1-c111-4637-85e1-cb912998addb",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c0c6d60b-d8bc-47b5-893f-d3e975b3f6fc"
        },
        "item": {
          "id": "b35a5659-9fab-4316-97eb-b147604c8567",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7552a291-4c2f-4998-afc5-3e9a4a1626e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0e21ba-720c-4a06-950f-0350fd44b42b",
        "cursor": {
          "ref": "60b5e9ad-b45c-49f3-9e47-e598f70e24e7",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "539b5bc0-83af-466b-915a-21dae7bf7efc"
        },
        "item": {
          "id": "6a0e21ba-720c-4a06-950f-0350fd44b42b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "75bf8782-8863-4bce-b145-d83be3074cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3891cbe2-b5a3-461b-8b3f-03c7d65d88b2",
        "cursor": {
          "ref": "e4f74508-c23e-4f38-b0d9-49ffa62ded85",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a0098ddf-336b-4bf1-a798-961238b60223"
        },
        "item": {
          "id": "3891cbe2-b5a3-461b-8b3f-03c7d65d88b2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d595d688-9726-4034-b1ba-74d7bed6fadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b401d35d-8edc-455b-9c7a-26072281e6e5",
        "cursor": {
          "ref": "9713f7f7-1ac9-43af-8bd0-3d0c629ea1f6",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "86442acc-de23-48fb-b874-495004495397"
        },
        "item": {
          "id": "b401d35d-8edc-455b-9c7a-26072281e6e5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c2096673-b09b-4520-b88a-7454f1c556a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07d6073-ad58-4b1c-ba7c-d16abd27ba63",
        "cursor": {
          "ref": "619901af-c8a9-49cc-b663-c840b9c1a5c9",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "eba73aaf-74fa-492f-80cf-0b1f4b3217f6"
        },
        "item": {
          "id": "b07d6073-ad58-4b1c-ba7c-d16abd27ba63",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8ead3633-4d37-4c45-b7c4-bed278e1a60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976246bd-cd24-455d-ab76-f863d8dc3c93",
        "cursor": {
          "ref": "d1adbb47-2dd9-4007-a078-10b096479ff5",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "92362f08-8c79-42b4-8def-acbfc92bcac1"
        },
        "item": {
          "id": "976246bd-cd24-455d-ab76-f863d8dc3c93",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "60c7915a-9aa1-4eec-bb8f-f0408ce602f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5354860c-8251-4ac2-9aab-264b2e891a58",
        "cursor": {
          "ref": "e976a905-251d-4b5c-ad47-a4c1ae637107",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "738e3225-cde5-4b42-82b8-bf97db26c04f"
        },
        "item": {
          "id": "5354860c-8251-4ac2-9aab-264b2e891a58",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cefff145-0b6d-432e-8e20-8aa10e2eb408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d675a6-6b1f-491a-a7c2-ea3f312fcce3",
        "cursor": {
          "ref": "08c56f84-b7ef-4c29-9a3c-7099146f0a13",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8a816ad4-4624-4351-b588-92806d4dc987"
        },
        "item": {
          "id": "91d675a6-6b1f-491a-a7c2-ea3f312fcce3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "09e19591-f5cb-48d1-9734-9f5b6b566111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5615114b-378b-450b-a795-27c1738bb064",
        "cursor": {
          "ref": "39cb3340-ea3e-40b7-ad7a-c19fc382d360",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3490147a-cc46-4f74-a4d9-104e5e2893f7"
        },
        "item": {
          "id": "5615114b-378b-450b-a795-27c1738bb064",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8d54430d-ad72-4cb0-8fb7-eb64af4416d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a8089e-e651-4cf3-bb2a-ba52607becad",
        "cursor": {
          "ref": "e4818587-e20a-4ecf-b2e0-4d9143498a4c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9825f53c-9546-4a1f-b70d-c6f495ef455a"
        },
        "item": {
          "id": "53a8089e-e651-4cf3-bb2a-ba52607becad",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "57a149a7-4551-4545-8452-29d45e81d2b6",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c356a6c-b1f5-4927-83b1-5b9939ea386d",
        "cursor": {
          "ref": "aade99a2-cad9-4d05-8dce-ee4ccfc5333c",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "edca981b-5c8e-4eb6-a994-d0806c26f5f9"
        },
        "item": {
          "id": "1c356a6c-b1f5-4927-83b1-5b9939ea386d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0b4bdb2e-9e19-4e00-91b3-ae91565dcf1b",
          "status": "OK",
          "code": 200,
          "responseTime": 3528,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b760e345-9fb7-4a8f-96de-1efd84239876",
        "cursor": {
          "ref": "b8ff1936-5c5b-4665-b71a-24e86e4845e9",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1487155b-b079-4bdf-adea-1ae143ae581d"
        },
        "item": {
          "id": "b760e345-9fb7-4a8f-96de-1efd84239876",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "15fcfcdd-4234-4375-b5bd-06fce801fe10",
          "status": "OK",
          "code": 200,
          "responseTime": 2423,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2874210f-22b2-43fa-a083-60d858e34f4b",
        "cursor": {
          "ref": "747a9fed-c3f2-4efe-970c-c7a3bb95f67f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f1dbc2cd-73a8-4084-9d4a-02ddad9a4d10"
        },
        "item": {
          "id": "2874210f-22b2-43fa-a083-60d858e34f4b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dd639996-0ecc-4dc5-ad95-f47599a5b512",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2874210f-22b2-43fa-a083-60d858e34f4b",
        "cursor": {
          "ref": "747a9fed-c3f2-4efe-970c-c7a3bb95f67f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f1dbc2cd-73a8-4084-9d4a-02ddad9a4d10"
        },
        "item": {
          "id": "2874210f-22b2-43fa-a083-60d858e34f4b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dd639996-0ecc-4dc5-ad95-f47599a5b512",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb15cad-5051-4cb9-b260-764b930c7392",
        "cursor": {
          "ref": "0768e4f7-61e8-4dcb-828d-e73f40cd22c5",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "372d9ccc-cbc9-46e6-ae18-73435749eeca"
        },
        "item": {
          "id": "deb15cad-5051-4cb9-b260-764b930c7392",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bef6ba8d-0fee-4f6d-8cac-d641355fb47e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5f486c-62d9-49ec-9494-50872c7c0a96",
        "cursor": {
          "ref": "d44c0527-231f-4e1a-9904-4bd33b2bfa07",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5c7df7cb-8b5f-46d1-99b0-44d8f3a0feff"
        },
        "item": {
          "id": "8a5f486c-62d9-49ec-9494-50872c7c0a96",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7180cfae-56e2-487e-8419-98e389ccf4c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}