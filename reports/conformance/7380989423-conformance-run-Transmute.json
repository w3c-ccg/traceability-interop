{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "feef7de7-df72-4c52-85b9-a07dbf177599",
        "name": "Clear Cache",
        "item": [
          {
            "id": "74e22599-b318-4396-a061-97d5ea1877e6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8ccd5bd2-e053-41e3-983d-25e04d6fbc1e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a4fa08bf-11c6-4e27-99d6-58113f93daf5"
                }
              }
            ]
          },
          {
            "id": "efb5d607-938b-4376-9dc7-8d9ede4cf810",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "14385439-28d6-41a5-a64c-83497e257374",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "32063990-d37d-4e16-90ba-bfef266bfbb6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2c9d0bb3-a005-4f5f-885f-2e857798d49c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "70898022-4d2b-4f24-939e-55ae6c64c9fb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9f2f2fd8-c26d-43df-874f-e7cc29a22a5a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98abd01a-1e48-404c-a1c0-1a53103beb07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "27e2d1dc-998f-4085-9bce-601c9b6fb33f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5a9585f4-c7b7-42b2-86ff-375419b356e1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f68ae242-d10d-4ce7-a8e2-9cfba8ba9533"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c8c61d10-2092-430a-8b52-6ea8f1d9139e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1d3993a6-12f4-437f-a6b5-8543b317e054"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26026d3b-bddd-4ae7-a313-f66991513eca",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "453531f9-1475-46a6-b245-9731cff398c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2328283a-d8a4-4c3d-8d10-8fb35e2504e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a228daf-d61d-4d66-8fa7-f76e427f8072"
            }
          }
        ]
      },
      {
        "id": "57a2df7e-9a2f-413f-a9da-cd653ffdf4e5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cb4f7f53-329b-470c-ab16-807103052313",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eaf145fc-91e4-4952-bc3c-acda60061333",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "32a93295-c797-4ea7-a821-86c095c22f18",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9637a6ec-7558-40bc-9985-480bbc5cf6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e8aeff8-bff7-452a-8cef-84a7bf382d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3289fa7-9ccf-401b-8027-373f545b62c8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eedf7a4-0d51-46d1-b9d6-4f778f5f515e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78f21dbc-23a8-4593-87bd-96b27b934be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d4ffe2-0080-4488-8419-f63a0ee387a4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ce3dcb-1c8d-4e5b-8ade-15422a2505be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16d961ab-45d4-4a43-9af2-9288f81b5534"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cd99a51c-0e76-47b3-8a5d-ec37a5e40134",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4470a689-f39e-4054-a3cd-5b9d501d7d88",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fa5623-4077-4104-9315-3b4b71a32366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29f33820-3c39-4c02-8d64-831560921164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035e7cd9-fff6-4c9d-8d0d-737a0114e367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a821269f-e900-445f-add0-9a82a7469757"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b3194dbe-c042-4bbf-a307-8e16ae2f190a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bc486ce4-d753-4657-9a59-3ce40f471662",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7558041f-fc47-4235-a0ed-de354b22e552",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4d25364b-f893-450d-90b8-b4888ad31a1d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1caffda5-604d-4cb3-9396-24dfd0d463f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7c5c527e-e3f8-435f-a76f-2615bc50ac57"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "036ab399-938f-4fa7-8156-eb020069052a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f037c9a1-e13f-4762-8c87-ae7908572d67"
            }
          }
        ]
      },
      {
        "id": "e23b6ad2-6912-4fe2-b275-6620112abaa3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "33d7b12d-e17c-4680-8b65-724fc94cc086",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b5e4415-fbc4-414d-9927-1ac1102d733c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "671f9f71-f9ec-4694-b7a8-a893e8a8d3ff",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0dd9bab-c81c-4655-ab73-5fe95e580239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94ccbe6-8037-480f-9168-7f294df76b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de989d9-9e83-4fdc-ad09-bf2a474c3f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f02ad791-f069-4a9d-bd4a-4a66d2caf8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7caf34e9-4902-43d2-ad98-efd31babae36",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f09cbb0-0406-4c45-a11a-744622a1047b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af4a5ab0-2864-4e9f-939d-4eda75346abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9827ba-dfad-4ca6-855c-94bb5f9aa3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56d4e38d-296c-4f94-a3e1-e47b8d13f7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074ab3e9-d26e-4073-bc0a-7fc1755e7cac",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2f8f6f-6d4c-46cc-a6f9-b4c745a9af10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4d88a4-5dcc-4a63-a430-f2425c67f262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741d8fa5-0831-4091-bfe7-9992ca178aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5377731-54de-441d-a899-bd442db58eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e326e9-7e3d-4524-b1d0-58b26114ddeb",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f11ebc-32b6-4f4b-bcde-8ddb97b66d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1661304b-76d5-4afb-81bf-27ab264f63ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d177cd-f4c4-44f3-8480-9f529e5a507a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11f79443-5665-4642-a571-cd975568d2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425942ab-f126-463f-ad12-23c88f515386",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d59553-f65c-47b3-af73-b64f04fbde77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "235d159f-5219-4970-a16b-a46f998d7591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e95c8a-a296-440c-8973-f68521f04592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4d226fd-990c-4ebe-82bd-d3af9f898665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9468b0e-04f1-4bbe-b66d-4d63284dfe97",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db86216a-7ee3-4612-81f9-5824586825af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "752376c9-dd3a-4e3e-bee2-66c83b7a8031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4d1c59-53bf-4cce-910f-6478fe0eb6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0291fce-b026-4922-abf5-6f0b5e0204d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e31c6a-8478-4f2c-a70e-12b16134f4b3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5c1851-022d-4dd6-9b85-f3eb0289022b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4ce58a-2281-4bea-95ed-c03e21d97097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a0ee9e-6692-4f47-ba54-988a0af66961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e27ee877-e5ba-4175-af65-f35efefae367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d6a867-8683-4e19-b1df-9ec1a9dafae9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf8fb1a-d63b-4659-a33b-6eb1cf0438f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9573206f-09b8-4a99-9b45-97b676bcf2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df3ef5f-8571-47fd-a432-e86d70f912d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca4dbd59-00c6-4d15-ac40-690f3f8d0e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bdca328-9e26-4864-a281-ae565f9b9872",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fedc900d-5242-4727-b5e6-627f74d37706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0609e4-823d-4192-9caf-65efc940d09b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a071061e-6874-43d8-ba12-1b4552cb8cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae9c7351-326b-486f-a664-40803b9b936e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763316ad-47d3-4bf8-b41b-5ba9f5909b6c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee3afed-2c1b-48df-8ecf-4635c8eaca32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3720569-ee7c-4697-a60b-4709f5cb2d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67be8f7-1a8a-432b-9646-dbd52bf2637b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8580d452-78ce-4486-a238-85c396e9b1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89158c9-9a03-48ec-a84e-328ccc922391",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728a5eea-a122-499a-a9b9-7529a23844fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c05c198-fc27-4bcb-b6f5-eba4e345ebb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2732b17-cca1-45f6-a536-91b40808b524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f20fd83f-cfe4-4e21-8eb2-97c45159ee92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb9cde1-35a8-4dba-8c1e-d7c841402edf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48114f0c-de61-4d97-8365-4ad4074e94bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d05875-a94f-4001-879b-0586319b55f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8754b79-fa36-4e5b-b47d-a078e12351af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c580b880-de5b-4740-961f-ecfededa3c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e1a46a-5a34-45f2-be01-de7566069aae",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306b2848-fee3-4a84-a447-8f674f5b4a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e7b51ea-1941-4c49-912b-55ddcb71e25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83de3798-8c49-43bb-9691-2c1ef98b376c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "589cffe7-8b24-4b0f-acfa-96a5ea86c794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb1c3a7-c1b2-449a-8c84-4d9368bebeb2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929b63f0-258c-4090-a60d-6667d2657a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8425fed-f9df-49af-a39f-f258fa3b62ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8e0271-fdef-44ec-991f-35370abcb147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0289f6a5-80d1-46e0-8bc2-3d7dd35fcd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816448c4-9c0c-4d20-bb42-aad5869338d9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb532615-df6e-4c4f-a7a8-248f44072a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ca2b7b-f3dc-4f37-b1c4-53456b388055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460daf53-43ee-41ed-a6e7-5c97d098fc86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb6d9fd4-e3e9-4b59-b895-eb7e47c97dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9f75f4-c934-403e-9121-1545340ad90d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa39142-bc97-45ea-adee-595ac62153f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802993ea-3cd6-4392-903d-f4827cd6f78c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4801e75d-fabd-4ebb-85f1-c3502bbf077b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6728698b-8f6a-4b05-8808-d74aadb57298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c588183-07d7-42c7-861a-8c7184976c94",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d33557-0d00-4ad6-8e36-b2ce11b684c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6edd152c-e239-44d6-a326-c43184635e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bb0cea-c0ec-49a4-933b-af5ef2eda72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b512621a-9a87-410b-bcf3-1032ce4b6699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c151788-8f8a-4c3e-846f-83a9abad96c4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1943c534-7181-404f-9b45-9d41b9699159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "826c4205-8720-4e3c-bb8d-0bbc2ffd4dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1797f8f0-98fb-4ffa-8f09-a30f0a26adbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2b9b6f-0a97-4376-a2ad-badac37d2a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da673a75-6955-4500-8f69-b8da032b695d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9147cb-ed2d-444d-8fe3-aff3d110d12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc21d57-9307-42bc-8c05-b67215e92fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbba2c4f-0861-41fb-b294-87104df9fa9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5053a05-24c9-47f4-b860-2572b41731ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1885752-c1f6-4c07-bc4f-8e600cc9b396",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001d2c23-7008-4292-9498-aa702449ef7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c3efca8-4a91-4718-8a73-35516d6449f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731136b4-2969-4872-8fbe-fd61329e2303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "593b537b-0722-41fb-9d49-c5cd18e1f051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f27b3b1-3519-4ba2-b1a3-cfd8082227d4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd2c288-343a-4f1c-b884-55368e0914b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40482e5-88a4-4df2-9a66-955a7d25a4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e239e8-96d3-437b-9a8d-ba83e3030f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b86f34e-7399-4506-999e-83d663f1bd53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7481bdd4-3852-465e-a079-93ad0de39937",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "284d14da-0e13-4092-af58-c2d9b6025eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bee4b88-9ae6-4e33-9819-13048efb05b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17238a8-86d1-4e0c-9105-e4ad40da7b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9419cc9f-450a-44a7-bd9f-037b4544a46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165e653c-2504-4b31-be73-6677fa930f4e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644e63d4-340d-46d1-ae13-b13b449b8954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f03b994-ae26-4dd2-9b3a-6ef187ed2263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc2a043-ec65-4b39-aaf7-2eb750984302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "29f15f8c-13e2-488e-bc60-d7e07516f437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1986375-a7f5-462f-aeea-0274d9788e40",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161ec182-7a80-4a29-83e9-8a9419f5ca61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "479bc306-8a9a-4f36-9e3b-5773e2f7dfe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0a52bb-1930-4dbe-8990-1a9e6f6c62c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "97f3bddd-6637-4a05-ae69-657181612ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da69f8ac-febe-4add-84fe-0a9d252afad3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f6de2c-66a0-4e36-abb7-1ef7aa471f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900f31ed-ef43-4e17-a04b-47f5a1f58da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9321e3cd-85e8-4b34-ba90-6c13d84aec3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "00400857-9b78-4d33-a34f-9bd21d202501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59012493-5532-4b0d-96bd-0c12360c7aeb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15463952-3a91-4037-81f3-8ecfdda0149d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf1fb9b-daff-4cbd-9282-bb4acc541817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0dab605-06ae-47c1-bd70-156826308328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f849ee94-d44a-4412-b793-34a5ad643fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2d0c8d-582b-4dd5-9fe6-bc08cdeae525",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76698238-e250-482e-b368-b6cf8a789d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033a5025-ece6-4405-84fa-d6e45a71bc63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e83516-371d-48d2-a812-3661440df46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c22157e-ca7e-4c99-b968-2074402a3114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cc5ed0-fc31-4850-87a8-1bd9d7e1decf",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683d7691-aeea-4146-bc89-5b2d3ef94e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2d7c43-2f83-4520-93b7-10e0b0b3c098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55689d63-5145-475f-b3b1-44c829c5c14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20b25169-b6b8-4750-a492-bc8860443fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3244a562-1001-4e2e-935b-53a5d8a65001",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0877e73e-92c2-4171-8d91-656f3ad9627f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b4f070-8dd9-4e10-8006-eded356e4adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8799bb1d-900b-4a2b-a8b5-9cec7bf18be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e95a11e6-1ce2-4274-ba10-3b868385a919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133b7e48-6649-4a64-906e-7359dbd1b18c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69360f9e-c9bb-45c0-80f8-2503c114760d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff8324c-38a2-4e43-bcd0-c32ae9166aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8090f2-c7ed-4791-8b0d-addcf11c7f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "49e06f84-a3a2-4988-8402-6f50030f7365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039b6fc9-98bd-420d-92d7-a0de0a7d6825",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7648e8-07b5-45c0-a7e9-3fac9faf8811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc61fdfd-861e-40d8-8b23-a68c23fcf855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01852e92-1bec-471a-9315-9650bbf2c79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "38585576-01aa-4489-b410-989255bc7001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c450efa-454e-4f70-a706-8f5cbf3a510f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57945d8c-70ca-4015-9eaf-a8e75bc59902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b91c314-43a9-44d7-bc7d-5a3669de3c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b92280f-bc0b-473f-a441-b9de22610d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff4d4ce-a4d3-4ae3-9f74-6b96893744d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8077dfc7-bb2d-4bef-866f-bf82373ae120",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574b8301-b8d1-4989-bee4-b9a36de501e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f12039-504c-4e37-b8fb-92a8172adcf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311c6123-725f-4c89-9de3-4c6468f6bb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4fa7302-f133-4881-8108-71c0e2fdf1c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d14ed99-c5ee-4a10-be8e-3d5f4aa1e89f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe63c01-632f-4620-ba3f-1dd5292b6202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "134714e8-4c26-403d-b35a-b9c8e5840c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf78539-fc3a-4e85-a4de-7f2d4019a575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "723c7366-80cf-46a6-8c68-75793eea1d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34aa2c9-4592-4552-8571-84c0200681dd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c096e7-e9f0-4064-9c4b-0585643adb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5d76ab-9fb1-427d-b5ba-9a76f0af68ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cdfe780-5e2e-4d6c-a2a0-56a0a4f3f506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c022c17c-a08b-41ce-ac05-70fc7cfa093b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea95fc5c-c10d-4cff-a150-903554250223",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28dc06a9-1c26-4ec1-b358-373ea21f8f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c02bbd1d-3441-40a7-8a51-e8d6e1789e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e93a54-6275-4e16-b917-dacece271349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9bafa2f4-e6eb-4af0-b559-876e839f413c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da73b0c-32d4-4f7b-8a01-10caee99152d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf720a3-7863-477f-a588-3551e5130cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6a3d6f-c1c7-4288-bf75-200a54314e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c0b669-4d5d-4466-9763-3969a12527e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f142d0-d193-46d3-9f10-fc33373e2927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a330854b-a12b-4d74-aa41-cc294d065776",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8b8df3-7444-4cd6-8360-8a6a54c92519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4328e38f-102a-4e5b-8b87-8f42ddbbbf3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95a1316-13fc-43c4-951e-1de3f74f2463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a3d9c32-f8ca-4b3a-be67-cd1270ae26c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e2dcc5-7c60-488b-9929-46bc3c692f3d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59187432-b328-4e24-b5b5-d4acfe63d4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ab896f-56ff-4008-a5bc-4f1901e04f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cad0814-2aa6-4ec0-8d6c-60c76c8f0630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1c3541-d6be-4118-8e8a-13413e9e6aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8e7949-f732-4ff5-8b5d-e2e6aae6a9a3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433140b4-2522-46ff-8a5e-31eed919fa10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b017b9-8446-44f3-a285-988179c9c791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceafacbd-4dfc-4d6c-9f1b-954227d567b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b224fc-161f-46b7-af49-02552ca049bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d352e2b-165a-443e-b84c-7481ba55567d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02c5425-1fb6-4616-b730-2f6ba7ed02b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e29796f-c22c-437d-ab82-170dabc55d1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f7b169-8453-4083-ba98-781176b123c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "51b1aa12-049a-42e7-a451-107b56bf9464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f214eae-2a45-4d36-bf28-9a2fdacfc358",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3891dea3-98c5-4a1a-b5f8-8e2e3a280496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48034a43-9a81-4f53-a393-ed9f863d7afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9026912-eb61-4607-a16b-2ec745edd937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3e17820c-26c7-4e29-ae9d-c07a829a75f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b134e1e8-a2b5-4d8f-8281-aec189e60d73",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9825b32-8aca-4a62-9487-6a0fdbaec9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45523351-656b-4a08-a1ff-9c946d6c2440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f65852-811a-419c-806e-da83e86d0afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "43d94e27-151c-42ba-9857-a3004d2cc091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a651ca7-17c6-4e7e-82e7-3361f9cc7ac8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8116bab0-b423-44a8-81fb-2b94448357fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa408662-e9a3-4d38-9588-994af3989c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1efd2c5-2cac-46c3-9706-55fd4898a69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e8944c8-c3b7-4b0c-8927-6a17d7b0cf7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63e7ca9-798b-4351-98e7-9a1df0255350",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24aaa22-6e46-4529-aeba-073f0aca1de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16cec233-6b43-43b7-94c9-d8e8f18ec4ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad900db-8212-4838-802e-8bd21f87c69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "90051ed6-1a3f-44b3-ba8a-37ef9f502e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f96dd2-6bca-44d1-b401-11640beae0b9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e32a8b7-e319-4060-beef-e279ecb41af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31681dfd-b3ce-440d-a01a-154912b993e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da46869-ac08-4090-bbd6-2df608f22259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd209376-75c0-45c2-aae8-f8c2573d5de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f63fbbf-ce34-40fc-be2d-409c64bbcbbe",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815435fe-93ab-4df2-bb92-6da9bb6ef337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb03169b-7cda-406a-bdee-92a21bd83a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9603462b-50e7-41dc-9549-b0db1fcc353b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a735202-1969-4f15-848b-24a593258fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566b120d-82a4-449a-91ed-29c5e49b6b9c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762a94cb-298f-4893-972d-06eb2c38e0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c8ec3d-7d67-48ab-8ddd-59fe7ffac78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d9e62e-626c-4037-8ff7-44364d2b9356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13924520-24b4-4829-9207-3bfcc72e3282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e156d2e-0be7-45b0-b2e5-7da582735f04",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b19747-28d9-4fca-b270-1c2780bf5c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b2b802-3266-4216-9ab6-9958665f478d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3229488-db48-4b56-81e5-b0ec5866353d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc558af-977f-470d-8fe3-6ef72c51c18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e4c38d-6bdb-4cfd-9007-69fae5d24ae8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb33cb72-698e-4e5a-b5a5-85d632a46f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc02e9ee-6f3e-49d2-baad-b6fe9cb42064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ed92d3-15f9-4c72-9cb1-fcedaae5adc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67e370b7-d20e-4b9a-9cb5-096a4189e4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a0025e-383a-4415-8eed-f631bde277b0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55767892-9dfc-4d37-b1e3-905f8f0858bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8db41dd-735c-487f-87b0-382101d1acb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc42b3f-6b18-4c2d-b4b0-af2e2f0f684d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "da7e444f-d5bb-4a43-9d3d-dc5ee9092f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a82bd4-fadb-482a-bf67-effbb0e4dd39",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60088e4-582c-47a4-a87d-17d78d7bd4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83248cd9-9b37-4874-9e66-7ee04e280ac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5739610e-7cf4-4b9c-b2d0-eb000fe93e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7504d45-12af-4311-bea9-776bfd13103c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1414ef71-f162-473d-9cab-648491632558",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ed0981-4e58-4da7-af88-3ee23e0ac1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52972cc8-2521-4b46-9a18-f2e93fe1ff6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fe20f4-6062-4c5d-beaf-78633b95bc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7a68f5-f077-4686-9da5-5a4f1d47ba9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6ebeed-76eb-470b-97bf-b310007d2805",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "671dda00-d282-4454-932d-e713139b3abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf72728-92e2-4682-9272-f11fb406d76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8665a9a5-db13-4ecf-821e-81fba4cb1f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "513d747d-4ab7-4e97-b44e-115fb05dac10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e478d7cb-e1f6-4118-af2a-22ce86a1a98d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1219037-5830-46db-a22e-25bd6b0fd487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26961ede-e36e-422c-9ac9-39da2f7099a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf8d19c-cb0f-42d7-82ff-7d37c89a99e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04f7d4af-44fa-4108-afe0-fde7e785bd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fa6cb8-a8c0-46c7-977c-91a0fa434043",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "899156b3-3aee-45bb-aa98-3d0d1eb1d2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e8d720-3d8b-41ba-87d4-09c6a7d5e8db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada5f554-e3d4-427b-9ddd-f112c3d5de0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2f076a61-4735-4360-a79a-08e5df17dd0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc8b816-71b3-497b-a5bd-36831244c358",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5de73c-6f13-4e1f-92c2-a22038588184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31ff886-7244-4697-8436-2a9d6bade05c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5538c0c9-dca3-4fba-8ba5-7dfc08f9c4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7bcdab-dec5-4fcc-a88d-0836e0bbd7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56ef9f9-fd18-43e7-b2ec-b182873a7f08",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a541dba5-ee22-4086-b76d-a9cd5f160ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b89e369-6eed-422f-a0a2-6ef78d0a2e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc100c6-d0f2-4c0e-899d-3a2fb7904b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "361666ec-b470-4cbc-bc70-743647de8951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c07f83c-94cd-4e82-9bb6-bbf14fa947f4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132dbadd-0291-4c74-85ab-1db17cf9f1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b060043-c2cd-43ba-8e51-a0e3a4452252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c506889-5e0e-401f-8feb-bf84742e05db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "58b8cece-ba8e-4a4f-899e-56e37c50ceca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dafb9d-d0c1-4bec-a995-0308e95b46a6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225a185e-00f6-481b-960e-a2efbf110c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0212402d-1d99-4faf-8bbd-a4cc83fc1e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f6c2f6-e6f0-43f2-b273-e524c3007ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "edba6db6-bd0b-4da5-b33c-6d20cf03b064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d702256c-aa76-4f79-bcfa-d9de75f91c46",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95470d2b-10d9-486d-a2bc-f98b70cb6b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b75f44c7-e7c9-4b0c-9e11-0fb516315799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42997250-09cc-4192-afda-4d1cc657677e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "804d2b15-b797-47c5-80f0-87de0aa1ea3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4edadf-962d-4bde-8f55-2b732f3074e1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340fcf27-4d20-4fa5-9425-e384b68d1788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "864a0bea-442b-42ff-8581-131cec5ed48d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7f9b6b-6f5e-4951-9932-c13d374328a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3aead4b5-44af-4a64-9784-f1e3fc28a29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9debdbd9-abb4-4a6a-a500-3ab15881cd90",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407bba28-19c8-4774-9447-e1f50fa79892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d36bf30-3759-40c4-9843-f41bcc7f3481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750fbee9-2065-4f5d-8fcd-fbb40afbc184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "92d06b50-0f76-4424-b485-1ba3b4f55ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd8cc4a-5516-4c9c-af24-737e85390641",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54bbed0-fedc-40e9-b1ad-4bb6a640b131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86cfc93c-e1f3-471a-8e78-e78c8b82bf42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480f1868-0fec-4ecc-8952-3b2f14a7f91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0499de68-81e7-4e71-8ba9-618e17d8892d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c0b9f5-ad4b-4670-ae0e-b12e3c22ce02",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a5d89f-98c3-4dec-aefc-bc480e3d077a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068418b2-c1d9-40f6-876e-49a9651bedaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb46980c-8aa1-4a31-859b-e077cc0c7afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a484b5d9-ff77-44af-bff0-5fc798a356eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dda83cf-1dae-47d7-94e3-203b5b9db764",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1471aa28-f849-4f67-add6-041e243d54d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beabddfa-06a7-4c3a-8ead-d87f5b70bc14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4df5d4-119c-4c0f-b470-5134087ccaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc59834-1309-47a3-9966-f5a0038c4ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d128475-07a5-459a-9ca0-fe8c7694ff8f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab41a0bc-3baa-4020-b679-84307b62bf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a8cb86-56fb-419e-9b31-71c01b3009ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7beae0-40f8-4524-84bc-2631ae545a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95e92758-1e62-4395-b58f-a4330cf2df85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a416b1-c69c-4870-b2a3-9ec75b00e237",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad1d033-73a8-4ebc-b0f0-448dafdf7181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae8cdda-b564-4dfb-9d87-c4e4f8f2f050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45cbbe7-5faa-46a8-87e0-8e06a8c11abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "98d63eb7-cb6f-4f09-9d80-ec2aa4e441fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0bea9a-c814-454a-8284-2ecee2687ed8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54d2684-1902-4a0f-8bbe-a973de27eff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b0e210-df45-4ba9-b39f-674f7158ff66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71904fd2-b63b-4fba-9b99-83c790fe2fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "268b2976-3e9b-451c-b9b4-8e561e821f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b99089-190c-41db-a2dd-86725e35cfab",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed822417-70af-4dd9-9355-4ab9b4a8ebd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c50e7fe9-f5ed-46a1-bcae-e2be20642409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2622f6ef-54e2-4880-ac64-eb01423ddbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94c0bfd3-9a30-4a0b-b100-746fa3db6b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dbe84c8-9903-4a4a-af33-287d6a5dd665",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291bc2a2-6649-4712-9ebc-02133d4e7f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ac74eb-a3bf-4ccd-b6c9-587bb314cd42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cccee7d6-2d94-4c3e-a534-c0185f556345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7998f480-53dd-4154-958b-1e0e66cddd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1df6fac-f6f6-40df-bedc-23959e3cf9f0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c012cb-edae-4b3f-a73c-5f92e052b2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84bed6ed-92fe-4df2-bf78-fee96189821a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efb673e-9280-4201-a082-66c3f1fdd9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf9d85f5-ed35-416f-8a5a-88961f381aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19fc78d4-5aef-4f75-9099-8e0e46b23aa3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1354ef76-616e-4cc9-a14a-cbe8d81f2562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5b2dd2-7114-44ca-82ed-2164a8c3a0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9c0da1-965a-41d4-a59a-1bf73fe7c8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fb9ff3a-784f-4c15-b71c-d22b9686ef93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda81892-5473-4763-afab-55c06e110a06",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d856026-04be-4177-a0f2-1f637d7d58d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89e0769-951d-4c26-afbd-9a87dda7c630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bbf1ad-a2c4-4e15-9ae9-505656ba22fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c5fc1b-cbb9-443a-8d1d-ef55d263862d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e498385-8406-4e93-9d34-7379e0730e72",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26099e3e-52a8-4db7-80ff-4aafbb5d2d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b685e3eb-d066-452f-bcf4-714f4ee95c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25cfe036-ce31-49ab-a781-9e6c389c012b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bccfe8b-2038-48c1-924c-741f351a05c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd429848-16d0-4a4f-a09c-e7175bc2b747",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f68e3ff-3057-427a-b0ba-7f32c41b4121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64dfcf3f-d141-4d13-bda5-9917521019cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826bf412-6334-4f69-b349-338aa26046b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cce70165-69b4-48b2-9996-b96afaea8ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442b6fa9-341c-444d-b21e-be28877736a5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220ad4ad-ccab-47ac-83c4-bb9ccefb5482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b31735-3d20-4721-ad42-89fe1d3f4c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9747597-cbe9-4913-9e41-6a35bbe3dcab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53a61b38-2180-4c48-97d7-ed3629a80c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a784a6-53ee-46cf-a545-2a3ba4bfc43a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d93f363-66ab-4828-92bd-23826995efa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41affe32-9145-4123-91ff-f6107349ad0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba672cf-12db-45db-9842-c1d36d0f4613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb38657-3ad8-4dd6-b3b7-689c7cabf3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9c99b6-8f63-430e-ab1b-dbd013f11622",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386724f8-0b41-4788-8862-0e47409a0d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe484298-f435-4707-9e65-d569112a97ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb3c7ec-b929-4ca7-988f-ad320dbbe8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff792af9-21c4-4353-bdb6-30b46f2e06f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1ff184-e2ee-43ba-a7e9-418fdcc6fb82",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c37cc3-5c3e-42e6-bbb0-35d1252253ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd1a9ec4-a6b8-47ec-aa38-7da07bacf2ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfb506e-1dab-431d-9a03-bb0d56ef2c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85165248-1509-4a15-9b2e-823ba4f7ae54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4443c6b6-ddfa-4610-a6f5-287e2c4db2de",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1201e953-ad37-445b-8788-b25b05766232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12fbe3ca-bb42-4d80-9f12-ca242d7f19fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8842bf5-e435-47c6-adc0-d6d2a3bac800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5486df4a-ca62-46fa-8e93-4f48e87d01b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f34d5d3-9cd3-4f35-ad91-aeeb49e80157",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2d0ff4-0454-4a14-908a-df7ba411b65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a8399f9-11ac-45bd-a6da-464833a19aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed76497f-94a1-4b10-9f68-b8188ad42aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf7faab-e703-4196-a5bf-ea132501061b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f63bfc8-292d-4976-881c-62a5db8f8b36",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24316b01-89e2-4a49-8236-96449b963a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bcdec15-cde1-4557-9518-c0bb2865729c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7ac719-2c27-4aee-b234-9609b1e3be8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f3a9c2c-69c1-4708-bbd1-967fc4a6468f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba8a38d-d97b-449a-b8ab-84bd870ff81f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeaf80bc-79d0-48f0-9e2b-a56bfec1f0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0cd981-d303-4f12-86d3-4c4d9ec6325b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69e3b26-4163-4bbf-9932-1309a230d820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb0490f-662d-4db1-b384-628fe2c7fe15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96718c53-d21f-479c-a6ca-6483c96ebf1d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521ed47f-642d-459d-a216-a026218e7657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41535ad2-773d-4aa9-a2d5-dc6243e8b83b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4b05a3-a143-413a-a372-b83a53ef1032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7661b70b-e5c9-426e-aea1-6d9985b5f81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd9f33c-2325-49bb-9d0c-4b2d5be5c58d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299a5270-4575-42de-a27f-b1fcb1515dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f8aac9-3f1a-4850-868e-ff3282849dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359a8603-ba24-4a45-98fc-343405125990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32cbdfdf-d98e-4ef3-961d-b030f6863337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce66f3b8-7ca0-4e6d-8178-1e2695e710b8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe93a6a-003e-4cb3-ac1d-62298cccdcf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba24f9a-acc0-400d-8b50-befd70defa1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545da1ba-0f80-43c2-adf2-c18fd40ff2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "528602c0-fce2-46a3-83af-223ce307eae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1aff61f-1008-4e20-91bd-8b0a952dcc34",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a75fb9c-07c4-4d86-b3d1-f75c8637b424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ae5582-5642-4974-ac82-73014ccf55d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdf8318-7a6e-46bc-9b4f-4e957151b42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b51a22f1-96c7-44da-8e27-1126658144ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f8f6d6-4664-4746-94b3-953cc05fa451",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc963ab-e0cb-4af3-83a6-a7cfea8568ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e1c8ce-117d-41d4-b6bc-de483317a25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9791682e-8ad5-4e9f-b9f4-7e80a2dcbde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3076b3e1-4c29-4e15-b60f-7d42bf444126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ad3f5f-97c5-4b01-8fa6-0dce0dc0b9d5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654aec1e-12f3-408b-9c73-4996979317c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12178bf5-49f9-4916-820a-672b692cd372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066aaa4c-a6a7-45c2-9322-4ebd79ca1a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbdd30a5-2d8a-4ca3-a2c6-0d3268422ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed1c7fc-21f0-49e6-bb73-5a7174b0c7b1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b146ba9-b203-4584-b8fa-9821ea3eceed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc55199-f51a-41bc-a97c-9175b9a3ca2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc7397b-9352-4433-ab7e-0d683926e7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8af1450-0e0b-4c2b-ab38-bc839e5e5695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d17185-52bb-4e61-a716-f4aca1ab4672",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f64e5d-d4c1-4a3c-9e79-53c4dae62eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "27eb58f2-22a6-44c3-aa0b-5e3a6c66b916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a97223-c779-4ae2-a5af-1aaf41a04c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "43def4d4-90fb-440d-88aa-f8c3bec38666"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "41e0f9ad-6fb4-4e3e-9181-c079b7863ea2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6128ae6-c572-4dc6-9b5f-1ac148f55d23",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e89a501-9fd1-488f-8ec9-bd7785913cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edc6d6eb-d8d7-40b1-9255-d3140fcd071f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd88b5b-1c64-40fe-8e25-2002d9907a31",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f016251-eb84-49d4-aecb-2f32dc454bf9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05e38adb-1164-44a0-8c12-91c271ff989c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2587673c-9269-481e-9e52-019ea7398af0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ed3ae0a-2240-44fb-9504-f0e90162ab43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8236ee60-553b-46bc-835b-f5ef4de8a5ff"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "41c895c2-a08c-4704-8aae-0cfffa7e341f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "14e3792e-f085-4146-818e-61b057c20797"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "22b16f23-a6cb-4614-92fd-44439122c79c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d81e7e0-940c-4f77-8f86-4aab334c07f7"
                }
              }
            ]
          },
          {
            "id": "efca9002-0256-4e93-8c89-d5fdcd9667ae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "516679e4-df69-4535-8adb-b2a06a4b4b33",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a7e193d2-307d-4f5e-a48f-36f37d4327fa",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89653ca-e792-4b11-a075-b194c9bdc61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "553c050f-ecb7-4b9c-90b7-13024e75c86c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37c2ad6-1257-4c20-8185-87079d47b2e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71bee68f-c669-4814-91a1-3cdf4f3f1f8f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c2770c9f-56a7-4c4d-97db-90ea17a05883",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5cdb97e-3730-485c-88f3-103faa6dd5a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b26075e6-756d-4064-97e3-e1cfad1d3a55"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b17f56d5-ddc0-4aed-833c-6d4bb939def7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "79b45835-31ea-48f2-9179-7639ad7ea866"
                    }
                  }
                ]
              },
              {
                "id": "0d0552e2-c168-4a19-8baf-c71b4c32d346",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3613772b-02b2-4e17-8357-3b120cc315f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "590cfcf7-ff86-49e2-9546-7eb02866d0dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0377185-9840-4e02-b723-65f90939dbd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d07bd8f1-1aff-4ee0-bb68-68f84530a37f"
                    }
                  }
                ]
              },
              {
                "id": "4ece89db-08c5-4e97-906a-514181ec623a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8778910-99c8-40e1-83d5-6db65875ac2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dcbf1dba-8aa6-4348-8d67-c7522067d0c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b6fd88a-7f04-42fe-9c22-c7e716116afd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a407b774-2103-41b0-b0e2-55588147c203"
                    }
                  }
                ]
              },
              {
                "id": "011ee084-f487-4fc8-8131-380b95c5c703",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5801b7ee-f2f9-40b5-895e-79a3bfbb17d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "397fbcf4-3985-462c-bcee-21db0b5b5507"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3de770f3-b0bf-4beb-8faf-0908acbe660a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d8564cbd-8c83-4f25-ae0a-f75a0fe3963c"
                    }
                  }
                ]
              },
              {
                "id": "8f7e1e43-52cd-4438-862e-3d19a3436357",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65ed8eec-763b-4c48-8255-42233fda726f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ab6a273-cefd-4988-ad4a-ad9cc7534657"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59e03cf8-6164-4d82-aec5-2d729449455b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fd25d682-2b81-45dd-b237-2b23b9a2f3b6"
                    }
                  }
                ]
              },
              {
                "id": "50bd11f8-b430-43be-9460-fa5442d7ae6e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "985e97d1-2426-45c9-8d0b-8408ac4f1a6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3b0a2c2-f5cb-40b5-9eec-00598cd187d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9ed6b01-6f99-47a2-8f32-ea63f814cbaf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "634baa36-ddac-40f8-836c-cf8b04ab32dc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "58ed7426-b638-40fa-ae90-e339fdebc8da",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "774faa17-1ba4-44ee-be77-41af5b623f4a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6ec67a72-2795-432f-87c3-b5e8156e0f59",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3effb613-4a95-4de2-8f1e-d58a912aa8fa"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba82d493-35d8-4581-adc8-e60ec1e48266",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0e3fa579-3e2a-45b6-b58d-ff45c0ea0f2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e6fcab5-e300-4b7a-bbb4-cc41de45bf5c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a736c148-104b-4e5b-b126-e6cf8faad5ee"
            }
          }
        ]
      },
      {
        "id": "71d62bf5-35bb-4000-83ad-2fb1a90014dc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "eab59201-b49d-4e09-8c44-e6d3b36f7446",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8bd49866-37b5-4be2-a6cf-0649ad9e8e7a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "496a3e99-4fff-4bc3-9183-e21bcfbf32f1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eec9db7-fede-4ae9-9568-a33edbc489b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692a8780-5041-4d4b-8893-8b6817778ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8075bdbd-6771-4eca-8310-3f97c09f3998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e205c8e-c1e0-409f-9e46-8a62a552cd32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6bb2c1-567b-4fd7-9384-1ffad4ba426b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb40081-b134-4d37-903b-2791cf29ce07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b441051d-d7d8-498e-99b3-f0adc6fbd07b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622bbd65-b6de-4060-a635-68d1addc3266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff84c2f-0041-4026-91f8-6341eeeab522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5218ede3-2bd1-43a6-a811-4a7099611f02",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750d87b1-ee61-427d-8b23-8139ead64380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06eb9544-f206-4cfe-a1af-fb426a9f6fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0f98f0-5208-47d3-87f3-174cdf75f82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0ab867-5224-43a0-907a-c09d2e8557e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d585f6-b714-42dc-99ab-26f5836b0b61",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369fd2a1-a83d-41e3-8b24-4bbed3ac5a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c394f2-0135-4166-89e7-39a22415c01a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f63cbcb-dc6f-4fad-82df-9942582c33f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e651f488-ccbf-4acb-b7f0-93e7e047da18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e6bd1d-5095-4ce4-a433-606ef51314f6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be06b4c-f1c9-44c6-a43a-9c2ba409a36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23ef498-e2cd-4282-835d-6683f41a0630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd24239b-d274-4555-b5a4-a5ebf60dd90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0db5cd06-ea43-4ca4-9fd7-9fc5015746ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1fbafe-3411-4ab2-8b30-34b25fa300d5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623006fa-78f9-440b-9aac-ac3d45c62ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8020fa1f-6353-4957-aedf-d17fb3617f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb42d66-91c2-410a-b1a3-01eb6032db24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8940e91d-b16e-4194-b514-c75adbd3cf99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a67f38-bce9-4908-9448-4a199ccff73b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbaba67-d859-4d41-9e08-35fb3d822277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf309c1b-96e1-4c2e-92df-dc49184fe8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a6a986-ef5e-4d3d-8e65-c647d7d3b2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6677e11-300d-4686-8cbc-58071c45a500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abceb8f9-3b56-4745-9fa6-4df022cb510a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefbaa26-946c-4c21-b530-2ed44235eb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aabe0b23-c65c-4efa-9cc1-19946f5ef7de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ec4ccf-6dfc-4284-a3cc-b031a40eb77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa99d500-8c2a-4c82-a839-21755edbb596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4182338c-2dd3-4a8a-8fed-4c9d184e0f8b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f11cf0f-dcab-4763-98b6-029d05dcc110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7cb48f0-2efd-4abc-bd86-4af60c315a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7ac273-023c-414d-8176-d728c9dd37c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63e1cefe-5eb1-41d9-80e3-ca156a0c17d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a0ad08-82a2-4ecd-be19-12b4ff1daee3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37e1705-a5cc-4301-aba4-b1040cfadbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508441d3-8f47-4d77-9458-5ffce92be907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f630d8-0e59-44e8-918f-8cf320f9753e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18fcea0e-788e-40ef-98e6-85e843aac12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47152eb7-6942-4c49-b171-b0c6f434f14c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f18f09-5ac8-4e27-bd59-bbf6bd460c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a08ca8-9246-4972-882c-f792b4e068f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd246a11-4f58-4037-92a8-7746bffed81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b28e31-3291-47e6-a338-073bb2de970a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0b9908-0726-4c94-938c-afc3f5b0c587",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1a6ee3-6c3b-46ac-94e3-234b3afe1937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57dec1d6-da07-4428-b9c7-d21a229508f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a585b555-0314-48db-b47c-9e0ef652f51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a35be92-0d6e-4ae4-bd38-a6a57deda32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80336f6a-18ee-4227-8e58-5334bdf482d9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ab7790-cdb4-48da-8757-96506c549314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c4de5ce-15b4-43e7-9afc-1cdad66902f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0905c8df-4fd0-4d41-aac4-0ef9cd2b8cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c005b62-9f6a-4bb2-bff0-e024e21c073b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0dddbc-9172-4924-9863-edd315a371d2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5f6b64-0a7f-4d38-9108-d2078fc9ae1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7921592-6a1e-41f5-8152-eb6559e06331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deeeed44-15f4-440c-888a-7c2c8e32aa4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ebd1f5-d598-4a82-9fec-9377d5f3be67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c132649-5589-4195-84dc-acbbab95ccf9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba0d2b1-c8fc-49ac-aac3-1c7afe319a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551fa141-9f94-435f-9958-ab81dc6e7c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df95b2c6-59e4-4f53-a960-18cd43e9e67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd8b530e-ddfb-43b5-a1d4-95525ba75383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dbb9449-07e6-4ede-b5e4-aa504cce25ac",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baab6f6b-5af1-4ac8-a78c-ea38ae516bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f62730d0-a783-4dc5-9888-97a22243a339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323ff8d7-a524-4e1d-b47a-573e95cd47ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "982067a8-bd6b-4f4c-883f-8f79aefac812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068c5b0a-5756-4710-973a-e15a07318742",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d853fe8-e402-427b-ae16-84209bbd536a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709b7bb2-8b37-4ea2-9d08-15aa12f92ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c03c636-566c-4ded-b929-ca1bf9df1313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f3243c-10c7-42b2-9882-02d58d9e04d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11f568f-2b7b-436d-97b2-8d9de75f382e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fecec464-4a53-4a23-8b24-71bea87b74e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef7205d-fb9b-425f-943e-0fa970521ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cddd221-309d-41b4-987f-46f5fc3dcb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a84bbd6-e4a1-48be-9003-1348a5c9774d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b4b363-5639-41f7-aa86-a0b926aaba73",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9f200c-7ec0-4245-9777-81c78de21b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0cb4aa1-6378-4805-a5f6-0ab93d3f6088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2acf2d7-2256-4581-b43c-b4eef6f772f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91b83683-8489-44f3-93fa-fe82369b82b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23a5aec-f632-4918-a854-e9b718e2e28d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39839cb-0f45-4ee5-bea1-e654c161ba51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa8edc9-869c-4387-8a06-458a64611f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9042c9b-3dc4-4b0d-8271-d5b2fb4e099d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d076c7ae-a048-45d2-816d-ae43eafcc53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175bb0c9-a08c-483d-af21-ca78a2c83c44",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12c696a-33fa-46d3-9cc2-3218b9898201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e87e9fa1-d990-4ea1-bcbb-73266e6e68f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e12db6-2ec2-4b3f-8158-aec14faf3e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c279775-fbeb-4f4b-b84b-749ebf7507fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d0e346-1215-4f3a-8cf3-175bcfb57ff0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e81035-912e-4fde-8fc3-fafc70958d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a62a358-bfa7-4520-81ff-fcaebd8221a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5687104-9d8c-4e8b-88fa-0b8ff4b5be02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a708952-da65-421a-80a1-aff469ce2394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598bd905-0fd8-4b3e-a0bf-cf4d7e6fa060",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78110e1c-505f-47f2-bf13-977f0cd7cb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d7058c-f14d-41f1-917f-e7c4d775884b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cd592b-1d49-4be8-a1ef-f4dbf0ee9bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a699eaa-7cc6-45dd-b58f-4d94e72de8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8014f14-b2a6-4947-bffe-6bb4fd540f3c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b8e507-f61d-4681-8882-449cd9175cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d32bf0d-d1dc-4336-826b-b9bebb3b31b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea64a5ea-c020-4d9a-b8e8-a1434a611785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db2a379c-16c8-4380-a2cd-9a995b3cc168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef59af2-e064-4f67-a9b0-92b7d375cf65",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "100725f1-6c44-4680-af4f-17d37ab3a629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2df265-8656-42ac-8edc-a34d9842a8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cf6187-469a-4153-8ec7-f4e6eabad50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a15838db-2088-41b1-a099-7cef3f5492c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4e7ede-9936-46bb-b607-79cb2a3726ed",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209df229-8e64-4542-adb3-3d2c09918771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baac2434-c2b2-4579-8ce0-34bb8c848e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c97f38-aea7-44ab-8f7d-4f0917ec2d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5955c87a-200e-4bb2-80ee-77fa1816b01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98856a15-e594-414d-ba50-35c069977be0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255bbad7-8612-4d31-8c9e-4480db30f7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b3fe5a-af59-4a3f-8087-42ff024796cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9f55f3-7499-4f5f-9811-7dd4ef80433f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "914acaa7-a67e-4842-9053-b947a69ca2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf2f514-dace-4531-a122-3f75350d9d1c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2718da0f-e9c0-47f1-bb6d-ae757d1ec136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76fdd925-fe20-4578-9b4e-06b8143ce44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5bab85-cf97-49e0-88cd-a594f0c88653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "617fecdf-8ef7-4821-a312-6bf1ceb6b9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6ee438-37db-4a1a-b8ae-63e4e0bd7eff",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13c50a2-fb82-411c-9b24-23086eb2a8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f19add3-889c-48e9-9bed-ee99d8b04e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b6677b-69e9-4b3c-ace7-ba37c255ed9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93205053-ca8a-4a4f-acbd-a949bd0a0a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e716af2-3650-4e23-8ed1-a129b243bea3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78790d1-98c4-46ea-a925-4e90f976062e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2ea168-6e54-40b0-ae98-ea517af459b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36013ed7-5d66-440a-b912-004aff287812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4674626-f676-4f83-abb3-53863b7f24f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950e67ff-0a93-4e82-9e1f-49cf4601520e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20999825-8afd-471d-8764-1d77d23cf1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1acbe29-cc84-41a0-9d40-14fcf1cbe4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8070029-5cfd-479f-ac11-f7d632169610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82996b26-b204-4ec0-81d0-51a111efdd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede8b921-5e13-4a89-8e5b-790956cb2136",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad4736c-ebb7-4528-ba34-c093857bafc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0661aae2-43cb-4694-9781-9d7d77e67bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f8494f-37c2-4363-bbdf-cb2a669d6a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e88fc7ae-3d6f-4d48-9142-096901d54d1a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "84304287-1b4d-4d6a-ac28-189936efc8b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c04706f-1ea6-448a-82c7-d61dcc8345ec",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e131410-9836-4626-872c-bda49e3b9e76",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8215285a-2709-4140-b5e6-ac00bd1db2ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3ef0ae-e6e0-4230-abcd-c85f445a6ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "726bbd2a-390d-42cb-9286-d7e7ef1a5094"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "800e422f-17f8-4020-a174-940bdba4b5e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6dadf65-f39f-4981-9a95-64e53408d3f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bf57173-2218-4ad4-87e4-e8f718b878bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "413a6f83-ee67-4420-a8ba-9376f697af7f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe9fe5c9-1615-4ffd-b830-cc55aa59edb7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cb4fba8c-0bb5-4509-95a9-e3063042a7dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ffca0c0-e576-4c69-bbf4-fda25bae6a2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b9fcae2-e2d2-4b9d-bb6c-3315ae2312ce"
            }
          }
        ]
      },
      {
        "id": "eaf38d93-af55-429a-91b8-bb80eed41c1f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "2d4110b5-3b7e-47f3-b070-341814786b87",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5fb6d4c4-2a0c-4477-8786-f5718dd41b01",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "31ab0a93-5b8a-4b1e-8b0a-cb3d00090658",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81d4915-be3a-4ce8-ade6-8f2237b8685e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a9b4c9-3644-4ffb-bf0f-d6e69fd2664c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c85a72-47e6-41ed-b250-3ef58a2b7ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3299914-014b-4ffa-8c4e-5286781af8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc079bf-ea0e-4cc9-bf89-016cdc526650",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67be099-7fd2-4cd5-b3f5-ff09f8a6e5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f567cb5a-ce90-4570-8acf-f5116dcc209b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62390e0e-c07e-4cc2-8e15-d501efd24efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c9b5000-447b-4292-b77d-7c9281e48290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda9b434-0de6-4e5d-b572-f85f7feb17f7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d384faa-f6e3-4ee6-972f-fcbdc63a35e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c88d0b-c6ce-459c-994e-9492f9bbad4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a6a687-c8ae-4dce-b172-09ed597661e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74f2d2cc-221d-4a2e-9475-59458d135d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e950756b-e3f8-4d7e-9cb3-48f6f09626e0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93ef88c-9d2a-479c-995f-bc77244763de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc46f3e-4460-450a-b609-d8d0039ef470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10737019-fc38-4efa-a610-1fc2df37159d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe1076f-cd2a-42cc-aa96-d5628550ca1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5ba038-51f4-4794-8806-bac683cbb867",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29bdd20-3cd1-42bc-8860-f5b3ac46f0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d918bc64-5a56-4347-93e4-8364ac25a74e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b34188a-0ac5-4b5d-b658-bfe0b7418831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca49a5ff-bc27-4a23-8fb2-13002bb5ba25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42239d73-2f17-457c-b8b2-02918316c7dd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40aaae5-4cb3-4aae-ac55-fe43256f0cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5643915-cf75-4c6f-8f99-52d96ec71dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b626157-5da1-4b65-b61a-0313abe1f32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "45e852c1-5b42-4cd4-9b4e-742e859f654d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50cc1cd4-b5df-454d-8043-5b64abe7312b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3dc7a1-1e29-41cb-a6ad-1dd2802283c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "519762bf-5f07-464f-b87e-4c7148d7955f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138ffd48-d9d2-42ac-8afd-e91131d2c3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2963096-9054-4b5f-9a34-e87d2f3577a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9a9811-619e-4aef-92bf-7a615c7af6c1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c658262-8027-4165-8294-2007625d0fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35b1695-3811-4c11-a222-43d8c6d18764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e280288-a52d-4778-abff-ee10b925f30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c225d90f-dc8d-430b-9256-7d6a571bc272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31e0bb2-619d-4dab-ade5-132f7a83b199",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e959a068-72a8-4727-a6c2-955e26dfb7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc21315-472d-4d4c-9b1e-dfa61a90dd34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3fc1d7-8b2a-4acf-8924-dbc9a6463129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ffbbfd2-4c68-4cae-ae25-0eba3b12300e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db43b575-22fb-43d3-9f38-d51b9be843b3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db29b42-3c4a-4532-9444-71987bc48356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c4218e3-caeb-46d2-9e3d-90aa1366258c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41df2033-86d3-49ab-bc38-82dec490373b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76f32665-2766-45a4-b00c-fffb8a32134d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e42a4cb-6ec5-4694-b2ff-cf1b86a44beb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6ea4ee-0e57-4f75-9fcd-13bacef4bb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3beab00d-ad1c-40ae-bc37-915be1e9cfcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f7c425-ad79-4e0a-9641-c011645c90ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ea97a218-be38-43b0-8346-c5ee1b4dd3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692f9534-82ea-494a-a808-65280d951a18",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11e2fbb-8084-471e-9f24-51705622e317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a74120ea-0cb2-4d7c-853e-c66fedae3043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e96bc6-6fa4-4225-ae4d-0764a631696d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4312385a-e3db-4a65-8934-fbb2db5cd9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb98604-2863-49b1-8a12-864130b55fb8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ca206a-eb7b-4b5a-a577-a9536a1bcdaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "907b6271-cbf7-4165-97ad-9dd2d41150f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3a6ed1-635c-408b-9321-242ac6d7a111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f284ce17-52bd-487a-b7a3-67950a555117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3802ad87-e1f2-49c5-b8af-c57b9e3deae1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e6a479-22fd-44ee-a92d-759cc842d917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c2405b-5cfa-450d-bc86-7942cb82be2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80df6abc-7958-4938-9d21-621553b06dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2abaf6-3350-4c31-a170-d95ec5b3a47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204154fb-4a03-4b4b-a533-58263e481aa0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f3379a-634c-43db-adb4-1ab799c53afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1cb9b37-2ba0-42f8-bd1f-b3eed0de08b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95267293-cc57-4633-966d-a732ff209316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a0bb19-260c-419f-a729-6b5cc30f5445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdcb72f-a9d8-42a9-831f-79e855b39ee4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79be33c4-6d9e-44e0-8c5b-33f9f3a95631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da8bb57f-ddf3-4243-9adb-167dbc9660b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0c49e0-b14b-4eac-8737-df91e9c4652c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8ec809-f8ff-4ec3-ba45-3ba9c2ed17f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef718d78-ec83-4fe5-8352-2e8caa71f01c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ceebb9b-d839-40ee-82c0-88273b4e1517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30336f5f-0f17-455c-8600-1e0a9326bf6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72d5a7f-7aad-4aad-ac88-2646f36600d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "58cab8ba-316a-4b8b-aa54-1ff58c0b9f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a12a011-11af-4e09-93ea-aff3bb767315",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdcf014-f28c-4f4a-ad88-0c2bfcea6e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e762904f-dfea-4372-a6f7-1bd149e4e34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da7c7e0-0ac7-410b-b5eb-5a2158c6dd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e734c9e-fd52-4fd3-8c9e-c58d9d87c6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4aee484-5aa3-4d61-a205-b2ce61a60ba0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92dc34bf-c13e-45cb-82fc-eeaa1ac1e284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8976164-413d-44ae-921b-ec691f2e47db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f59867a-834b-4f35-8b3e-41ba2f5b152a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94a3802d-67ba-46cb-b4d1-8d3009ec0b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9ad88a-cec1-4e3e-b499-42cbccdd9727",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7458500-766a-433e-b705-161949c0f94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac939063-9cdd-4310-b5d8-003058385208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4013a39c-7cd5-44b6-aae5-3c54e0ebf164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e9467c-c75d-4197-a92e-0aec4e93bd3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56831223-e1fe-434c-90a3-9fa0d5eec948",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5192ca1e-4ab1-4f6e-86aa-5a959c9638fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf96538e-03fa-40ef-ae95-0cf43ba938a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de24636-8ff7-4746-b492-6923cc2f0645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "733d09be-e41d-456e-a316-f042647299af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d0607f-82f4-43c5-84f3-a38eb8823fcb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19773056-08d1-41ff-8d68-8d1c59536a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f645e9f7-cf0d-4f4c-8640-74f1c20b7e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72db2289-60b0-4c7d-8f38-4f59d79358da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f297c0-fbfe-4e0b-8c42-ce6d98c7f46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ee87a0-9021-4e6b-8dd3-147409223963",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47b8518-9ce4-4fb3-b6bd-4bf001c9973f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef856a26-fa8e-4bbe-a78e-59a540b61701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0323fa5c-b102-4b23-98a1-8b635017e0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6911dd4d-17e9-44cc-9c10-00da91f88ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc0760d-0e2a-4599-bf9d-8412500d2ccd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "820ea3d8-fb35-4d6e-a208-fcbdce60ff72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "854d3648-5bc6-4d4b-b22e-aed23918666f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e415a80-dc57-472c-9160-5f8e92d10a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13c45c23-8b92-45d0-b314-c69cea6bacbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567304e4-e864-4eab-8e81-0e552b7dcb9f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818beb87-010c-468c-9bed-5b0cb8b6c927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d007fb-7d71-4a5d-89f7-a1971e7d796c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084557aa-c3d3-479f-88bd-c7f21d9c08d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "022d49e8-9922-4504-b0b4-2957063165fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1971e031-fc21-492b-abcc-38e83db46f25",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12be7ab7-457f-43ba-b743-01e08992cfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb153f8-bc55-42c5-ad5f-f751dd9b684c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ae1e8e-95fb-4fa7-bed2-520875481443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82398965-e4dc-4840-85f9-bc80ebd954f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ba69ab-d771-41d4-8030-ac35dd70cbc3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa00db2-e536-4fc1-a15c-c380ed4cd61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43972bfa-ad8b-495e-8c87-2e3b24dff919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065d7ac6-45d7-46e0-9a09-ebd0416e9375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4749c0a9-40de-40a9-8a3d-046c1d4cdf38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7659e881-c49b-4836-aa44-a1b08f13d632",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac4bc7f-e05e-4041-b847-d43c63cb4a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252b5656-5e6b-4fd3-b828-687299cb6668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b7c5e7-6241-4477-9339-fb9db8111308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50af4c09-2bad-4422-be4e-5089b8279a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf602c2d-887b-4053-aa17-dd33c1b2bd55",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62168de6-5c5a-457e-90c8-07d862921f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f93ec3f3-24a7-4fb0-a221-4f849359c65f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe1b3d7-037c-4eb9-918c-41f29f52a129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79c8f9fb-5cda-40a0-818d-f1f4a14c198c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef1c95b-ca3c-490a-a50e-c0bb937e42c8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6139b9-73e2-45e7-a9da-ed02bc99a763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc83ca76-fe76-40bc-9b44-3f924cc572e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821baf98-c528-4bd1-a5b8-d8eaf6f85144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17651e8f-3247-4fee-aa73-5b8cf56092bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa002259-093d-47c6-9b06-f4a7ffbff8ca",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e852a7-9ef7-4df7-9630-b1740359a604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f40fceb-58ed-4521-b941-c4889da4b521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6492a814-36b7-4553-b58f-ae809847ead8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecd3ae81-3ab2-4fc4-8787-bc6ca113a764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659a4f7d-063a-485e-975e-7f29076577b7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38abe944-230c-431b-baf1-066cf0652319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aacd620c-df3e-4e69-ada0-53952fc4cca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0585582b-b7da-45df-9eaa-98cceb3c1866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fcd265a-e2f4-4fb9-86ef-fcc986d40ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8be8d81-d274-4f07-bed8-e57cf6f0a0e9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2abcef-cd48-4fed-adb0-a6da490171f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ecf3905-414c-4c86-a124-c0c9afc8c821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8343d2db-46bb-49d8-a693-c8caa1041302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a09351c2-6310-4745-8c56-10c7f27f3155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efb86cb-c2e9-4c7a-935e-fbfd583daee8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9b0514-e0f6-4a5b-a01e-0ae445b7cf42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee07155-193b-4d01-9ba9-e21eb2523136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9ed95e-95d1-4ffd-96ff-47249aae13bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "054dfc71-66c7-4c9d-87c2-5b10903fbc35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667316f1-f666-42e0-9737-e4ea141f4dd5",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52e48df-1338-473e-9d6c-bb87865c8ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4270df3a-3feb-4077-86ad-c1164d2e4a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f620db54-bbc3-4434-b5c3-e32e2322d01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56c63b9f-7341-4420-bb02-256b90385774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d9a48a-42e2-48bd-9256-fc08bdf7f1d0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4feb59dd-8ac9-4713-82e3-a2191e331729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7026ed52-bc43-468a-aa62-8b105e6beca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2407588-dde1-49bf-b1a7-5df6a89dc80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5a960b-fa0f-4d06-82bf-089286c19eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cf992b-9d73-49e2-ab63-319914adc7b3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2bcd96-0a92-49cd-a2d8-a8ee16558a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ae5e58-4f12-4f51-9fe5-6db6638b3a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50a765b-9805-4cb1-bde2-a8d5d3f01614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c61d9e3-3bec-467c-82a3-5ece21e0f6ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "98b41b58-9705-4389-a71c-b283ed4948de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f7164cd-8a96-40a6-a9df-8467219d7591",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f64cd1a-9416-4cbd-aa34-3d1a9ab3ac00",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "23f33890-1015-47cc-9d95-68ecff8aa6b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07bf6003-33ce-4c9e-85c5-4d8aa88786f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eabb7fcc-368b-4621-822a-8573a887dd1e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27a6489e-4933-48b3-8a68-0d91c285dc06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b33df175-a36c-4054-a078-04c934f91cc9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b771779-490c-4eac-a8ed-835e56b2cc7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c32ede4-87fe-4d09-8c3d-caef5c3a40fc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "585cfd92-2ed0-42f7-ae93-80005061c1c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0bbdd636-0d96-4c4b-9107-e8716106ad41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "327c3e41-d1f8-4419-85d3-c54d84f0e3c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7ab741b-9941-4a77-ba7d-0d0e3fd78595"
            }
          }
        ]
      },
      {
        "id": "aa4b6e6d-8c0b-4596-8730-ba115e025ffe",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5530e3dd-c84c-4b2d-9e67-ca1a6b5f111e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ee7fd92-cbef-4f01-8cf3-8f7e71c2a5bd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "36474b71-c684-4b3d-ba3e-914259a591dc",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7627c3-83a0-4d2d-aa3f-fdf112d83583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "676b4858-687c-4a39-bbdc-47d5ae662270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4648d3-90b7-40f3-9cd5-ec142e1dfafe",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98dd000-8d60-4f74-80f5-fe91965d4d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839c0b9e-657a-4b66-ab2d-aaf95cda6f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30964220-f6d3-44ef-bb1e-6df73708f906",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df35ffdd-4f3f-45f2-a9ec-8efaca246dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff48dd4e-d67c-4706-be0f-b12a93888d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f4df16-ef18-4c3b-8aa7-e5f91b5da107",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc8bc1a-5d80-45d4-954d-bc57b010c03f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78746fb0-6d4c-4754-8c81-2b5fa874f535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073e5038-71c0-4613-9520-2ae5a900bdba",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10c09f7-7ced-4061-a8fa-e2eacda6f46e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c49218-20e0-4bc1-a138-663d257bf212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd9b7ff-d881-4f1b-bd64-1ffcc9dd3964",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5caa5e-40f0-4341-819d-f6a063bcd115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c55285-d461-4cf7-aeaf-abb8b2652967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f07a40-767f-481c-99f6-265f753b45c5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297b7b28-a085-4bee-b83e-bfbfc2b01ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9727e72-793e-4f95-ae28-19a0b4925bf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccd4d65-6249-486d-b54b-60a4a65ed0c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80289e50-c398-4160-a72a-7a178cf3a2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d1c358-a0ff-4ecf-a77e-cda1dd561c98",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a178fa-5e2a-47c7-952e-efbeb48b82e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f34ac82-78c6-4617-86de-d9ce58080be4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51d6ed2-c727-4ccf-8ad4-5c046708ac70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28504090-6245-4f5f-bf9d-78fccad12985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0856762-0769-4c4b-a9a5-a34e6eccf886",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b9b83a-9855-4d20-aecc-cd9cecf7008f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c51268c-cac9-400b-b898-6527d1e9207a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51de95c6-a965-4eb5-ad61-796e0fdc45e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5945c1d-04a0-442f-bef6-aa044fcecf74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d386504d-2488-45c9-bbe7-86727cf3ac58",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898afad2-b3fb-4c2c-9e30-a94e085e85b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b6f7aba-cee4-481f-84c3-d448daaaa114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c38e7b-695f-4d8b-8698-08ea2888bfd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383a5fcb-00b8-43a5-a727-6f9385fa0d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c404b50-9781-4715-b7d8-4ccaed6fadf0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040fcfb2-020f-4d2f-ba32-f5171992a2db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a44d55f-d700-4859-917e-171a6fea3f36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1c8acb-6eb4-4df5-9501-ef65c7f7f166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3e7892-55de-4c8a-8c97-58fae89824d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06903ba-7c66-44d7-9b14-17e3c7d0689a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b25060-1cc5-450d-a28d-167793c90e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d29da5e-6f9b-4ffb-9a92-191de5dc2e98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1284d67-2291-4326-950f-af0e42c34be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1ff7e5-ad75-49a3-ae3a-28f5257674f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ba3cf4-f196-4f34-b18e-3f23f75adad1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa86fdf-385c-496b-859d-ceac82c3731f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef2e0c32-b069-401d-8b44-d1173e19930d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7da47a-5c43-40ea-9409-7aec88aff412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d992de-a4da-49d5-820d-846d4051f68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268b5d5f-42ef-4d70-b7fc-dac5faebd0f9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20460dd-1676-41d9-9422-85354b732372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5ba5882-1893-4290-943f-3deae6177448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1cd26d-9b13-4fc7-8d4e-815a55c96e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d72a2f-42d2-4c83-b156-ff362aa09fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3a60f1-8c3f-4b99-b727-0daab47bac86",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41530032-68c6-4110-826e-1d14d8dcf722",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfec6f17-e1c3-4f1a-81ca-acb5e08c2268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704c2aa4-81db-49f7-b679-ff6b99fe6331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d7da39-6273-4e53-9846-6f5a89cf9fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4822c3-7727-497e-9f3f-cb01a97b0b69",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e27c65c-28d6-4475-87b3-e63657281a5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c46c446-51c6-4994-8462-5c8505520c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4901194a-8ecc-4508-a9b9-cd9a22f8d505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5855601c-0689-4a78-9a83-823f24d9b519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303f7dca-bde2-445e-ae9a-147315846601",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7a3cd9-1c57-4a5e-a53d-9669c05abb69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be075d80-6c89-4a56-8e20-45e72b47b812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bd5db1-7f39-4362-93c3-cf73f5895d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3615cd6b-8463-4da7-952b-01205a2b15ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e680fc0-2f3f-4970-8f02-c66351da734c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf58129-f9ac-4062-b689-05d9d1c95454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c23b03-0858-4a38-b17c-98fa5d038184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65d43bb-1fca-40d3-915b-85982e77fe36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dcfa887-b096-420f-9dd4-c88e08af32a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d532bfc-91f5-44b2-bf0d-b0e1337175cc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3a7b80-6d09-4b61-bb1e-7bfe92175370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67d6e54-f504-422a-9a52-6b7624f319ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9dd3cf8-cfda-454e-87fa-67bf2380902a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3db7c3-7f61-429d-a27b-79ab3fa8a787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47538d0d-abc6-45a2-9f85-a5c8798ffcd7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95016533-a2d5-49c2-9be0-82d213e5f7a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cea1fb2-9812-45c0-8b5d-d251053ac101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66fbdf6-cfd3-4b89-854c-8119f11c9b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a486a622-f345-489a-846d-583627942b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479e150e-89cb-431b-a893-2ed868e19df1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a87d742-7a5a-4e73-a77d-bbeac88ebfea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad6e975-bd9c-4338-a0bd-8969c57a2b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21f0e8c-aad6-4c35-a2a9-755118b2435c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c4bf59-a7d0-4785-a47f-0e383ba6dab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9d1884-a385-48d2-8d76-bed2e9c8df2e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4adf09-7dbf-4312-9e0b-7b3a3b6d9b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00988ce0-b01b-4bfd-ac3c-858dd12a184f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c829b190-b6bd-4e61-93db-127476dbfb8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44768fae-3388-4408-82a6-7be6b91d9226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bdfbec5-cca6-472c-ae83-b6b1ed6ebd5c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb750324-f481-4bdc-b3cb-ff8d944a2f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5f36c4-f77c-4512-895f-4f727b2ca827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c199b7-e5f4-4e42-94c0-c70e92973302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12ebb53-875e-40c2-b2c3-7cbeb0f8c34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a583b50e-9188-4990-82f9-ccac082ade3e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f9a104-b11c-448e-b196-8cfba5ebf369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68f28a7c-e4fa-43dd-8c4e-fd41951329a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0fff47-1a07-4708-8434-25c9e1ff3125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78c0e68-9fbe-437a-a691-84103eef4b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bfe47f-a3d1-4892-9e5c-021ad92f28cc",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fb5c0d-5425-4b09-833b-9981ec964abf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28720905-ae40-4804-b32c-1d9d9082f768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754d47e2-65b5-4b0b-b1c8-a85efc343e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c90b3f5a-a471-4ee3-9726-177f1d1ea734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fcdeef-2012-4ac0-9f8c-13cffb9289de",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb887927-de0c-40c3-9f26-f525670f4ac7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e33b7ae-d02e-4be7-9f30-0e269c49def0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c81390d-84e9-4ecb-b24b-ee93a4af9aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73208b5d-5b51-4491-870c-24b4f9c3a9ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a22c728-13f9-4012-a649-2563028a4173",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d953bf8-46b4-4274-8fd6-3845e9183cc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b329a4ce-1d56-4344-b918-701812070c79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb8a194-7e9e-4586-a766-8e0ff48a674c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42d2a13-c67a-4442-b4cb-f580e525923c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55456a3e-dd22-4362-9fb1-7a2bbc75b8e2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0619c0e-602f-4aba-8144-9c5656b1d6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e43bba48-cafa-4757-82bc-4db7cff61e55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5a854a-3db1-4a6e-959a-4850b8fa35ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e0c17c-8c7e-4477-a5d4-61a0beee3c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d264ae51-088a-461a-9694-e78f00a6acc8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce446e03-170e-47fb-97fa-29a4afb134d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2240a4f-db9a-487c-a532-889242c92786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3c1cda-3069-4288-8ac8-af7ff54c3f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab46db74-b4df-4649-a227-710a1cc0dd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df50c86f-9935-472c-97f6-d2aa2e966d8a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f629eff-aa6e-4f84-afc9-dc67a3979ccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84c48c1b-572f-4f7f-95fa-780a18c3f43e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50740cf7-44fc-473a-a4e7-bd04773d1a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8acf7a8a-5681-4359-9ecd-118c9c348293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dcbb870-c467-4308-b326-d43a05df8e87",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3a67da-1e1d-4f52-91af-406c96c6676e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6fa274a-c019-44f3-93d3-47314ba085a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d78e590-93ec-4bcf-8245-c5a0f00d0641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8763750a-3946-4096-8e54-3fa67a9c9ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a56af9-e7db-4dc7-b03b-4b9d7cf77561",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ab848e-d23c-45f5-a0fe-c1d707fac07e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a3135de-c213-42f5-bcf8-8d2bd2d1014a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddf68df-01e1-449d-855a-f4353744ec17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d649376-b4c7-40b5-b60c-6308435a4762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99ebc3f-d3db-4447-beb4-74ac594969c6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532baa7d-d804-4ddf-8060-9e3093f73417",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3246ec1b-81c2-46f8-beda-d96053036daf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ed11b9-40f5-450d-8ee5-12dc1c6aa6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d293752-12f7-4f9d-bd5a-afa8af9663ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9698bf71-104c-4fa5-aed5-f3858d7f0fe4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b08c1a-cfef-432b-9b8d-a3185489c9fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5f8384a-92ba-4c9e-8148-e8077c65f445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf46dd98-fc67-43a0-ba24-fc4cd5adca9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695b6c8e-c90b-448c-badd-02e01fab353b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b60a24-8a41-48fb-99c0-50b49309c89e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569b02bd-b82f-443d-b5b6-0d8772cb20b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890ea42c-5f6c-4000-bb2f-dcd3bfa862bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48cb5c9-7921-4bd9-977a-c10b4fa99260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce789cf6-740c-4220-b261-11ab14def666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30bb772c-04e9-4e20-8852-51111dcc00e5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7c5aad-c22e-4a46-a8a6-c7111da9f438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f25fba6-94a8-4d48-9e0d-8f0f99a08ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5715a28f-54db-40b9-b62f-db50c2fa97d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319f96d6-23ed-4ebb-ad68-8f27c5e6ab3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ab66f1-2faa-4880-bcf8-553b0b6877da",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1560356a-4adf-431e-940a-fb649c65117d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb81d6c4-d599-4f85-b8ae-00d1d12f2ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5908ea-d20f-4944-bcc5-3676a28658fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34939cba-5a6b-400f-9b57-65f407658dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896886cb-c542-49e8-9fe0-1eeaca903a15",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444bfa7f-6b00-4694-b68b-11f9789aff6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87cfa68-487f-404e-befb-f8448e80a346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1edfa376-d3b3-4c19-b798-6599c24f11f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687bca81-2e84-4bdf-a609-5544a8ff66f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9a63d0-9d3b-43f5-8b56-d54d315fbd88",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b695f9-358c-42bc-91e5-498fc45716cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70cbaacd-81b7-47c9-aad0-6508e0fae656"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f783b19-97e3-4bca-90c4-137662627c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c97d652c-fc5e-4c7f-8e83-6bda58a9b69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2447316-9da8-4e04-b970-7954af52afe5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1e8974-b107-4822-9497-42415d6806bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e8605d0-a7d2-4be1-8367-974e5c936ad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1394077-5671-44b2-be90-c48a645a27ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132c0c65-81cd-4160-b030-3b3105ef4c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa04d8c3-ad80-49b3-8167-06360dacb6f8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fa13a8-73be-43b9-bb30-387f7ce5c9ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af759683-e73d-4162-a908-25b2ac8cb077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817d984c-e281-49b9-9ec8-4666cef946b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "659b0934-7762-4bf4-979b-97695872a3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aff4f73-5ae7-4580-995b-dee078716e9f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9b292d-e0ad-42b0-81b2-79c65231d3ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ace03c2-dae3-4fb7-8952-74e0747eb7b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9659646-a5b9-46e1-85ea-87c0303cc3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ef1246-56ac-4071-b8b7-0e5e99f70446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926a7334-6c99-4976-b359-04b391840e4c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69820108-f762-4247-b505-190d438a95cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce338bf-07c6-431c-ad9c-20ef7f595b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b706369b-bc25-4f6e-ab26-633504941921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc9267e-c2f2-4b5b-a237-61ce3ab82241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5297a58-8cc5-44e9-a1fa-94ec4210e2a5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be5efd9-f1e1-4f54-a876-415bd30f6787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5533e97-0d8c-4571-abd8-4da44b91cfed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20a9caf-36a1-4e21-b8cb-eae4d04fc28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d46cab-054a-4d57-a297-6167fa9c6292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432ffcb8-3d6a-485a-824f-69d73a23dedb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2050a758-1354-450c-ad90-1591688f9215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d96e3b-cf32-459c-821d-8b0ce0ff7344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94be86e-74bd-4bfc-80bf-7a5361d9e501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc93f6e-998f-4969-a3cf-f0ce3fdc0a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2eaf954-cbfb-4400-96e0-0997b3a4cea6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d2be37-ba4c-4afb-b520-c346c2db3fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67f0cfb-ca2e-4f6f-b8f2-f804a84f3cac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb0e665-f1c4-46e9-837b-acf0582f727c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8fd04b-0141-4698-a02d-7dd6cef65a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8272d8-442f-4486-b5fc-6d996c701c59",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf91302-3b8f-4922-aaae-79372d48cb75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e992c1cd-1309-4263-a3dc-04369fa9c25f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d564fbdf-6f26-4b4f-b841-b686e6e44a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4463671-93a0-4a21-9c0d-5a030e811bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8022b7d-855a-4225-b4be-ed591ab39d36",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956f22d3-c6a6-431d-abb8-c772d2cc3ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a49c2570-8bf5-470c-a6d5-b6a7387d1112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea766e2a-d008-421b-b2ab-16ce267f1849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cefb1564-89b0-4d9b-aba1-79d1fe5cadcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece70fa5-62c3-4525-8128-97bb39d83b2d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8d5c15-e22d-4e70-8aa5-258bcaefe12c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0327d299-2357-42a3-a38d-b2aa6a4eab7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5780d76-481f-4348-abf3-f9bc973ca0d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4f7a21-838e-4565-9958-ff0a3a908926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc23b956-973a-4d37-99a6-7111f424b08c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00c67d0-57b7-46dd-8fb6-35d4201b4a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d39821e1-3ac6-4d4d-9776-aea373927a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7dfdc82-46b3-404f-8857-51790044cbe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed471823-b0fb-4885-ad40-421fcbabb227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62b21d5-9551-44f5-990a-9f0082ea85ab",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77ffd8e-5577-45fb-a6ab-d870e6ab729a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b28dde7-3ecb-4ec1-a678-834b33a021c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "223ab64e-2ee0-400b-952f-f4d824c4a32e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2b6bd5-9ecd-4290-8f4c-7c7aba055e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e996c3-7c04-4860-ab49-b148ceea20b8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac4c438-62d4-4026-aac8-1a0a924f2634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c74e7ef-0c18-4336-adfd-03b079c03189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6d46fb-89bf-4fc4-93c3-116cac1b0096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3577766f-c419-4ef1-ab6d-eaaaf610228c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080b14cc-8d3d-4cd7-98e7-f1d3a4158160",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96488a2e-d188-4917-93f0-32d5a9cf4700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98226c16-c5e3-450c-970b-31d1a8876fb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25cf0ee-3bb6-4b31-882d-77e6becdc4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386bede8-8714-4a95-b1fc-d6480172997a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc9e9da-22d6-40ce-a49b-d43f1f0243fc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd1fb08-ff9e-496c-b2f8-c6c09741895c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e80c85-d82b-4ca1-b56e-bc418fc8481b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d706e274-173a-4b1d-8a50-bdeb87e7b7e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb39ea7-1e49-45d3-b566-e0f031a870fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a3b18d-4145-4b11-b3b3-7ceb07682bc2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6d2672-b7e4-44b3-ad06-3484fd980f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf848e78-d10a-4d41-bca2-26a10c12d774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22767c6-350e-4d5f-b720-7c721587d8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ecf5171-bb88-4b59-b0f3-6649ca71bdce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314bfae9-82a8-478a-aa1e-d1ea1a173b29",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c97aed2-59a1-47f6-bc3d-6ea23351f2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9243d7fe-6278-4367-9068-7f0c31531554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac12f0d-597d-43e2-bd14-816d48d5aec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc149ca-79cc-4407-aa2a-fb0b82581547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9bb355e-8061-4493-bd15-2d2e007f3c71",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea79848-2272-483d-8bf6-7e47d6edfb90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5282bdc-5367-4628-9471-f903dcb90c60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39404d0d-2298-4bf5-a931-a6812d85420c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7db670-9dcb-4886-a5da-3e3fb88f1955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c116a2d-3854-4a35-a837-f327b3f42d67",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63680cc-e7b0-4ad3-b727-8a0bcca2d856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2147b3dc-ba38-4029-960b-8a20fcb3f75e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67329f32-ffa8-4f4d-91d5-9837762b2847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffeac8b8-9404-4a5b-9877-33bbcf1f30a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e4679f-4840-4792-84ff-d5b25787658e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108e3bc0-254a-4865-8d0e-d3e953e501a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba320265-4c95-41b4-9329-c6853415d9a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b160f3f-1223-4e83-ad66-42d26acd9360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73be306-adbf-45ba-a4d5-61d90b96eef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4a51b2-bdc8-42da-96b5-7e8e1a00eb33",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf33e387-8d9f-49ed-96fe-37bcdd2e5efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54aa32fd-f526-43c2-95e2-fbd3639d28ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ee0509-0ed2-4771-80c9-9076eaeacecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7688b6-7c4c-4327-8ba3-2d535f5c29ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239b42c8-91e4-4484-ab36-ab6886eda744",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8921c03-ce00-4227-9a75-c5f8dc7921ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ebad7b4-fbe4-4cda-aa62-4544e67de833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3353e3dd-ef7b-4baf-8280-3df0694986d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffca1805-09df-4185-b064-e3374bf602b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39cd4e9-8ff4-480b-8e73-1eb426280286",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e243da-26cf-42c5-a2dd-bcf6628e6a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b534f7d-999f-4663-b6cb-89b5c8e20b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cb45ac-776c-48b9-b3f2-a69271b86fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a38d415e-dae9-4cb5-83c2-307118bfac46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd469fef-5ff3-4ce9-9a9a-0ad84ebac648",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b011df6-22e1-4130-bfb5-cc89a87dc094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230b1b12-d200-414a-a2e0-503ef5dbe58f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd69e8d1-0772-4d3c-9539-fb69caa3c9eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faee12df-50da-49aa-8911-c127da228754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c308a65e-e776-4daf-95c5-32441dac5af4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32548315-87de-4254-a4b5-8ce32f506dfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "937313f1-645c-407f-b636-e3e930097d8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcdce34-693e-4020-b4f0-6fbd1bc0a975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cadb992-548a-488a-a0cf-bb3c185a375c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bb7daa-0053-4d9b-bf1d-aad8a2570449",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966e47af-0a59-44a3-acd0-bc645662a3d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03d8edce-e480-4ce0-a3da-af4cd06c46cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f790a0-7d88-4dbc-8ca4-e8e3a1645dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d6301b-53e7-4701-a58e-ed5ad809b25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7a7017-c1c7-47ea-9727-02381222c111",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b0d1eb-641a-4821-91b7-11b2222037c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87020f65-4ed8-4d45-9942-9218e29ec965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bac315-6a67-42b6-be99-52306a4fd940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f531f5-2782-45ce-b773-8d513a4a2043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a55b224-a6c4-4fc2-8fcf-8130942bb5e9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0501f8-58fe-4eb8-9169-6cf52561d6e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d95ec4a9-c2bf-4436-ba99-5f8e1ae5db7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d8109b-0dc3-4642-a40a-9456a4684a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d74c2f-d956-4ea6-a585-7568a6d90ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7a6705-3de0-4977-aaec-8de0e4db8cc1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6cbe60-bf8c-4592-a7d1-7c98ab35d3c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ba9f526-945d-43a3-8611-dc634fe8225c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f267512-ca60-42f7-9dd5-dad82544af82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6fe1b7c-fd0d-49eb-8c1b-1b23cf4605ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6544f19-81b4-462f-acd2-6ed27fe79125",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54dd8d6e-86b7-4ae4-9f0d-d28ce5fef22a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acfb8aaf-68b1-4cc0-b2ad-0744d82b090b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ddf834-0f9f-4164-8142-eda3d9133a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57ff6ff-c184-4934-9205-a847911a9acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "537038cb-45ae-4528-a53f-e792ea093d99",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee618f5-4356-4330-9ddd-f18c0b66794e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f81b582b-913f-43f5-9b54-6cf47106a77f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb98fa8-a15c-45d9-8714-e65038446204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffceeafd-cc0d-4f31-8e09-7ac1105e80f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2077f869-68b7-468c-973e-bb80c1bae83f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d5fac4-6f52-424c-8755-bcb3d0337e7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7e6bbaf-b0e2-48ab-8ede-4e78e40cdceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d718dc43-42b7-4bdf-b177-12c20e59547b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6084a5a8-878a-4585-89fa-f43f22223553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49ec75b-9d80-4d05-a3ee-ba2a8960948b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e802b8-3e52-4072-95b7-3ec09d71e82b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cca966e7-774d-4b0c-b621-5f8010ad73a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "075f7d26-ea88-4630-8b65-6efe83dedfa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600836cd-720f-4c2c-bc08-0d6eed4da3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec7254e-24c0-48b6-9cc1-c28c1aeae423",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65183439-e205-4983-a071-dc3741eaf0e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b1eb3a4-23c5-416b-b8fc-34f69857df73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f0a446-1c37-43cc-8fa9-33d5344e2de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b913de50-c84b-41c5-b66c-c199521f4521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3f3fde-2a40-48aa-888e-ca6628aa771c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5881dcf2-a8b7-44f5-bab0-142ece4ee21b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d8d1f72-a35c-464b-8bdb-7894d7c8d775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "449a98fc-847b-4c11-ac80-c7ca4e12c9cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd023be4-7d68-42d9-836e-5a322551fce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75b4c43-603b-41d2-9f02-ccae18355a1b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa6072d-9aca-4da9-8671-3bae5ab1a818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed4426e2-7969-4ed1-b8f6-34586c76e4aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3084a600-0fdd-4580-b51f-34225388be78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1772a209-b05b-4690-ad53-9b1eb42683de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b4a878-0d5f-45d6-b0f6-82a5977e2d27",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a497f06c-9b99-483e-82b1-5fb78fc2c022",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e52ffc4-7dab-4426-acf9-5f46172d1c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedd44fe-edc8-405d-aa4b-4fe8cb9f6dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce71752a-ba37-4e30-894d-9df201049ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac63ccea-d510-427e-a4e8-ab930d44afc0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d793c745-09f0-4f93-9a73-f353e23ebf3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "954abea5-2578-477e-bc67-ae62e9181883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "928717bb-225d-4c9f-9c02-51fe85e01e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa20a1a8-7bc3-4d11-94a5-3c0b1ffd91fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a079d10b-f1d8-454b-acab-bb02482016eb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f19777-d50e-4b5b-8eaf-4c2424321de9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc0d4987-6b42-4eea-81e2-10e446cb436b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e54e2d-c363-4b71-8535-ce9824139da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0914835-2399-4f10-9cbb-d65a31a7f6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1048ad28-4cb2-4a01-a625-3ea08e8979c6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e076eaf6-21c0-4862-bf1d-10e1d759493b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a143be3d-7cda-493d-90f0-f3e9e4a05c21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "060afcef-74e5-4f7d-940d-e6fe0a589b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8617fbc-8eaf-48df-9188-fd0d707bc02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a59b7cd-6d2b-4505-9e7c-9175aeac1422",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8900590-fdbf-4eac-8cb5-3ff8efbd690b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cf52d71-96b2-4e81-a36c-e8f495967ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7209d60e-03f9-4baf-b6d0-2300c0282fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162054f6-e682-4400-934f-ced68ecdc8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6be494-54ea-4205-9ece-cddd93674563",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4445e70d-59d7-4088-a855-b6304a957174",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f2b6d3b-fd4c-4780-a240-9283050bc2ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a717a0-b712-4f1a-a8b9-5226adc69686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde6abfd-c6ca-4cae-8836-4d8198d338e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c57358-aefa-4594-8c14-1e2ba6d817be",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c365f06-e88f-49d7-8a23-99dd21a7be99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bfaab31-e0a6-4583-a6d7-07edbff0c012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea29553-ef20-4fed-a528-6b3dc3e4a94d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa2aef5-f7fa-420e-8005-08d652d57932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3e7cfd-648f-4b1d-9a6e-530b1728da84",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0db179-9546-4014-b513-a458c403f5a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6f8b98f-7f7c-4c51-a017-88de7180cbcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ace2eac-0902-4608-9b95-1c33c630a8b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1316dec6-801f-449f-98fe-99d00f79d8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10c4816-09e5-4bd3-a38d-7aa65c0a55dd",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3455d301-7d68-4a33-b13c-e104e413e1f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f69d41e-82db-4eac-98d8-a7db9628af2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f1cf02-ff1e-4c4b-9280-7724529f57be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e6042d2-e5aa-4cf1-be0e-69ada70929b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c95f8f-083f-45df-bc34-5628d3bce02c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a32728-2a8e-45be-8d2e-b5291697f55a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f2349b7-58d0-4e02-8187-617efcc7ced2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97627fa-b509-4126-8bd1-cc80aa80d1bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de79c1a5-fdea-4aa2-952c-295255b1da1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7885000c-362f-4886-bbab-5e1ae1cd3b2e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a51b578-4cf9-4da2-ae7b-d68e3e09efe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a650da7c-43b6-4213-998e-fae7f52dbaed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "980ab4bf-3c4e-4e33-9c6d-c4a761fe88ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938c64ff-3c04-4e53-a090-7301345b9232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18b35cd-f9df-41bb-b2ef-c6ea25e4bd06",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1927fe9-21be-41c0-b138-dcfa44c33431",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f92c647-fef9-437c-a5a9-dac95b8376f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "030a3bf5-9ba1-4976-b450-c77b366a0271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fecd05eb-9ecd-43d1-8977-d849b82a721b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7742a6a0-a2ba-4ebf-a6f4-91dd60e80b9b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd50e83f-63d3-4a86-94cd-cd634cf0dd7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cd63e8d-5b07-4a04-885e-d05d18d50cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f289008e-d96d-4dc8-88fb-eef26628cd00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383ef679-4bf3-4ec9-b29d-15fb2256ffb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdbc62a-10ff-4d7a-b319-eaa1680c7859",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306bd762-84d5-4a96-b7f4-b1d0bcdbe085",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfbb9c59-f3e4-4594-9e08-bf307b11e03a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fc3955-f47c-46c6-b8c8-968f1f77a86e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d6f3ac-b330-4fd1-b3a5-5c09fabec9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101cb0ca-8ddd-4210-b9d0-53d8ef9d17cb",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9433569-73ab-4f12-9581-a58472f86606",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c20ef10-537d-4c47-8fe5-b6dfc56a0773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5460efe6-6e6d-4a86-aade-b028171b09a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e50314-7341-41ba-96f3-99a815e7fc8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e54d04c-acaa-47b9-87da-106ccc70ce8c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3221795b-f3c2-4945-a3de-0674f4e56e67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c17ca3f-fe7b-4909-8bca-2db6931722c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4017f0-0c9c-4cba-9342-1cb1bc7360bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb46fd05-6808-4596-b764-236b38982bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ea6521-9be2-4f38-b85d-163532b3643c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e853b576-7b1e-4faa-aaf1-27a6119dc616",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "927026f8-c1ce-4dcc-879f-a485388b9be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ac5993-1cc2-40da-acc2-5a2a0242204c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501b66b4-6fce-46ee-b748-0bbb055f43e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da6c7ae-e73b-4fff-9444-efb3f568b84b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd5c71e-d700-4a5c-afc2-3cd1569e08ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b7a6349-5434-4cc1-a54c-4a0ea6eb0b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd60fa2-1725-4eb6-bcae-f9ecac15f2c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2774bc97-c969-45b1-acb4-505f574d9085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04820744-fc6f-45b3-b314-c6a30cab7a2c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cd0ef6-dc42-40a8-9b76-6e0dd1455ba0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d48bb67-af06-41eb-90b5-3997a4e27f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58aecd8d-2b41-424e-8fcf-4e5f85c0e3ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a00a8f-13b5-4daf-b507-f4fdcb5be76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33fc2cd-ca04-482e-99b6-514e49463ae9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69b39ab-0574-4edd-9742-40534ca86dae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "110cc243-5503-4a62-85ed-de1ee610df36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d0df63-fc47-4586-9cb6-9e19708ee3da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593e0fb3-70b4-404d-8224-19d733f7ea10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14587131-2851-46f5-9f7d-91915642d77b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c32f45-db5c-4e61-a742-6a3df91e3d1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "508e91aa-2034-4565-8d55-248274fcd449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8148251d-8200-46a2-b324-fbc5bf205432",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afa81cd-763e-4c60-9661-153e1af439ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788a4043-4e3b-47b7-a9de-c2966a9b5d9d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2abf54-9b6b-4c36-a57e-039cbd00b964",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "081e7a1a-ce41-4e78-a3b7-68e568fe0459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b363af-1f39-4c56-8729-145ed3bb0ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43225089-d480-47a3-9b2c-8bb8fcd103cb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "746cef66-b18e-4474-a579-502b571fa692",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22d77c6f-db4f-4d2d-9664-82ec35acb0c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3c69138-532c-44c0-b989-980c1ed72241",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "93ee62cb-6908-467f-bbe7-eb415884d49c"
                    }
                  }
                ]
              },
              {
                "id": "a28f6c69-f77c-483f-a0e4-7ae0ec8483b7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0204ffb0-7746-43c5-b0a7-46ac219f6f5f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47749871-d01c-4408-aa22-54371ba6f200",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4eeb0d0e-d64c-4ada-9a15-cb3b7b2d2bb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce5f030-3568-4404-a6a2-21ac4e574bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8aaaf154-2f1e-48fc-865e-c115127e1717"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0c663d7-efbc-47cd-9e79-97b0059b97bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e822ca26-ebd4-4f39-b75e-fe1c2a1e36f9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f59f90b-11c0-4aca-b9e9-d876fe0ba3c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a415de3d-2940-4363-a02c-45d13effea79"
                    }
                  }
                ]
              },
              {
                "id": "6041c9cb-11f4-4c12-8cc7-a75ac3604c2e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "07f79563-90bc-4200-be1e-a1f6dbb8a9b7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62eed083-c62c-438a-8c62-5545737da373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "77c0de47-4ccf-48e8-b3f0-aa41300d3de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41125ee-3d15-46b5-8a54-0caa4d0219a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d08d65b-2b3c-4d98-90ac-92010f35a247"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7db907b0-d8c5-4617-9263-da840c67c528",
            "name": "Positive Testing",
            "item": [
              {
                "id": "718da3c2-a050-45ed-b4b4-f3269092bd8b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1458efdc-3688-47c2-ad40-72adb25746ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "99c41c42-869f-45bd-9900-37f4c384df01"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a01171d1-1a22-4428-9d15-96bb2af61f3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b80f408-544a-4c20-b25d-bb6c4cd11338"
                    }
                  }
                ]
              },
              {
                "id": "82a09113-3738-4110-9922-00412df3414c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56120cbd-be56-49c6-b4e0-a818a87bebc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6404c34e-fb9e-4b47-8391-ce511ef734f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42429c70-4da9-4b8a-8286-790a15010a05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "079cc64e-f0dd-46c7-a19e-91d56f87c7d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee6911a9-4151-440d-aea4-58a75a7bb616",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d48646bc-8823-4b67-84c7-e1ebb4ad8683"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84332151-f2ad-466f-94c7-f9cf55a53536",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b032825b-6606-4480-9f12-4d1c00ac154b"
            }
          }
        ]
      },
      {
        "id": "33a36c7b-dcce-4be5-8852-6418c50620bc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "336ecc6e-5274-49c8-ae95-67c68d620f39",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9dd0428a-4878-4f78-949e-767693bb59cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5840b8ce-58b4-48d8-9bec-594502653a39",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c780292c-4be8-4f1d-8595-8a0abbac794d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "27f8d518-19b1-4907-829c-5a3803712e1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2fa2ae-ec40-486a-92da-8e5dbe6ae7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7af65cf9-7969-4c38-9159-b2c602a9e4cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3227309-50a9-46f9-a764-8e8e820a0200",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e4bd59c-3dec-4b5a-a68b-a896df34a789"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba21ea2e-d902-417b-a9a0-e90000999d16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22c885b9-2eaf-4939-ad46-f8472b0befd9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bceaac6e-e418-4049-a69b-09c0e1a881fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "05a9f423-54c9-43b7-a06a-0b773931033b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7db7c5f1-4f6b-47dd-bc39-bae2b59f4320",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c120495c-e49d-4c6f-a528-2f04621dfefb"
            }
          }
        ]
      },
      {
        "id": "5358657a-3af8-446d-8c09-392be295e748",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "58a6a8a7-e64e-401c-9af8-51114219ab90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55c6e43a-cc3b-4576-a6f0-63f959968c3b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb857d2a-105f-44a6-b12d-1649b68b177c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3b6a76-6d39-4e79-b248-e0dc48362b37",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db94a965-48bd-4073-b918-fb3a7a7c5c8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d1f268-9783-4f06-9006-f7650a4e7c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16cd7084-07ea-4ce3-ac98-d5859943e0da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a2bf7e8-af30-48b9-b0ad-f2510f5650d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a69f864-54ee-409c-885d-50c29a4c0e38"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ef40d5b-7803-48d5-afcb-5e49c9152098",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4463287f-cbd7-4873-8616-e8cbf22f5504"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a99a281f-4312-4939-a39e-2431731eacf2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ccc1f6b7-968c-44a5-a1a4-28c45a01928d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4410a29-9991-403e-b2b8-7397487cc1c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6260cc7b-0f0c-40ed-b8cc-0ff36bd23804"
            }
          }
        ]
      },
      {
        "id": "4b0936d9-800a-4adf-b0c0-faab2475f196",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b2264297-7cdd-45e7-bb05-7f040989a291",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1f875eed-46a2-41d8-a5e0-288230b08030",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60a3760f-ce15-4732-bc13-7c23d3c6c75b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab97aa1-7759-425c-ae82-0cc1f095e4ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "812f6bbd-b004-4f9b-8861-54d16ef3307b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f0a445-e577-4128-a5b8-dbee8e134840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19bdd1cc-b9be-42f3-985e-5ec4f6e36e85"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f117b427-24de-4d24-8a63-f65885b3dcf0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da5d2601-c7b5-4dc8-914e-21260acb9ed9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a19831d3-b553-4e51-b266-dd01f4c6eea4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e966bc7-1529-4d88-9278-09cdebdadfe4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d7b754e-929d-4d97-bef7-e38e7d81c309",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "feedf281-9e5e-4cd8-becc-3118a030f58b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a44bb277-3a3a-47ad-8b56-f088f707ec4c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b799134-0f78-4d55-9e3e-bd8b772d07a7"
            }
          }
        ]
      },
      {
        "id": "4d634501-871f-424d-893f-5f9e933623c2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d8c9335-d0e9-42f7-8726-343e5db6bd89",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "695a83bb-1341-4bf7-bc1f-838e0cec7c43",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "bacd0193-58e2-4379-98fe-a0c1543e9df3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "149debcf-d221-4ac7-a6c1-8ee017b35b88",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5caff21d-10bc-4fb3-8032-322a034a0abe",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 152.89473684210532,
      "responseMin": 5,
      "responseMax": 3638,
      "responseSd": 369.2283505969983,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704155704970,
      "completed": 1704155757897
    },
    "executions": [
      {
        "id": "74e22599-b318-4396-a061-97d5ea1877e6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d3202a96-6cec-4f1f-aefb-99bc04f17686",
          "httpRequestId": "3c3a2362-686d-4480-825c-84af6befddc1"
        },
        "item": {
          "id": "74e22599-b318-4396-a061-97d5ea1877e6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "eecb9b73-c230-49ed-bf55-39991372df8e",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "efb5d607-938b-4376-9dc7-8d9ede4cf810",
        "cursor": {
          "ref": "68dbfe6a-b63e-4b43-802e-e5fbd0a30022",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3b0fdff6-2da6-4012-b97e-71adeaf9185d"
        },
        "item": {
          "id": "efb5d607-938b-4376-9dc7-8d9ede4cf810",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f7c20e58-2542-4e57-9a9f-fc864c2d836a",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "9f2f2fd8-c26d-43df-874f-e7cc29a22a5a",
        "cursor": {
          "ref": "0b494827-8e10-4af6-a713-7c78caa28541",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e0cd80bc-2bb8-447b-86da-6e3056a761fd"
        },
        "item": {
          "id": "9f2f2fd8-c26d-43df-874f-e7cc29a22a5a",
          "name": "did_json"
        },
        "response": {
          "id": "47266147-c57a-4b15-beed-9ba43f1688b7",
          "status": "OK",
          "code": 200,
          "responseTime": 603,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a93295-c797-4ea7-a821-86c095c22f18",
        "cursor": {
          "ref": "788b4e7f-11fd-4eec-8a87-f7d3649092cc",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bd7e130e-d853-468e-a176-951a73946d79"
        },
        "item": {
          "id": "32a93295-c797-4ea7-a821-86c095c22f18",
          "name": "did:invalid"
        },
        "response": {
          "id": "a6aa5c4f-3289-477f-bc49-836721d67dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a93295-c797-4ea7-a821-86c095c22f18",
        "cursor": {
          "ref": "788b4e7f-11fd-4eec-8a87-f7d3649092cc",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bd7e130e-d853-468e-a176-951a73946d79"
        },
        "item": {
          "id": "32a93295-c797-4ea7-a821-86c095c22f18",
          "name": "did:invalid"
        },
        "response": {
          "id": "a6aa5c4f-3289-477f-bc49-836721d67dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3289fa7-9ccf-401b-8027-373f545b62c8",
        "cursor": {
          "ref": "c17012f8-a82f-4314-930d-32d86adbae65",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "64e75d98-6a03-4458-8b24-9edb4826f8d3"
        },
        "item": {
          "id": "a3289fa7-9ccf-401b-8027-373f545b62c8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "331afe8e-7b83-470c-ba9a-ba1cc49c5ae0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 184,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d4ffe2-0080-4488-8419-f63a0ee387a4",
        "cursor": {
          "ref": "58fd6aec-7dff-45c0-b2db-76d3376d1f1f",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fafbfbad-b40b-41ee-ad9c-6075dd87c555"
        },
        "item": {
          "id": "08d4ffe2-0080-4488-8419-f63a0ee387a4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "25d48b0e-1ef6-40f5-990c-f1edca35b3c0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 80,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4470a689-f39e-4054-a3cd-5b9d501d7d88",
        "cursor": {
          "ref": "cb405050-1ecc-44ff-ba06-13935759f72b",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "79f98315-64df-459d-91b0-20f9568cdcf6"
        },
        "item": {
          "id": "4470a689-f39e-4054-a3cd-5b9d501d7d88",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e8ab75c7-f33f-4c1a-a090-edfdcd2bcd43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc486ce4-d753-4657-9a59-3ce40f471662",
        "cursor": {
          "ref": "d4e9fcb2-af6b-4e6f-a6f9-81a28d3c698f",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7ea966dc-d7c8-4a33-938a-1e215674e70c"
        },
        "item": {
          "id": "bc486ce4-d753-4657-9a59-3ce40f471662",
          "name": "identifiers"
        },
        "response": {
          "id": "b82f7644-4a4b-4953-b788-e478b469bc89",
          "status": "OK",
          "code": 200,
          "responseTime": 438,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671f9f71-f9ec-4694-b7a8-a893e8a8d3ff",
        "cursor": {
          "ref": "f6a71af1-c9b6-4454-9b09-5a7a3dc50b22",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "31f23e3a-a378-4d6a-8c9e-5e6b08b38900"
        },
        "item": {
          "id": "671f9f71-f9ec-4694-b7a8-a893e8a8d3ff",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2aa58e2f-a124-4859-93e2-22d521269293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7caf34e9-4902-43d2-ad98-efd31babae36",
        "cursor": {
          "ref": "17cc5aa0-77ca-4140-a633-14268980bbeb",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "71234a8d-935e-4f5e-b394-315ce1837d9c"
        },
        "item": {
          "id": "7caf34e9-4902-43d2-ad98-efd31babae36",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b2707419-cc69-437e-980a-439f96e959dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074ab3e9-d26e-4073-bc0a-7fc1755e7cac",
        "cursor": {
          "ref": "3cb106f0-c448-41a0-86be-21df78e5370a",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "95146a67-0790-4237-830c-5e43afcada56"
        },
        "item": {
          "id": "074ab3e9-d26e-4073-bc0a-7fc1755e7cac",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f4bc712c-499e-40e8-8051-01006f1dff33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e326e9-7e3d-4524-b1d0-58b26114ddeb",
        "cursor": {
          "ref": "1a9affa1-146d-4d8a-858d-029a5c3a41d0",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a5982d5f-f696-46fc-a8d3-de3a2257c048"
        },
        "item": {
          "id": "e7e326e9-7e3d-4524-b1d0-58b26114ddeb",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "56fb3742-b133-4594-9b2a-6822a5256701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425942ab-f126-463f-ad12-23c88f515386",
        "cursor": {
          "ref": "a5c720cc-ab75-4a7f-910b-bf0c23a3e326",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e4e53ac0-d3bb-4b9d-bb83-fcf4571e6084"
        },
        "item": {
          "id": "425942ab-f126-463f-ad12-23c88f515386",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8b97838c-bd15-410a-9105-727c08b99606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9468b0e-04f1-4bbe-b66d-4d63284dfe97",
        "cursor": {
          "ref": "db27070b-fa62-4e1d-a8cd-996e83ba14c2",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "29f63210-0354-4bef-ab03-22ed6a65e8b3"
        },
        "item": {
          "id": "f9468b0e-04f1-4bbe-b66d-4d63284dfe97",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "01134b44-dde2-412d-a162-dd3dbc01b884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e31c6a-8478-4f2c-a70e-12b16134f4b3",
        "cursor": {
          "ref": "d84290fd-0871-44bf-a956-7a5b0ca0537a",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "124cb7b0-a9bd-4fc0-8d05-2d1494d191d9"
        },
        "item": {
          "id": "45e31c6a-8478-4f2c-a70e-12b16134f4b3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a3b495dc-72e6-45a3-bab3-ca3363ffd786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d6a867-8683-4e19-b1df-9ec1a9dafae9",
        "cursor": {
          "ref": "be67c1b1-1b02-4bb4-bbb8-78cb43f5fea6",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c57ebfd3-7371-48ae-8149-e062212a198d"
        },
        "item": {
          "id": "d5d6a867-8683-4e19-b1df-9ec1a9dafae9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3c698534-4ab6-4581-81cf-9ca5d9a7791b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdca328-9e26-4864-a281-ae565f9b9872",
        "cursor": {
          "ref": "f030de55-0a7b-4992-a5bd-da7af3be1c16",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ffd03330-b467-4260-86e0-8b916e47cdc2"
        },
        "item": {
          "id": "1bdca328-9e26-4864-a281-ae565f9b9872",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "32fc303b-9b2b-46af-a93b-b9c9be29fa46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763316ad-47d3-4bf8-b41b-5ba9f5909b6c",
        "cursor": {
          "ref": "770f1307-2265-4c77-98aa-373673003929",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fe16d5de-b0e0-4a2a-a299-b792b37997c2"
        },
        "item": {
          "id": "763316ad-47d3-4bf8-b41b-5ba9f5909b6c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b29c0115-747b-4f71-86d9-bb155d31371f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89158c9-9a03-48ec-a84e-328ccc922391",
        "cursor": {
          "ref": "255e2a00-7f3e-46c1-a784-ee57a8dd51e7",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3238b96e-e74b-42dc-a2d7-1be0145c4d3a"
        },
        "item": {
          "id": "d89158c9-9a03-48ec-a84e-328ccc922391",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "601ced98-04c0-40a6-b179-fe10f3972773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb9cde1-35a8-4dba-8c1e-d7c841402edf",
        "cursor": {
          "ref": "029a3c9d-298d-4252-884e-2533e3e5fecb",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fa449fad-c816-41c6-b7c9-0ff76f30875b"
        },
        "item": {
          "id": "0eb9cde1-35a8-4dba-8c1e-d7c841402edf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f125382d-8731-4341-b71d-cd8620c8a222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e1a46a-5a34-45f2-be01-de7566069aae",
        "cursor": {
          "ref": "fbd975c8-422d-4075-80cf-5fa902edd3c1",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f491d78c-aeeb-4d5c-b10c-6068c3347b07"
        },
        "item": {
          "id": "53e1a46a-5a34-45f2-be01-de7566069aae",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f5b5fd87-e160-42b2-863c-12c057c9f3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb1c3a7-c1b2-449a-8c84-4d9368bebeb2",
        "cursor": {
          "ref": "1a42aae1-5a20-41a0-b7c1-ab40c3512993",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7c73c6a8-c238-4424-86a1-6b7d37843b4c"
        },
        "item": {
          "id": "cbb1c3a7-c1b2-449a-8c84-4d9368bebeb2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "dcb77598-1538-488b-900a-5f9a962e54f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816448c4-9c0c-4d20-bb42-aad5869338d9",
        "cursor": {
          "ref": "6604145b-2b54-41f1-a558-d5f3d4db620b",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f5252ce8-737e-4237-ad4b-242198f76555"
        },
        "item": {
          "id": "816448c4-9c0c-4d20-bb42-aad5869338d9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ddce891c-f811-4f16-bb29-75df5c4bf0c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9f75f4-c934-403e-9121-1545340ad90d",
        "cursor": {
          "ref": "b5e6d7fe-1fa0-46cd-9350-c33d9e09cb7c",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9cd08e88-aac7-472b-81cc-57ca54129d66"
        },
        "item": {
          "id": "be9f75f4-c934-403e-9121-1545340ad90d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9a9eccdd-ef1a-44c6-b789-93e3057b0504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c588183-07d7-42c7-861a-8c7184976c94",
        "cursor": {
          "ref": "167fd3e2-f2ef-4e18-9506-7508cceee5c1",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "255a81c7-45f9-450a-a5f9-58c280ca8891"
        },
        "item": {
          "id": "1c588183-07d7-42c7-861a-8c7184976c94",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "edaa7d13-e3ea-4317-ab9d-09f1443aa3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c151788-8f8a-4c3e-846f-83a9abad96c4",
        "cursor": {
          "ref": "3881b5f0-c6b1-40c2-ac90-0c1bd5beefa3",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cd0953db-e5f1-421e-a152-0e599c429d05"
        },
        "item": {
          "id": "9c151788-8f8a-4c3e-846f-83a9abad96c4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fc754af7-9d4a-4faa-84cb-c83f79c698a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da673a75-6955-4500-8f69-b8da032b695d",
        "cursor": {
          "ref": "8d51a046-bf60-4c12-9871-175991795425",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "49949e12-eda0-475a-93f0-7ef9e5e4e87f"
        },
        "item": {
          "id": "da673a75-6955-4500-8f69-b8da032b695d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "aa46c71b-5ab1-4e31-9933-4b6e81f03823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1885752-c1f6-4c07-bc4f-8e600cc9b396",
        "cursor": {
          "ref": "b3c36ddc-250c-44ae-a60f-3a37b75c0711",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "20fcb22e-a941-4101-8e1e-b787015290b1"
        },
        "item": {
          "id": "e1885752-c1f6-4c07-bc4f-8e600cc9b396",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d2a01b4f-2ff7-4afd-a360-80c79778528f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f27b3b1-3519-4ba2-b1a3-cfd8082227d4",
        "cursor": {
          "ref": "8fcc5e87-48b1-44fe-a8e1-0d76cb0b2889",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3d3ed9b6-4626-4118-8406-5e6ea315b0ea"
        },
        "item": {
          "id": "3f27b3b1-3519-4ba2-b1a3-cfd8082227d4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0ce5b5c9-6620-42d2-a602-c3605e257a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7481bdd4-3852-465e-a079-93ad0de39937",
        "cursor": {
          "ref": "80fbb944-3306-45ca-8512-3d4a743c1cd7",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5eface91-8cbc-41e6-8439-11cfd0ce7141"
        },
        "item": {
          "id": "7481bdd4-3852-465e-a079-93ad0de39937",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d0e15641-e11d-4ec2-bf8f-332d5725575d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165e653c-2504-4b31-be73-6677fa930f4e",
        "cursor": {
          "ref": "7dccbcfd-00e0-4cca-8247-587145103bb6",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8cb03866-b52b-4a85-8b95-f350ba6aa7dd"
        },
        "item": {
          "id": "165e653c-2504-4b31-be73-6677fa930f4e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "157dc300-f498-45d6-a574-220409287770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1986375-a7f5-462f-aeea-0274d9788e40",
        "cursor": {
          "ref": "9ab2fd9e-9648-49ef-afb2-b53adbfd4b24",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "355524ee-bcec-487c-8f79-830af3215069"
        },
        "item": {
          "id": "e1986375-a7f5-462f-aeea-0274d9788e40",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5e10a6d9-0d7a-4c6e-be58-85321b6ff2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da69f8ac-febe-4add-84fe-0a9d252afad3",
        "cursor": {
          "ref": "fe98fb57-0d19-431b-bc6e-ec9390c9c09e",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "51f3be97-b52b-42d6-90b9-8fba7c64ab21"
        },
        "item": {
          "id": "da69f8ac-febe-4add-84fe-0a9d252afad3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f58b8961-d7b9-4a5e-a2d5-8da4b95b5196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59012493-5532-4b0d-96bd-0c12360c7aeb",
        "cursor": {
          "ref": "b9a6ba57-0519-42f3-b514-c543b284dcff",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "81681f87-4aee-4a22-bd16-041b4ac7dd8b"
        },
        "item": {
          "id": "59012493-5532-4b0d-96bd-0c12360c7aeb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b873521b-63c7-4fed-b46b-ca3b1468d447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2d0c8d-582b-4dd5-9fe6-bc08cdeae525",
        "cursor": {
          "ref": "a6aeb1ee-f2de-4f77-a638-0794e8183529",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "404655b4-61c7-4e13-874d-253e8a7d6370"
        },
        "item": {
          "id": "ad2d0c8d-582b-4dd5-9fe6-bc08cdeae525",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "81cb9a11-a618-4c29-a23a-ff62ccfdce8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cc5ed0-fc31-4850-87a8-1bd9d7e1decf",
        "cursor": {
          "ref": "8b4966a1-b983-4378-a7a2-8d83d2633ff3",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b3e3d3cd-8ddb-4bbb-808f-263c2f70d9a2"
        },
        "item": {
          "id": "63cc5ed0-fc31-4850-87a8-1bd9d7e1decf",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f0195be2-775c-4ea1-8f54-18bc9e8d5a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3244a562-1001-4e2e-935b-53a5d8a65001",
        "cursor": {
          "ref": "4d4bb9e3-e703-42e9-9ce5-690921c27ee4",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "edf61d12-6b6b-473d-bb8c-a982cbb6d064"
        },
        "item": {
          "id": "3244a562-1001-4e2e-935b-53a5d8a65001",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "71d43ff8-7581-4012-a7d8-71a715205072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133b7e48-6649-4a64-906e-7359dbd1b18c",
        "cursor": {
          "ref": "464c70b2-4c6c-4538-a232-2c14c5787cd2",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "782332cd-6408-4049-a351-9e58448a9fa0"
        },
        "item": {
          "id": "133b7e48-6649-4a64-906e-7359dbd1b18c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7fde7f29-5923-4a53-8852-4ec8cbebbe0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039b6fc9-98bd-420d-92d7-a0de0a7d6825",
        "cursor": {
          "ref": "0c2e4417-80cd-4eae-ac42-51a99d2615d9",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ffc7a9a9-09ed-4c40-9f96-7c6cfefe703a"
        },
        "item": {
          "id": "039b6fc9-98bd-420d-92d7-a0de0a7d6825",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7f6e0f40-3053-4f6a-8272-74e67af173df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c450efa-454e-4f70-a706-8f5cbf3a510f",
        "cursor": {
          "ref": "14209a81-89d6-4dd0-bf54-0854b93e0f75",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8c521c67-818b-4b58-bd74-33196d41dc33"
        },
        "item": {
          "id": "5c450efa-454e-4f70-a706-8f5cbf3a510f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8fa76e6a-b91e-49c7-b233-0aea743ee666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8077dfc7-bb2d-4bef-866f-bf82373ae120",
        "cursor": {
          "ref": "ad745ac2-ff0d-4a5e-945f-fe4713409850",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3fcccaee-dd27-41fe-b397-7674add5284b"
        },
        "item": {
          "id": "8077dfc7-bb2d-4bef-866f-bf82373ae120",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "04e294ce-3d43-45cd-b469-c09d1893ef3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d14ed99-c5ee-4a10-be8e-3d5f4aa1e89f",
        "cursor": {
          "ref": "6d785e1c-8e6a-4d88-a8e0-efbde3d61abc",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7ee75ed0-8dfe-48ed-8c41-9742c8dfe76a"
        },
        "item": {
          "id": "5d14ed99-c5ee-4a10-be8e-3d5f4aa1e89f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c57ce82c-38bc-4d42-82c8-cc1104c6adb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34aa2c9-4592-4552-8571-84c0200681dd",
        "cursor": {
          "ref": "eedf5523-2bb2-4a72-a8e7-da9ecb5828d2",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "de0f95f5-f14c-4d58-bc0a-0129370bb728"
        },
        "item": {
          "id": "f34aa2c9-4592-4552-8571-84c0200681dd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "38c75869-f8e1-433d-9079-3b0a5eb0f1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea95fc5c-c10d-4cff-a150-903554250223",
        "cursor": {
          "ref": "e06a908b-ba1d-46a2-8a08-c6f6a9029a48",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9859be2a-fcbd-4926-9d91-82506f412d08"
        },
        "item": {
          "id": "ea95fc5c-c10d-4cff-a150-903554250223",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d06b2441-7a55-45ff-823c-125231127ee3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 375,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da73b0c-32d4-4f7b-8a01-10caee99152d",
        "cursor": {
          "ref": "ec000d6f-4ae6-4f5a-9216-6aed99572a1d",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6fa64a21-1646-4c1b-bae7-e94fbec1e0ca"
        },
        "item": {
          "id": "7da73b0c-32d4-4f7b-8a01-10caee99152d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "389bffbf-317f-4f8d-b177-b5760282449b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a330854b-a12b-4d74-aa41-cc294d065776",
        "cursor": {
          "ref": "2abdcdd0-db70-4a55-b49b-3a1066d3fe9e",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5903cd56-efac-430d-a15e-513ead8bc3ac"
        },
        "item": {
          "id": "a330854b-a12b-4d74-aa41-cc294d065776",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "255b9180-1089-45ef-b86e-af3b253efef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e2dcc5-7c60-488b-9929-46bc3c692f3d",
        "cursor": {
          "ref": "2701072c-8eb2-4fad-9401-e7b21d6b31bb",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c9bc2244-ea54-4d50-bb01-d66354317d1b"
        },
        "item": {
          "id": "29e2dcc5-7c60-488b-9929-46bc3c692f3d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "60eae0d5-87aa-4b87-829a-853d92f51e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8e7949-f732-4ff5-8b5d-e2e6aae6a9a3",
        "cursor": {
          "ref": "73da9fbd-0578-4877-876d-fb2ecba4c9a1",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9a4850ff-bd8d-4b0e-a34e-980ff0c43e8f"
        },
        "item": {
          "id": "ff8e7949-f732-4ff5-8b5d-e2e6aae6a9a3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ecba8f9d-1e50-4bd4-85db-e034d97aa7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d352e2b-165a-443e-b84c-7481ba55567d",
        "cursor": {
          "ref": "ea017ecd-6a71-4542-ac5c-f962bb08c341",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d9292e76-310a-41f9-ae5d-2ff327e7a0ab"
        },
        "item": {
          "id": "4d352e2b-165a-443e-b84c-7481ba55567d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "bf2a25e8-b0b8-41a3-b45f-c74c9d1576f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f214eae-2a45-4d36-bf28-9a2fdacfc358",
        "cursor": {
          "ref": "64a488ee-78ac-425f-84a9-2be2943110c4",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ad579b63-7606-4a2b-b4c2-487c8f1de103"
        },
        "item": {
          "id": "3f214eae-2a45-4d36-bf28-9a2fdacfc358",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4e1cb971-927b-4a55-9bf0-930996f0e56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b134e1e8-a2b5-4d8f-8281-aec189e60d73",
        "cursor": {
          "ref": "7238066b-a402-4dd1-a62f-7501015fb2a3",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3d2dfb7f-0213-46ee-829f-373e8cacb1fb"
        },
        "item": {
          "id": "b134e1e8-a2b5-4d8f-8281-aec189e60d73",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c971ec6d-28ed-4388-8203-0caa77b1d544",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 374,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a651ca7-17c6-4e7e-82e7-3361f9cc7ac8",
        "cursor": {
          "ref": "90749968-077a-4ec3-856f-7ec213a5bb73",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "118eb27f-b1ae-4930-b4d1-94fc68057610"
        },
        "item": {
          "id": "1a651ca7-17c6-4e7e-82e7-3361f9cc7ac8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "468fe745-ce5f-4f98-b6d8-20c24e9ef071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63e7ca9-798b-4351-98e7-9a1df0255350",
        "cursor": {
          "ref": "523022db-ac90-4267-8c77-e025a84dd5e2",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bb7b85fc-a62f-4001-9f30-c87cc51f389e"
        },
        "item": {
          "id": "d63e7ca9-798b-4351-98e7-9a1df0255350",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "66b0bb90-04f1-46c1-948f-614f7d634f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f96dd2-6bca-44d1-b401-11640beae0b9",
        "cursor": {
          "ref": "8679aa89-3ea5-4ad9-aebb-fd66019736b8",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7424cc3c-d03c-4395-92a5-770cb64e67b1"
        },
        "item": {
          "id": "39f96dd2-6bca-44d1-b401-11640beae0b9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "77b9002b-7f2d-44a2-9549-810d11e2c1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f63fbbf-ce34-40fc-be2d-409c64bbcbbe",
        "cursor": {
          "ref": "41927d24-4b63-4061-bd85-f34e2d4a5cef",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1ae72915-c39d-4835-9a94-a0c2ff1f909a"
        },
        "item": {
          "id": "3f63fbbf-ce34-40fc-be2d-409c64bbcbbe",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "36b55847-a79f-4df8-9282-0b3186a786f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566b120d-82a4-449a-91ed-29c5e49b6b9c",
        "cursor": {
          "ref": "11c6e3de-1e68-4c4a-86d7-e117b8654cb9",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "47bd3049-0747-4a12-bfe3-ff998951d691"
        },
        "item": {
          "id": "566b120d-82a4-449a-91ed-29c5e49b6b9c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6083016a-0995-4fcc-96dc-f547a41d338c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e156d2e-0be7-45b0-b2e5-7da582735f04",
        "cursor": {
          "ref": "ea150356-3f4d-4f42-9d72-267d0addd1c8",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e4980114-3bb7-4138-babd-f19bf75c51ad"
        },
        "item": {
          "id": "8e156d2e-0be7-45b0-b2e5-7da582735f04",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "50813266-0bb0-4554-8bd1-95216c8f5b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e4c38d-6bdb-4cfd-9007-69fae5d24ae8",
        "cursor": {
          "ref": "ee76138f-2a5d-4975-8f60-6a9ab0572b14",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cda0d4c7-6328-4ad6-bf51-8549b9e1d521"
        },
        "item": {
          "id": "88e4c38d-6bdb-4cfd-9007-69fae5d24ae8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "01a81fcc-ab27-436f-a46d-bc352dc469cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a0025e-383a-4415-8eed-f631bde277b0",
        "cursor": {
          "ref": "b5654422-f2c3-4024-a75f-08dfe2b5845f",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "bfac4c9c-d493-43dd-9af4-0e68f3417062"
        },
        "item": {
          "id": "26a0025e-383a-4415-8eed-f631bde277b0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c55e5b45-03f4-4307-8f16-eb96a5349d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a82bd4-fadb-482a-bf67-effbb0e4dd39",
        "cursor": {
          "ref": "cd9c1c52-84da-4307-b7cd-8f026340fc31",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "91cd21ea-1e07-48bc-9132-24dd0196716c"
        },
        "item": {
          "id": "b6a82bd4-fadb-482a-bf67-effbb0e4dd39",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "dff9cf95-6f6e-4072-b16a-037fd760b63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1414ef71-f162-473d-9cab-648491632558",
        "cursor": {
          "ref": "cc614235-da59-4c1d-81e1-e94f871e2b6f",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3d42a33e-c5e8-4c1d-ba61-d79fc3167403"
        },
        "item": {
          "id": "1414ef71-f162-473d-9cab-648491632558",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7177f4a0-d60b-462b-8f33-f7b722e61587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6ebeed-76eb-470b-97bf-b310007d2805",
        "cursor": {
          "ref": "45c3a2d3-b005-43b3-a3e9-d26fbd06c7f0",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e42c80a7-4012-4753-8b1c-099386f755bf"
        },
        "item": {
          "id": "2c6ebeed-76eb-470b-97bf-b310007d2805",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8f21d413-fcb6-4b05-9dff-2f37b51c544d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e478d7cb-e1f6-4118-af2a-22ce86a1a98d",
        "cursor": {
          "ref": "3122ec29-37b5-4a74-9427-d1c797e56594",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f7322b1a-2b05-4660-ab2b-30c79022118d"
        },
        "item": {
          "id": "e478d7cb-e1f6-4118-af2a-22ce86a1a98d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9494d3aa-2769-4611-bf62-b64281175f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fa6cb8-a8c0-46c7-977c-91a0fa434043",
        "cursor": {
          "ref": "d144866b-ae21-4381-be78-3f7c0f2527ca",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a01af1af-49e5-4f71-afe3-777b19125d8b"
        },
        "item": {
          "id": "53fa6cb8-a8c0-46c7-977c-91a0fa434043",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3ff9502a-78e9-47bd-93bb-814b5d1fbc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc8b816-71b3-497b-a5bd-36831244c358",
        "cursor": {
          "ref": "e2a1fe9a-bbdf-4b94-892a-17090f738bed",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "680a6cb9-123a-46d0-bcfd-70d9d1220f87"
        },
        "item": {
          "id": "1bc8b816-71b3-497b-a5bd-36831244c358",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3cdaaf00-3334-4c3e-adc5-06bf60dfb3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56ef9f9-fd18-43e7-b2ec-b182873a7f08",
        "cursor": {
          "ref": "7b9ca1a8-e703-4a3f-afc2-6d54aca36f06",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8e8cc459-066e-4613-a5ce-5ab51ffd9c59"
        },
        "item": {
          "id": "a56ef9f9-fd18-43e7-b2ec-b182873a7f08",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "653a49b9-7eb7-4ee0-afe7-358bdb143ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c07f83c-94cd-4e82-9bb6-bbf14fa947f4",
        "cursor": {
          "ref": "b71392d2-a6b7-4772-aff8-b9293166d41e",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "98bd070c-f40b-40e1-9a28-05acb9b94c1c"
        },
        "item": {
          "id": "7c07f83c-94cd-4e82-9bb6-bbf14fa947f4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ce7f7b73-eb2c-45f1-96b1-ba5599602cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dafb9d-d0c1-4bec-a995-0308e95b46a6",
        "cursor": {
          "ref": "07d1153c-a471-4df9-8109-12ca6add519e",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b8ca1d0b-d2e1-4acc-9592-1bad5b966aca"
        },
        "item": {
          "id": "59dafb9d-d0c1-4bec-a995-0308e95b46a6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d6779615-d223-442e-9842-39c9cf9d2298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d702256c-aa76-4f79-bcfa-d9de75f91c46",
        "cursor": {
          "ref": "5fcefeba-db49-4a02-901b-a65b30bee3f4",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a46ef1c5-a2f3-4d32-bb6a-a0f8323e6f85"
        },
        "item": {
          "id": "d702256c-aa76-4f79-bcfa-d9de75f91c46",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ceae86bd-ba5d-4516-bf73-390b633a7e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4edadf-962d-4bde-8f55-2b732f3074e1",
        "cursor": {
          "ref": "c54add20-e1d1-4fc2-a7c3-2cb25c604978",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "88dc0209-f4c4-4081-8598-f8b495fa79f4"
        },
        "item": {
          "id": "ae4edadf-962d-4bde-8f55-2b732f3074e1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1481c072-339c-4384-9606-e25ab76867aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9debdbd9-abb4-4a6a-a500-3ab15881cd90",
        "cursor": {
          "ref": "ce20afa6-84ff-4f4a-aa67-c46becaef29a",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "53331b7f-1a3a-45cf-bdad-9f95d721594a"
        },
        "item": {
          "id": "9debdbd9-abb4-4a6a-a500-3ab15881cd90",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7d45719f-69d6-4e21-8c91-40ce54fbaf62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd8cc4a-5516-4c9c-af24-737e85390641",
        "cursor": {
          "ref": "aad58286-1686-4443-a09c-e3739b7f8cec",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9f56e088-4e23-4685-8f75-997b3d131e66"
        },
        "item": {
          "id": "3cd8cc4a-5516-4c9c-af24-737e85390641",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "94c075e0-e33e-4c83-b91a-7b19ed4d182f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c0b9f5-ad4b-4670-ae0e-b12e3c22ce02",
        "cursor": {
          "ref": "b7b2809a-10b3-4c10-9453-1668120ec5e9",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c67bb3e9-113d-46b9-a51f-5e1f664f84f0"
        },
        "item": {
          "id": "37c0b9f5-ad4b-4670-ae0e-b12e3c22ce02",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b471bd14-eb44-414d-91b5-f8ba47851521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dda83cf-1dae-47d7-94e3-203b5b9db764",
        "cursor": {
          "ref": "82af2a00-b579-4177-9f29-ee2c9f26c4ef",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e51339ab-7d5a-42da-9610-01c98650983c"
        },
        "item": {
          "id": "1dda83cf-1dae-47d7-94e3-203b5b9db764",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "dea8a10a-757a-4189-9dbd-0a5ea8df2a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d128475-07a5-459a-9ca0-fe8c7694ff8f",
        "cursor": {
          "ref": "c9af937b-ddc4-48d2-b347-56d7bed6830b",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "24fdbedb-34e0-48b4-8ffd-48b32eddb921"
        },
        "item": {
          "id": "1d128475-07a5-459a-9ca0-fe8c7694ff8f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1543ebb3-0c37-4435-aae9-38aa60ee1d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a416b1-c69c-4870-b2a3-9ec75b00e237",
        "cursor": {
          "ref": "f9f33123-dd35-434b-8900-47e6509984ca",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a98a017b-9013-4d5d-8d5d-803f4848c0a9"
        },
        "item": {
          "id": "f8a416b1-c69c-4870-b2a3-9ec75b00e237",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3cfa3681-4081-43f7-ab59-87c55ca676c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0bea9a-c814-454a-8284-2ecee2687ed8",
        "cursor": {
          "ref": "e020db07-e5f9-4b09-bb1b-2d0b5971f947",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "abdbea77-2614-4b02-93a6-1c414cd0efce"
        },
        "item": {
          "id": "ba0bea9a-c814-454a-8284-2ecee2687ed8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "188e1999-7996-4e5d-a548-522b507a7c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b99089-190c-41db-a2dd-86725e35cfab",
        "cursor": {
          "ref": "026b0bc4-94bb-4d44-b632-8f07fca45bbd",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fc371705-ba2e-4d26-b3e8-145052fc90b9"
        },
        "item": {
          "id": "21b99089-190c-41db-a2dd-86725e35cfab",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "28266cc3-4de6-481e-b9f6-f3c50dbb75cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dbe84c8-9903-4a4a-af33-287d6a5dd665",
        "cursor": {
          "ref": "7e456c8d-6d71-4c47-a689-cde9b2d84282",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "00ca59e7-7cd7-4fe4-9774-6d4068326704"
        },
        "item": {
          "id": "6dbe84c8-9903-4a4a-af33-287d6a5dd665",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "116e1b7f-404c-4c2c-a2c4-36c3c2869934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1df6fac-f6f6-40df-bedc-23959e3cf9f0",
        "cursor": {
          "ref": "67d8a295-4b3a-4c57-af58-731e259f14b2",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "33b9091c-9b37-4db4-80bd-3bfdbe0f6665"
        },
        "item": {
          "id": "d1df6fac-f6f6-40df-bedc-23959e3cf9f0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7d872895-af64-49c4-ab4b-e318ab5d5433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fc78d4-5aef-4f75-9099-8e0e46b23aa3",
        "cursor": {
          "ref": "9ad75cdf-90f6-44a7-a393-2f3978fa75af",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "19137d4f-f112-4a61-a264-241c4f3739da"
        },
        "item": {
          "id": "19fc78d4-5aef-4f75-9099-8e0e46b23aa3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d343e7d6-3099-4b6c-b215-6f03c3601ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda81892-5473-4763-afab-55c06e110a06",
        "cursor": {
          "ref": "3c73839f-c058-432d-94cd-4720cfd0db1e",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "00d93786-2713-472f-b8bf-3e36d983d64a"
        },
        "item": {
          "id": "dda81892-5473-4763-afab-55c06e110a06",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "bc7f3db0-f89a-4854-b559-6432437e6316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e498385-8406-4e93-9d34-7379e0730e72",
        "cursor": {
          "ref": "16bf2925-1e54-4f33-937a-3f51db83cdaf",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b48e1711-49bb-467e-9e3b-cc3c6ea585cb"
        },
        "item": {
          "id": "4e498385-8406-4e93-9d34-7379e0730e72",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ea70bf50-2dce-40b9-abc8-f62b6f448357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd429848-16d0-4a4f-a09c-e7175bc2b747",
        "cursor": {
          "ref": "8e13ea05-9bb9-4cd3-b549-10aef960ddd2",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fe65b586-d087-4958-b7c8-64ce59b57f44"
        },
        "item": {
          "id": "cd429848-16d0-4a4f-a09c-e7175bc2b747",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0e6a2479-58e2-4788-b53d-5bab5dd02342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442b6fa9-341c-444d-b21e-be28877736a5",
        "cursor": {
          "ref": "9bbd9c3e-3f25-4947-b44b-79cc659bd5b0",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "10d62f45-06e2-42c6-905a-a822a474aa8a"
        },
        "item": {
          "id": "442b6fa9-341c-444d-b21e-be28877736a5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a282304e-7bd7-429c-8d9d-a9d882265ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a784a6-53ee-46cf-a545-2a3ba4bfc43a",
        "cursor": {
          "ref": "45749148-3158-40e0-a2f4-aa5eeb856193",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fe510fb8-3aec-4278-b345-043125925b45"
        },
        "item": {
          "id": "99a784a6-53ee-46cf-a545-2a3ba4bfc43a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "068e1e6f-b9d4-4b3c-9322-8e8c7fbc6b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9c99b6-8f63-430e-ab1b-dbd013f11622",
        "cursor": {
          "ref": "470d95cf-d1c0-4fe1-a0ce-234bb5a05029",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ebaf3a8a-1606-4d77-ab44-4429c42c1bd9"
        },
        "item": {
          "id": "5d9c99b6-8f63-430e-ab1b-dbd013f11622",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "30ca44db-f146-4ddb-ab1d-0b2a1427470b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1ff184-e2ee-43ba-a7e9-418fdcc6fb82",
        "cursor": {
          "ref": "d91a21ff-470b-4915-9b43-b0036f745a70",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9a08c886-9b80-498f-9726-cadde577f18f"
        },
        "item": {
          "id": "2f1ff184-e2ee-43ba-a7e9-418fdcc6fb82",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1502359b-c893-4c5d-a9b4-6110d2a2a9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4443c6b6-ddfa-4610-a6f5-287e2c4db2de",
        "cursor": {
          "ref": "2e2106c0-bbe1-4e5f-9dc6-c32ee1ba7e5d",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3def6718-4a50-40c6-8107-87ca95eb83d2"
        },
        "item": {
          "id": "4443c6b6-ddfa-4610-a6f5-287e2c4db2de",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "02645ec6-7fe7-490d-9e55-11bc57293052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f34d5d3-9cd3-4f35-ad91-aeeb49e80157",
        "cursor": {
          "ref": "ea9da28e-d528-46f3-97d9-57440b58201c",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "be5c00e7-cda4-44e9-84a6-b298a0c0656d"
        },
        "item": {
          "id": "1f34d5d3-9cd3-4f35-ad91-aeeb49e80157",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ae6bfe51-db3f-40a1-ac62-1794e1a4a6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f63bfc8-292d-4976-881c-62a5db8f8b36",
        "cursor": {
          "ref": "52a4f525-6e9d-439d-853c-453f1fc0faf7",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e1c4d7ab-4357-4af1-bbab-c2e26f9b489c"
        },
        "item": {
          "id": "8f63bfc8-292d-4976-881c-62a5db8f8b36",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f3c04929-1cb2-4928-8eb5-0064f5022d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba8a38d-d97b-449a-b8ab-84bd870ff81f",
        "cursor": {
          "ref": "10069733-6f4f-4519-b4bb-77175273c12b",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "cabded03-55fe-49af-8654-8cf248313013"
        },
        "item": {
          "id": "7ba8a38d-d97b-449a-b8ab-84bd870ff81f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4c093e01-2c27-4c97-a0b9-f59cc20888db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96718c53-d21f-479c-a6ca-6483c96ebf1d",
        "cursor": {
          "ref": "524734f5-75cb-45c4-80a6-0e06a2730dd1",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "21da9723-6526-4ed5-b25f-84757d9c6044"
        },
        "item": {
          "id": "96718c53-d21f-479c-a6ca-6483c96ebf1d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ab981e44-d8ea-453d-9a69-1039a39cd417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd9f33c-2325-49bb-9d0c-4b2d5be5c58d",
        "cursor": {
          "ref": "7acb9dea-72e5-4156-b517-7acab06b087c",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8d5d4d4f-3c7d-4c81-b281-e8a229e08c69"
        },
        "item": {
          "id": "2dd9f33c-2325-49bb-9d0c-4b2d5be5c58d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "503143ef-2c0a-411e-9dcb-7a75bfb8411d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce66f3b8-7ca0-4e6d-8178-1e2695e710b8",
        "cursor": {
          "ref": "fade0b7a-7b62-462d-8898-2d5a096dad9a",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b6fc8813-99ce-47d7-82ca-d440d3af6425"
        },
        "item": {
          "id": "ce66f3b8-7ca0-4e6d-8178-1e2695e710b8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f07084e8-13f9-4c68-8cbb-7eb7aef68886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1aff61f-1008-4e20-91bd-8b0a952dcc34",
        "cursor": {
          "ref": "39d8a842-9262-457c-a71d-62cc62c0855f",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e2b03523-b14a-4107-884c-0614e7817d26"
        },
        "item": {
          "id": "f1aff61f-1008-4e20-91bd-8b0a952dcc34",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e31c57b5-1a85-4bdc-8a36-aa6e09f15ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f8f6d6-4664-4746-94b3-953cc05fa451",
        "cursor": {
          "ref": "c19a9382-cd4f-4dca-8bfb-ca31c8bc4c9b",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e35c3d83-9e9f-42fd-ae7b-41fed10cdc68"
        },
        "item": {
          "id": "77f8f6d6-4664-4746-94b3-953cc05fa451",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c67a0cae-294e-4cdc-b8ae-895013ba40f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ad3f5f-97c5-4b01-8fa6-0dce0dc0b9d5",
        "cursor": {
          "ref": "afa1905d-59d2-40d7-919e-e13432954cc7",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f674713c-1466-4049-b057-185f171defdb"
        },
        "item": {
          "id": "05ad3f5f-97c5-4b01-8fa6-0dce0dc0b9d5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3903d835-065f-42f6-8a4c-d0779394784e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed1c7fc-21f0-49e6-bb73-5a7174b0c7b1",
        "cursor": {
          "ref": "db8a6867-4524-422e-9b3f-f78abc891415",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "723f002c-a814-4039-b94a-e02c8857b35d"
        },
        "item": {
          "id": "8ed1c7fc-21f0-49e6-bb73-5a7174b0c7b1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8f48657b-9887-455d-9773-f76736daf7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d17185-52bb-4e61-a716-f4aca1ab4672",
        "cursor": {
          "ref": "d131cc80-b97b-492c-9f27-6b039b9c7a02",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "093f36d5-66b5-402b-8256-b52675fa0946"
        },
        "item": {
          "id": "f3d17185-52bb-4e61-a716-f4aca1ab4672",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8de8b89a-8e29-468a-91a7-226db29ca1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6128ae6-c572-4dc6-9b5f-1ac148f55d23",
        "cursor": {
          "ref": "5c3f5e56-916c-4839-98f1-f91a29d64662",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c3b30549-d134-4c35-9c75-caa8e41e07c7"
        },
        "item": {
          "id": "c6128ae6-c572-4dc6-9b5f-1ac148f55d23",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2948784c-ab06-4d41-8e30-a36102a2dda1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 90,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e193d2-307d-4f5e-a48f-36f37d4327fa",
        "cursor": {
          "ref": "d52ae642-6d8b-40ab-b6ec-890e9ea1de6c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "26101740-0baa-4036-83d9-ac9251e586d8"
        },
        "item": {
          "id": "a7e193d2-307d-4f5e-a48f-36f37d4327fa",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "67c81bc6-fa6d-4549-ad52-2b098de90243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c2770c9f-56a7-4c4d-97db-90ea17a05883",
        "cursor": {
          "ref": "1d34a63b-23ef-4d3f-a41f-03d976daafe9",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e6f2f84e-98c5-46dd-ab7b-92b6d41ba6d7"
        },
        "item": {
          "id": "c2770c9f-56a7-4c4d-97db-90ea17a05883",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1e7b6428-dec4-40c6-b795-5ee6e554e899",
          "status": "Created",
          "code": 201,
          "responseTime": 3337,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0552e2-c168-4a19-8baf-c71b4c32d346",
        "cursor": {
          "ref": "18c90126-415e-4e91-bccd-5cf6c52b7079",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "38e6398b-7d40-461b-aaee-8457a539159c"
        },
        "item": {
          "id": "0d0552e2-c168-4a19-8baf-c71b4c32d346",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "88b3e801-7cef-42b3-9a15-71b050bcb0f1",
          "status": "Created",
          "code": 201,
          "responseTime": 2244,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ece89db-08c5-4e97-906a-514181ec623a",
        "cursor": {
          "ref": "4e11746c-6d3b-43e8-bdf1-a2822e67d39e",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "de9c5812-5015-4487-94f8-e31bec9ed7ff"
        },
        "item": {
          "id": "4ece89db-08c5-4e97-906a-514181ec623a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c3971656-9b49-411d-b42d-1782081b86ca",
          "status": "Created",
          "code": 201,
          "responseTime": 3638,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "011ee084-f487-4fc8-8131-380b95c5c703",
        "cursor": {
          "ref": "b838facb-f599-4636-bc47-18add6926193",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6dc75121-1743-4506-9aa9-468dd98187ce"
        },
        "item": {
          "id": "011ee084-f487-4fc8-8131-380b95c5c703",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4ba931b3-739f-4c5b-a380-8aaca5caa824",
          "status": "Created",
          "code": 201,
          "responseTime": 2052,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7e1e43-52cd-4438-862e-3d19a3436357",
        "cursor": {
          "ref": "6b39e172-f8ef-4bef-aa4b-0e178b2d0605",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7fde2c1b-536c-4771-9ee9-b63cf2119f17"
        },
        "item": {
          "id": "8f7e1e43-52cd-4438-862e-3d19a3436357",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "922fa8d5-7344-487a-a7ae-f1344ef57eeb",
          "status": "Created",
          "code": 201,
          "responseTime": 2248,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bd11f8-b430-43be-9460-fa5442d7ae6e",
        "cursor": {
          "ref": "ff099480-fc40-4230-8388-c537fe9dc338",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7fa35f88-60a3-4070-9bb9-a39b77a4b899"
        },
        "item": {
          "id": "50bd11f8-b430-43be-9460-fa5442d7ae6e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e8ad239e-2c69-4b1e-b252-4e20a9846016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "496a3e99-4fff-4bc3-9183-e21bcfbf32f1",
        "cursor": {
          "ref": "9f22a7ed-1718-4b02-9a31-5bd33c659b9f",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a0f11012-f77f-4f87-a9ba-40e19c2c9800"
        },
        "item": {
          "id": "496a3e99-4fff-4bc3-9183-e21bcfbf32f1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "288ffd9b-e8d3-4cf2-b12e-bd89d1c38b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6bb2c1-567b-4fd7-9384-1ffad4ba426b",
        "cursor": {
          "ref": "9a504c16-cc36-46ff-aff8-24e077612297",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7a0f58d9-064f-4475-bd6a-746cc92054b8"
        },
        "item": {
          "id": "1e6bb2c1-567b-4fd7-9384-1ffad4ba426b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d979b9b7-dcc1-44f9-96d1-08b62553407f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5218ede3-2bd1-43a6-a811-4a7099611f02",
        "cursor": {
          "ref": "b048ff0c-98f3-42ce-b80d-8d60c6696e30",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b659cebd-5725-4e03-a527-81ad3de40265"
        },
        "item": {
          "id": "5218ede3-2bd1-43a6-a811-4a7099611f02",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "49d8fdd3-a5ce-44b0-ada2-0f819d5c02b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d585f6-b714-42dc-99ab-26f5836b0b61",
        "cursor": {
          "ref": "10517900-cbb7-42d3-9878-3e36cd84d2a4",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f4ff2d29-4eea-4c8d-aeef-1ee7b7c698be"
        },
        "item": {
          "id": "d5d585f6-b714-42dc-99ab-26f5836b0b61",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "23e86c28-9418-473c-a4af-533fcf6666e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e6bd1d-5095-4ce4-a433-606ef51314f6",
        "cursor": {
          "ref": "e816fbef-8622-4da2-9361-2d95aa4e3d33",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5d054b14-9c7b-4a34-b350-15916a3d91fb"
        },
        "item": {
          "id": "d4e6bd1d-5095-4ce4-a433-606ef51314f6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "573b3555-eaed-4d59-b09b-0494e5612ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1fbafe-3411-4ab2-8b30-34b25fa300d5",
        "cursor": {
          "ref": "82caab0b-9942-4a26-9276-df4971f29000",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "62ef1bed-4a4e-4b9a-8be9-72e57678bcfd"
        },
        "item": {
          "id": "5e1fbafe-3411-4ab2-8b30-34b25fa300d5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d9f2471f-254e-466c-8029-367051724f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a67f38-bce9-4908-9448-4a199ccff73b",
        "cursor": {
          "ref": "8592fa9a-4f85-4b76-be0e-de5e47c7ffd5",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "859cec4b-205a-4401-93ea-576a34d8da0e"
        },
        "item": {
          "id": "51a67f38-bce9-4908-9448-4a199ccff73b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9126fef3-d646-411a-8069-c2f4274d9a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abceb8f9-3b56-4745-9fa6-4df022cb510a",
        "cursor": {
          "ref": "db3949b9-2950-4bf8-beb8-b068e5f764c2",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fd9916f4-a840-46d0-83ff-3c8444af6b0a"
        },
        "item": {
          "id": "abceb8f9-3b56-4745-9fa6-4df022cb510a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b3434446-1bea-4872-a5fe-739668eb5487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4182338c-2dd3-4a8a-8fed-4c9d184e0f8b",
        "cursor": {
          "ref": "2d3b4cce-4f91-4c15-92d8-53637587fad3",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "62ab17fb-6b14-4d17-800a-32aa067a6a05"
        },
        "item": {
          "id": "4182338c-2dd3-4a8a-8fed-4c9d184e0f8b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e826c124-750f-4e24-a026-19ac0f4731b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a0ad08-82a2-4ecd-be19-12b4ff1daee3",
        "cursor": {
          "ref": "38bf4a44-88bc-4448-bbfe-69b50fd8eccc",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3d463b6a-16a2-44a7-a493-3be15b0e3388"
        },
        "item": {
          "id": "d3a0ad08-82a2-4ecd-be19-12b4ff1daee3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e7428329-64ae-4f4e-8297-55778c8ae9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47152eb7-6942-4c49-b171-b0c6f434f14c",
        "cursor": {
          "ref": "0e662ca9-8130-4557-a0d3-4b046e23392f",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "34c06e5c-d12c-417f-836a-670c5b4b3dd2"
        },
        "item": {
          "id": "47152eb7-6942-4c49-b171-b0c6f434f14c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0c1f3874-3ad2-4712-8967-7f50bfaf50f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0b9908-0726-4c94-938c-afc3f5b0c587",
        "cursor": {
          "ref": "2813b1a8-9010-4a8a-81a1-abaa63bb825c",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "98d87224-2fc4-4663-8473-6439e9688ea2"
        },
        "item": {
          "id": "9d0b9908-0726-4c94-938c-afc3f5b0c587",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b0ad0c49-6145-41b3-b207-ca6d9c0b65bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80336f6a-18ee-4227-8e58-5334bdf482d9",
        "cursor": {
          "ref": "08478cd5-fa99-475e-9eec-49af69a90f46",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b77fe7cc-1d39-474b-84ce-022e4aae65c7"
        },
        "item": {
          "id": "80336f6a-18ee-4227-8e58-5334bdf482d9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "304a1293-4380-4a57-a54d-02977a7a14e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0dddbc-9172-4924-9863-edd315a371d2",
        "cursor": {
          "ref": "4fe6219c-6198-45bc-865b-91198c60cada",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5369f173-0d0c-47cb-a4cf-3fbfc3deb55a"
        },
        "item": {
          "id": "eb0dddbc-9172-4924-9863-edd315a371d2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8e96ad82-73ea-41a1-9cfe-efd9412244c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c132649-5589-4195-84dc-acbbab95ccf9",
        "cursor": {
          "ref": "7cf3d65f-6947-437b-a7e7-d2dec784bcdd",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "43f74323-eaea-4aa3-98da-7c0b6103154d"
        },
        "item": {
          "id": "5c132649-5589-4195-84dc-acbbab95ccf9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "66bc19de-9211-4001-be8c-8060f53982da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dbb9449-07e6-4ede-b5e4-aa504cce25ac",
        "cursor": {
          "ref": "f3372ab9-dfdc-40a7-8402-3588e627f22c",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "db0f09ae-8ab6-4ee8-968c-1450dec906f6"
        },
        "item": {
          "id": "6dbb9449-07e6-4ede-b5e4-aa504cce25ac",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "131f7ced-ed49-454d-a1b6-cdd986eac579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068c5b0a-5756-4710-973a-e15a07318742",
        "cursor": {
          "ref": "19f15fb3-9dab-4bd8-a0a3-822eebda2c43",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0dbc3060-1121-421d-9de6-19e3ec44ee51"
        },
        "item": {
          "id": "068c5b0a-5756-4710-973a-e15a07318742",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ad05b522-7e2c-489f-9cb0-73f6b466bde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11f568f-2b7b-436d-97b2-8d9de75f382e",
        "cursor": {
          "ref": "6ff2a0ef-33b4-4d2f-ba7c-b1f3dacf534b",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "623006be-cb5e-4bb7-be8e-d35a0380b7e3"
        },
        "item": {
          "id": "c11f568f-2b7b-436d-97b2-8d9de75f382e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9f4716ce-9169-4ce3-94a3-f0d672b5e109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b4b363-5639-41f7-aa86-a0b926aaba73",
        "cursor": {
          "ref": "afdf7f69-51ec-4f22-8592-f6ab38881697",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "839c35fd-7bf1-4a0d-ac03-7fdc2727e4b9"
        },
        "item": {
          "id": "05b4b363-5639-41f7-aa86-a0b926aaba73",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b8616b68-f2bb-4cf2-a02b-32f8ea421923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23a5aec-f632-4918-a854-e9b718e2e28d",
        "cursor": {
          "ref": "29951536-3cc8-406f-8c26-cd634dc2816a",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c1fa0744-8ff8-4dc8-9812-00a426e4249a"
        },
        "item": {
          "id": "e23a5aec-f632-4918-a854-e9b718e2e28d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "eb7657ef-3ef6-496c-a51d-2e52986987d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175bb0c9-a08c-483d-af21-ca78a2c83c44",
        "cursor": {
          "ref": "425ae4ef-ba8d-4270-afc8-7783d6b40f52",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "adc62b4f-b2b7-4e49-b3b1-d33d134810c5"
        },
        "item": {
          "id": "175bb0c9-a08c-483d-af21-ca78a2c83c44",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cb1c6a6a-2462-4795-8694-c77b23440b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d0e346-1215-4f3a-8cf3-175bcfb57ff0",
        "cursor": {
          "ref": "5fe537cb-7b7d-47bc-9c24-19c72a9e3439",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3fcfc9ef-bfba-49f6-a87c-96e4f02ac272"
        },
        "item": {
          "id": "29d0e346-1215-4f3a-8cf3-175bcfb57ff0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "75960757-b3c9-43b2-9b6e-42373cea5570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598bd905-0fd8-4b3e-a0bf-cf4d7e6fa060",
        "cursor": {
          "ref": "181134ca-c91a-4746-8e97-1224e3852ec6",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "573f6841-27b8-4b0d-ab39-dcbbdf3eaaf1"
        },
        "item": {
          "id": "598bd905-0fd8-4b3e-a0bf-cf4d7e6fa060",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "97131ceb-a113-46bd-98d8-1aac4bc3a088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8014f14-b2a6-4947-bffe-6bb4fd540f3c",
        "cursor": {
          "ref": "d495956c-6de4-4781-aa97-e7655e75c486",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8c2456d8-1f6a-476a-9045-5ec6247c4767"
        },
        "item": {
          "id": "a8014f14-b2a6-4947-bffe-6bb4fd540f3c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c63f1b72-9ee7-4667-9cf3-dd8029fb2d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef59af2-e064-4f67-a9b0-92b7d375cf65",
        "cursor": {
          "ref": "aa2f3a1c-efaa-457d-9e27-a44978956bb8",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "95c2975a-9d74-4e60-8bfb-39608e0c45f4"
        },
        "item": {
          "id": "7ef59af2-e064-4f67-a9b0-92b7d375cf65",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c85ebb15-697d-496d-930a-692d48ffc9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4e7ede-9936-46bb-b607-79cb2a3726ed",
        "cursor": {
          "ref": "8237ee9f-7d2d-4554-a529-79742bf8cd02",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6bf1375c-fb59-4e3b-85b3-59e2de6c32fc"
        },
        "item": {
          "id": "7c4e7ede-9936-46bb-b607-79cb2a3726ed",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d806a317-b327-4971-81ee-7126aa12cb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98856a15-e594-414d-ba50-35c069977be0",
        "cursor": {
          "ref": "1a0c155d-46ca-4868-8113-ffb986aca190",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "acb5eed3-daf6-44bf-a333-d8f53e6fba26"
        },
        "item": {
          "id": "98856a15-e594-414d-ba50-35c069977be0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "258f9c2d-4c15-41d6-aefb-bda42af3768f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf2f514-dace-4531-a122-3f75350d9d1c",
        "cursor": {
          "ref": "e69b06b0-2fa5-4b33-ac8c-ab47229c8656",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "eabaabdf-0cdd-4b0f-bfb5-d5406683d071"
        },
        "item": {
          "id": "6bf2f514-dace-4531-a122-3f75350d9d1c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5054557f-d71c-4ce5-b21f-a30cb486ab7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6ee438-37db-4a1a-b8ae-63e4e0bd7eff",
        "cursor": {
          "ref": "70a7ecc2-1238-49a3-8d67-79572334af9c",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d6890d48-6ced-4722-990c-8ecd8328ee16"
        },
        "item": {
          "id": "4f6ee438-37db-4a1a-b8ae-63e4e0bd7eff",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "13abbdaa-35e0-4501-b7df-3354493e21df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e716af2-3650-4e23-8ed1-a129b243bea3",
        "cursor": {
          "ref": "51f43ff8-5614-4ebc-81d5-96525c2b9583",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a1ba9f2f-3dd1-48f9-ad6d-0375329e93eb"
        },
        "item": {
          "id": "8e716af2-3650-4e23-8ed1-a129b243bea3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0b1fe3d8-0019-45a7-9be6-f758ab912a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950e67ff-0a93-4e82-9e1f-49cf4601520e",
        "cursor": {
          "ref": "12cc61d1-2d32-4c6d-8117-4614a37f323a",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ca397f97-e861-4f4b-a4c8-3b7072203c2d"
        },
        "item": {
          "id": "950e67ff-0a93-4e82-9e1f-49cf4601520e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "66b9b295-2b09-4ede-9bd5-1a9db23aa8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede8b921-5e13-4a89-8e5b-790956cb2136",
        "cursor": {
          "ref": "9469dbd3-add1-4bbc-8d33-38a236e6adc4",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "67def74d-0bb9-415e-8032-93804414cecf"
        },
        "item": {
          "id": "ede8b921-5e13-4a89-8e5b-790956cb2136",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "015adf48-c82d-483e-bffd-3e50ac498e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c04706f-1ea6-448a-82c7-d61dcc8345ec",
        "cursor": {
          "ref": "26e87905-6f8c-4e05-b877-e619a7ca7b20",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ff5ee3d5-9aec-45ec-9282-02f5bb000dd6"
        },
        "item": {
          "id": "3c04706f-1ea6-448a-82c7-d61dcc8345ec",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6f4d97fd-bf68-4e37-aab4-fa32522ffd4e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 95,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ab0a93-5b8a-4b1e-8b0a-cb3d00090658",
        "cursor": {
          "ref": "0464aa52-393e-4830-ae63-05f6d215a6e2",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e87f4c6a-2854-424f-ba95-d806b40e09b2"
        },
        "item": {
          "id": "31ab0a93-5b8a-4b1e-8b0a-cb3d00090658",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "549e395b-dc12-4cb6-bb80-aac201cb4c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc079bf-ea0e-4cc9-bf89-016cdc526650",
        "cursor": {
          "ref": "74ca2024-4933-4646-b667-d6beb2f06167",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d41de915-4cf7-4742-b870-d9b252db7e9a"
        },
        "item": {
          "id": "3dc079bf-ea0e-4cc9-bf89-016cdc526650",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e77b0781-eacc-4b2a-a2d9-7ae70564583b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda9b434-0de6-4e5d-b572-f85f7feb17f7",
        "cursor": {
          "ref": "e33d611d-5656-476d-bf87-4e2f199397e2",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a623c730-2a73-4362-b0a3-fd73c72b7683"
        },
        "item": {
          "id": "bda9b434-0de6-4e5d-b572-f85f7feb17f7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "dd3bc4d0-cda3-46b2-be1a-2dacaece283b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e950756b-e3f8-4d7e-9cb3-48f6f09626e0",
        "cursor": {
          "ref": "761240c9-28a2-4ba3-b613-67a8a2bbc66b",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0f8e8e58-587c-4092-a902-e2f9c2419dd8"
        },
        "item": {
          "id": "e950756b-e3f8-4d7e-9cb3-48f6f09626e0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3af97444-2f46-4073-b5e6-5c51d7d320ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5ba038-51f4-4794-8806-bac683cbb867",
        "cursor": {
          "ref": "404f47ee-e4bd-4d35-bdb1-4f308b40f2d1",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "40598508-7f8c-4e8e-b9fe-d08204476d6f"
        },
        "item": {
          "id": "0c5ba038-51f4-4794-8806-bac683cbb867",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "362a5b36-1487-4d55-a392-8e3eaa81580e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42239d73-2f17-457c-b8b2-02918316c7dd",
        "cursor": {
          "ref": "8903545e-ca3d-4257-ba95-b8f4765392c1",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ca659573-cf73-4a56-8eed-e11a4422d244"
        },
        "item": {
          "id": "42239d73-2f17-457c-b8b2-02918316c7dd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "132ff032-5c0d-49a1-adbc-fa91b8eef413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cc1cd4-b5df-454d-8043-5b64abe7312b",
        "cursor": {
          "ref": "60dc8be7-3f53-4934-a309-eb026f0492ac",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fdaeecc9-5208-4abf-a37c-414cd0c6b305"
        },
        "item": {
          "id": "50cc1cd4-b5df-454d-8043-5b64abe7312b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e6decf95-baa6-403c-b04d-f76253ba2419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9a9811-619e-4aef-92bf-7a615c7af6c1",
        "cursor": {
          "ref": "585f79ad-3477-4f41-99bd-f5b4a5120be5",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8704aeb4-1597-43d6-bbdb-7dc1ae42896e"
        },
        "item": {
          "id": "2c9a9811-619e-4aef-92bf-7a615c7af6c1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "dedcc1de-746b-4d57-b5fe-e50b921739f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31e0bb2-619d-4dab-ade5-132f7a83b199",
        "cursor": {
          "ref": "5e762236-3cc6-44b4-9da2-e041e8fe8cb4",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bf168e8b-3f04-405f-aa5a-eb6e581a087c"
        },
        "item": {
          "id": "a31e0bb2-619d-4dab-ade5-132f7a83b199",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e5c8f84e-851d-46b9-b72c-e7e53dcc00c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db43b575-22fb-43d3-9f38-d51b9be843b3",
        "cursor": {
          "ref": "5933b6b3-47fc-498c-9077-a3e9fe6a3254",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2118c1b2-e221-45ee-a20c-5a580b4660a0"
        },
        "item": {
          "id": "db43b575-22fb-43d3-9f38-d51b9be843b3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "168dd2d8-70f7-4099-bc5e-7c58a992c7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e42a4cb-6ec5-4694-b2ff-cf1b86a44beb",
        "cursor": {
          "ref": "eed7dccc-1867-4745-a3cf-b1b7b0c282fb",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e0af4b4d-90c0-4032-b38a-7d6333d2d672"
        },
        "item": {
          "id": "3e42a4cb-6ec5-4694-b2ff-cf1b86a44beb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8daa26fc-1da2-445e-8724-a3a7661453c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692f9534-82ea-494a-a808-65280d951a18",
        "cursor": {
          "ref": "e0b56704-75c5-430a-bcd0-abb45c05e3e2",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "93b055b2-e4e8-4128-905d-22a50456fe7c"
        },
        "item": {
          "id": "692f9534-82ea-494a-a808-65280d951a18",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "390ff989-18b7-48e9-b04d-ea54e65fe038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb98604-2863-49b1-8a12-864130b55fb8",
        "cursor": {
          "ref": "9df4a2c4-dd72-433a-b24f-2830e9282ffd",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "851f54b8-1321-4e25-8629-e2e54e9f6c75"
        },
        "item": {
          "id": "3cb98604-2863-49b1-8a12-864130b55fb8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "34bb8400-304f-45af-8a2e-a41b071e1f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3802ad87-e1f2-49c5-b8af-c57b9e3deae1",
        "cursor": {
          "ref": "f6ab68bf-3c67-4e4c-a633-c923cdb8f0a7",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "dd034c48-e729-463e-8ffe-544b7fd65e7a"
        },
        "item": {
          "id": "3802ad87-e1f2-49c5-b8af-c57b9e3deae1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "27b6825e-8579-4568-965f-6de9b13c1d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204154fb-4a03-4b4b-a533-58263e481aa0",
        "cursor": {
          "ref": "8c9d8e06-2d30-409f-9b6d-eb756cb9bfc0",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c6e3bb8f-c918-4ac8-a791-959850876066"
        },
        "item": {
          "id": "204154fb-4a03-4b4b-a533-58263e481aa0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "64ae85dd-e1ae-4334-a63c-c49cd06c40bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdcb72f-a9d8-42a9-831f-79e855b39ee4",
        "cursor": {
          "ref": "1c0dd45a-aa05-437e-aa81-a8ccce0b953c",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8a0f2b85-9fb1-4864-aa9b-956e37566bbd"
        },
        "item": {
          "id": "dbdcb72f-a9d8-42a9-831f-79e855b39ee4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "753c3131-3ff0-43d1-b24c-cd0832f38e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef718d78-ec83-4fe5-8352-2e8caa71f01c",
        "cursor": {
          "ref": "5487623b-fa3a-448d-b077-be2955a509f1",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cce3cb32-c081-45b1-befe-51e3a8be468f"
        },
        "item": {
          "id": "ef718d78-ec83-4fe5-8352-2e8caa71f01c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "62a04391-eccf-4248-955d-ef46c4005f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a12a011-11af-4e09-93ea-aff3bb767315",
        "cursor": {
          "ref": "4d3d6268-6e10-458c-8682-d38ee3c3402b",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d44fbd17-6e70-4c30-8f46-7578120d9a66"
        },
        "item": {
          "id": "7a12a011-11af-4e09-93ea-aff3bb767315",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ac9890d6-130b-4ecb-9544-550057c37a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4aee484-5aa3-4d61-a205-b2ce61a60ba0",
        "cursor": {
          "ref": "897fa973-0088-4113-84f0-e362d509f027",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bf0eabb7-493a-46da-80e1-0753b99dddc8"
        },
        "item": {
          "id": "e4aee484-5aa3-4d61-a205-b2ce61a60ba0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e5ae0f7a-9d67-40b4-977d-c495d426da1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9ad88a-cec1-4e3e-b499-42cbccdd9727",
        "cursor": {
          "ref": "1509e4be-2f90-4cdd-86d8-0e5201fb71b1",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "44228c58-bbf3-46df-b77e-0d361d24aaa6"
        },
        "item": {
          "id": "aa9ad88a-cec1-4e3e-b499-42cbccdd9727",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "74f5caec-5bbf-417b-954c-8142149ec1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56831223-e1fe-434c-90a3-9fa0d5eec948",
        "cursor": {
          "ref": "289339eb-8a24-4ea7-b28f-45f52d4c012a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "aa9f4835-53b4-4178-ba60-ef51c8102443"
        },
        "item": {
          "id": "56831223-e1fe-434c-90a3-9fa0d5eec948",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1c339c63-7834-4b2b-88a4-af0068b8fb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d0607f-82f4-43c5-84f3-a38eb8823fcb",
        "cursor": {
          "ref": "88bbba20-e265-4a6b-9d5b-e30760feb28e",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "139ef15d-348d-476f-8554-1a9dac60afe5"
        },
        "item": {
          "id": "d3d0607f-82f4-43c5-84f3-a38eb8823fcb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "44b8126e-b08d-43b8-8c3f-ac809e290de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ee87a0-9021-4e6b-8dd3-147409223963",
        "cursor": {
          "ref": "5c719eb7-55ff-4f00-8c3f-e4121b3b0877",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "38beb0d1-bed5-4e14-bd59-381df712f118"
        },
        "item": {
          "id": "71ee87a0-9021-4e6b-8dd3-147409223963",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e1964098-dd7f-4a04-90e2-d077e6784e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc0760d-0e2a-4599-bf9d-8412500d2ccd",
        "cursor": {
          "ref": "ec477c53-6d95-4d8d-9d4c-7ff51db56ac6",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b2a3661d-6f4a-4c93-b480-4234b89cbb07"
        },
        "item": {
          "id": "9dc0760d-0e2a-4599-bf9d-8412500d2ccd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0be5e2e6-7e49-4f4b-a186-41d43eee0634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567304e4-e864-4eab-8e81-0e552b7dcb9f",
        "cursor": {
          "ref": "a70913b7-3add-4ca3-bace-369ab5818ac3",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "933951d6-f4fa-4f2f-add7-27b5cc6358fb"
        },
        "item": {
          "id": "567304e4-e864-4eab-8e81-0e552b7dcb9f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "71dc86a7-2239-4883-b284-a15e121b7e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1971e031-fc21-492b-abcc-38e83db46f25",
        "cursor": {
          "ref": "c4110c6a-3477-4966-8abf-c6b04d7f2b53",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "26fd5a15-1874-4426-a23c-2c9ae2fc654e"
        },
        "item": {
          "id": "1971e031-fc21-492b-abcc-38e83db46f25",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "14f7df62-d8c9-4325-aca0-5fb440b1abec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ba69ab-d771-41d4-8030-ac35dd70cbc3",
        "cursor": {
          "ref": "18cdb2c6-171b-4775-bfa4-095f8f1a4ef5",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "39a3ccbf-f74d-42b6-b58c-864ee1ba5a61"
        },
        "item": {
          "id": "97ba69ab-d771-41d4-8030-ac35dd70cbc3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d9ad47c1-cd2c-49d9-ab2d-baa3bad69b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7659e881-c49b-4836-aa44-a1b08f13d632",
        "cursor": {
          "ref": "920a2aae-bc5b-45bd-b326-6effc3decbaa",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0eb42e80-d292-4105-a405-3b91f1a5d389"
        },
        "item": {
          "id": "7659e881-c49b-4836-aa44-a1b08f13d632",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "654b7b70-a2a4-4147-bf6f-48bc25f7dcc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf602c2d-887b-4053-aa17-dd33c1b2bd55",
        "cursor": {
          "ref": "cfb22df8-ad4e-4cd0-8eef-d4760aad3bcf",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2328edef-727b-4e99-9980-c355385b9a56"
        },
        "item": {
          "id": "cf602c2d-887b-4053-aa17-dd33c1b2bd55",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ff2865c3-f89d-475d-a659-46d418af3736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef1c95b-ca3c-490a-a50e-c0bb937e42c8",
        "cursor": {
          "ref": "bc69f636-6f24-4b00-b9b0-60831c52da44",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cec8472a-9076-4514-930c-e0f3025c04b6"
        },
        "item": {
          "id": "7ef1c95b-ca3c-490a-a50e-c0bb937e42c8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b46898a5-bd54-4823-9840-94cdfd3dd20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa002259-093d-47c6-9b06-f4a7ffbff8ca",
        "cursor": {
          "ref": "220d36e1-4fe3-4845-9169-763c55d906fa",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9d66478d-a785-47a5-95b1-021f6f169dd9"
        },
        "item": {
          "id": "aa002259-093d-47c6-9b06-f4a7ffbff8ca",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "78223b50-8979-4ee9-b524-f4a983393f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659a4f7d-063a-485e-975e-7f29076577b7",
        "cursor": {
          "ref": "d3ba38e3-2ed7-4c97-bcb6-52cf863955de",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "80cc1dfd-3eff-4b66-b940-9d912e127e84"
        },
        "item": {
          "id": "659a4f7d-063a-485e-975e-7f29076577b7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a5a2494c-7d98-41be-adf2-5561d20dfeed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8be8d81-d274-4f07-bed8-e57cf6f0a0e9",
        "cursor": {
          "ref": "f4f288f5-26c0-4a3d-94f6-635694b53270",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3421ad1f-596b-4eba-9426-e906ed901266"
        },
        "item": {
          "id": "d8be8d81-d274-4f07-bed8-e57cf6f0a0e9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "948bd49d-e4e8-4588-8aed-dd29ff67f8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efb86cb-c2e9-4c7a-935e-fbfd583daee8",
        "cursor": {
          "ref": "e4694695-f11b-4e2d-a873-82ba0198a876",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "14a2a070-a623-4712-993d-24b1f8e979d8"
        },
        "item": {
          "id": "2efb86cb-c2e9-4c7a-935e-fbfd583daee8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "80ef2572-ce25-449e-b2b4-f5dcb9177655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667316f1-f666-42e0-9737-e4ea141f4dd5",
        "cursor": {
          "ref": "a6915020-c20a-417e-9ad2-8560709f1b99",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "42acce92-5f98-4b20-889f-768f8c609a60"
        },
        "item": {
          "id": "667316f1-f666-42e0-9737-e4ea141f4dd5",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b2cf185a-2d16-4790-8b83-a0455d3161cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d9a48a-42e2-48bd-9256-fc08bdf7f1d0",
        "cursor": {
          "ref": "327a9091-6bf7-49c7-8243-1ab3e17e25fd",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "72842727-99e2-49f1-86a5-7614c1cf895f"
        },
        "item": {
          "id": "37d9a48a-42e2-48bd-9256-fc08bdf7f1d0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "07de7570-205c-4c6c-a678-f0a32ecf2dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cf992b-9d73-49e2-ab63-319914adc7b3",
        "cursor": {
          "ref": "937f129b-1c27-49fd-bef1-b165bca674e2",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2b604897-7f58-45d9-8134-9b7f82546752"
        },
        "item": {
          "id": "62cf992b-9d73-49e2-ab63-319914adc7b3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7453453b-c3b1-4a16-aac2-d0f5036cb761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7164cd-8a96-40a6-a9df-8467219d7591",
        "cursor": {
          "ref": "9fb26542-515a-4f53-8b02-a2941bf1c756",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1d1d608c-f1eb-4839-b2ae-50aba3a8d36f"
        },
        "item": {
          "id": "5f7164cd-8a96-40a6-a9df-8467219d7591",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a48d4273-f924-4a65-a667-462f58d15117",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 87,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36474b71-c684-4b3d-ba3e-914259a591dc",
        "cursor": {
          "ref": "0e7cb84e-72f5-43c3-be9c-a20cd78d99d3",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c9777d8b-5cce-4346-8fdd-0aefa27b65b5"
        },
        "item": {
          "id": "36474b71-c684-4b3d-ba3e-914259a591dc",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b17e307b-f1d1-49c1-b747-dc64986b67fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4648d3-90b7-40f3-9cd5-ec142e1dfafe",
        "cursor": {
          "ref": "12f4c2e1-c4e5-472a-ab3a-bf8e94859991",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "92569120-3a62-4920-9469-d49e92e3fa90"
        },
        "item": {
          "id": "cd4648d3-90b7-40f3-9cd5-ec142e1dfafe",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "da441587-cadb-426a-888b-bf412ee68456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30964220-f6d3-44ef-bb1e-6df73708f906",
        "cursor": {
          "ref": "08403029-0800-4204-8685-dd3e64b13a07",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1351f4ba-a97d-404a-b661-07ac2689036f"
        },
        "item": {
          "id": "30964220-f6d3-44ef-bb1e-6df73708f906",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3d8b73b1-76cc-42ec-8dae-2f1b2cc7ba1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f4df16-ef18-4c3b-8aa7-e5f91b5da107",
        "cursor": {
          "ref": "04de61af-0da8-4a03-b8f3-fd6eeef08788",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cc46aae6-4bc0-4589-a7eb-6a120a6bb628"
        },
        "item": {
          "id": "49f4df16-ef18-4c3b-8aa7-e5f91b5da107",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c575c89e-267d-4da1-956c-1ea5d840dd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073e5038-71c0-4613-9520-2ae5a900bdba",
        "cursor": {
          "ref": "c075abad-39b0-404a-b6f4-88a6e11c9e57",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "202c45e3-0349-452a-b5a8-60dfa1606597"
        },
        "item": {
          "id": "073e5038-71c0-4613-9520-2ae5a900bdba",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f2ba05a4-f100-484e-88b0-36dbbd2cab59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd9b7ff-d881-4f1b-bd64-1ffcc9dd3964",
        "cursor": {
          "ref": "a95df87a-c150-414a-8611-62a6991afc6e",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "145b1fed-4ffe-4ba6-84a4-2fa39bc5f857"
        },
        "item": {
          "id": "cbd9b7ff-d881-4f1b-bd64-1ffcc9dd3964",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7be1ec6a-ce76-4d14-b411-ae19691a4ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f07a40-767f-481c-99f6-265f753b45c5",
        "cursor": {
          "ref": "12d81d9e-48b1-409f-8800-5d6109fa9b37",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c69a23b9-3c87-46a0-bc70-6b2023fa3cab"
        },
        "item": {
          "id": "43f07a40-767f-481c-99f6-265f753b45c5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "316c99b8-5462-449a-88d8-fd6a59272643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d1c358-a0ff-4ecf-a77e-cda1dd561c98",
        "cursor": {
          "ref": "d9f9c58e-4aaf-4612-b628-fc339475ce35",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "212fbb53-88d2-4ddf-82d3-c8da3d0d4f48"
        },
        "item": {
          "id": "14d1c358-a0ff-4ecf-a77e-cda1dd561c98",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e23ac727-a529-4a3f-8fb8-1f9e76235063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0856762-0769-4c4b-a9a5-a34e6eccf886",
        "cursor": {
          "ref": "72a9743d-e852-4e5a-a0fd-6ec2024bb943",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "83baeeee-8de7-4416-98a1-dbb058fdbf5f"
        },
        "item": {
          "id": "a0856762-0769-4c4b-a9a5-a34e6eccf886",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7ded7cf2-94d1-4c16-a6b3-d5fadbf80dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d386504d-2488-45c9-bbe7-86727cf3ac58",
        "cursor": {
          "ref": "7b0f2d22-8451-4bc1-b49a-2ee2328a5f62",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9ed2c62b-dea9-4d77-ad68-8c1680620291"
        },
        "item": {
          "id": "d386504d-2488-45c9-bbe7-86727cf3ac58",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1b6fe8ec-a868-43bc-9ffc-e29aceefc296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c404b50-9781-4715-b7d8-4ccaed6fadf0",
        "cursor": {
          "ref": "61ade890-6a7b-4bb6-aec2-aa61f573ac0a",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6f677532-73c3-4df0-a2ff-683aff4074e8"
        },
        "item": {
          "id": "1c404b50-9781-4715-b7d8-4ccaed6fadf0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e5ccf1e2-46c6-4f0e-96bd-61f68f27b437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06903ba-7c66-44d7-9b14-17e3c7d0689a",
        "cursor": {
          "ref": "c90bfd64-74e6-45ad-b735-77158f2866e2",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1d287daa-4681-4e08-8ea5-5b111d43345e"
        },
        "item": {
          "id": "d06903ba-7c66-44d7-9b14-17e3c7d0689a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8f1df381-5009-42ed-9c15-f54ef63c7a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ba3cf4-f196-4f34-b18e-3f23f75adad1",
        "cursor": {
          "ref": "36e68349-4b85-4251-b572-8a11fbc9b32f",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "eaf3c0be-ab13-49fd-9522-c65319a52501"
        },
        "item": {
          "id": "31ba3cf4-f196-4f34-b18e-3f23f75adad1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d9644b07-417d-4fd1-b6b4-df14f531310c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268b5d5f-42ef-4d70-b7fc-dac5faebd0f9",
        "cursor": {
          "ref": "115703b2-0948-4f8b-9a78-26cd30965c32",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "debc1880-dd2c-42a1-a6a1-8d4d925f84e6"
        },
        "item": {
          "id": "268b5d5f-42ef-4d70-b7fc-dac5faebd0f9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "92ba146e-5648-43d1-bd66-f20ecac70ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3a60f1-8c3f-4b99-b727-0daab47bac86",
        "cursor": {
          "ref": "3a41c0f9-18d6-4d91-91be-3082de196e38",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8df0636a-93dd-460a-ac09-49ae69642a47"
        },
        "item": {
          "id": "5a3a60f1-8c3f-4b99-b727-0daab47bac86",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "35e56745-17ee-48fb-830f-37c4ae65a582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4822c3-7727-497e-9f3f-cb01a97b0b69",
        "cursor": {
          "ref": "0290a38e-9ee4-4d6e-a939-fe880e142eb5",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1ef759fa-c9ef-42b2-b307-d0799b2af431"
        },
        "item": {
          "id": "ac4822c3-7727-497e-9f3f-cb01a97b0b69",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e84d8b12-d013-411d-b00d-6c54046e397c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303f7dca-bde2-445e-ae9a-147315846601",
        "cursor": {
          "ref": "4bd61ffd-cc06-4d6f-a0f1-d025d93776e1",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ba75a028-52be-48aa-ba6f-87274bdccf60"
        },
        "item": {
          "id": "303f7dca-bde2-445e-ae9a-147315846601",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "79bd2265-3454-4048-885f-66426f079d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e680fc0-2f3f-4970-8f02-c66351da734c",
        "cursor": {
          "ref": "eecdaefe-7627-485f-bba2-344935564503",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7c97881f-c943-4f7f-abd5-2c98f2508e4f"
        },
        "item": {
          "id": "6e680fc0-2f3f-4970-8f02-c66351da734c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d63eaec7-633e-4024-9dc2-ce740236ea34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d532bfc-91f5-44b2-bf0d-b0e1337175cc",
        "cursor": {
          "ref": "9a7582ba-90ab-4257-aec4-2b7386a1360a",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1d892322-5a85-457c-810e-80a9e4619519"
        },
        "item": {
          "id": "6d532bfc-91f5-44b2-bf0d-b0e1337175cc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0eb4f50a-ae1d-4c90-b129-afa7244286bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47538d0d-abc6-45a2-9f85-a5c8798ffcd7",
        "cursor": {
          "ref": "c4b1c5cf-1197-4a2a-b050-145ba946c2df",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ee13a6e8-d85a-451c-9e0b-eb2944b81563"
        },
        "item": {
          "id": "47538d0d-abc6-45a2-9f85-a5c8798ffcd7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4cbd24bf-fa0e-480b-8d85-59c26fe69f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479e150e-89cb-431b-a893-2ed868e19df1",
        "cursor": {
          "ref": "68cb10c3-ebe3-4da1-af1a-75a6ada3fccc",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "27a950c2-ff60-4998-8794-d7501cc0f72e"
        },
        "item": {
          "id": "479e150e-89cb-431b-a893-2ed868e19df1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b3253ad0-ab96-4648-b534-9815ed06adce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9d1884-a385-48d2-8d76-bed2e9c8df2e",
        "cursor": {
          "ref": "cdb1bfb4-cc31-4ecd-bcc3-c6d1013c79eb",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f8ff6cb9-a8c1-4716-8621-72bf6c3ff131"
        },
        "item": {
          "id": "cf9d1884-a385-48d2-8d76-bed2e9c8df2e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0a657050-ad49-46e1-807f-249cb7de6166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bdfbec5-cca6-472c-ae83-b6b1ed6ebd5c",
        "cursor": {
          "ref": "4edc5df5-a769-4402-9e56-f897e49686a1",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d511c9ea-46f4-417f-bb5d-0767312bdcbf"
        },
        "item": {
          "id": "0bdfbec5-cca6-472c-ae83-b6b1ed6ebd5c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5bcf8440-eb22-4aee-9844-fb93357c148f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a583b50e-9188-4990-82f9-ccac082ade3e",
        "cursor": {
          "ref": "9d7a20d0-9272-4d81-a6e4-937adf48d26b",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fba83952-2fd7-4e17-882f-eb2394f06bf0"
        },
        "item": {
          "id": "a583b50e-9188-4990-82f9-ccac082ade3e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1b1415c1-6b83-44ef-8226-d5535d9fdd63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bfe47f-a3d1-4892-9e5c-021ad92f28cc",
        "cursor": {
          "ref": "952d9a48-f713-488e-92bb-615c91fd21c3",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9a1f7631-82b8-40bf-8a18-7509bf142d3b"
        },
        "item": {
          "id": "98bfe47f-a3d1-4892-9e5c-021ad92f28cc",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e5aa5363-2fac-4380-af4c-f2403903286c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fcdeef-2012-4ac0-9f8c-13cffb9289de",
        "cursor": {
          "ref": "195eb514-1689-4ef1-a521-347199e9480e",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e24cc951-6d5e-42c5-b7f5-454ca1878c32"
        },
        "item": {
          "id": "16fcdeef-2012-4ac0-9f8c-13cffb9289de",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "199194eb-42f0-4959-8445-3eb5e760b199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a22c728-13f9-4012-a649-2563028a4173",
        "cursor": {
          "ref": "24981c40-d08b-4786-9807-ce792ee1e4b0",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "38732a5c-8e94-4b09-9682-cb231cbb13dd"
        },
        "item": {
          "id": "0a22c728-13f9-4012-a649-2563028a4173",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3a18dbe4-d8e9-4b1a-9943-43201170cc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55456a3e-dd22-4362-9fb1-7a2bbc75b8e2",
        "cursor": {
          "ref": "84a61695-fe0e-43ef-ab5f-f2fb1c8efdf5",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "38c1a85a-168f-4621-95ce-fff01251b1f5"
        },
        "item": {
          "id": "55456a3e-dd22-4362-9fb1-7a2bbc75b8e2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "96ab1034-e208-48d6-8ccf-13265f4be79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d264ae51-088a-461a-9694-e78f00a6acc8",
        "cursor": {
          "ref": "43732388-217c-4188-93b6-6ff5dc375854",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5df18168-7ab4-4111-8120-fba0f3de059c"
        },
        "item": {
          "id": "d264ae51-088a-461a-9694-e78f00a6acc8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ae7df91d-09c5-418e-8c4b-2d93958a85de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df50c86f-9935-472c-97f6-d2aa2e966d8a",
        "cursor": {
          "ref": "2400aad4-5cf2-476f-ad5e-993d54e32bb7",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e293cff6-4ced-459a-b564-e1df841316e5"
        },
        "item": {
          "id": "df50c86f-9935-472c-97f6-d2aa2e966d8a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dded7a61-236c-4905-8f2c-931b29a6cfad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dcbb870-c467-4308-b326-d43a05df8e87",
        "cursor": {
          "ref": "a6af6302-6ac9-4642-996b-ffcaf4710810",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e86eacab-c589-42c4-990f-ccb22195e6c8"
        },
        "item": {
          "id": "1dcbb870-c467-4308-b326-d43a05df8e87",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "94960f51-50a5-43bf-85de-14b3bf9cf8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a56af9-e7db-4dc7-b03b-4b9d7cf77561",
        "cursor": {
          "ref": "bb161665-9862-4092-ba1d-fcd304ac5d4a",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "bd331b70-eabc-416b-bcce-255298ae0dbd"
        },
        "item": {
          "id": "c8a56af9-e7db-4dc7-b03b-4b9d7cf77561",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "798e5422-b0bf-4b9f-83c1-a1cb81592640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99ebc3f-d3db-4447-beb4-74ac594969c6",
        "cursor": {
          "ref": "8804776e-9853-46d7-bcf4-5c520ccf76c7",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "55fc98e0-5281-4be7-bccd-69b2b5ca178c"
        },
        "item": {
          "id": "e99ebc3f-d3db-4447-beb4-74ac594969c6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "14360d19-2e09-44e6-bcde-70ebb15feb78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9698bf71-104c-4fa5-aed5-f3858d7f0fe4",
        "cursor": {
          "ref": "61e47535-0e4c-47ee-b75c-a87cd5dea6e0",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c51044e0-e020-43ce-ac6f-ccd95a93e682"
        },
        "item": {
          "id": "9698bf71-104c-4fa5-aed5-f3858d7f0fe4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "72ddcdfc-e4c3-47de-bbd2-d7bf027a2241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b60a24-8a41-48fb-99c0-50b49309c89e",
        "cursor": {
          "ref": "55b38f6d-40e9-4ee4-99aa-9780d469b0ec",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "33a7e736-aa7e-445c-afa1-1cb792162c75"
        },
        "item": {
          "id": "31b60a24-8a41-48fb-99c0-50b49309c89e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "455205ef-c65b-4ab8-b1d0-cfa78e347b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30bb772c-04e9-4e20-8852-51111dcc00e5",
        "cursor": {
          "ref": "2ef48af3-7f68-47e0-9755-83b88a69d01a",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f50b5672-f793-4cfe-8ff3-98143de52e51"
        },
        "item": {
          "id": "30bb772c-04e9-4e20-8852-51111dcc00e5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5c6b05ab-248d-458a-974d-a02bd935fbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ab66f1-2faa-4880-bcf8-553b0b6877da",
        "cursor": {
          "ref": "e4b36af8-bb1f-4de7-b192-915795269054",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e1720cf0-bcfa-4b34-a748-c71b10b002c8"
        },
        "item": {
          "id": "d9ab66f1-2faa-4880-bcf8-553b0b6877da",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ac37f257-af81-4112-b2c6-0ef601b11d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896886cb-c542-49e8-9fe0-1eeaca903a15",
        "cursor": {
          "ref": "ba63d00f-cafb-46c3-ab88-f2f8e7716e1c",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "78202d34-cf05-4961-a6e2-940ca701c95a"
        },
        "item": {
          "id": "896886cb-c542-49e8-9fe0-1eeaca903a15",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f2303946-7f00-4bea-8eb8-0c4f619641df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9a63d0-9d3b-43f5-8b56-d54d315fbd88",
        "cursor": {
          "ref": "e2240ad4-d00b-43c2-aeb0-0de4c817d545",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "49f1ddc5-364a-4abb-8dfa-8ee3244f4f10"
        },
        "item": {
          "id": "7b9a63d0-9d3b-43f5-8b56-d54d315fbd88",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0df0a1ca-85c1-4662-aadc-535f0829ba1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2447316-9da8-4e04-b970-7954af52afe5",
        "cursor": {
          "ref": "547755d5-a6ed-4b46-a2a3-44ac8e2e4b33",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "15183639-4853-4acc-a81e-5a41b96fec82"
        },
        "item": {
          "id": "b2447316-9da8-4e04-b970-7954af52afe5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f4704153-ebe2-4a82-a2b0-3181a2f369d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa04d8c3-ad80-49b3-8167-06360dacb6f8",
        "cursor": {
          "ref": "1957ae4f-dec0-4b0e-86e0-3ebcf33533ce",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "538b7b16-efdc-4195-9799-1235eedd6611"
        },
        "item": {
          "id": "aa04d8c3-ad80-49b3-8167-06360dacb6f8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "31341473-b104-408e-ac9c-1a194b241a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aff4f73-5ae7-4580-995b-dee078716e9f",
        "cursor": {
          "ref": "46229b11-0bc4-408a-960d-d142e6789ad4",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fdacf336-be02-4a6c-9efb-2e7de45b9d16"
        },
        "item": {
          "id": "4aff4f73-5ae7-4580-995b-dee078716e9f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c0ad7d27-55d8-41c7-ba62-f0333dff4adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926a7334-6c99-4976-b359-04b391840e4c",
        "cursor": {
          "ref": "c35a98ee-4c4f-4934-bf41-c3252f86a447",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cad5e155-7ebb-4be3-b715-c2083c32fd57"
        },
        "item": {
          "id": "926a7334-6c99-4976-b359-04b391840e4c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c39373a5-d4b5-42f8-874a-24d9c55b1ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5297a58-8cc5-44e9-a1fa-94ec4210e2a5",
        "cursor": {
          "ref": "47831a0e-8875-4d36-a32f-9c8ed4147955",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "234120cb-712a-4c7a-b773-0be10419c0b0"
        },
        "item": {
          "id": "c5297a58-8cc5-44e9-a1fa-94ec4210e2a5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "160f97b5-ca9e-47aa-9c3f-03bf4a10e6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432ffcb8-3d6a-485a-824f-69d73a23dedb",
        "cursor": {
          "ref": "d07ea0fc-689a-407a-b850-8f64293cc911",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c9ce5040-f8de-4f6e-9c97-519e98fe0502"
        },
        "item": {
          "id": "432ffcb8-3d6a-485a-824f-69d73a23dedb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1b01612f-5799-46d7-83c2-bc3c6310b899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2eaf954-cbfb-4400-96e0-0997b3a4cea6",
        "cursor": {
          "ref": "c1c913dc-db8c-4f1b-bf03-236e123d2716",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "db67b7f1-ea31-4245-8722-28c7cf2a92fe"
        },
        "item": {
          "id": "a2eaf954-cbfb-4400-96e0-0997b3a4cea6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "acd7c775-0a62-4473-9310-7c77be66eb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8272d8-442f-4486-b5fc-6d996c701c59",
        "cursor": {
          "ref": "dc5a41c4-044c-486a-af4a-65b12fe0d5c2",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "29660ca6-6385-4f0f-80cf-f79b518a4ab6"
        },
        "item": {
          "id": "bc8272d8-442f-4486-b5fc-6d996c701c59",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6592cde5-ca77-4923-a381-6a0a23b19e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8022b7d-855a-4225-b4be-ed591ab39d36",
        "cursor": {
          "ref": "527eccc3-6b4e-4650-9514-dfe8402d2205",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6916cf15-9e57-44e4-8573-4095aca3a3df"
        },
        "item": {
          "id": "a8022b7d-855a-4225-b4be-ed591ab39d36",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "79657cfd-e633-499d-9827-01a5beeee987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece70fa5-62c3-4525-8128-97bb39d83b2d",
        "cursor": {
          "ref": "5aa20aa6-29b6-4175-b821-724c6c09677d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "29b17a4a-7934-4dfe-84b6-e4dc1398d8f4"
        },
        "item": {
          "id": "ece70fa5-62c3-4525-8128-97bb39d83b2d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "36afbda8-289a-4dc6-9bb6-c7a20a92f06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc23b956-973a-4d37-99a6-7111f424b08c",
        "cursor": {
          "ref": "85d9b2a5-bd70-4174-897c-4683567e8ca3",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "13a2ce4d-f868-49b5-b134-5220d273396b"
        },
        "item": {
          "id": "bc23b956-973a-4d37-99a6-7111f424b08c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f065be04-ee1e-4f67-b6e0-0ce34079fb76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62b21d5-9551-44f5-990a-9f0082ea85ab",
        "cursor": {
          "ref": "317a257b-d648-4957-af41-349baa1c7eb5",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4c98ebc6-14ce-4d90-89a0-19725fb010e1"
        },
        "item": {
          "id": "e62b21d5-9551-44f5-990a-9f0082ea85ab",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "53f0698a-f0fe-4b93-9f57-bef0c133fb95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e996c3-7c04-4860-ab49-b148ceea20b8",
        "cursor": {
          "ref": "61911ed5-bc15-475a-b34c-b228fb606b7b",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "80f9ff1a-f943-43f3-954a-ba0df3edb732"
        },
        "item": {
          "id": "d1e996c3-7c04-4860-ab49-b148ceea20b8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ef521b39-e080-4e6c-be89-c7ee924bb0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080b14cc-8d3d-4cd7-98e7-f1d3a4158160",
        "cursor": {
          "ref": "b885058b-7593-45f6-8d31-023c64a440db",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6836c7ee-3fd4-41ce-a556-feeeaaab07ec"
        },
        "item": {
          "id": "080b14cc-8d3d-4cd7-98e7-f1d3a4158160",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bf44d615-6d48-4703-827b-f31eeb7807f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc9e9da-22d6-40ce-a49b-d43f1f0243fc",
        "cursor": {
          "ref": "29cdafa2-2b7a-4222-8433-7e1d0e975011",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2aa00be5-2e3f-4012-9922-d738ecfab67e"
        },
        "item": {
          "id": "6dc9e9da-22d6-40ce-a49b-d43f1f0243fc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c66c4a7c-16a5-44e1-8f68-5416e2a81fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a3b18d-4145-4b11-b3b3-7ceb07682bc2",
        "cursor": {
          "ref": "c12979d7-d273-4e68-867a-d92990f9f95e",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2f522d06-9b89-49ac-b6d7-e7af422283c3"
        },
        "item": {
          "id": "f1a3b18d-4145-4b11-b3b3-7ceb07682bc2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f79ba643-2350-4e09-81be-ccb0efc5cb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314bfae9-82a8-478a-aa1e-d1ea1a173b29",
        "cursor": {
          "ref": "8cfe76ba-31c4-4e45-8b99-32d8a58c20b7",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c36a21f0-9db4-4b6b-a7ef-145e353413e8"
        },
        "item": {
          "id": "314bfae9-82a8-478a-aa1e-d1ea1a173b29",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "98f20e17-7ddc-415f-8898-fbe744bd83ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9bb355e-8061-4493-bd15-2d2e007f3c71",
        "cursor": {
          "ref": "5faa6ff3-9138-4d61-87d4-f01258bef4e6",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0e48900e-6065-4e4a-9341-27ddfa9c26bb"
        },
        "item": {
          "id": "b9bb355e-8061-4493-bd15-2d2e007f3c71",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ad92abfc-b5a5-423d-8cb5-f6fc7ee65d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c116a2d-3854-4a35-a837-f327b3f42d67",
        "cursor": {
          "ref": "3767bc22-1252-46a7-950b-ceae47c3b8d1",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "bd765e30-7eb3-48b8-9cf8-dba232e5c508"
        },
        "item": {
          "id": "2c116a2d-3854-4a35-a837-f327b3f42d67",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "610a3c8e-d0a0-45d2-8a22-073fff48ac2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e4679f-4840-4792-84ff-d5b25787658e",
        "cursor": {
          "ref": "2e23abf6-aa36-46e5-aecf-ed8ad7ec775a",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "61e65864-47e5-4c55-b64e-4076e1fca75b"
        },
        "item": {
          "id": "04e4679f-4840-4792-84ff-d5b25787658e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6497171a-293e-4ea3-9fcc-bdebdeb87da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4a51b2-bdc8-42da-96b5-7e8e1a00eb33",
        "cursor": {
          "ref": "715aec51-d997-4eeb-accb-79232b200067",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "aafe4bc7-ef35-4ebb-b274-4b69f49899cf"
        },
        "item": {
          "id": "bd4a51b2-bdc8-42da-96b5-7e8e1a00eb33",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "74793bb4-3ba5-4e32-841d-b7bfbff5744c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239b42c8-91e4-4484-ab36-ab6886eda744",
        "cursor": {
          "ref": "16df607c-d7f1-4e59-924c-025cff1b4dc2",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3fe542a3-861b-4843-b2c0-a8736590c483"
        },
        "item": {
          "id": "239b42c8-91e4-4484-ab36-ab6886eda744",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2857b42a-4f3d-4dd9-97c2-a20d32966472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39cd4e9-8ff4-480b-8e73-1eb426280286",
        "cursor": {
          "ref": "89237326-18e7-4d02-8753-d9bb79662920",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "fba04232-5d5f-4a8e-b953-bf42330d3862"
        },
        "item": {
          "id": "d39cd4e9-8ff4-480b-8e73-1eb426280286",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cf9d0b8b-489c-45cd-bc4c-58d79e634707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd469fef-5ff3-4ce9-9a9a-0ad84ebac648",
        "cursor": {
          "ref": "332ad5c5-bced-4146-b287-a4ed7ce504b9",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "178b0b75-47a1-4f9d-9ef4-0ca4193192d5"
        },
        "item": {
          "id": "bd469fef-5ff3-4ce9-9a9a-0ad84ebac648",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "22ebf9e0-86cf-42e5-83e8-0de82ca572ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c308a65e-e776-4daf-95c5-32441dac5af4",
        "cursor": {
          "ref": "60c2f471-389e-455b-b072-e1df41a51d3c",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5231653a-682e-4304-bc54-3644d6a3b3c0"
        },
        "item": {
          "id": "c308a65e-e776-4daf-95c5-32441dac5af4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ab045f04-f955-434b-9645-cbaf94b1925a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bb7daa-0053-4d9b-bf1d-aad8a2570449",
        "cursor": {
          "ref": "179ad293-7930-4d24-8622-be5e49ae365e",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0d74a8d1-135c-4426-a269-1315c0615868"
        },
        "item": {
          "id": "02bb7daa-0053-4d9b-bf1d-aad8a2570449",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "28b121fe-0219-469a-baf8-abae177813e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7a7017-c1c7-47ea-9727-02381222c111",
        "cursor": {
          "ref": "165a567a-bda5-452b-8e24-2e50d698f6a7",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "17eb7583-58df-4107-82b5-6ae7c87bd89e"
        },
        "item": {
          "id": "4b7a7017-c1c7-47ea-9727-02381222c111",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5d56bd39-de84-42c3-a55b-0a4b8fde0317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a55b224-a6c4-4fc2-8fcf-8130942bb5e9",
        "cursor": {
          "ref": "b968bd2c-f5dd-4a53-90ba-a59c6ff7fff4",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "def3eb4b-d52e-4cc3-85ba-0f1f5de093fc"
        },
        "item": {
          "id": "0a55b224-a6c4-4fc2-8fcf-8130942bb5e9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1aa361c5-cc2e-4250-b412-5c36186be170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7a6705-3de0-4977-aaec-8de0e4db8cc1",
        "cursor": {
          "ref": "311fc889-a5d8-48d8-b49e-a835b459bd9d",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "17a13020-7cf0-42f1-ae85-3982263fe6b2"
        },
        "item": {
          "id": "db7a6705-3de0-4977-aaec-8de0e4db8cc1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "28887cd1-3238-4de5-be18-1583b3c4251f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6544f19-81b4-462f-acd2-6ed27fe79125",
        "cursor": {
          "ref": "2a0fe062-a85b-48ac-a932-77f989adae4e",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "15783c17-3613-4b4f-8995-1ce6dc8a70f3"
        },
        "item": {
          "id": "f6544f19-81b4-462f-acd2-6ed27fe79125",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c2bc3341-370e-41da-b079-d9aa8744eaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537038cb-45ae-4528-a53f-e792ea093d99",
        "cursor": {
          "ref": "b02c506c-fdcb-4b9a-bad9-14c711a03146",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "00f96184-86d6-4e50-a720-aa4cbc339aca"
        },
        "item": {
          "id": "537038cb-45ae-4528-a53f-e792ea093d99",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9fff90ee-ab7d-4e46-8686-afab5838b754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2077f869-68b7-468c-973e-bb80c1bae83f",
        "cursor": {
          "ref": "4414cd5e-b6b2-4d21-849b-41ebfe043c70",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2bb088d2-9bd2-4932-bda3-5a702fd1d303"
        },
        "item": {
          "id": "2077f869-68b7-468c-973e-bb80c1bae83f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9e95ee7b-8565-46a2-83a4-6a62d2ac3171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49ec75b-9d80-4d05-a3ee-ba2a8960948b",
        "cursor": {
          "ref": "e8de57db-e2ea-42bd-85ba-de16112ff2cf",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8ffa2696-4e20-4ad9-80bb-ad02156ce621"
        },
        "item": {
          "id": "f49ec75b-9d80-4d05-a3ee-ba2a8960948b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d5a62525-1827-4ebd-ae0f-705fbbae427e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec7254e-24c0-48b6-9cc1-c28c1aeae423",
        "cursor": {
          "ref": "7a862336-fdf7-4c2a-a5e1-2acd52018631",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0c6d4a0f-ec39-4414-9785-58315713fa11"
        },
        "item": {
          "id": "3ec7254e-24c0-48b6-9cc1-c28c1aeae423",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f394575b-e7a4-4e61-923d-c2c26c8c999f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3f3fde-2a40-48aa-888e-ca6628aa771c",
        "cursor": {
          "ref": "3b5cf799-7ec1-4e59-8427-cbee9c144448",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b1b447cf-bca7-42e1-a983-425a0a236757"
        },
        "item": {
          "id": "5c3f3fde-2a40-48aa-888e-ca6628aa771c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b11dffc8-8a77-4733-943f-6f788bbecacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75b4c43-603b-41d2-9f02-ccae18355a1b",
        "cursor": {
          "ref": "4e7a7a62-599e-450f-81df-ff7372e2e03a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d2a3ef85-c5ba-43b8-976e-cc928760e5c3"
        },
        "item": {
          "id": "b75b4c43-603b-41d2-9f02-ccae18355a1b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b0f62fe2-4f22-4424-8e01-4b82d1e07356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b4a878-0d5f-45d6-b0f6-82a5977e2d27",
        "cursor": {
          "ref": "93d3b19b-4648-429f-b7dd-274acef88acd",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "bd395e31-fe85-43bc-924a-a9f227c98962"
        },
        "item": {
          "id": "e8b4a878-0d5f-45d6-b0f6-82a5977e2d27",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "04efbe10-633d-4c49-af96-747c131e35df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac63ccea-d510-427e-a4e8-ab930d44afc0",
        "cursor": {
          "ref": "fbab3ea6-fd54-4834-8cdb-1d1f2d5c4e5b",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "582c007e-eeb8-4383-8c0f-bad8b1a199a0"
        },
        "item": {
          "id": "ac63ccea-d510-427e-a4e8-ab930d44afc0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2dc04e73-92ef-434b-a426-24f1ce53e460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a079d10b-f1d8-454b-acab-bb02482016eb",
        "cursor": {
          "ref": "d01c4a8d-239e-4b52-a9ab-f429692c91ed",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "25556236-b92a-4598-85f5-9c2a7fa8884f"
        },
        "item": {
          "id": "a079d10b-f1d8-454b-acab-bb02482016eb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7747576c-c554-479f-9f58-413f707322f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1048ad28-4cb2-4a01-a625-3ea08e8979c6",
        "cursor": {
          "ref": "880261d3-1c54-4fac-b530-e0c04508cf75",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "bdd53f15-c115-4bca-9972-7e84a31b490e"
        },
        "item": {
          "id": "1048ad28-4cb2-4a01-a625-3ea08e8979c6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "26c8084d-c977-4ab7-8ad7-32c5cd2b7c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a59b7cd-6d2b-4505-9e7c-9175aeac1422",
        "cursor": {
          "ref": "7394f8e4-e7d1-42af-86d2-63d87d318c45",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "76ee1cbf-fbe1-4d8f-9414-8e13c47d852b"
        },
        "item": {
          "id": "3a59b7cd-6d2b-4505-9e7c-9175aeac1422",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "34c527ba-a515-479d-b56d-94049a1584e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6be494-54ea-4205-9ece-cddd93674563",
        "cursor": {
          "ref": "1bbae17d-21fb-4703-ba70-4da412d68a4e",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c5e789fc-312c-47b6-be31-70b2ea36d0bc"
        },
        "item": {
          "id": "ad6be494-54ea-4205-9ece-cddd93674563",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d1d4cc23-3d7f-4e5d-b9fb-cb6761f637f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c57358-aefa-4594-8c14-1e2ba6d817be",
        "cursor": {
          "ref": "23855ad5-ada2-4f1a-ad7e-bb8a03c3ffb6",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "eb640901-383e-45ba-8c99-baddf809ae7f"
        },
        "item": {
          "id": "15c57358-aefa-4594-8c14-1e2ba6d817be",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5de4ca51-56f4-4016-bb52-9849c1ed0227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3e7cfd-648f-4b1d-9a6e-530b1728da84",
        "cursor": {
          "ref": "f14d1845-8268-4518-9452-0627d6442a48",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "f44ac862-b54d-46d7-a5b9-7e50e47a7650"
        },
        "item": {
          "id": "aa3e7cfd-648f-4b1d-9a6e-530b1728da84",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c43dcf40-25d9-437f-9bb5-2f91c57f42bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10c4816-09e5-4bd3-a38d-7aa65c0a55dd",
        "cursor": {
          "ref": "94180677-23b3-4bee-88f5-eeef5504fc01",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6e51feea-0d5b-4cdc-a001-fac2f7199bd6"
        },
        "item": {
          "id": "b10c4816-09e5-4bd3-a38d-7aa65c0a55dd",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "afc8e68b-fbf7-4485-9d71-a3e2c35c6def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c95f8f-083f-45df-bc34-5628d3bce02c",
        "cursor": {
          "ref": "3374a80f-e46b-4f14-81c6-808fd57f1d23",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a502c210-7e2c-49ef-ad10-5fbc2d812de7"
        },
        "item": {
          "id": "05c95f8f-083f-45df-bc34-5628d3bce02c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1512b0b5-43c6-4a69-93dc-f648172ea702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7885000c-362f-4886-bbab-5e1ae1cd3b2e",
        "cursor": {
          "ref": "a0a490db-dad2-404a-b6a5-2b9e73f0fbe4",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "70da81b8-97b1-47cd-ad4e-2f795efb9658"
        },
        "item": {
          "id": "7885000c-362f-4886-bbab-5e1ae1cd3b2e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "205a15b7-4a6a-42a0-9ae4-04251a5608e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18b35cd-f9df-41bb-b2ef-c6ea25e4bd06",
        "cursor": {
          "ref": "d2df6875-c370-4c2c-aef6-058edd0d281c",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "2387da0c-8128-4f94-9223-5671ec218141"
        },
        "item": {
          "id": "d18b35cd-f9df-41bb-b2ef-c6ea25e4bd06",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0bd18691-8599-4716-a1b5-b5366e3662ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7742a6a0-a2ba-4ebf-a6f4-91dd60e80b9b",
        "cursor": {
          "ref": "87d3a0ee-cd7e-4c0e-8f97-52f91a1d42ae",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "64d3e9a1-d80c-414f-bf1a-fc2d85e1d371"
        },
        "item": {
          "id": "7742a6a0-a2ba-4ebf-a6f4-91dd60e80b9b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ae8505c9-6e29-4f4d-aaa0-ad19bada39d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdbc62a-10ff-4d7a-b319-eaa1680c7859",
        "cursor": {
          "ref": "d921f53e-4520-4398-a2cd-f9895a6cddbf",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "016efa61-8295-41c6-aa73-72853a9a0063"
        },
        "item": {
          "id": "ecdbc62a-10ff-4d7a-b319-eaa1680c7859",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4d00d470-838e-4a35-8403-2409c6803bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101cb0ca-8ddd-4210-b9d0-53d8ef9d17cb",
        "cursor": {
          "ref": "609dbe1b-4d8e-4c1f-bddb-e1581348cbd7",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1e0d07ec-5ad8-415c-bcc4-0a3dd5d82dfd"
        },
        "item": {
          "id": "101cb0ca-8ddd-4210-b9d0-53d8ef9d17cb",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b8dbfb18-e63e-476e-ba2e-d95790e970a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e54d04c-acaa-47b9-87da-106ccc70ce8c",
        "cursor": {
          "ref": "eb75711c-3f3e-43ac-b7d2-8f5a0f631881",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "19471b07-a973-4ddf-b58b-5d4b064ea04b"
        },
        "item": {
          "id": "4e54d04c-acaa-47b9-87da-106ccc70ce8c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a604d812-7bfc-4244-8aa9-db10c04e13bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ea6521-9be2-4f38-b85d-163532b3643c",
        "cursor": {
          "ref": "326c9736-fb88-4806-864a-753e8b38f58c",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "cdf661e2-5e58-4d26-a1eb-d0afd14af850"
        },
        "item": {
          "id": "90ea6521-9be2-4f38-b85d-163532b3643c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "604cb537-3d02-423e-a33e-53607351750f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da6c7ae-e73b-4fff-9444-efb3f568b84b",
        "cursor": {
          "ref": "a4e62678-c5e3-453d-adf4-3aabf3cbff46",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5646c973-b83d-4375-98f3-2bf36a0df826"
        },
        "item": {
          "id": "0da6c7ae-e73b-4fff-9444-efb3f568b84b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "dcb50da6-997a-46ab-b45e-c945af050df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04820744-fc6f-45b3-b314-c6a30cab7a2c",
        "cursor": {
          "ref": "3800a151-8edb-4771-aacb-24844d99f903",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "6c564454-02e0-47d4-bdd9-71b90e5a4a12"
        },
        "item": {
          "id": "04820744-fc6f-45b3-b314-c6a30cab7a2c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "fbddecf0-f234-4405-a5cd-3eb68a35e21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33fc2cd-ca04-482e-99b6-514e49463ae9",
        "cursor": {
          "ref": "dd4b9d8e-cdf3-46b5-a213-82df05546665",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "62b87216-72c6-49ef-8d50-d45a39c8c444"
        },
        "item": {
          "id": "f33fc2cd-ca04-482e-99b6-514e49463ae9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b63768b7-7925-4f97-b4cf-5ffa51a8ae1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14587131-2851-46f5-9f7d-91915642d77b",
        "cursor": {
          "ref": "20896f3c-bb54-4082-8519-e408b3cc1800",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "cbf005ea-fcd8-4d77-8970-354224c728fb"
        },
        "item": {
          "id": "14587131-2851-46f5-9f7d-91915642d77b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d86bcac6-f3f3-4285-b81f-32e595386c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788a4043-4e3b-47b7-a9de-c2966a9b5d9d",
        "cursor": {
          "ref": "2e33846b-bfc8-40ab-bdac-867d52aaddd1",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "79205eab-9d93-48d0-8004-ccf86778d89a"
        },
        "item": {
          "id": "788a4043-4e3b-47b7-a9de-c2966a9b5d9d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d731f571-5d9f-4972-996f-c8e998644707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0204ffb0-7746-43c5-b0a7-46ac219f6f5f",
        "cursor": {
          "ref": "c821144f-c811-4bc1-95d8-854a6478f7d5",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6ebd90a1-5098-46f1-8fa5-6b7767f7e917"
        },
        "item": {
          "id": "0204ffb0-7746-43c5-b0a7-46ac219f6f5f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "04244e29-8824-4824-8e13-e528daa0a42c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 137,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f79563-90bc-4200-be1e-a1f6dbb8a9b7",
        "cursor": {
          "ref": "a485c014-a044-4eb5-b591-cedb2fa824aa",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "4cb275eb-4a17-4433-a3d2-2c335ff151d6"
        },
        "item": {
          "id": "07f79563-90bc-4200-be1e-a1f6dbb8a9b7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3510551e-bc2b-4caa-a5b6-d4d8c50d88ba",
          "status": "OK",
          "code": 200,
          "responseTime": 118,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "718da3c2-a050-45ed-b4b4-f3269092bd8b",
        "cursor": {
          "ref": "76976d5a-b77f-4ac7-a99e-b07120792e1b",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "88d56c80-2b2d-471f-a09b-975ea7dac5ca"
        },
        "item": {
          "id": "718da3c2-a050-45ed-b4b4-f3269092bd8b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c13f3c5c-38fc-42ed-a3ba-277dd5a474ea",
          "status": "OK",
          "code": 200,
          "responseTime": 1323,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a09113-3738-4110-9922-00412df3414c",
        "cursor": {
          "ref": "d6480487-b97b-47c6-b5d5-42503d271929",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f73dfe47-b548-4f56-a80f-f36487febc2b"
        },
        "item": {
          "id": "82a09113-3738-4110-9922-00412df3414c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "731e7073-ae3c-44ba-93fe-9480f0ef7201",
          "status": "OK",
          "code": 200,
          "responseTime": 1265,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5840b8ce-58b4-48d8-9bec-594502653a39",
        "cursor": {
          "ref": "851a1764-0003-4efa-82f1-35c69c440543",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bbbc90bf-dbb4-45ce-b76e-3e9f8e3aaacf"
        },
        "item": {
          "id": "5840b8ce-58b4-48d8-9bec-594502653a39",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a747bf13-ae44-4a0b-9b2d-2e6c96300033",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 87,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5840b8ce-58b4-48d8-9bec-594502653a39",
        "cursor": {
          "ref": "851a1764-0003-4efa-82f1-35c69c440543",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bbbc90bf-dbb4-45ce-b76e-3e9f8e3aaacf"
        },
        "item": {
          "id": "5840b8ce-58b4-48d8-9bec-594502653a39",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a747bf13-ae44-4a0b-9b2d-2e6c96300033",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 87,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb857d2a-105f-44a6-b12d-1649b68b177c",
        "cursor": {
          "ref": "4982f64b-dd4e-4477-83c8-cb5b18c7faab",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "9cfb29a8-f3eb-4d55-a62b-1c057f13eb39"
        },
        "item": {
          "id": "fb857d2a-105f-44a6-b12d-1649b68b177c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "574601bd-9c17-4231-bfcd-fc3a010677e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a3760f-ce15-4732-bc13-7c23d3c6c75b",
        "cursor": {
          "ref": "d7647681-c5ef-4e86-918a-fdd9f0f6495b",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "3961c9be-7652-4392-bb48-dd1b2f00f802"
        },
        "item": {
          "id": "60a3760f-ce15-4732-bc13-7c23d3c6c75b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3a8bbc1e-1cc6-458d-b72c-446744af3f54",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}