{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "642f14e8-2ad8-4864-abca-9ace4793bd3f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9cb569bf-f5ca-4016-a0d0-3b634899ef6e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d6b84646-0c74-40bc-94ae-0e8fab86d0ac",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "25f4e093-d0ec-4f86-b369-75d7fc87b5c4"
                }
              }
            ]
          },
          {
            "id": "9689e9eb-98c1-43ed-b598-d7394cbe2503",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a504b830-b36e-41f7-8cea-7a61ac50c188",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "66e5265a-e72a-449e-9b6f-1289fcf4d7f4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7be4ae14-6980-4f9f-adc4-28d350431862",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7218ab0b-a432-47d2-ab3e-0b4a1628d491",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a9fedcc7-14e4-4493-9bb5-793d5aca4dd4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5db04faf-421d-478f-967d-f52c326ee420",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d8e8c6fb-6dd1-492d-9ba4-80d984b945f5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b85ac20-35ab-401e-9933-4ed557fbe2c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cc8d18f3-36f8-476a-a788-58c99da6e6e6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9f7a06b1-31db-4920-9837-3355d213eb8e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "956f1fb3-6150-4c24-a3c5-e7853fbb44d9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45ac9aa1-b60a-4654-8629-b153747293e8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "14d7deb2-e722-4f3e-b4f6-c040d4979a88"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9ff6789-43cc-4e0a-9bc1-433e0e532387",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da7d6f73-fbeb-4747-9697-3f80a6973492"
            }
          }
        ]
      },
      {
        "id": "088abef6-f27b-418d-aeb0-c95b020ed0a0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a9fabbea-404b-4709-b304-731974e07b4d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d2551df6-5379-4d19-8437-926d6c2ef4ca",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cabccd71-7e32-4a17-b888-6ac439c725ba",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905fe20f-75f0-4351-986c-7c31dac21b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71ef156f-1295-478f-b53f-888dd6abb837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb66146-d428-4f75-8a7c-ec50292d3c07",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b582d6d5-b126-42a0-a99a-e535825823f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91b40740-9767-48f4-9e29-f3ee79d534f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b729edc1-92c7-4ba9-bbb8-6790e34c295f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd07e5b-15d3-440d-ba32-323443a8ce87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6e01516-c2ae-42ac-8bf4-ca0925f8884d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5739ff28-3dd6-445f-968f-744a7cfca8ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f443ade2-40fa-4930-935f-0db1265947e2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee52cf4a-85a2-4aec-8882-f3918b7559fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2c2aa7b-2691-4a55-bc08-6007ecbd4a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55d045e-a329-488e-9ba9-491bded9ea6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648d8bdf-a2e4-4369-a1e2-f042e792a67d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a4136958-ed8c-4022-8056-373f56e73167",
            "name": "Positive Testing",
            "item": [
              {
                "id": "db71aea5-84ed-4b93-b990-01dca3772f1c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fadf4618-4cf1-46c7-accb-0b973f3e381a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "015e6164-2426-4d30-a838-338247959db5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ca02fb3-f134-412b-9c22-95d9b27025ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "59bfea3c-cc3e-4ab3-b065-3e720b397acc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb96c1fa-f3b7-44a6-aae2-6e00e4f82ecd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "438455af-7e17-473f-b556-63157e83c8d2"
            }
          }
        ]
      },
      {
        "id": "6f09ee4a-e4fe-42a0-9dbb-635356a6aac8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fae4e1db-5a22-4f90-8721-c9f9a13341c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bd9e4e7c-4504-4bb8-a7f2-a91c864c4674",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2eedc4a9-4237-496e-bc0f-274c46bf02ac",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ae7850-c7b4-4a16-ac05-86921ecc0903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2b41b9-62b7-4ed8-b689-65d5c3ab6333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5fc6d6-b852-41d1-9f68-1e9388234c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec3e70ba-6814-49f4-af02-3f3a78d727e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf6e59a-5bf2-45b4-9d2e-24cd5d7300a3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e402e913-dff1-4d06-90ec-e019f7b10aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b5e923b-8d54-45bb-ab6c-06a907130167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727d076d-c56c-4095-a88a-d68158a4d873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6770033d-162b-4f3a-9f05-dd13e9bafaff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17535f26-4235-41f7-9d63-8c44fbe30921",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec4b59f-3408-4064-8a0b-ebe8d8361868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c32276a2-84a9-4de3-8595-9d16ed9b2b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1130e79-3694-4e6d-9e60-d51d72b599f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4045fe55-d450-4aca-86f8-56eb9b3bce0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae58ee03-ac96-4369-b477-5d98c7895845",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995d6699-ff5c-490e-a9b6-30426c890d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679c9762-b639-4b28-a4c9-33a9213ddfdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6496fc1-0a2f-4e39-9f5c-eb17258ba6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3e3d9b7-7e58-4a35-9df9-22b132eb7db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f494ff95-77b4-4db9-ba83-fd6c30895453",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87640f9-38a6-42ff-8e67-0eba77ed77bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8186db-784d-46af-a296-c0430ee4af32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aeb60fa-9a09-425a-a515-d68f2fd4fbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "412038dd-2d64-44ce-9ef6-46d58586d274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a38dff3-73a6-4f54-be40-e1c0bfdd6deb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64551ba-b2d9-4a57-af31-2d73b9a165b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a0f36ea-652f-4d42-bca4-76b25dfc5b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1203f622-5ed5-4cdb-b35e-d1cf51150a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "962482a3-1c20-43dc-8db6-c56296882d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236e031b-1728-42ff-a780-fc8487ccc705",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d33b4f-80b5-405d-b569-21120ed0a796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "878a553e-4df1-42db-93d6-9942bc4eebdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf2e7d8-c98d-4642-85a8-5213dbcf499d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e394e16-0bb9-45c5-94fe-f37d126be405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b17a568-9093-495c-b12b-c76f90c1772b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d6fb2c-0f3e-43be-951b-7a20581c89f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71ded60-1cd3-4842-b5a1-9292080fe5b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a79398-d289-4b44-84ae-b3560016ccd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7adb5ab2-8b4e-476c-aeb9-c4f0f8516491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ee5b08-a4b6-460e-ad64-8238af554d27",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b073c5-be99-47fd-a91f-083d48caed2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff73a1b6-6ff5-4a46-93f6-0cc950066edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2025d3d3-2f25-4cca-83df-cd775ee2479a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4094cc70-3711-4568-a25a-508a4c1b27f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9a565d-00ef-428a-819b-a4d4e465c9ac",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d2a568-f1af-4ae8-bcb6-80f3191c971e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9aa4c6-ae8f-4b49-aeab-13c2085ef208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c0a1a8-07de-41c1-af6d-a089396afc5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d167af1-bcbb-498e-9405-f55a36aa2f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ab2558-17f0-4978-a4bc-7c68883e2865",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b05d55e-60d3-43ba-92a8-c1661d254a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b3208f-82a7-490c-abfa-fdb9f4107413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b6939d-fa0c-43fb-a65d-c68f7d9d6dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5dc10002-231f-44c4-a622-9eaa79831f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a71ed19-451b-4b11-ab87-8eac4e803488",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6bb956f-1864-4a92-b9cb-3cea1cf6c213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607eeb1a-84f7-4430-8740-515652ee4e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de84d9b8-9bfa-4621-95de-e68f682002fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72896f1e-eafe-4ac9-8074-9b37a2f9127d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fb3957-fe5d-4057-8986-589a0d864790",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab85d522-c642-489e-a626-e25729e0cd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d264d6-3755-4332-a7fa-d4e88e14c6a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca6f8f1-083d-4125-8931-11041b7db1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6476cb6c-ec45-4abc-9a15-ed1ba99d3c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9431074a-9f92-4e4e-8774-bae42414234b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7198505-47df-418e-ad94-f38ceb81f326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ce1261-c37a-459a-9d45-c433918ef43e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca346ab0-41cd-4940-a3a6-e4b7d48ac3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94b33621-a576-4517-a5a4-d681248b57bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875f79ba-ab5d-457a-aa20-5895987d0a6b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "789bdcb5-4e11-479e-8eb9-fa564d61c2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a52b434-af18-436e-a4a7-e6c14262df9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc63f097-aabe-46d0-8fd5-dc5decc49742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62124c4b-2071-4c52-917a-dde480f67529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c854a8db-ae7d-4ee9-9738-662d760b014e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6093dfa-58c4-4ce0-9f29-6b982c020b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3751cfed-b88e-4fc6-9d8b-db05b04e36c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6774f21-ef1d-441c-b715-2979a5b7c9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2000128-8ddc-4f2f-bf31-d3328a5cba0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a402ab3-a79b-4c23-9cf0-1280c96d33c9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ffb957-604d-499a-9c52-7e8b9ebfcaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b39b6b-6e56-4dd2-b5f4-da98ad3c27db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ddd22a-45b6-4079-9571-d42d1f29de4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b38eeeb-7d56-4e29-a32e-ddbe73e2dd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47946f58-fe57-461a-80df-41eb5a232593",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f833f82f-da99-440d-9507-ea51bcbd2204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c61642-3bc7-4029-929f-3150469d2754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b516ca6-25a2-4918-9e15-30e1a54ed973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1cf49c-1d06-447c-bbe8-ca1f1c9f3aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1e7337-ac53-4fe1-9098-79d20b0b68c3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ff46f7-deb8-4b91-9a22-19304fc9623f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607ad47e-6286-47de-8abb-cb67a6fe7ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209a4f73-1de3-48d6-9d1b-0ee5ebc7e100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23245e5b-e20c-4fbf-92ec-a5c10551dcd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4776cd-912c-4399-8e2c-60434805f5b1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad269e4-3bf8-40c7-8ee7-89c6b896bb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "126c3d69-fc1a-41a3-9f2f-9f1c3fe7ada5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb051df-734a-48ab-8a76-36090ce24e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "175338f9-2b47-4c13-a1e4-01bc4c92fc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840b1c4c-ebde-4df8-8ed1-d3033b3d789c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77a99f1-08a0-4861-8cd7-1febd437bcb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234af179-b405-4625-bd89-f50aeef127f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee6320b-e551-4946-b22f-e70627368770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3cb9592-cc5a-4c41-b90b-279501b5d97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a373d9b2-8745-4ec7-a8b5-9391a41aa1a3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "066a585f-6aa9-473e-80ce-fda34d203896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5730ff-2510-437b-82c2-e1b1fa2b1d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c407231-3be5-4cb2-8c56-0762dd8fd6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2aa4c9-b7db-40fd-a476-b7e2f1187b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bc17cb-e725-44f9-8df5-f01b55ba1fa3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c9194b-f42f-47ef-aaa6-00e410222461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d80f61a-c650-4ef5-aca2-7441505c188a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c862bfc-1c42-40d4-9353-cc2f8dfcedee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a21e53c5-a5bb-4813-b909-fc33196deb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafaa037-b639-42c8-b343-177db3ca1a69",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c273df-dfdf-40f4-b0af-e89ba09b7f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7b4f2b-e0b0-4e08-8b6c-36c48c5596af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c166931-9606-4822-a7af-ee7c096a5b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4acf08f-9e5f-4dc1-882a-8693e9f3682d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c2037f-ad33-47ad-b300-275621c1476c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdeb8b07-0562-4022-85ea-efc18bc9b2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04eda736-678b-46c7-bb05-cce702e68915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e76650-93a5-4b00-aecb-ddb28511a1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e171dbab-3028-4ad9-a223-2873d51b3654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065752b5-8c50-4e85-b25d-2fe05bd07082",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63889f0-e103-472f-9d05-eea09c772049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3edf50-0de2-4dd5-9532-80f7c53450de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16f7099-2eac-46cc-aa49-81994d4c1cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "340f1e79-42f3-4470-a29d-009c4c6c264a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d53127c-2440-41c2-ab0c-9363ee542e7a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f2e9bd-77d7-4565-a24c-682e39e628a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38feca08-aed7-4eb4-8ae1-165610f816ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0999f5f7-ad66-4d61-abc7-acf069de9bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f2330c9-ab41-4ecb-b4d0-c22b40b3607d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379ecb33-5a89-45ae-93ae-aa8bf8e32678",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e015c5f9-5365-4cb8-b050-ca9500597a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e57d1d-6b78-4aa5-9fee-7df8d961c646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f0da07-eeda-4a7d-8d40-b28018d7ca2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e35fecae-9f0e-4f63-ad52-1dc44bbc951a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8572a9-c93f-4acc-84d7-eaf021b4e400",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7a899a-7bfe-4452-a495-ef31b2b70c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d9a9d5-7c61-4a21-b666-4fb91cd96706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0530a028-309a-4f9d-a059-971789eb8122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2504fff6-bf8b-4283-92b2-06610d8ab43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b08723-cabf-4acd-bf71-ee6b3c84679c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06755bd8-172a-478c-9fb9-f934ae75c059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7caf9748-1b9b-4573-85cc-5c2c4789c429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62239234-ead4-40e6-b46b-eff6ea7626cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "00712344-9587-45c3-aac8-503a3a4a98a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0643792e-f301-43da-973f-6e45fff44456",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf7f749-995a-45ed-b637-29b26fe2c254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8056c6-5e3a-4161-9944-5646bfcc9211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c0b301-02de-485f-b9d1-b255f847d398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c94ec33d-6958-43f4-8eeb-fd1a77a4f306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92a5871-87dd-4f2a-89ae-6f3e2fd1d13f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "506a07f2-366f-4b34-9191-420a8bfda72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc1baf0-c940-4c74-bb5f-c5b46ecb0801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d4fda8-9049-4fff-b6be-139637ae069f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "224a18f2-f64e-4a7c-953b-d0a413e40e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5774ae-59be-473b-874e-7aac5cc7909b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ad4b3d-ffa3-4a31-ae27-57ceae741148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082b16a3-1ee8-43ee-9796-6225031d1826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88843c2d-4648-4325-b201-3d78b8ea88f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37dcd7aa-0eb2-452e-9941-9ec73e23a6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf4ee62-7f0c-4f43-ad6c-2346e3deac7f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc11350-dca9-4a04-a22b-85a86e54f073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d0174b-5121-4b01-9468-45bc547e2bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce010ec-38a3-4b88-b545-ca9689ecd257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40307a33-7d76-4f0f-b6c0-7cc03585bbe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77722589-37f0-40cd-880e-ec9222a981c9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5441ae76-5549-4b19-ad5c-377690606cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba856dab-3b03-4dd7-b4b1-05fca7b2c362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c9123e-888e-4b8a-9cef-82b800ebb669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2185c4e3-0a82-4ea3-be84-8ec6738fed5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f1a22d-3735-4584-92c3-a45da8418a65",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b2b994-ac0e-48c7-be80-40c64ffe27ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ca23b9d-ae42-4a78-b519-558ae675c3cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b74e4e-1fe7-4293-84b2-030a532d8af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "19e22e8b-3c7f-49ac-a4a7-de16e72dcfdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03e7613-bb24-401b-8b12-890956b3cb1e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce77658d-b153-45ba-8858-65cc1b1144f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12f0e3a-4a53-4374-9864-d306743dba79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287e01a1-7fa9-42db-b4f0-ddd588d3a131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "04c8df9b-86ad-4ff4-9144-afac9bda5c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4bf2aa-e4a6-4dfe-b8ca-f25ceedbf3de",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "760f43c2-6d77-4e53-be74-8ffa2ae59dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d56fcfd-5bba-4e55-b950-02528345f348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b41726-3143-4e5d-a04a-a770a523af49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5681b5cc-b63e-4bd8-9181-40bec6d6973f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a87d3a2-a955-4fa6-ae06-1841c76e171b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf324ef-0085-4898-af6c-202de4d06567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a144789-2924-4e9b-be5c-dd912882d7f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac0df6d-6598-4bdc-9851-5e523dc3352f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0782cba-f7c1-40b4-b245-6b0df0ea5bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d43335-9a65-411d-8e37-32949a5185f0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d299f933-bd9a-43a0-9533-894d56d2389b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c1af84-e8e5-41de-aa52-5f1141496904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee945c8-5708-4107-b093-3c75b444a01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "275b7fae-c01d-4f75-ade8-ed868b875f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7a64f8-3425-4417-8ec5-96df7123b56c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dbd74d5-75fd-4ba8-b95c-73326728048c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e1a5ec-f417-4fe8-afff-8e7571407a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a070655a-598c-481f-9274-6639e52c8ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "33b6ad40-5af7-43ff-a907-4788bef0e3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca41fba6-9a27-49b1-b8ef-22b92a2e57d1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e57ab1-82fb-4b75-99f9-c3dee5bbf762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b564ec6-5c7b-4b0a-b41b-7e3183872c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7d541d-6e70-42dc-b0df-808f3c205c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "45dbf9fe-ad6d-4283-b7ed-c1538a8cd313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8698d3-3815-4020-8683-f82788d5490d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce6e976-63ed-4249-9422-d56304fab2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7e1a6c-5b1a-4438-b576-3651b04748c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04dca66a-84e7-4daf-a05a-8b522550e1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe831df3-f390-4a52-a8d6-01a5fba9ffe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497d376e-26f5-4170-8562-b2f8a0f9d64b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc712585-dd89-4d32-82cf-f222a2819e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634d8bfb-0e20-4ae6-b103-731d6b1063eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d8c56a-9ed4-4247-aabb-e7edc6b4463e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "45c650f1-d531-43bc-b0a2-ddde47206b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c304af-5e02-4cca-9d18-b11ae40b8908",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecef838-19fc-4bfd-add4-44bcf3e0182e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a2bdbd-d5ca-4c8a-8e47-c34b1a3739b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d213fa-7396-49bc-9fab-b70a61a80ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ab871f1-89f9-4fb3-b39f-fffe9dfd4a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec28c1b-02dc-4834-9d91-28778407857e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055674b1-36b3-4a34-af75-f6931c0c90a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d795b36-d5c3-4fd9-812a-711db803c026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ef8010-523f-4d89-8fd0-d7fc232b4efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21904268-ad84-4420-8851-16c8d2e13cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c783fe-e896-4ed3-8566-4de8a97a9bca",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547e9edf-a6ba-41af-99b1-91103b92641d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d862f79e-0d43-4818-a2a7-6fe7ef0d84f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e8ca7c-3fc8-4b43-b182-40ae12ba8696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae4c43ea-8d04-496d-a9ae-7d2e3e662b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7434fb0f-70c9-4dbe-bc83-26f146cca65c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f5b5f8-392a-4a59-addd-ee6316b4803c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ad48f2-90ca-4052-ad68-8d9863fbe84a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f11409-6b0c-4994-9ff7-711f2764c198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2137dc6-1bc7-47c1-8e61-3984424ab484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ad2990-ccdd-476e-b298-5acf7705793a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c723ad95-c419-4d60-8179-0549fad04525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b0e988-99a1-475e-b475-3462e0bb4124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e4c3f1-60a7-468a-8ccb-068511bb4487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75fcabd8-b980-460d-b020-1b63be0198e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8657f16-14a2-4fc1-a766-603eb1aa1aac",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b5d5d3-5767-4945-af6b-9ff9ef1f9097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d124d8f9-8246-4044-b51b-bd9814cc611b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113634a8-4810-4fd7-8cf8-afa96d9e5bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e213f7b-0871-4a2a-b556-2efcbcc756aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3496585f-cfa6-4c3e-a054-daf71c258c71",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5c862b-5c6a-43d7-b5ef-f043a0454c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f7fe89-e932-464e-8a19-ec34961a49d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322c4ca9-7205-4a91-8284-496261a06c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "946abf11-a4a8-4206-a7d4-bacc04c24ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b6c915-5051-4522-b7f9-6da4d4fe90b2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f9ca4b-ddf5-442b-9371-4bf0d1d1146a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7e8a11-7a1b-42f1-9463-850f7dd0de55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec33fc04-f156-4e7f-96e4-d5c8ce5076bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb519e6-044b-4253-b94e-71915759256b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32f3baa-760b-4082-b2cb-0fa1c82f199d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e32b54a-b467-4142-9f99-9da5b41a82c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2e615e-0b23-421c-9ea3-403e91505e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c48a215-5ce4-4e48-bd06-72dc636841ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad54abf-c469-47fb-8476-41dd04d76bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e840ef8d-1876-49ec-b0e8-0aa3063c3648",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e97a99d-6ccb-4e84-a46e-936230b083e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10668e8e-b5b4-48c5-b8ad-a075aede6cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db8ca4a-aa64-418f-ba0d-a46773a947ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c14e68e-39ab-4c09-a19e-1401d4ce24b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6690ee18-03a7-4c54-9100-49220485b955",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41caf8a-0779-4c9a-a136-6500088f8df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0b14db-80be-4b9c-91d0-1e558918f10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6adf84dc-edd1-41c1-8f06-32a7b7b0cc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "144d6524-5252-4b2f-a880-4fd59392b6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23211b7c-c007-4d3f-a7c8-b72a43092d95",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f3b7ca-b31c-44f6-9046-77bbe74c9d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da419103-df5f-459e-be94-8259a29e9c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b9eac9-b4f9-49fa-b7d0-8cee5b649ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "74d66e23-3f17-412c-835f-f332fe0d8848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c7dd2a-2061-40ec-842e-0357a7a05337",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe026f6b-5029-470d-9ecd-0492cf1c5349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c5fb00-0720-402e-aa66-e83e11fcb9b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de40ed1b-b329-47c8-9bd2-0a8f69f4f143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a84a7211-c7f9-4c2b-be0d-43a15b789d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfddc3ad-d209-44d9-89a7-2b74ade79817",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34df4b04-c027-49ce-877c-f9e0fbbf1b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "569c2838-f320-4971-ab27-868ac0576497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f527fcb-7c81-4037-869c-6d86f1b615ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4acb3a0-3454-4a08-a1bf-69e6d50168d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def5fd40-0a96-4acc-8acb-29ae37d149be",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e8f108-b494-4529-9ea8-6d26b2d9f4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2ce64b-7f77-4084-a2d6-de7bca29a906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca03720-3178-42e5-98cb-5ec7a129ed13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "69935448-7ca2-4881-866c-ceeb433d2642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f87c1f-4550-40b8-aaa3-9c9753205c4e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703687d0-2a2b-4eab-be5b-45e80cdfa956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af174a76-57df-4504-babb-11a66cb61da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6911b6d4-3d50-4405-a066-50ae55bfd27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "28debdeb-9513-4b2c-b34d-d4b9a7db003a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27adaef-8466-4d2f-b2d4-64963220510d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb327cf5-ce34-4621-8aa1-48e4a657ae19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3d0a73-1b7d-4649-b9a3-beed57a076d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf764d97-f327-4220-87ef-6f84694ee7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2cb0ab0-bb02-4d97-b106-c55179902320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15c7123-3be6-4093-8c85-638fe22d58c3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3ebf20-ec53-46df-94ca-4fba52186f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890fb899-6917-4a82-9d22-1131b3cafea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d2260e-4972-4a06-bf77-d082ef664c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1681976f-b124-43c0-ba42-8719f6b68177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f959afb1-b131-4a5d-a4f4-0696ad14af19",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b3701d-8768-4af5-984a-83d6421ec74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40707abd-d2e6-4ee0-ab2e-f04a44c39572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5915c07b-365e-4cf8-a59d-cdc3cd92129a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f1473fc-2266-40e0-a64f-c2b2f50f23e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2828230-15b5-4f04-aae3-5a00d73059bf",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce819be-ce87-4b17-9096-98297873e8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02323fbd-b328-4f2e-8098-68c7f3ac2cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9c1410-ddd8-4094-a999-48c533dec02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07cdda8f-9d07-4db3-8e51-c95244182da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9458986d-29b8-49b0-8daa-bc90b0b552e4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f029cd07-f202-46cd-b60b-5f97c157252c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "886e3f26-ef04-4270-b0da-22de32a16ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb98b32-1132-446f-a55d-42753d4d0a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a028ed5-1585-4d2d-8f8f-aa8ca19ebe0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1a9ea3-8a24-4445-9170-ac7f83f3bd97",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea81c299-26cf-43a9-b3b4-c1bcd8e2583f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c213c9-732d-40d8-b52d-9cb3330879c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6ffa27-f5e6-4f19-b627-bd6e60a4dc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "433e219d-803a-49db-9b04-a4e6c3cd6fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffb8fc8-4218-46ae-891d-359d6cafd6cd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bfb6a2-7752-4d3f-a6aa-e00d44b04770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a59de8-0542-4d18-b183-c142ccdac7d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2aa836b-0401-4b77-b718-2d46582feef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90746c96-b6b6-478e-8918-6b37af1b70b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912e0e49-d412-46d2-bc51-2258e38ac057",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602b2cab-8180-47de-acf5-8d4ac51f9939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8e7f6b-151b-4150-befb-36266924decc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cc6101-875b-4110-9465-367ab5651648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "97684c5a-7f1d-469c-839f-7ec36536be36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fa5f58-c504-4584-8723-487f60ce1b67",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63740dd9-61f2-4c1d-8a95-9f4a2d562559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21f588b-7929-4f1f-8d53-15f6f5b39dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793aea2b-b13d-4fc5-9de3-fc19768ba0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b42db912-8c6b-45db-804c-5d52588e1eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28711049-7c71-4d12-a27f-3b1e7856a943",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee6effa-b0f9-4108-84bb-5192227ba173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53efdd51-6fd7-4eb7-9b96-ce5eec2dd739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7459821b-ddad-45b2-88d6-4b22f75ff1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c693ea19-33ff-45e7-9109-96223b528a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9211e8-f8fe-4de7-84fd-60ebaf2982c7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103869c1-7636-4743-b044-2c11ffe705b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda4cbb2-899b-40cd-8d71-d5fc15aaaae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42aa753-d1cd-4550-a88f-cb354ff1ce9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b58fcf5a-6bee-4fde-8497-6d174c35ce5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69186b0-8471-4550-9d47-abb26eabca52",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4cabc5-191e-4326-bc8b-19a6b4bf9a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c49b305-2185-43a0-b711-3e5f3ea45ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1291f7-b93b-443e-b448-f65df0535504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "060518cc-caa8-40eb-b028-bef21f63b0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bacf8c4-910e-4aea-9c2d-a9aeefdca61c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6efe9c-dfb7-4d2e-bcfb-5125caf75b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "520eb5ea-102e-4452-b2f1-ddb39d4bb99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566c25ed-50c1-4ec7-a9b5-25a6d186f449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f0f02c1-754f-41fa-88a5-93d270070a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a623c4-620f-4172-aa48-62525f6cd9bb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de05a79-695f-4328-aad2-a8d9ee9ba104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65adf508-2fd3-476c-ac53-d848961be4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e20cb73-9491-4b44-a880-3c2cba1da551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92cf9181-08bc-4d35-b90b-1d3f4f10a517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3063b90-798a-456c-ba26-3f38689ceff6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4d0ba5-b72c-4d93-b566-f4ab9c955761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43fa6c53-31b3-42b1-bbd1-a53bea3507a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257bca04-c914-4300-8c5f-4d358d6612ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b80a41a-d5c8-4789-a5b8-629e8e791a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf86096e-5181-4d57-9214-56a4bd473d97",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b302e55f-0de3-4360-8610-01f477bf7b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce3abd65-d299-4604-a028-c3fe608118af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cda72e-8117-4165-880c-83ae5eb5dbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df5f6f98-d739-45a8-b82e-1b0dfdc71b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef487b0-d509-482f-b003-86a1f27fa12e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d58919-a1bd-4203-ad48-da6a20e5cf66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f41b29-82ab-4ead-bf73-d00b60022fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15cf1a2-5432-4055-ac9f-1392a8e9acbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f851ab3-0d4b-4d26-8630-8cea9232cb38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b891a3-f804-44e5-a96c-8fca32266d84",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d193578-0b67-4186-885e-3257ae036008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb0cc5a-6e8d-4d90-bd06-0dd806c0b870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a94fa3-4600-4ef5-a42e-0de68915edb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93241717-8431-41ab-b5f0-5bde2884018e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d387b85d-f41f-496a-943e-d29f1c55fb69",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7690d20b-ec35-4a11-a71b-fe14db07e5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4ff2d8-ac3f-4d71-9456-e8d442eb9894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d419ea-4a4b-4926-8227-c20a9ccd0f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fff711c-8d7a-442c-b1b2-c00f6873e212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc4eeda-0c36-4a88-a14e-a6838afdd0a8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6964b2-24fc-42d9-a009-0052421a9931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6296b2c-7621-4895-91c2-9ccb30bc7605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995338d2-c092-4316-a2c7-4edd683f42f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b77abd-fe07-4add-8008-0a202c0ea4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01554a3-92eb-4e1a-a699-9af6211b0a48",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e31fac-01c0-4d30-8843-a8430a37372f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549c4533-3962-416f-9d46-fe27a68cb0b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e9fcbd-fec7-4f53-ac25-5c26e57b2080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dab67e1-3b99-44e0-9131-8ca61be4965a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978f5b5d-a318-4caf-b8a1-8be62f0484b9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ac680c-0868-49b1-90e7-025a682def89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0832f01e-554d-425a-a0b2-de58e8059f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7722af10-2e1a-4af8-86b9-41b46d852f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa3352e-39c5-49f3-ac63-44dd252b74d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c351adcd-d8fa-4c41-bf32-8a848f67ece8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a975555d-41c8-4428-aef2-2998b02c2e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4cb9441-f317-49dd-9c20-9646840f51e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1df9a7-812d-4a9e-9dea-2990b3f8f23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a87857-381e-48d6-bb4b-4924f824ad99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6b9629-fdf3-4d33-9fb6-aca9183751b3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500d9d73-8bc9-4615-b12a-d20b20b921c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b908b0-32eb-4b44-879f-b359a2e4b5d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b4b225-90ba-48a3-a9d5-90a9ef77a3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5200e8-c327-4973-bbe2-7da7db6cbd21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ea7898-6f13-4348-934b-0387d73d0ed0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0287b33e-a462-47b7-8279-8f2b4fb25dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32918dde-a22a-4d41-a899-6f7584eaac26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bca05ae-d48d-4ef7-b061-a7d25b590862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96c866af-82c0-43f3-ac8c-2016b4a12aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c63b1c1-0ce2-4019-966c-e2dd16292edd",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4b82aa-df01-4d35-961a-d191f829e7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37dac215-fae7-4e39-87e6-c6f1df5a67ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d5fab3-7a9d-493c-9b65-70358e958772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73d52f04-f08e-4e23-8e26-5759da2b530d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b409f5-46ea-48ee-bfd8-d97d911f4977",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183eaacc-6911-46cb-b3e1-8672ff27e6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40aa9bb4-bbf9-4ffc-9b9c-0e51c3395b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf265d31-2f0b-448d-9741-7c1f305ca4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd76a262-13c6-4053-ad25-151202b7b65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31770044-8c41-4dca-b792-62477b3c0c38",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d26e127-64bc-4ff0-8cd8-d35f1f76e27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b199ad39-4b07-40c3-b26c-ca715fff9652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b504837d-6bda-49d5-b89c-1c73e653d1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "913b9bcb-92a2-49cb-9d14-ae98c569884a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64142494-a9a8-44de-a96c-1440c0f851a9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb906717-0703-45f9-ad9f-05bfbb5c28aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ba568c-8710-42e2-9cff-bef629736117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49da5dc-a8c1-4dcf-be50-b4b15b8e335b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c3fae18-c87b-4250-8abc-533a2205c6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f996c7-def7-4e5f-a15b-42368c9e837c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582cc4c3-19a8-4332-84c7-4cdcc2c19135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "462a41bb-a75b-47cf-901c-3b8b28674ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e48b07-251b-4370-8732-8f0630e2647c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "80f87a5f-f506-423d-91d0-03d53c7282bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33eaecd3-ab64-4083-8d9b-ead84b6935c1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687c7d59-8d5b-4c86-a97a-54c0a6bd97e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70fccddc-49fd-48f0-89c3-d37ee38cec1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1a6af7-7b03-40b9-82e4-2aa10dfa06b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aec43a52-bb6d-41e0-9c44-1738b0048530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1caa51d-0413-4742-aa51-8a6af8323625",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2006ca70-47c6-4d7e-96d5-3927ac0e3ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "387b8f5e-03cc-4f19-9960-a9f62428a989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98b4bc4-db8a-48d1-b392-ae25065b3005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "29afa10e-749e-41a7-8662-21666f70b702"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fcb7a6a9-b172-412b-a837-dd734d9a908f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "236bfc5d-d8c6-471e-b36f-c787f8134441",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1bf8ba6-d44f-4ccc-8071-b48468631233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3609ee3d-ca0a-439a-9652-cb2c70fa79d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c855a5fd-52f5-48dc-89f3-d5f6ba42119b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "502973cc-c3aa-4645-abc8-5c172882a8d1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ad61cf6-e049-4406-9ba3-72758b5d418e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48f0e359-a484-4684-867f-5beb86533548"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed7854b4-e251-4fae-b4a4-0a38ac183576",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9035e14a-e5a4-48d1-8012-050385c95ab4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6ada1801-b8ed-40c8-ba95-752fd1b9a037",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4affce80-2845-4d47-90a8-bcde7477b062"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b58917b6-eae2-417f-917b-c4536736f024",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9a35f8e0-3956-471d-aa29-b3fd6b796f9c"
                }
              }
            ]
          },
          {
            "id": "23be03ca-ba0f-4de4-a799-a143b159bc3e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2b4ce39b-3320-4044-8864-1df37a063af8",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "925afd89-4cef-491f-a73a-1713f1065d01",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d79e567-d8c5-4ebe-a24a-98b2a9a12c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9bc0964e-a38a-4451-82b7-c70d13ff8ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a63b27-d4eb-49ce-b265-c45badb33878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4705906-7084-4857-8956-de53333e385c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4b71f227-d08a-4b14-a8ac-09141b696aa0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e71ba6c0-cf8f-428d-a343-5b376abd7296",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "269586e7-37da-41ca-8923-01a0d9167381"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce1fa319-c7c9-4369-825c-b4a519bc8a64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b80c5860-3d6f-4c24-b3d1-99bbbcdded74"
                    }
                  }
                ]
              },
              {
                "id": "fbc7ca0d-aa9a-44e7-a011-fb3eae7777cb",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fdde15b-da5e-48eb-83aa-0f0c80d43c7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2578de5b-45a6-4a66-8bb7-74d03f86cd16"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4244e56d-a077-4c02-b89c-cbebcec42830",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d0076d34-8a5e-4feb-b549-dec976f05e41"
                    }
                  }
                ]
              },
              {
                "id": "05276c0a-3e56-42a3-80ce-fa1d9829e5b7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08c78d6b-f216-433f-bb3a-9167d6f87988",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d34f9cc3-4833-4479-9fff-13a0a4a543d2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49fbdeda-b113-46ad-83e7-11cae13aeb19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "400c8636-4a34-45a8-a2a6-0701d6fec5d2"
                    }
                  }
                ]
              },
              {
                "id": "8973a511-4a34-4664-a51c-c57c3db72516",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37365a97-cad7-4f3c-86f6-7b2407117112",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "856deada-49c3-49f7-8a01-6bf44b66bdd9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c11ba46-bec6-43d1-bd77-e0070d6c3493",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6e98b039-6cf1-489c-b223-1e268b910739"
                    }
                  }
                ]
              },
              {
                "id": "f7a662e1-5dc6-4e70-a6e1-211fa0027aee",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1490b69f-0d54-4076-be5e-06e4c0468954",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e161ab8c-7e5b-41d3-9adf-dea38ce910ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7948ceb2-281c-436c-9729-43e48bbc2b33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bd196d5e-7ada-4bd0-b6ef-8eea428ce6b7"
                    }
                  }
                ]
              },
              {
                "id": "be8d840d-7518-4d4a-8515-f9ec8b89372e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6396c6e6-7f64-4e54-b55f-260d9b712ed1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "929c92b4-2e3b-4415-87eb-dd4719f1e538"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58a1351d-2534-4f98-87f7-6bc1f7f31527",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b58361ce-5b0e-465d-9c80-72d405355504"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a4deb073-0b70-47a5-9bd4-cf87898e7328",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "396bc3f5-479a-4426-a2f0-11145082b638"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d445d1c9-9700-4b3a-a67c-6f95117ffef8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4bb6b387-920a-49de-a3f0-a2a58d36fdfb"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "37df1692-1f1d-4763-98cf-81badd5084ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "30874c2b-7948-4b02-b1ed-3b00c1f33c81"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5aacc039-68c4-45ed-9b47-9f88ad7200fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5b743ef-ced8-40a0-b526-0b2a4b81e591"
            }
          }
        ]
      },
      {
        "id": "1cb6ba63-e299-4c93-b00b-a8f24cf95c29",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "013d8a9f-392a-4ce6-adb3-6dac4eb573f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "030a5d86-86d6-4152-9f05-359ceb1abad4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "30e8f620-32e1-43d3-975d-cd572289a4d2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03f6b2e-018d-4a8c-974e-643ae6297dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e24516-b05b-4415-ae7a-a35d7836a888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb8087a-c24f-42ef-9566-6f78fd2c25ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "899eda45-ce8f-4a7d-a4ef-d8fa4d81da5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a016bf-1175-45b3-b6f1-af1e1509d719",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcd5b39-61cc-4f74-b5c8-e3d2fb62a6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1bb7f9a-7926-4bce-8a13-44d36c1e3b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cb66a3-9295-4f15-a137-13b278dd3b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "31bf699e-29a9-49eb-90b4-2599e445c607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6386b69c-d317-4520-a280-ec69fa4ac67b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b606f46-3354-4728-8eab-b114a363436a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb55d75-b76e-4267-9ff5-1dcde22fc95e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42904353-fe05-4264-90b8-a3e959966ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8419946-c703-44b8-bf7b-6323803548d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d6f481-0d78-41ff-a2ba-d318eaac4027",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b3b917-169b-4ac0-b592-d952cdaf8509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9ab340-d9c6-4845-91c5-fd410e1c3ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ae81ac-070e-4109-a71c-55adfa60d7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37d0d849-45a1-45e8-9eed-4706d19a97a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682f58f7-5951-4087-b40b-528147602c01",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d66f62a-8057-47d8-95f9-13199deb0219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46731afc-64e7-4e08-83a8-8f8c8d2214a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6678d332-c6a4-467d-b6f3-245d70a0eb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2e7230-0dde-4ccc-9c8d-58394ad82f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca652b9-9bca-437d-89b9-397f59bb00a4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8215d4-3c35-4b0c-8053-11ed89b0d036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd59784-f005-4ed2-bab4-9e49c838cc0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afce790-d400-4a37-963f-47a570a4ef4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60d591ae-9215-48a0-a4e2-68bf80f521e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5713a994-4c43-41a8-8995-3d9654761444",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6083d6-6776-4e91-8a4d-fb499e440d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3669174-add2-493a-a755-b8f0fbb360e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a81d11f-112f-43ca-85fc-d70459c75c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b078c2-ea05-4c3a-b5d1-31d38ac67649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde8bf49-4fec-4bd2-a2ef-c42988688e21",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79634177-30f0-470f-978c-c3a2620ecb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5afa8276-8262-4869-88b0-003eacf19fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8556e1bf-e4ef-47bd-9275-4d5223d28ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2923e772-fef2-4183-8d4b-e575f152c62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94960848-059e-4a2e-8972-d70e2758e472",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1c8621-9d12-4bf5-9fca-5a82c3adf3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b511b878-2e4d-43b1-a457-431912478aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d83c57b-0b57-46dd-9359-1fdd732746fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c77790a-d5a2-4054-b881-b23f09580027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a9031f-7123-4281-86cc-adb53becb239",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f534f5fc-1611-4254-bad9-8affcf2c19a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce1b006-9a4d-49d1-955d-2153ecaef7e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4f954e-d7ee-4972-abc1-80f378512fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44897627-cea3-47a5-ba68-4d478ee3fbb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a478f7-9009-459f-b018-138a6654f520",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcf65e6-3dde-47ed-90e0-a3727d82e79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2532e8f3-84ce-479f-a8bb-016290e7c371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d105f684-718a-48ba-8605-70324d5aadc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "eda69ed2-578b-43b6-978a-568227a1548b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4cec5b-c910-4fe4-9635-d10747edc37e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f97f0dc-f099-4809-863d-619d44be78cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b6cfb8-89fa-49df-b682-f8761ceda51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d248d7-272b-4b26-9864-efe72408cba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "29455b60-252e-4650-b7a1-65c7f04f8abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a7fa03-6f3b-4c7c-943d-77244ad01588",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c0eb9c-accc-4a61-b481-62790c24f2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce0bf73d-e483-4462-959f-c689cc70e430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133d2b64-a1df-424e-b5f3-f5ee50777f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ef84d4-3604-4a58-bf66-51155c30e7c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76e8367-0946-4483-834b-5d749ca81d82",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b5fae5-0082-43d1-b03d-84a3c2c384f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0565c7-9185-403a-82cf-1388f307406c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0ff7ad-9ed6-4a75-8692-cd351f564666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef9df3e0-0d91-424b-9bac-9d17651f244f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab4f7fd-0d21-4eef-ae66-0a29a511a0e2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b756c0-ba7a-4ed2-aecc-a62050cb4e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b17f48-8953-4630-92f0-d5098efa3ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111383d9-da5c-46fc-8057-46ed66ba48ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "23b16263-56ec-43e0-b0e0-8d3586e942d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a98347-0bf6-42c3-a122-4dc380aaeb5a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8f9b5d-5413-4868-a324-e4b0068da8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72394ec4-ee37-415c-a386-96177cf44b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d47f5e-1345-42b9-98e3-4c459f17f504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed90181a-50b9-4a63-9087-e1802efd5ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6faedb-1428-427c-876e-8b9776d07e90",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52e42c6-460e-4520-ab28-b61cea6142b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f730723-b0cd-4ad6-b948-df3a4d25b584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2106ac3-eea8-4325-9a96-2136d299f6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d25b74-5b6b-44c2-ad58-93b25b800cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43243dac-f951-4e17-9443-7683cd0cf49a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ec49d2-0ed4-40c8-9c0b-53850153f8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b95d91d-518f-4dbb-8adc-e46bcbc14889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f0c4d4-61dc-44ca-813f-2e1fd4716a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0df19265-2eaa-405f-b2a7-a29bc778961f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a35159c-1e9b-4983-a6a5-63b197d4106c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71b1c6f-d5da-4d22-b237-9f469da4e7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58be8377-f40c-4b74-a291-bffbf9eafcd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a515ad3c-f232-4d27-895a-1666a43af1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f2944c8-64af-433b-913f-e34a3f5aa9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc51ae61-e3cd-448f-9674-57a9077f45c1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "812a012e-63bc-4de2-aa7c-b741b054acfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01905bdd-e3d2-4b12-b92d-d7cb0d3d07b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69057419-2667-4c54-a5bf-ffd2ebcd313a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4036e092-7994-4599-89ba-0b3db1e566d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b97836-143f-4e63-9945-c246cec68c70",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41961009-96e1-4c84-a73d-fb34694946e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984eece9-5c5b-4a9f-bd3f-01ecea54de48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d44d51-cf63-4233-8ec6-312b91125330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e5e1dd-8260-46d0-a7b3-e433945afb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438066b5-fa29-4b47-a321-c17475336275",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38de7f55-bd02-4cec-bf40-4f33320c752b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3caec4f-06ed-4f1f-8656-2ac2912daa39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83eb8c8d-fed1-4670-94d8-58aeb970aa2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e3a352-5437-4fd9-acee-e2dc2d5ca98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2a98c4-ceec-4482-81eb-dda0b931b71e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbcf133-c2f2-4f3a-9580-68f67481850e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f1ea06f-1503-41a9-93d1-fb5253e93e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05489813-2218-4e91-a915-598f50256fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec4888c4-8c08-4dde-81f3-206fc3d8f1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289b6f88-5943-4bb7-bd5c-7a017bbe1ff0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1040734-d2b1-4822-9f4e-bafc9c3c05ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9933fa49-c804-412a-81f1-d1832d60941e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe260423-da2e-47ae-ad83-dffce8f3d27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14d44b49-de8b-4f56-b3eb-3848fa6b0380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab5275b-51e8-4cac-bf4f-3ab61d7ff552",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f3f8f8-0a0a-42f0-9656-e70ced5fbd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8962062-4788-4d03-8086-374e5b24a5d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291a8fcd-d026-4afd-a462-5f7cbfe8f8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5368912b-d732-4985-bf5d-8fa4f6892707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d811ed92-7034-4feb-820b-8c8c08cbabe3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f73c985-f26a-4172-aaaa-825a7e42362f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba2099b-e5cb-4aae-bb85-48184b625dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8d5227-8ecf-4abd-824e-4ed6c7f9c331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30cde47d-d366-491b-b05b-ff24317ff918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6668e0-c692-4b41-b4c0-3fb0ef11f622",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b580c17-7e1b-41d2-a810-1a791de931e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458a67f7-e709-49c3-86e5-9ec306e137b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf901603-01df-4d0d-bee3-6a56c2310061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96ed2674-ba26-43dd-9e4a-2ea6566efb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc5c975-b750-4ed9-8f9f-e5f6c535b303",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfe205a-a846-45de-8d26-eae9ed07c91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ffbade9-8bbb-4852-bfe6-2b32c4a4f443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16689e8e-38ea-414d-80a2-86a9f5f914d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a720b69-a5b1-4ab6-ac0a-393093785eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1a8b63-2142-4ab7-bcfc-d58d4801e4bb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ecbb12-b8ea-4148-a022-2cbd73203cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61bd5f93-c010-4a1a-aa20-78e57f1a81be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b280e7-b010-4a5f-8bbd-6219160d86fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbcabb70-d76c-4034-83cd-7855507724af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526deb80-7f92-466f-a789-203223061bac",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee021ffe-b06e-41e2-94e3-c2da78ae8aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18090120-8534-4a93-bab4-cb07bc4eef01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c233e0-78fb-46cf-8ba4-a5a1122279f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f336d11-9f2a-4134-beb5-e0d103bae8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ff4f45-d244-4746-b1a5-501be8064a0b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09967f58-43b6-461f-9236-22f24e22a142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91fb566b-a896-4a6b-b13b-a4f39acb2dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facac1bc-604d-42af-885e-cee7cfa174ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38feb6e6-73e7-4066-a642-335e05b6afac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58c3412-10d5-463f-904a-2a1e8be14965",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aff6b3d-13ed-4508-81bf-dbaa57573592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d983c3-5597-4a76-ba07-19ff4b8bf9b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e51edc-4668-49f8-a25a-f2fedfde817b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "825706f9-7801-496e-8127-45d4bb5d9af2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5194a1fd-2ea2-4413-907e-6d03ca73ab89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48b6f03d-6c8f-4f6e-8595-3c9abfb6596f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924d4961-06ce-447a-9635-0452e80a83f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "480d2db8-fba6-4cff-a612-2e375df50b41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e84004c-a152-4d05-b250-e74b0122c523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "068698f9-89e3-483e-8f53-5847f05dedc7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96f1137c-5e17-4c4a-a0de-49579f6bad65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b9a7351-eb57-49f1-a907-dcf184dd602e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6484804-2bd0-43bb-a5e0-a197fae42a39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1fffb58-7602-4757-8e10-5f94dab8d208"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61eafaab-fc5d-4e64-8a11-835bd3811be4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "45adb307-f9a6-4528-9a3c-b736ae6a466a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "281abdb8-79b1-49e7-9844-80078edb650a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0c2f3a7-4404-4b46-9a2d-ee423a552b52"
            }
          }
        ]
      },
      {
        "id": "cfb11c49-e42f-4c82-8215-40c3fcdc982a",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "cf3015bf-ef97-4a9b-ba85-be5b0d4aad1a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f8ef8115-a41d-4111-b0e5-4c1863303223",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "97dfb41f-922a-444b-9b3d-4b0ac7d4ce8e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c1ee97-43dd-4922-b554-62f7b0c4c938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed07eb3-f9b6-4f17-861e-fb809c52d6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8727d7b7-5e3d-4144-9b9a-d0a93c39a1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "354fba27-e5cd-40fe-af76-5090a32ca0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1244b6-8160-47c6-9199-96c3f23d8bd8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fb5324-78fe-41e8-a766-9628b707f2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea1259f-ecab-46da-8ae9-57aeeffc6c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e9776f-a7e1-4d4e-9900-49b5ea2764df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "65a9002f-1f82-4aa3-bcf6-7a29783df6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a92943f-9d92-4c99-a3f1-329174a27ecf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74e58eb-3b84-4252-9a34-8aba35261b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1180cf8-65c6-43d6-a922-cdbc3a7f3a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4d784c-55ba-49c1-a836-6973610d4743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec81f9b6-98b9-46ae-8eac-1ca36b03aabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc0e874-aa4a-4f1c-ac5c-84e8a6955e03",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5f0e67-ba7d-4d24-8b47-211ca07282fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f48b702-0ae9-4b58-bf6d-15819691c1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb4e0ca-c2f5-4edc-8db2-9d41509c409a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be5db3e9-f3f8-4d5b-b0d5-bb2a4562b2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42aeb1f2-2edc-4c08-9394-36693a8f0bd2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663c33b9-0d56-472d-9514-84f12767e6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffaaed5f-caa2-425c-833d-56ab01c91033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c785f7-c618-47db-99d2-acc61c0f7e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1927ea5a-2ec9-45de-b9f5-2db46ad1fefa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0dbf444-315c-47df-9003-e5713ab542a7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfa0413-d470-4c1b-9a95-3f66b2a3d449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54218dfe-d96e-478f-9277-e52c5b700674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e961118d-dd34-427f-abe5-81f5e328fcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6579d965-d1d5-46cb-966c-28112574a99c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91239041-46c4-4885-a5f3-a6ab03f8272c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db73629-d5e8-4755-8c9f-a38fb6d4c06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f266863-fc76-4d3b-be74-dadaf114fa36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086a9369-fa36-4453-b870-ecdbc0d48631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "385c33e8-9f0a-4a74-8f1a-5d95f2a957c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f76b24-0394-4a56-808a-903aaaa88383",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b2a429-2b8a-46a8-b55f-f9bed68d8118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b21eeb-6b39-4d70-985a-5d0570caa447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d31a61-8bd9-45a0-a21f-a516c71a0b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d91dfab-6d1a-426a-bdb4-aedbb7c2ab95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c87949d-07e5-41c1-86aa-f6a00ccd8452",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d705d0a-319c-400b-8db1-976be5b0e7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f00485-3f51-4743-ab94-110c49f44119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051b799d-20b8-47ab-b8c8-851e9b2d3774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99724953-8070-4525-ba34-a23e7331fcb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3e160d-d638-4df5-a310-cd4b16f91126",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65568aa5-7660-444b-a7ec-8c19f0289789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0f42a6-e024-49e7-bae6-db7b12436e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4956d0ee-a8e0-4721-ba9b-c2f4205c6693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e39a18a9-9b13-4f03-8ffc-5e606096d1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b660613e-27e3-4698-826c-ec98a942746e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b55fe7-6b57-4ccd-98a0-a7a45fd8d0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a910ea-bf17-4d59-bba3-79d7f7f3be9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a55832-8722-4a9f-ab9d-5e9d61992882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "73edde3c-3a40-4de6-9017-4ac6b2ed7eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fb1200-9464-4276-ac98-9faedf349de5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c63e2f2-6367-4ef2-a19d-8b6223d70a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355334d5-59a4-4ef9-a387-55c084ad5706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b32d6f5-3875-4679-a1bc-9bdcf781afd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb86d5cb-90f9-4f14-b055-9083760e2c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef03f56-b9a7-4bae-a735-88925683a112",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c51a47-ea85-4701-915c-92c5e906ea45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc34658-6681-45f9-937d-9bc326b134e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd37518-a192-418b-a6b6-8bd9a91763e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1492ef-b2f8-4154-828b-67ba72a7ddaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344692d0-1395-4579-ac0e-419ae631b41b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c00bf3-92f9-4aff-baa0-26446bcf5d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78f81b3-5f06-4cba-baa5-8a2c15cf894f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9b2eab-91e9-46bf-a665-85095977ed61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "063733eb-7324-4871-b983-82a5c1593b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72249712-69cf-4d03-b6dc-0b0d525cfd3a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f92b9b-debd-40fc-ad4e-9f5a7d20c48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df4f54a-9df7-4784-b7ef-2e74d8a15f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c771d07b-baac-4437-a4e6-af541bfa7609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e50b536-19d0-4a50-bb2d-900db957dcdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96bcbae-84eb-4725-89d1-0ef7afd27aa1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7212ea-5913-4a6c-b41e-ee3109798dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "187011ba-26ef-4323-aed8-83524e397482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fd45e2-9f35-46ea-a704-58dc8c12c1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "67eaac2a-e97d-4480-bab1-0b2a76d94792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d714fb4-0abb-4e01-9f14-227b9ad812cf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee084796-b550-4fac-9ae7-30114c0f678a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e4a476-e3b6-40e6-8280-aa27464e302f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8eeaf69-bacc-4bce-8d85-426c3c3143af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f461c394-4eb0-4437-950d-df30570c76b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fb4171-499b-4f25-8c49-ebaf095888ec",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd48577c-2aef-4d17-81fd-af71199f2913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c857170-2a04-43b3-91ee-d191b4d457b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80023df-983d-4cac-ac25-a829ee2dcecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3670fe8-7592-4666-9484-45e96cdf5b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc4d3a2-1c1f-4578-8fb4-6c8166ba07eb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cead88f-ffb8-44ab-9a5c-1fb49a64dd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff31862-4cce-4d2f-8c6d-66821bf2f0c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca34a2b-9786-4c9b-ad71-54b33b3e080a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49b3c192-293e-4eaf-802b-722f7435cbc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52554fee-0cdf-4f8b-a2b8-fa00e762354d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f262299-d618-4979-9b57-fb5907554a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e882d2-b10e-4d07-8e34-6c59ec7ad1d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3162ca2-6f7d-4e41-af45-9c91db389e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "358e3ca9-e8d4-4f9c-a3cc-59b1683d2f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15d8da8-339f-452b-8f36-168e599f000d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f933ab0-8e09-4e9f-ad3c-fea461c4c906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893afa90-e2fd-4e29-956c-c70ffc97b42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d154296f-8c30-45b6-9088-372f1840bebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50a74710-6c3f-47ee-abd5-d45451777a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c4a4b7-9ec3-432d-a454-14a88d79fe03",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6469ae6c-f0d0-423d-bae5-05e8bd884bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d8be04-13b5-4de2-a388-ee494448af8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03776236-f4ad-4127-ae86-429da31fd000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0700529-5788-4c97-956b-2c637b283832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df27c64-d6c1-4146-af1e-18e154563845",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b219a6-390f-447b-9779-f4e9d35b86d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a2d29f-0cc8-432f-be23-c3cc29eb0fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a279cd10-7044-4532-bfd7-28b5cd3bcfbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79a66053-a300-45f7-a43d-28bfebf533dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e94596b-6f0c-4bb6-9808-d71fba2dc342",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00a9d91-82a1-4127-a257-f61417d96ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190b4ab6-5c16-41bc-9445-7872e96df18e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91df211d-386a-40d5-8d06-a4727af957d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62484436-5066-42f0-b6f0-faa1ad9c4b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de37e068-c539-4ab4-a5cd-440c27629a90",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48569b65-dcb9-41cb-ae30-9e5be31b63b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "710f2854-b82c-4323-8091-87bde7d47be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6f26e1-6005-4891-9fb9-78c79a6a1898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e4ec536-8149-43fb-97a8-198c684324e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7da67c9-10c2-4a07-9d42-9e6cfcc9d27b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b9db46-30ce-4fca-8a37-4f27ffc704fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7ac81a-4788-4ed4-a5f8-3a64940d951a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548491ec-0334-413d-9dd9-d0ecc899ff9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3aa9412f-0add-4a8e-a4ba-1c9416d0240e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f87c747-5bf0-416f-945c-2d3a10c88099",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfd6662-6c9b-480a-9780-349377537fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "658827a2-314f-43a2-a46b-fa619de9ef46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d24a75d-2534-44ff-82ee-09f48696bd68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b29dfc8-4caa-4e1a-8dc4-c0de9f45f1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7866d4-5238-4d91-8566-04c1dbf28f6e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597ea9d7-85e6-4848-8b67-09a3428ac1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d35188-4768-4bc8-af54-277b3f1e97c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441b2c12-a4e0-4fca-8d3f-3fac56b4c7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d8e6a80-7b89-4774-9c37-dfcacde4a605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36039b48-5b1a-42b7-addc-790c55efcead",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6558c394-c318-48e7-9e12-420f55a08b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca22f62e-fe0e-4331-a02c-9227d223e689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c817d1c4-dea6-49a1-a2ea-7722d5f01e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "022c0ba5-7df0-481c-88c6-2375de3069ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a634760c-cad2-4f80-b305-16dabe082a0b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "292e96f4-b81f-4614-8af5-8c77c1dc9966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87051fa9-0d55-4dc8-be33-8166c3fe5a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27cfb1c-d704-42e6-88b2-67b4f4fbb794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0649dcd4-e68d-4b67-b128-e4b6cf2cf71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a71710b-b74a-4db3-b785-8128c6153288",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7822b626-fcff-4cff-961c-aee730daae1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7355d1d-e523-4170-ba73-6fe79299c16c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ccc1103-02ca-4c65-b37d-ea031515f9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c00d55-1418-4618-acbd-d0a4e70cad31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77df9aa-b830-49e4-b700-f280bba823b8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d2ed26-5ec1-4c2a-8f99-2d7b62fabab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd26653e-8d45-4ebb-8a13-1b71a292b17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bb304a-8396-4b33-af9e-6d3925362960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "192cda17-8523-488b-96c7-26ae72d4c051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3b1e55-8374-4d1f-9518-0a00a2a75965",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcc0130-147a-4c91-8b80-43deace23a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7053a3-ea39-4e71-942e-e4bf7c75f347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c869a9-7871-4c66-b377-4d420c945ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35f42b62-ad0c-4510-9ecf-76a056a05eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf94b4b7-7aed-4554-af09-6f2fa3913ac5",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef45912-0f82-4922-b5e4-c3a8c0bdde1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c7cc83-5bca-4ab0-b929-0fa8b3a4ff96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52960823-75e1-4c61-b277-4341e4e3b9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c94bff7f-f3cd-4923-bebd-2de9d7aebe6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7196ec-1bf3-4dd4-a6d8-6238594e8945",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d70ce39-804e-4a64-baa5-3b6bb4260cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d25cf5a3-624e-4778-834a-31ba872dcd49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5dc735d-e0cf-4007-b170-c84a5f2a66af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9a1bda-b657-4bb5-aca7-d3b06f64db56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13f05f1-5f63-426e-ae0e-ec237ed1fc41",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb0afd6-5f02-40c2-92cd-9c7478656154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d16cad-1e03-4453-9f95-466a66e7bc56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f21303-1626-4156-9f5d-05f78c7b187b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ddad2b3-8052-424e-8f5a-1a4eb9c1dce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f95569-cbf2-42af-af20-9c64ec04c8d3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811a758c-e4c9-4de4-b0ec-3a9b54b745b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d519906a-8c9d-4e3e-affa-2d799d64ee03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b296ab93-6704-438e-a88c-fb2227909ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20564e48-5b75-4156-aeb9-ce96649c82aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "be87c366-d3ba-4307-9a1d-afeafd75aef2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f02d6d6b-4602-40b6-9e22-2348580de462",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff225afc-f215-4d00-83e2-28e9a56cfe6c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9839c402-5e95-4b5e-9755-3639b6ec5972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca539d5c-6259-4fe6-91fa-869463b2ef38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ae0731c-b89e-4488-83d6-81f2d588324d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ee3327e-5b29-4c4c-bfd6-c12b8538ca0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "031fd8c5-ef23-4ed7-a2a6-8aa654756a4c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfa95bba-1651-4273-bcf2-80aede28c613",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c830bbee-d80d-439d-a529-ec1f23304013"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "771f9c15-c58a-4d81-8447-a3098d05f4bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5ef7af2a-21b8-41f7-a89a-6376fd64886a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0942163-cfed-4152-b243-30b32c18b749",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1d1872ed-b6c3-4973-834c-a9087225158f"
            }
          }
        ]
      },
      {
        "id": "22edff09-2a30-4227-a1b8-2453ba3b1067",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "02dbcf09-0101-47c9-b481-0f1b5bbb6a82",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b34ff91-d19a-45ff-8868-e9f76f9374a4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "62f4dd54-0c81-4655-8afa-62c950d3be1a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5c087d-a183-4ff0-86fd-2091970e4774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e97f45-2a02-44c4-ab07-0881ee153780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e6cf87-ae19-46ee-aee8-9901b461c656",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab90968-b66d-4858-8a16-1ca790b6c7ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1631d6e6-6779-4a82-85dc-b56e36e481ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc20d57-4c75-402d-91e5-20ebb552e5b1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d5c47d-8f1a-4187-bdbb-c402442d7d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "189bee78-b191-4bca-9d07-bed88f9203ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07b43e0-e9c6-4bfa-8e88-007210ce707b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8391067-b71a-49c5-ba22-a90230ea692a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560838c4-fa91-447a-a9cd-92f72f0308dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d710ea91-e519-447b-90d9-b1f6200b9ce5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23823bee-30a9-43fc-83ee-164e5f45d0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc4a2eac-b8f7-4b99-a3b3-5f6dcfef1b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d144805-3836-410d-b9bb-7a0e7a2c58d2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030af933-6e6e-4414-aa67-0d69d6c3aab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da11d771-9b7c-4ca3-8157-4d6f34cff7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3715a788-e06a-4a9d-97c9-7af47fdf4f0e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71111191-fdfc-428a-bd4d-dcd356db950a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65949fc2-6352-403c-9a89-e716283e1546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "991feea3-bc85-48b5-91f3-3c40eb64979d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aac6be2-d0b6-4125-87d5-29731d8fc868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7faf92-25b6-4b28-8584-68ffd6976bbf",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d197e0f-ee31-4f20-843f-13a2e2d0b1d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cee434c8-ca46-444b-af6f-464f90af26cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41c1cba-29e4-4343-b7fc-b826cce35f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8b76a9-d6d8-4fc8-9fba-1cfaf0ce9d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbf0590-0149-44e5-a96e-3fad45414df7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f585a3-1232-4f94-9ad3-672ba84db84d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bceb0c0b-5ea3-46d6-a9f7-a379f9a84676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9741ce-439d-4404-8ffe-32b9d5e87650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b657790b-2ac2-41e5-ba80-e211236825ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7806fcba-6922-472d-81b0-4eff0306d54a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7958e283-dda5-4f41-9992-bf90b5bf9235",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "678a8df6-40f9-470e-828b-bc937e734447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cae1c3-9c0b-4524-8124-f246cb3a46d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f7b5d2d-f8f2-4ffe-bf62-36346fe99d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9de4fa-3c79-423e-a48f-1e4a471436b0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fcba62-fe91-4abb-9b41-e0d8b3de3600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "696dd83a-e1d1-4305-b330-6f5f649faaa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d64371b-ef32-4c17-8b0f-f002ffee050c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19cd9e6a-5fc3-41ef-b972-91849cab321f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d019da1-55f6-4c25-a9a8-ad12ba2d003c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542f458e-692d-4b5d-8b97-2f66ab1dad36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fca8597-299b-4b6d-a049-1d025d6b98e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3520cfb9-2e8b-4bb0-8645-ee1a247c410d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31986e43-9616-4a1f-987f-342f8d5aad04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e069d4c-66c5-49f2-8421-ae725bbeb4b7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689c1f81-a065-426f-aa68-58510ea1be9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66f05e9b-1562-41dc-96f6-d1ee0fca7a8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "480c8c32-27ee-4300-940d-c2b6d1b8f500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8567ab-173b-470b-8e4d-038e52c793d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a6f80f-6fde-4010-bdd2-24fa2f8d4e47",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca396db8-4fab-4d2d-b00e-5c08a03ac17d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8622281f-60c2-47c2-b01b-76d4fbb32931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c67a45-e799-4874-a2b9-7ab414a539b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b6f005f-5114-4b06-9d5f-d855a6f0f5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6d1613-49dd-411c-8f4a-548a89b5c6db",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe19c7b-2112-449c-858e-37b5bcf286ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "496349f0-e8f9-4727-9702-90b96c6c1918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c135190-656c-43b7-893e-2e82137f072e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76dd3e0b-2621-484f-8d31-ebc85aec19fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f317baaf-00d4-41d8-acac-16df12cd3654",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd537b4-644c-463e-ab59-fa8256e9f50b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dab4f8f3-30b2-4b39-93ae-578f7dbf2eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e148cdc2-e088-4a82-9419-c7f05971b9f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a9fe2f-e9f5-4927-9154-41b6c68b5bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c373996-30bd-456b-b291-c64a558b7809",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7c4424-4746-4443-9354-940c4b66e8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c184953-6277-48bd-b656-f553d47ba05b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6e1d83-8460-40b2-8611-f5e567f69156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e45fa9-41bc-49b5-98e6-d7774de0e676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58fc632-a860-41c6-833d-40b04a8fccd4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19dde8ed-5104-419e-b1a4-39f8af27f2a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587d14ba-f6f7-4bd6-a78d-dbf4c2ba528b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3b863d-48df-4d8f-9da7-ac71783f3585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad202a2c-2406-4743-9847-4d2577925da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea082be6-9075-44cb-84a3-9b94afd2fcb7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c141f7e1-d2c5-4efc-9b69-e97e7dd010a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08beffaa-956f-4fe9-bd64-adf1a595569c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94144166-2bd7-4c1f-bf9d-20d3fbc79703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da71ccd-9809-4b1a-848a-b36eaa39ae90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250e779e-193a-46bb-9f8f-18818d15d38a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ceecf1-8c05-4820-9cd3-7a05f9e99749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd3575f-8705-4871-9691-a083a6cd5bf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a75653-b449-4abd-8418-9e2a7c955227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8e6863-5067-413a-be17-ebc5fa41bc92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d940cd-eff5-43ac-937c-723525e1e3d9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2cd1e6-7a90-492b-8b1f-858f2979391b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4384e965-c137-4864-ac9f-8c95ac6b3dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8988d1-84c7-42bb-80c1-4e38344b4eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ec21eb-89ea-4281-b1cc-c9c3eb292f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe524103-9f03-409f-bae1-15d2bf16f11f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2aba657-1ed1-487b-9f42-7e062337578b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0c25d9-1d10-4b0c-a873-a79a99330d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c6cb6f-0a09-4a0a-ba9c-3e11a813819b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc7522b-fcaf-4fad-816a-b7c5144dabb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79238df9-fbc4-498e-b771-916dd1a6ff46",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffd15c6-abe0-4d2c-8f17-ade3053f0ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60b2baf-92d9-4cb1-8a84-8dea65c1fab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d6f2f5-e208-4837-8df0-cd3f68883040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8139ca8-53b4-4b5b-955c-11e00876441c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3b8fca-bcbc-4f81-8c72-0885852c2560",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73a9215-b8fe-43c2-aae6-20a75b8caddf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a510e8f1-93b7-44cd-b181-ad709e333a59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efb48c3-28f3-48d3-a80b-d16347bc7e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5edcee2f-151e-4396-a6be-4b70f27a4c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74bdd51-dc9e-49d0-b771-1fbe1cd33d7f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef074382-0ef0-4903-b183-72428d21a0f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "542b417e-e9e4-48e2-a9f5-5fd1fe258dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04642769-9a17-42f5-846d-b2a194882cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e2f7a92-8591-463a-8004-1ecca6bace02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a32a3db-86cf-4b19-a69b-6ba66f0145f9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c39d70a-f134-4052-9ccb-4c77f86f983a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cae76cf-02d4-4663-8c57-335f925850d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "698a41ad-6eef-4598-b670-0d06e7684681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b75d2675-3b4d-43cd-8467-a8e5e0f278bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d378e889-ec6f-4b2f-a5c9-6d43684a3a35",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781a444b-b6e0-49d9-8633-2b096de52163",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2b0ea92-1c44-47cb-bb71-daeaed4dd6b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0e7c9d-9c7a-41a2-a55d-8abed1aaacfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89eb964e-0bf9-4424-966f-c319b2e43542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc69917d-ebf6-449a-ba04-52f114aa8174",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd6ab30-5105-4917-a490-83fe1d554b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c3ff835-7ac2-4e7e-ba1b-52ec04fd52e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01c01ab-7436-44ea-8a8f-58c482445c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2545ae8e-58af-4f4f-bbdb-41cccd841fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73cda12-d2bf-4312-97c3-d89883a72d15",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8141621-e084-4a04-ad92-6293298cfeaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a4ebc3c-8c9d-4b25-a218-ba926c2b3927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6544b5-ef01-46d8-a04b-0cf3fc772c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd93dfb5-48cc-4e72-81d1-04057368f5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a477bd-7bbd-4a39-8158-1771be38a87d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93511a0-b94d-4d76-9de4-5edea46fec60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32800df3-da50-4b2a-83f4-6476f2ffa942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3414b47-aafc-40be-b7ab-6520519046e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f353c174-1dff-4a4b-adbb-c287ab11c00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bd1949-2045-4fa1-a15d-825b6bac6bac",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7e8ca7-f581-4f95-a69c-0e98b4ad2486",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "098d7917-9044-45f7-89e5-bb7dc9a07c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd104f2-1007-488c-80e1-d42766f7ac23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66565ab3-12a7-4188-b01f-cb9096c4c820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332ec727-6e6f-4ef5-bc68-3fb196634380",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4964a152-be34-4d00-acea-5aa8cbcecc1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "821cee3e-05de-4967-bcc2-254225e3d498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b914e071-e14a-480f-b3f8-4b605e5bc718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854f0401-b57a-4c33-ae33-67a524fb9c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0835452a-b5bb-43a6-a3b9-3d7ece86f15a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd760d9-76ed-4392-8727-715734f453e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "245634e9-a41c-45f5-afb7-7d9a81673129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72db17c7-a1f6-40cd-85d8-bdb7d699eff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54005131-1d27-468a-a835-40a3e88cf2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471d37bc-850c-4281-a244-f3d91b9ff190",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb48e3c8-6193-4751-84d6-d5d865585520",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e27ef342-3035-4552-833f-8e7a5d7c62d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3610e9c-ab5f-48d9-b1c8-6a4d1d78193d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55aa5d33-4732-477e-a7a6-c04bd402f2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f036db-eb86-4cbd-92e2-c37af1b039f8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ca1b09-1ce7-4eac-a00a-b354314bcb57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a7fb5a-0af2-4514-8934-12f22dc951b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9cb259-72f2-45f5-9956-c50ea05a3041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "473ec87c-4542-4381-a56c-0dc2b8cb1342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354d5cc1-3915-48c6-a657-c14166bd5b7f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50781431-fefa-4896-a55a-91e61cd50cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de6549cd-7d39-449e-8052-0f19e59a0fea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02d1608-0d30-4364-9aec-60d2ea70aec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb0807c9-701a-4095-b430-d0ac4ff003ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95cf6997-15b3-4bb5-9e29-32bf6c444905",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9f2fdf-7afd-4bf7-a2fe-df2b74918a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c4d9796-c586-412f-83d0-f693cb6be39a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85cd182b-f601-4643-a9b1-4e504954a40a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d636a3ae-514b-47d0-a36f-f3a391581cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df3a44c-076c-4488-bcb2-43e61b7b5a75",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c3243d-5767-4e18-ac8d-1a698772b0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee12644d-6d94-4782-8a13-223cdc8c5c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6db7448-7fae-4cc7-8f03-f6657a2e3aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf7e50c-e433-4cb6-a80e-fb29a98ded3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43edf4fb-eaee-447f-9f94-055e822349b2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29670be5-6010-4892-9067-24f995a65931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de2e15b8-471d-4db7-a48b-b7601ef6420a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda76b86-37d9-412d-b008-aeaff58d6fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aebedab7-25a3-48ad-9275-24fabaaf4454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51591f68-3308-48cb-8823-b1fa3e1cb0b9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295d7148-8aac-49a3-9029-a1298c2003da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e65d645-b1f2-49d9-a3c3-059731513bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f331ea0b-0759-4732-bac1-04858b2a7685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3862d0-3471-4e21-94a9-5df3e4fa17ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c32720-0130-4941-a7b7-aa8cb91dcacb",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3f1f2d-dc2d-492b-b23b-98b9031e72c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe67d1cd-9804-4edb-819e-05dcc66f75bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55afd437-7548-42fd-8136-1e2778f1ff3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8276f30a-f0e6-4abe-a823-833eb7729e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60747054-8a3b-443b-9ac7-445bc35be30b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c4a5f1-91b2-488c-befa-ee84139afb56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d26556e-643b-4ed7-a7a2-3113346ea8e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3050a2-156a-4cd4-9f99-ae45bbe163da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7138c007-77cd-4649-9261-79e53422d684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8052983c-5a6b-4d65-a91a-abb2d84d29dc",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fc4684-c87a-42a7-9171-825442560206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb35d47-f3eb-48a6-868b-a9538a6f840e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7590b494-d38d-4e77-9059-32bb576f5c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d06950c-6024-4223-8adc-6783c36129b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b78087-279c-4d52-adc2-6c553d4dea0d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be227e2-a434-4639-8441-20fd8c4a74bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a47e7ccd-bfb0-47be-9be9-3605dc0f60c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b606fdd2-9fee-463f-9f0e-317efde5e057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7777ccd-a61f-4f66-8e59-08e98b11564c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac040e0-ab21-4f26-ab98-df6d0c89d475",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ed93ab-1f98-4444-a6b9-bb4213ec9b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04238005-537a-4d6a-92fa-d671cee9959a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cb602a-2501-46d7-a4b8-8c52f188bf16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c66e054-81cf-4ce0-8297-8af4411e5030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb9e8bd-a16b-407f-b36f-01e0b5a26c59",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e044ac3-718b-48c6-858d-c8d9f2e42f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f6d459-282c-409b-8981-bffbfdf6022c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b318b8-8303-4f53-b3b8-f3391d35fdce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5531bc-f66a-46db-9d72-55707935d6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614c31aa-6504-42c4-9822-2a1b9a297a6e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b125b79-e004-4142-a219-af1ab7aa334c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa4cfbe-427c-4688-bbb7-3fbba4141de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70203cb-fcc6-486a-bf84-9952623ae568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e5f032-b462-42ca-a3f0-9f0ff24de2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb54c47-2e3a-475d-a575-699369bcff5c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f753d0-395d-4b6a-b891-1f7e9f66018b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb732b9-7697-4093-b72e-f2de607ca3b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf53f34-e193-4695-a47f-872da6a51aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08327cca-a253-4e80-ab0a-7b5c9d6f6ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca742c0c-cf07-41eb-b84a-0de3a2989e66",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686becba-f071-457c-a547-58bec3024247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954f7c51-86b4-474b-aa93-26bbfff3ee59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8ff2dd-e68d-4350-9254-1dc93f2aa616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8cbe99-955f-42ba-b464-f3880209266c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c052534-13d2-4aa2-bb52-926c0a58e9d9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3902bd-ac17-42a2-ba20-f4567140a8ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d3a7da-5bf9-4418-97bd-5a5f35d9bdea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41e9f90-fa64-4358-b7e1-94be4d02f5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47635ca-2b41-42e5-a342-42a62849d863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079a0493-8a51-4f29-9852-0526668458cc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3d24d6-11f5-42bf-9ecd-7045387a2ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2307a1d8-abb0-4acf-b19b-74abbe640ae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ea7ace-546d-4d75-97d0-06e75fbc0ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e26c5a-e403-45af-9c29-8cf782a20dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d8b30e-9622-44d9-87a1-78f3e4641327",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf2d70a-3eb0-45d8-9348-b7d4fec3c43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98238c69-bbf5-43d6-a2ef-15ad5956f162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "399a01c4-4ec7-4568-b027-57b427e5584e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164b205d-cd9c-4709-ab9f-6913ab3c14d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050964a8-0788-4f73-8511-6604ca182fe3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5beb6979-7b8a-4cf6-8a43-5e6d0718047a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b2260e3-f66f-439e-b74f-096c4b4f2ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1080fb93-b5a5-4415-87be-92e716e31dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bdc1f8a-db34-4b7a-8d71-703acf12001e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c039b2-689f-4ebe-91a9-941f29d32852",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73317dfa-36f7-497a-8914-b6903b1be04e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed643cbb-3006-4365-938f-2ba2d962af9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47627919-37ca-4c2d-abc2-028b3ba67643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd2c4c05-9d75-4086-b485-107e7a9892aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2782db9-956e-4952-8707-754db136fbdc",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6486183-69f7-49bb-96e3-4e079edb3245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d4975f-bcdb-4bc4-8c9c-fbd6d3def68b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c3c05a-7ff1-42a7-893e-077106b33067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87892147-5a75-4397-ada1-a32e77265496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09410cca-b70c-413f-937e-f79c268ab741",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870fc2f7-d35a-45dc-96fe-cbbbe8728c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40725c0b-6f74-4255-920e-de890d58d059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de300605-ba6d-45bc-885d-3e04fa969277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a0f2c7-9e18-47ce-abb0-fe515bdd1cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5694013-860c-48c8-bae6-2641e9727154",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3a9a7f-2184-4440-b7e2-f0c5bb45916f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57caecd7-4eb1-4777-aa30-2d3b0afae865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e62a018-e81d-4b28-92cc-9c6b4f904ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c7f695-5deb-4492-b58f-4f98c6195fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62fb6cfb-e35e-492b-b28a-7985b4b236f9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d400c5-2d36-4083-9eda-2ae9aee5d42f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa1d1ad-9455-4f88-ab1f-441f6698b1af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00159fa7-6955-49b0-bee3-f17f9846e0fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47866917-71a7-469d-b240-43c52363f4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce41c26-e1ab-4b9b-922f-55731ef7ebf0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234ecdc3-9c4f-46e2-9740-73f40a147ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b6a9ef-562e-41e6-9488-0d0b54d929da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1d4fb7-70d7-4473-a998-cbffa69c8319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9105dbf0-b2a1-419e-9bcb-e8dbea992522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bc40c1-869b-4685-aaf7-ab039ef9464f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa02bd7-c001-4c03-9dbf-5fe54fea200a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5cbc5c1-4023-44de-b0ed-404cac7e71cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7d5a08-f010-4c35-8c24-b81e885913da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5179cb-4584-4f88-8f0c-43bcca55e596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791afadc-ec11-4cec-ab1d-645eea77b691",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba618a6-98c1-49e1-9363-c9163413b722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a4bc2c-c6b1-4158-90a6-7b918acd1ef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0404b03d-863e-4508-80c1-21ac6272d3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a5e2887-e60e-43db-b3c8-90fd0915b31f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d49813-fcff-436d-8046-c1d647a6db4a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd51eba4-f3b6-4d51-a0fd-35b2c532d882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b567b43-702f-4533-b5ec-0c82739f3d93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c08b9df-146a-4aa9-9c3b-a60ab39ce4f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "738e189f-0737-4f1c-84d1-ce9502634e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c139bd-c998-4e7a-a9f3-203b2fe2fbae",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e2f2c5-6c34-4d09-8044-5a177130476f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c01e238-402b-4f51-a2ea-0b03d5551191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6a5bbc-800a-4322-8257-ff3f6cdd2cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc75facb-a070-4972-9a3b-ac031d53a23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4079f0-02c0-41c4-94d1-d04bd183fb3f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f642ac7e-96fb-4eaf-9cbb-73ad1752ac37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16265a2b-3635-4e7e-afa5-903117c7d953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b671fbdb-a974-466c-8663-0b0d2c733db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f20570-3f95-49df-9340-aa238d125ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c318b9-ec32-46c1-b195-ec48c54facae",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a632c61b-86b7-4df1-956c-d6467b35353e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "100dc6b6-869d-4aeb-a5f3-18b44aa8f570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bfa4b2-c0fb-43cb-9f1e-d1b6b212405e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e8a79c4-2b7a-4683-a3b7-b16cf09569a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbf9656-36c0-491a-be70-aab3a8878b0a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a4686e-d481-44ff-8eb4-e2cdd9129683",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8263081-aa10-475c-85d8-f424a8e8d791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99e3fce-991b-47de-93f0-c79c56e19e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ba3957-d0a9-4806-93cf-59b1d6f1c50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3331051-8fc1-4f45-9ad3-6c25983ee459",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8152bc25-8e6d-4695-8e41-2ed6c4ccc9c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81531887-ab14-4a38-a6f6-d0253eabfaed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b103fb-de31-4bd4-979a-45d93df4499a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316ff765-49b6-47f5-ada4-30416339f7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9c0669-1181-4d2e-acbc-d3399f0d51c9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8145a351-b6f1-4d5d-935a-b4f5fd568efb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e773d8b7-2da7-4fba-be7a-e0d1994a9bf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6325a7df-27b7-4054-b508-d9af7ceda51d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dbf5a63-66f4-445d-87fa-f3361b581a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0cdfba-5964-425e-8233-1e58e6057449",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb24ae0-dac8-4ede-9bc7-1f2297e91da9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cc4de45-bb00-4337-b297-1c1e112b734f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fa6c1b-02fc-43b0-8e4a-0644f99bf4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829af2be-3706-4cc9-9f84-46da7a12f013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2965d42-430e-4ccb-89ac-c706a1d5042e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a90270f-749e-4f51-8199-05a8de9bd3b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "977ceb70-78f9-4469-ba40-99e147d8a03d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a77b57-6bba-40e3-abaf-8837e24dead2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66a228b-408a-475e-a299-321914b359cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ebea1b-be10-4112-b96e-e9043075b9de",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532d68d7-bb4f-40d4-94d7-f1a1d71fb321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a84938a9-8d06-417a-ae2a-5bb5b18d7045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e41e19-0295-422c-b269-c7af4e1f647a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50f9c52-8139-44b9-ad8b-34831b906661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da0469f-3580-4e4f-86bb-f68e2aae55d8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcd03eb-55d4-4621-9000-a200d50657d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1abe413-a474-4ac5-9cfd-96f072728fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7af85f9-9f3f-4be1-8e22-dd9a107ca3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d37f3c8-67bb-421c-b807-ba3d6f291b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf00549-89b4-4f3e-a4f2-f402d426f581",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b834a396-ece6-4e23-91a6-421389f646bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0214446-37b4-47e4-a1ce-35ad095d22dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0423fe23-64ae-41cc-bd67-8e734a281fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e927e3-df70-461d-b750-45dae1fcadba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d78500c-e754-4140-b4ab-1feb4d43578a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd99b570-4f42-4f93-8f3a-5743a04b3ea0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6fe9ba0-7205-478e-a717-7d66404106c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1096c0bd-bf5a-417d-9f53-518e4ca34b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aea6a70-d39f-4931-ab44-29957404523b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d72762-ea0e-418e-af5d-3fb612ff054f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2a9aa2-3fdc-4b09-b5d0-e8b6f93d73bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6be0be53-3599-47ce-ae8b-4899e30ab7a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1404a27-fc74-4139-a723-7875ce500c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b375dbd-1d71-40f2-a9f2-9327ced4ff06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba01302-976e-4b21-b991-3d5345d8faa0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca0ae59-706f-4424-9e5c-c43dac0cdf61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e438f50-eef0-4417-92bf-25b0c19d5a47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc94d42b-99e5-478f-98ac-68215abcea11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08cd1ac8-0a0b-47fb-9855-4c2c2aa8406e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97502763-5805-44b2-b765-771fe1bd6710",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8579089-2d0e-4abc-ad21-8172c521020b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d5fac2c-5e18-4558-a6d3-a39c321e2b74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1beae311-17ef-4cf3-a69e-a6c294da6269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e9d522-b8d5-4ae7-966c-870fe72a1122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff895b24-62d5-4b8d-8198-383438ec26e8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61156687-f498-4952-8de8-79e1ae2d7555",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b03cf9f6-a908-45c9-985b-910d186e0b60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a60fd9-37a3-42e6-a851-ee963f36a3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c7198d-de0d-46c4-bcbf-1acde398a384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f84db8e-4b02-420e-be8b-281a7f5f91fa",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5377744-9ca7-441d-9f35-3a96f9968beb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78808e36-5e9b-4264-a15d-beaf9ac696c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e783459c-41f1-4e78-8acb-b745fae33077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29fc5bdd-3444-46ef-86e7-16d195443c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f9ed7a-1f4f-4341-ace7-735bc3d019be",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2aea6cf-5a31-4d13-9f54-8143c0ad17de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf170d18-80aa-43ba-91f1-9d6ac261e34b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "432af1fc-7567-446f-b3e2-aafdc0ec2d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32660e20-00c5-49a3-bb1b-ad2f9abaca4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca77003-3c1c-49a9-984c-cd2cb475920a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60069400-3c26-4816-bb23-74573927583e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a191e6d-178a-4842-a87c-e59c9be7a59c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ee97b6-f3cd-4291-b6fe-650737c2e4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0735337-e1d2-433f-a306-37d313743b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ba32a9-c1e2-446a-b64e-4ff23594ec95",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50e333e-6309-4476-aa81-b68ae76631e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de59f697-f041-4b21-b20d-c52249b02be5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08260da9-dc4e-4438-904f-25522d4f6722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb03c827-dcbb-4bbc-a7a9-4e73e79bcc0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941c6070-e2cf-40fe-89e0-3b25f75be49d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b2edfc-dc7b-4417-9fae-decc64e40a39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dc9ec41-4c4f-4069-bdeb-0807c366a7ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f54046-02ab-49e4-a81e-eaee1851719a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8839d905-b46c-4e27-8014-e328202b02de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6774d64a-5996-4393-a7d8-a1034ffbc3df",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4305e0a1-f34b-4eca-aba7-a51ff6fcbd46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13f9c18e-c091-450f-885b-99402ffaf87a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0006fa48-3a25-4c60-b500-1f725d34cabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28cf69bc-f579-49c3-8a74-e87ceaafd93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752647ba-85dc-4525-b2fd-bf90eeca15a6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53293d0b-eb6f-4360-8b0d-625f90ca4fbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce2e49ef-f711-4547-8462-6367d15b9ee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "320669c7-a751-4337-a1de-a9ae75a01310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a6ce14-677e-49de-87c8-02295f3bd74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ca3183-6e89-4aa7-9a83-e0bc15494bc2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed05787-2168-45d9-a3b0-613af44c5d1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0065aeaa-ed6f-431d-9e3a-04aa9549482a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac53a1e7-109e-413f-afc9-2c554c0d8ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa7c485-362b-4ae8-a6c9-a68423622941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b86598-82d7-4c40-bb39-7d5fb9c26671",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca81b27-55c0-44ab-badc-eeff97536021",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0f0a916-a717-40a9-b60e-594f190de79f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6b0ef1-ffb8-49ff-8406-decb7f5c0221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b7527a-0eef-4dc6-8713-b01a1d89eeed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd64acd-70eb-49d9-a87e-c6ba5a3d22c5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7cbd1a8-cb53-4702-96b5-a6ed693c8fae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f8264c9-7263-4da6-a7b0-f6a5603f788b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cac1492-94e0-4f04-8049-3946b93f4266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af1d111-3d98-4364-a845-717eaf05da98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcc676c-eb23-4a1c-b1e7-97890fe0855a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1c96d9-9b8f-421c-abd9-c42dcd32af2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79de04f3-878d-452f-b331-49177d7a5ef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b8a51f-3c64-4b53-874c-813cfd0d9a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c1fb79-4219-4757-a61a-51884d22d286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5c4228-eff8-433b-bd58-ca64b430f146",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c648651-56e9-4fd4-a860-bb49c7ff41b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "242ac5a2-dc0c-41b7-9a43-9542c9591f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c7337f-4f91-4976-bd37-23e797a35be1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41587c45-4afc-467b-bae1-ac47e4a21d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662fe029-97d2-46b4-8db2-c0503ff3be70",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f325e55e-1438-4ad1-91a8-ad4cc14b58b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77d72acd-2b00-4a15-8db3-bbebdab87b76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a004749-a40e-4a71-ac73-9748b6232b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4588540f-19ac-4350-8e5f-d70af2787bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe2dd4e-a1e5-4887-843e-25a7e2ffe0d6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8220eb95-058b-4220-b0ae-1293bbecda6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "176ed006-b1c1-456c-948e-e08f5741f43d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054ee21c-3431-4363-b6f4-022b14a04682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0bbc588-3d20-4b6d-8267-b08c660f5903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fea2205-f33d-448a-974a-efb45b8f9302",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2396c0-b228-4e13-810c-c35bf0e4ccca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e21979e-f341-48bb-b162-fa2492ee0957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d55bdc3-2844-4c41-a30b-dc0ef17a67d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "638df8d0-b18d-491c-91a9-d0672177fe8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5feaa18-708f-42a3-923f-abdf57eb756e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4bd1a0-0fd0-4375-8b26-52f1f533e489",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9257c823-c830-484a-b8b8-d5ccd47071b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3cf2be-59e6-4963-86a9-9fce79c3da83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd6b14f7-2977-4ec0-ab88-a9c30c47be67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197f8447-c55e-48a6-8246-005ee60f3450",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0519c145-8e0d-4457-8461-a386d52e5089",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d763c5a-b710-4183-8b31-b4128b37dcd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce02e44-42cb-4ae3-a2e2-19c1943c1ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9739af-9655-4828-ae92-02b7d1e43f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0093a5d9-2052-4b48-be2a-ea708bd23c09",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d114bed6-98f6-49a3-88fe-5347cd3fa9bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0f66bbe-8636-4b8d-8c6c-571de59c93f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad65d631-0686-4d26-84d2-aa7d53a2d837",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e3c3ef-6211-4970-898b-9bb313b4cf0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909cf4e5-248a-40ec-a3b8-4e4ff54c42fa",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529a9b09-021d-4030-9569-e06ed5dab931",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ea3e2e7-221e-4eba-9b66-9407cc22a10c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9893f10b-d102-4d8f-be87-86865ff8ccbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07a97ee-6080-4272-a6de-ffabec173284"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9396dcb1-372a-4663-abde-cd39e0cf6e17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5224937f-f48e-4978-8002-bbaad68e826c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcb34524-43e9-4335-8294-9acbb1defbeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ea0f0f48-2d58-4341-bf56-89f7e03d7f47"
                    }
                  }
                ]
              },
              {
                "id": "386d56fa-2d4c-4d8c-8bb3-e85bd50017ab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b94ee70-deec-4b1c-b375-304ca1681383",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729662c6-fc1e-4dd4-ac62-ae91501aded1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ae35fa45-2e10-485c-830f-0a282c0c45d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f82e3e-e95f-4713-a7c3-cec018740640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d95f2630-9557-444f-b0fe-b711168f48f4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e24b6066-d11b-4533-8353-b7f7558dfbf5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5304ab1b-56f6-4c95-b7c1-7f1bbf71d7cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f02c8cd7-b07b-4292-85f4-f9cccc25ef99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "072caa1b-e2c1-4798-8dcf-9b1c4770c849"
                    }
                  }
                ]
              },
              {
                "id": "a12653f7-eda7-45db-97fc-ce0b7ac47940",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a317945c-e147-49e2-b2b8-3195e3011d46",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9a79e6-20b4-4bdc-a51e-da6ed6a5c856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ff46554b-4ec4-416e-a737-5a80c8876d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6264e77-c223-472d-9b0f-568f524d844c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7224ba17-532c-49b6-a5c2-40701463e623"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d814c669-cbf5-4c38-a9aa-11e0e2d69027",
            "name": "Positive Testing",
            "item": [
              {
                "id": "58ef8c8a-96dd-4e47-bcfc-8443fad0a9dc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce1305de-6361-4899-bda8-1383b52166e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "464b2b25-f346-41ce-80ca-ad4c444b2de4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af543271-80b1-437d-b614-5f9b579aa5de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea73a867-9158-4ae0-969f-a46f1541343a"
                    }
                  }
                ]
              },
              {
                "id": "ddbc0db0-8426-4a82-9382-549dba91fd97",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12dab75f-48c6-450a-a149-16a10b80cf2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4dec5d66-2ea5-4f47-a3c2-4fbb0e283307"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54b5222a-3ba2-42c1-80bd-625648375054",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e83f7b1-93cd-493b-9c28-725b10a35081"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "978e3264-395c-4e99-8b41-2fa00d200ef8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "61bef509-c9e5-4f30-8bf1-54e6b88d3f32"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c224cf58-1647-4774-bdb6-61aa84f01542",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6784cc75-5420-453a-962d-b2d250b867c9"
            }
          }
        ]
      },
      {
        "id": "26a7cb2a-b070-400e-8c0c-54197407fca2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "728363fc-8a89-4ecf-aef9-10c4acc67005",
            "name": "Negative Testing",
            "item": [
              {
                "id": "242ccef0-5eea-4d66-bec7-c01a12177474",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4d63a60-1826-4065-84b7-bbe439ebe2ef",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e56386a-23c5-47f2-994b-26d573b31110",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5f888fa7-43d8-4206-b854-3c2ba49b3fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "356c0950-5578-482c-bf2e-f313f748276f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd419ec5-2f77-4766-8dde-228a67d450d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebe5c6a9-ef85-48a6-b390-b9196994da03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e44b1fb2-deb0-4979-b169-bd2e5060d2f7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8879f6b0-b775-44de-ad6b-71e55281968b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ccc3a5d8-6104-49d5-870a-a305f03bfd50"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3493ec13-b698-47b7-8ea5-07654bd8158d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3f579ed6-07e6-4df5-9932-7651243b6060"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c4f0fbd-ec0d-49a1-aae5-e1d048a0bb3e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f786ed9a-d77a-43ea-8f2c-875876bc9ccc"
            }
          }
        ]
      },
      {
        "id": "6051f6b0-26c8-4368-8b3a-451cdb4297bf",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "78f78d80-af3d-478d-9de7-b31edc5ffd62",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b1840f91-e227-4d62-9440-91bf8f6bf97d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dd0fd195-cfa5-432c-91ce-1ac830021470",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c40425-b41d-403f-a67a-12c3cbe82911",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77cfee0d-0b89-4c5c-8fe2-2f3e1ed2e229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "169406bd-e862-4eee-8423-bacbcb274e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "735ac138-f449-45f0-a7b3-b12b5947a4b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fd8dbad-486a-4318-923d-346f995f6ed6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee9a7763-dd2e-4413-8982-e061f437c3c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1a2b5a0-22a2-4d09-b875-30a0c5dd463f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fba081ce-248c-4853-a3b6-2bf36a0713c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f41a8bfe-292c-44d0-95f6-0f79d9b79f7c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7edbcf6f-e50f-4e0e-93af-bd4d674db393"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72dd1e30-e055-4c05-9c4b-5441b9529a00",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36d5f578-357e-477d-bc20-d5707b414644"
            }
          }
        ]
      },
      {
        "id": "9b6081b5-c66b-4a97-aaed-bbebdbb7d750",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5fa211d3-f0df-4d12-876d-19dfbbbc10e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "851e2b29-28c9-4296-bcea-e3919b1a8c32",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d93e424-48da-4856-8653-159316a87b6d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc47d31-5d55-49d6-9562-d0c369fe7a2b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49e4102e-a133-4a33-8820-f7c340bbfbbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c9b8b3-a0e6-44ef-a09a-4529c91bc58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0a8d12b-8fb7-40bb-8c9c-1f0e7f3a0c71"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad34d78b-718a-48e0-b941-6de3a2802728",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8939cfe-cce2-41a6-833e-01090cbb343e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93aab8a2-2932-4e2c-9249-5a8e506c8aea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a750f00e-94ef-4cb0-b155-eebb289b75fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8d6ef77-852c-43d0-b6c5-e14e683849d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "29a43aac-b089-4046-9e73-da3bb2e423dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e37c77a-b1c2-4b9a-b8e0-ea00c071c929",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "511bbc3c-d80e-41d6-812d-0889c9fd42e5"
            }
          }
        ]
      },
      {
        "id": "89efb8bd-8031-4a86-9d09-ba7f4963a3ff",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67ec46bc-52ce-4afe-aac6-9c4f5677998a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a7a03bb-be51-4ee7-801c-47d01d4ebd58",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b1bbedea-10b0-4eb1-a6d4-89f6789d7c95",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9638e037-d057-4a3d-aef9-981ab4ad34c9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "070cd63b-fd42-479a-8e54-f7fe59580f3c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 232.85614035087718,
      "responseMin": 9,
      "responseMax": 8711,
      "responseSd": 1076.9715907927086,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700440578942,
      "completed": 1700440654572
    },
    "executions": [
      {
        "id": "9cb569bf-f5ca-4016-a0d0-3b634899ef6e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bf8744ef-13ad-4e57-9a9f-10c497d6a2e9",
          "httpRequestId": "f17e70f5-dd1c-49e5-bea8-2ef71252bde7"
        },
        "item": {
          "id": "9cb569bf-f5ca-4016-a0d0-3b634899ef6e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4db35251-9733-40b5-85b7-16dddd6dc1bd",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 0
        }
      },
      {
        "id": "9689e9eb-98c1-43ed-b598-d7394cbe2503",
        "cursor": {
          "ref": "bb2b5161-d527-4513-987b-269f486c2131",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "85ba8b1a-c90b-4390-9b18-bfca10e48eb0"
        },
        "item": {
          "id": "9689e9eb-98c1-43ed-b598-d7394cbe2503",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5715c004-6672-47a9-9cb2-a89f7b1007a1",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "a9fedcc7-14e4-4493-9bb5-793d5aca4dd4",
        "cursor": {
          "ref": "94d34c94-27fb-402e-a944-db6e81c71719",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "69533471-5703-4126-9366-0af814ac3df5"
        },
        "item": {
          "id": "a9fedcc7-14e4-4493-9bb5-793d5aca4dd4",
          "name": "did_json"
        },
        "response": {
          "id": "b87670ce-cd56-4d34-b8ca-368bd6f971c1",
          "status": "OK",
          "code": 200,
          "responseTime": 1510,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabccd71-7e32-4a17-b888-6ac439c725ba",
        "cursor": {
          "ref": "62ced37d-388c-43f6-b0a7-2649cfaa62f0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "72e693ed-2567-4892-b05b-1fa37472b96f"
        },
        "item": {
          "id": "cabccd71-7e32-4a17-b888-6ac439c725ba",
          "name": "did:invalid"
        },
        "response": {
          "id": "cc207290-b449-41a7-8a65-513b6dddd99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabccd71-7e32-4a17-b888-6ac439c725ba",
        "cursor": {
          "ref": "62ced37d-388c-43f6-b0a7-2649cfaa62f0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "72e693ed-2567-4892-b05b-1fa37472b96f"
        },
        "item": {
          "id": "cabccd71-7e32-4a17-b888-6ac439c725ba",
          "name": "did:invalid"
        },
        "response": {
          "id": "cc207290-b449-41a7-8a65-513b6dddd99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb66146-d428-4f75-8a7c-ec50292d3c07",
        "cursor": {
          "ref": "2d5ed5fc-a407-410b-8f49-b156672a7398",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "15fc9b29-f3be-4df7-8d63-90ef01c4c022"
        },
        "item": {
          "id": "fbb66146-d428-4f75-8a7c-ec50292d3c07",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cb57e7ea-488c-4350-b62b-b1dae79e3b2c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 131,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b729edc1-92c7-4ba9-bbb8-6790e34c295f",
        "cursor": {
          "ref": "ed4ea012-f969-42ea-ad5c-3f61d4c47aaa",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d9932c1c-6d97-46fb-bcd3-85c4887d1720"
        },
        "item": {
          "id": "b729edc1-92c7-4ba9-bbb8-6790e34c295f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d8dd9d26-ffb0-4eb2-9a92-1b409c0ec8c8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 54,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f443ade2-40fa-4930-935f-0db1265947e2",
        "cursor": {
          "ref": "9b7f4df2-827f-47c8-9b94-40c4cbc94a28",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9c1ef89b-844a-4b22-b24d-819a7b0a45aa"
        },
        "item": {
          "id": "f443ade2-40fa-4930-935f-0db1265947e2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "144d2bde-051a-4907-80a5-a142f98b5ca9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db71aea5-84ed-4b93-b990-01dca3772f1c",
        "cursor": {
          "ref": "4c4c03fe-fcb0-4d9f-a1c4-3b2b15cf9a7a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9393394b-f6e6-4fbe-bb46-f6b342eb3222"
        },
        "item": {
          "id": "db71aea5-84ed-4b93-b990-01dca3772f1c",
          "name": "identifiers"
        },
        "response": {
          "id": "cd5f0ca4-18c7-4625-bb89-510598a935b0",
          "status": "OK",
          "code": 200,
          "responseTime": 1129,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eedc4a9-4237-496e-bc0f-274c46bf02ac",
        "cursor": {
          "ref": "8af10c32-7c1f-4360-93c8-35c8dbf1b6fd",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2fd81ac5-fd67-40a9-9080-a25c083aef4d"
        },
        "item": {
          "id": "2eedc4a9-4237-496e-bc0f-274c46bf02ac",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b589d251-3f61-4d6f-a48f-069f38c31b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf6e59a-5bf2-45b4-9d2e-24cd5d7300a3",
        "cursor": {
          "ref": "0eb27092-d162-4f1f-a7c3-7c90551a3c3d",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f51a6b2e-9572-408b-b8f7-937e5d66781a"
        },
        "item": {
          "id": "acf6e59a-5bf2-45b4-9d2e-24cd5d7300a3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "637ebf84-dee0-459c-b0bc-57ddf37785a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17535f26-4235-41f7-9d63-8c44fbe30921",
        "cursor": {
          "ref": "ca519193-c0fb-49be-b404-f540c932f0bf",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "53f89be1-573f-466b-a29d-9e5bfc65b363"
        },
        "item": {
          "id": "17535f26-4235-41f7-9d63-8c44fbe30921",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "379a0b75-5a80-4746-887d-b10ef202aa56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae58ee03-ac96-4369-b477-5d98c7895845",
        "cursor": {
          "ref": "4291b867-3051-4ae0-8864-283430167016",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9c1c4098-955a-46e8-973a-98bba0b8052b"
        },
        "item": {
          "id": "ae58ee03-ac96-4369-b477-5d98c7895845",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "400e13b2-9b4d-423c-b5fd-095af80ae8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f494ff95-77b4-4db9-ba83-fd6c30895453",
        "cursor": {
          "ref": "2eaff2bc-d7ad-43fe-87ee-dbbc0d5d6509",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "95a76aea-cdb5-46b0-8bb0-273bec81b912"
        },
        "item": {
          "id": "f494ff95-77b4-4db9-ba83-fd6c30895453",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "472e7530-ab2e-46ef-ae10-083c92bf36aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a38dff3-73a6-4f54-be40-e1c0bfdd6deb",
        "cursor": {
          "ref": "74c3c958-9631-4b7a-8756-a14499b979c2",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "16b116ce-dcf9-4fb3-93e8-e0ee652557bb"
        },
        "item": {
          "id": "3a38dff3-73a6-4f54-be40-e1c0bfdd6deb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ecee3787-d4cd-40a4-99f8-136a2bb5d35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236e031b-1728-42ff-a780-fc8487ccc705",
        "cursor": {
          "ref": "f60ef045-1a5a-4552-ae39-4b1dc0a7de52",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "20515015-2db8-44b8-8b4a-07e5b158ab5a"
        },
        "item": {
          "id": "236e031b-1728-42ff-a780-fc8487ccc705",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d6e8628d-77bd-443f-87f9-31badfe1f8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b17a568-9093-495c-b12b-c76f90c1772b",
        "cursor": {
          "ref": "782cce7c-a22c-4353-85ad-4564d63e60db",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7862de00-64e0-41b5-8771-677722b91491"
        },
        "item": {
          "id": "7b17a568-9093-495c-b12b-c76f90c1772b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d79ad67a-47cf-4eba-9e2d-59506a6de1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ee5b08-a4b6-460e-ad64-8238af554d27",
        "cursor": {
          "ref": "04646832-b872-4c1c-9374-dfdef258b813",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "dd65e235-f47c-4104-827a-a622f7b7287d"
        },
        "item": {
          "id": "26ee5b08-a4b6-460e-ad64-8238af554d27",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "313c5b91-c6ad-42be-a8f1-743691a4d8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9a565d-00ef-428a-819b-a4d4e465c9ac",
        "cursor": {
          "ref": "0e83989c-769d-4a80-af29-f2ec717fae7e",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8123c34d-460d-4b2d-b352-38534c488690"
        },
        "item": {
          "id": "2e9a565d-00ef-428a-819b-a4d4e465c9ac",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e5af6bbc-9e54-4ada-b739-117bf100668c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ab2558-17f0-4978-a4bc-7c68883e2865",
        "cursor": {
          "ref": "737e820f-6e88-46a8-8ac6-ae2fd0a7a31d",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a16dffd0-1b06-458e-bc9e-252546d2e987"
        },
        "item": {
          "id": "d5ab2558-17f0-4978-a4bc-7c68883e2865",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6af67278-78b0-4c8c-85d0-313adc032e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a71ed19-451b-4b11-ab87-8eac4e803488",
        "cursor": {
          "ref": "57f77276-31ea-4e87-abab-b8f7cdfb729f",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2e974a21-6057-41a0-a4c7-e86e76e1cc82"
        },
        "item": {
          "id": "8a71ed19-451b-4b11-ab87-8eac4e803488",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6a9b810f-b55b-4b2f-8f17-a3d7daa74c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fb3957-fe5d-4057-8986-589a0d864790",
        "cursor": {
          "ref": "8bb53509-bdc4-43b8-83c8-ddae92ec441b",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f5ea90d6-7a2e-4e0e-8eeb-8f1c880eceb2"
        },
        "item": {
          "id": "44fb3957-fe5d-4057-8986-589a0d864790",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "570081ff-927f-4c4a-9501-45cc3200c140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9431074a-9f92-4e4e-8774-bae42414234b",
        "cursor": {
          "ref": "a55c3cce-7cf2-4507-ac15-9806dc9f96e1",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d76474f5-d395-4531-9014-6273acd9a802"
        },
        "item": {
          "id": "9431074a-9f92-4e4e-8774-bae42414234b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "50481b5e-c98e-4b3e-bd79-fd258fb7e2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875f79ba-ab5d-457a-aa20-5895987d0a6b",
        "cursor": {
          "ref": "83d7bb8d-0239-4ba6-8f8f-efe04f8c3e1a",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "748249af-a9db-4aa4-9122-d1d9d8cc03ba"
        },
        "item": {
          "id": "875f79ba-ab5d-457a-aa20-5895987d0a6b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "29b003ef-d377-400e-811c-2f6582754ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c854a8db-ae7d-4ee9-9738-662d760b014e",
        "cursor": {
          "ref": "d681932a-ff9e-4fc4-9f3f-61b38983a936",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "571fe811-5129-4008-9681-3b57980e1612"
        },
        "item": {
          "id": "c854a8db-ae7d-4ee9-9738-662d760b014e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4416d0d6-5d8c-4f97-89bf-b1d62f65d2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a402ab3-a79b-4c23-9cf0-1280c96d33c9",
        "cursor": {
          "ref": "a2730448-205e-4cb5-81e0-1f6a15b99aa3",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1b237e77-1804-4788-be38-e688576fdb61"
        },
        "item": {
          "id": "8a402ab3-a79b-4c23-9cf0-1280c96d33c9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "cb4e2a79-1a17-4c86-b351-b2741fe660d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47946f58-fe57-461a-80df-41eb5a232593",
        "cursor": {
          "ref": "d5241b00-2b48-471f-87a2-de8f3648d884",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2a774cc7-372a-445d-b0be-5af0794a0952"
        },
        "item": {
          "id": "47946f58-fe57-461a-80df-41eb5a232593",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5285ac7d-5869-40b6-88ea-399b3ed8023f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1e7337-ac53-4fe1-9098-79d20b0b68c3",
        "cursor": {
          "ref": "33a082cd-2b73-448b-ba72-5be39fc6ab56",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e1284a26-f903-4f73-b3d5-5c3e43b9d926"
        },
        "item": {
          "id": "4e1e7337-ac53-4fe1-9098-79d20b0b68c3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d19b1ca6-a957-4959-96e4-e21706beb806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4776cd-912c-4399-8e2c-60434805f5b1",
        "cursor": {
          "ref": "50002192-eb42-4c38-b07c-7935863adb37",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1cc0a9cc-058b-466c-9787-688b5a2509ea"
        },
        "item": {
          "id": "da4776cd-912c-4399-8e2c-60434805f5b1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "33c2cf31-f737-4340-b9d7-5909832c233b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840b1c4c-ebde-4df8-8ed1-d3033b3d789c",
        "cursor": {
          "ref": "6c0043fe-80bc-49ff-a8ab-f3405715127b",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "594d864f-96cc-47ff-a18b-827c42b4c683"
        },
        "item": {
          "id": "840b1c4c-ebde-4df8-8ed1-d3033b3d789c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3bccefe2-d929-4502-bca4-e83942ec121e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a373d9b2-8745-4ec7-a8b5-9391a41aa1a3",
        "cursor": {
          "ref": "3a512bfd-d670-47f7-b09d-d6d6bf281fe5",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "547411c1-0917-40d2-a41e-0e76317a1e6c"
        },
        "item": {
          "id": "a373d9b2-8745-4ec7-a8b5-9391a41aa1a3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "45cfaa12-a3d8-4243-8e07-a3b43dfb50e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bc17cb-e725-44f9-8df5-f01b55ba1fa3",
        "cursor": {
          "ref": "522a8f8a-08fb-4029-849f-e7975a3e7cbb",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "493e9813-c903-4dc0-a570-c16bf013a3b5"
        },
        "item": {
          "id": "23bc17cb-e725-44f9-8df5-f01b55ba1fa3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d3099a90-a04b-4964-82cc-e1274d0afd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafaa037-b639-42c8-b343-177db3ca1a69",
        "cursor": {
          "ref": "9a30a89d-dcef-46f7-8142-2fe335590ef4",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ef12b6e1-43fa-4a31-b87d-2d130b1493c6"
        },
        "item": {
          "id": "bafaa037-b639-42c8-b343-177db3ca1a69",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "602d6568-5926-4ad9-ae67-e72d30085726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c2037f-ad33-47ad-b300-275621c1476c",
        "cursor": {
          "ref": "c2940c2f-d5f5-44cd-a8b8-4e579ec6558e",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3a645f78-262c-4957-a923-00d6350f0b28"
        },
        "item": {
          "id": "75c2037f-ad33-47ad-b300-275621c1476c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "dd45d223-1893-45e8-a7ef-ab4c027e19b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065752b5-8c50-4e85-b25d-2fe05bd07082",
        "cursor": {
          "ref": "21bbbce3-cfe8-440c-b815-f28935999efa",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "777be7cb-de9b-4af9-8c0e-96a23ec0fbd5"
        },
        "item": {
          "id": "065752b5-8c50-4e85-b25d-2fe05bd07082",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b2355b5e-2bca-43ba-bbcb-2b9b94db6366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d53127c-2440-41c2-ab0c-9363ee542e7a",
        "cursor": {
          "ref": "9b48568b-648d-4637-8cc2-ce28756ab410",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4199827f-165d-42ce-9730-38040080a7e1"
        },
        "item": {
          "id": "7d53127c-2440-41c2-ab0c-9363ee542e7a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8adbe4a2-4edb-488c-867e-639d67ba8ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379ecb33-5a89-45ae-93ae-aa8bf8e32678",
        "cursor": {
          "ref": "5f651115-1fc1-4b67-b424-90919388fc9f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ae3a52c0-2d50-4916-ad6b-37b25df258ab"
        },
        "item": {
          "id": "379ecb33-5a89-45ae-93ae-aa8bf8e32678",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "25e2bf5e-9ab9-42e7-a7bb-348274446dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8572a9-c93f-4acc-84d7-eaf021b4e400",
        "cursor": {
          "ref": "d7b8a97f-6e04-46cb-b37d-2338e2aab271",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "27bbe9cf-356e-42ab-a6c0-9a6a7b80f0b7"
        },
        "item": {
          "id": "7c8572a9-c93f-4acc-84d7-eaf021b4e400",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e6c0886e-9fc6-4145-a815-de62457c2a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b08723-cabf-4acd-bf71-ee6b3c84679c",
        "cursor": {
          "ref": "b5a5fe15-ff15-4d49-8e6d-d8d31557d426",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "41a1c3c9-e170-4bd7-8642-eedc01e49297"
        },
        "item": {
          "id": "53b08723-cabf-4acd-bf71-ee6b3c84679c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "244d60f4-1aca-49fc-ba13-7157e37fab80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0643792e-f301-43da-973f-6e45fff44456",
        "cursor": {
          "ref": "8d64e303-9698-42db-bf75-232011d9026b",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "be40f6fc-4402-473d-9a1b-5402fe2f1a85"
        },
        "item": {
          "id": "0643792e-f301-43da-973f-6e45fff44456",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bb48638a-8afd-447b-bba9-6ee1e99384d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92a5871-87dd-4f2a-89ae-6f3e2fd1d13f",
        "cursor": {
          "ref": "de7d8ffc-4581-4a3f-af42-66836f6a4b7e",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "10397083-2439-4a89-be54-1aa2c996b325"
        },
        "item": {
          "id": "d92a5871-87dd-4f2a-89ae-6f3e2fd1d13f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a6436b15-ebc1-4a11-b265-9e6e411406ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5774ae-59be-473b-874e-7aac5cc7909b",
        "cursor": {
          "ref": "05406b63-4a2c-4aaf-9d0e-f721700b7453",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ca2466db-edeb-42e9-8397-9b89da527e59"
        },
        "item": {
          "id": "dc5774ae-59be-473b-874e-7aac5cc7909b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "dbbe1732-8ffe-410f-ba96-0152fc056d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf4ee62-7f0c-4f43-ad6c-2346e3deac7f",
        "cursor": {
          "ref": "6384fcf8-e4a3-4b9a-adbb-cafa4e7ccc07",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "69d419bd-733d-4f42-bac8-012d64026bea"
        },
        "item": {
          "id": "daf4ee62-7f0c-4f43-ad6c-2346e3deac7f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "74d16869-a32e-4ee1-985a-f367bd4caaad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77722589-37f0-40cd-880e-ec9222a981c9",
        "cursor": {
          "ref": "ad17941c-3c8c-47cf-87ea-890ea123efc3",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "330561e4-6257-4f35-bf69-6506b760f035"
        },
        "item": {
          "id": "77722589-37f0-40cd-880e-ec9222a981c9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2fff70c4-75d3-43a0-bb32-c508bdd3eadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f1a22d-3735-4584-92c3-a45da8418a65",
        "cursor": {
          "ref": "de51d133-9335-4be7-a8fc-c12dd5621cb1",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5178358d-6a83-4428-9831-08b78201b28d"
        },
        "item": {
          "id": "89f1a22d-3735-4584-92c3-a45da8418a65",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "659f2606-1cd6-4b3a-a16b-a71a4211af70",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1401,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03e7613-bb24-401b-8b12-890956b3cb1e",
        "cursor": {
          "ref": "456d0d45-49d0-481a-b292-4f3879e2dfd0",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9001ea74-a51d-423c-b69b-e580d2734d44"
        },
        "item": {
          "id": "e03e7613-bb24-401b-8b12-890956b3cb1e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "28565d34-1474-4eb9-9555-9d9c3450c165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4bf2aa-e4a6-4dfe-b8ca-f25ceedbf3de",
        "cursor": {
          "ref": "7cd73d27-6e46-42ea-9b8f-c2ddf2990411",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c6c71740-8df6-4f9c-9d41-1c07dab8d0a1"
        },
        "item": {
          "id": "0e4bf2aa-e4a6-4dfe-b8ca-f25ceedbf3de",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4892ab3f-c38c-4c1b-b6d2-5eb7cafb43d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a87d3a2-a955-4fa6-ae06-1841c76e171b",
        "cursor": {
          "ref": "eb2075f4-db41-4bf6-8acf-4b5061d74c35",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1b2ef96f-7e9b-463e-9099-a284e0eac358"
        },
        "item": {
          "id": "2a87d3a2-a955-4fa6-ae06-1841c76e171b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "58507790-7890-4cac-9518-59b1cdab9c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d43335-9a65-411d-8e37-32949a5185f0",
        "cursor": {
          "ref": "f338a814-30fa-42e4-aeab-bd45a87af94a",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "413853bd-86ea-497e-99eb-c59d62d5c4cf"
        },
        "item": {
          "id": "96d43335-9a65-411d-8e37-32949a5185f0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4064f2b5-841d-4ea2-a6c4-870e9c8dcb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7a64f8-3425-4417-8ec5-96df7123b56c",
        "cursor": {
          "ref": "903276de-1342-4823-aa6c-efa3f1698ef5",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5b752927-24cf-4ffa-a3e0-779b0ac09843"
        },
        "item": {
          "id": "6b7a64f8-3425-4417-8ec5-96df7123b56c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9770265c-3cd6-40c0-b249-66a82225715e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca41fba6-9a27-49b1-b8ef-22b92a2e57d1",
        "cursor": {
          "ref": "cf2fe64a-d6ca-45a3-bc48-173b96d30a9a",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "db2363f0-76bf-44a3-8905-291986658d58"
        },
        "item": {
          "id": "ca41fba6-9a27-49b1-b8ef-22b92a2e57d1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6c2178dc-9366-4933-8994-266a2948f199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8698d3-3815-4020-8683-f82788d5490d",
        "cursor": {
          "ref": "11f65284-52d2-45e3-9766-d306fdfab2f6",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6342b179-50d4-4e3a-8ee2-23cf480ce485"
        },
        "item": {
          "id": "ab8698d3-3815-4020-8683-f82788d5490d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "79aab03c-a980-48a9-86ab-a534eb82301f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1404,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497d376e-26f5-4170-8562-b2f8a0f9d64b",
        "cursor": {
          "ref": "c1a1efc4-ec2a-401b-b454-734414af3fcf",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2ad733e0-3525-43ec-b9de-0ed66fe2d81e"
        },
        "item": {
          "id": "497d376e-26f5-4170-8562-b2f8a0f9d64b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e13a45e7-351a-4c56-82da-7818eca9225d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c304af-5e02-4cca-9d18-b11ae40b8908",
        "cursor": {
          "ref": "9accfaf6-2084-4f7f-b05f-c411c4fa432a",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8f4215a9-6156-467d-9a56-b3c3e1603a53"
        },
        "item": {
          "id": "d0c304af-5e02-4cca-9d18-b11ae40b8908",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f16ad120-127f-4f8b-931c-3a79929123e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec28c1b-02dc-4834-9d91-28778407857e",
        "cursor": {
          "ref": "79a1e54e-7bd3-47a7-801d-7cefecf2e4e9",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4ec4f17c-5e6b-4cd1-9a7f-175cd7bfa1c2"
        },
        "item": {
          "id": "bec28c1b-02dc-4834-9d91-28778407857e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "098d2e11-6678-4cd5-aa4e-d8fc43386c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c783fe-e896-4ed3-8566-4de8a97a9bca",
        "cursor": {
          "ref": "e74c3920-9eb4-44b5-a354-d3739cfa4795",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "92efd2a7-45fb-4ba4-a75a-489d8224a776"
        },
        "item": {
          "id": "03c783fe-e896-4ed3-8566-4de8a97a9bca",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bec0dac9-ab68-4943-a110-58aaf4ecd156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7434fb0f-70c9-4dbe-bc83-26f146cca65c",
        "cursor": {
          "ref": "1eb7f9e0-d6f3-4ee9-863f-4467dcf40990",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "de9e4970-2fe5-4418-8a8a-2a89247efabb"
        },
        "item": {
          "id": "7434fb0f-70c9-4dbe-bc83-26f146cca65c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "85d9e60d-3fbf-4bc7-9228-1fab4cf1d47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ad2990-ccdd-476e-b298-5acf7705793a",
        "cursor": {
          "ref": "7ca6914f-8da8-4f0e-8cf4-fbfd7182cd1b",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "647b2e65-fbc5-48f1-8b63-805c2528f784"
        },
        "item": {
          "id": "79ad2990-ccdd-476e-b298-5acf7705793a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "613b768e-6f38-4610-8afd-6ab749ddf3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8657f16-14a2-4fc1-a766-603eb1aa1aac",
        "cursor": {
          "ref": "6a103e10-ff31-4cb8-9f53-05694e19a3a3",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "17fa072a-af5b-4dad-8268-4dc771c8e213"
        },
        "item": {
          "id": "d8657f16-14a2-4fc1-a766-603eb1aa1aac",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2838e1f3-1b94-4149-9063-833041a3e277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3496585f-cfa6-4c3e-a054-daf71c258c71",
        "cursor": {
          "ref": "7fa9cc0d-bfc0-45f6-9000-81b1ca1f75c9",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d8860397-e666-4fa8-a7b4-822540946c01"
        },
        "item": {
          "id": "3496585f-cfa6-4c3e-a054-daf71c258c71",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "35eea1e6-bf4e-4b8d-a0b9-6778b5c91fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b6c915-5051-4522-b7f9-6da4d4fe90b2",
        "cursor": {
          "ref": "ee7ead37-d78a-4793-b3ed-76526e8e743f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a07c1439-b3c7-473a-bbff-5ab4fb147072"
        },
        "item": {
          "id": "53b6c915-5051-4522-b7f9-6da4d4fe90b2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "005749bf-bf13-49a8-9d2a-922723725337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32f3baa-760b-4082-b2cb-0fa1c82f199d",
        "cursor": {
          "ref": "114e3ebe-dca1-45ea-aa3d-961b30033cbf",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ff62a5e4-23dc-499b-9250-3229fb670dca"
        },
        "item": {
          "id": "d32f3baa-760b-4082-b2cb-0fa1c82f199d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "83f5e8c2-d0b2-4df0-8b8f-ab3f84c7045b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e840ef8d-1876-49ec-b0e8-0aa3063c3648",
        "cursor": {
          "ref": "b7ad1fb0-adbb-4e44-8100-5ac7afb93bdd",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6ffe5ea2-b785-4830-a577-b4c7f960a120"
        },
        "item": {
          "id": "e840ef8d-1876-49ec-b0e8-0aa3063c3648",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "12a228d0-f110-499e-8edf-799451c4b5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6690ee18-03a7-4c54-9100-49220485b955",
        "cursor": {
          "ref": "42f5182e-1446-4198-8d3d-2955a5106398",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c8c32bd7-da79-4a01-9646-aaa1475ea56b"
        },
        "item": {
          "id": "6690ee18-03a7-4c54-9100-49220485b955",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ac2406a0-2e0b-4a78-9d43-3e6216c4d457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23211b7c-c007-4d3f-a7c8-b72a43092d95",
        "cursor": {
          "ref": "a0a170f9-47b1-4313-80ba-e9ac9a2dc968",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3fa7b061-e006-416d-9c8a-56bb71fafe03"
        },
        "item": {
          "id": "23211b7c-c007-4d3f-a7c8-b72a43092d95",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a7fe41e2-1020-4426-bc7d-a4a39c43e87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c7dd2a-2061-40ec-842e-0357a7a05337",
        "cursor": {
          "ref": "09daeb77-7c0b-4acb-a020-8aa7a0951e57",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "13f1d024-cdde-422d-9edf-fe70b058fc54"
        },
        "item": {
          "id": "e8c7dd2a-2061-40ec-842e-0357a7a05337",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e9ba9bd2-254e-4c5e-b507-fdb98cfc49e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfddc3ad-d209-44d9-89a7-2b74ade79817",
        "cursor": {
          "ref": "3ec2edd6-16e1-4b4c-9e5c-519dbf167b2d",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7925b197-6a6b-4be2-b244-8e68c30412af"
        },
        "item": {
          "id": "bfddc3ad-d209-44d9-89a7-2b74ade79817",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a79032fc-36d9-4070-a0a7-c54f04ebeded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def5fd40-0a96-4acc-8acb-29ae37d149be",
        "cursor": {
          "ref": "cbb82604-ce22-4ee7-a432-ed57c2a472f6",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "531365a4-b2f4-4f59-ab05-02deb014204e"
        },
        "item": {
          "id": "def5fd40-0a96-4acc-8acb-29ae37d149be",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9f753220-2c5c-40a9-92ba-0456bab3ec70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f87c1f-4550-40b8-aaa3-9c9753205c4e",
        "cursor": {
          "ref": "f7879f0e-068a-42ce-8555-833706137026",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e457b13e-ad54-419a-8e6a-736b26e13680"
        },
        "item": {
          "id": "21f87c1f-4550-40b8-aaa3-9c9753205c4e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b73598f2-9de0-4e78-a76e-b7ff0202c189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27adaef-8466-4d2f-b2d4-64963220510d",
        "cursor": {
          "ref": "6bc4309c-e759-4dbe-896f-2ea49ff1d629",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d3f44f0c-dcc9-4466-9287-9d31a47cb84c"
        },
        "item": {
          "id": "b27adaef-8466-4d2f-b2d4-64963220510d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ce57af30-c82f-4409-bb79-983a05362b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15c7123-3be6-4093-8c85-638fe22d58c3",
        "cursor": {
          "ref": "4f6b75eb-2df3-4092-aaea-c4e314a708f4",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "99ce9ae6-62f7-46a0-bf4e-640efd536edc"
        },
        "item": {
          "id": "f15c7123-3be6-4093-8c85-638fe22d58c3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "504da645-fa8f-4cb1-8830-6ecd7108263c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f959afb1-b131-4a5d-a4f4-0696ad14af19",
        "cursor": {
          "ref": "63a83494-b0aa-4ff2-a880-8a2e0622d2da",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5e814e87-aa54-45c1-ae9f-4d3792adb08c"
        },
        "item": {
          "id": "f959afb1-b131-4a5d-a4f4-0696ad14af19",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "91e42372-579f-49ea-8b95-21fca9ad37c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2828230-15b5-4f04-aae3-5a00d73059bf",
        "cursor": {
          "ref": "53bc436d-bf6a-4767-968b-0ab05d319da8",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d8e607e0-5df1-4141-ad7b-83686b3cfbaa"
        },
        "item": {
          "id": "b2828230-15b5-4f04-aae3-5a00d73059bf",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "32f4f554-5e55-4818-bc54-a5b797a4e992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9458986d-29b8-49b0-8daa-bc90b0b552e4",
        "cursor": {
          "ref": "a2724879-dbe0-449b-ac60-443168fee313",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e934bb5e-6b74-4037-bbeb-9cc5d58c79f1"
        },
        "item": {
          "id": "9458986d-29b8-49b0-8daa-bc90b0b552e4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "55b0b984-176a-4767-80cb-1fc4d9b9e38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1a9ea3-8a24-4445-9170-ac7f83f3bd97",
        "cursor": {
          "ref": "bb80c579-cb3f-48f3-92ae-272a6c144f2a",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d7a5100b-b0ed-4d6e-b615-fd0bbe2fb47e"
        },
        "item": {
          "id": "ef1a9ea3-8a24-4445-9170-ac7f83f3bd97",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6ce246fb-5823-4a03-a238-2b0325580bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffb8fc8-4218-46ae-891d-359d6cafd6cd",
        "cursor": {
          "ref": "0e11330c-f0c8-471c-aced-5c6c31156e1c",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ec58a835-81cd-4c20-b972-d70dcc541fc7"
        },
        "item": {
          "id": "5ffb8fc8-4218-46ae-891d-359d6cafd6cd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "145afbba-10f0-492c-bc7c-2fa91e53a2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912e0e49-d412-46d2-bc51-2258e38ac057",
        "cursor": {
          "ref": "c670ac9e-736f-4042-a58f-65b309f830ba",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b8f8f105-0848-476b-8bc5-ec98c7154572"
        },
        "item": {
          "id": "912e0e49-d412-46d2-bc51-2258e38ac057",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "472d9c6c-794d-4c20-b547-70595f437563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fa5f58-c504-4584-8723-487f60ce1b67",
        "cursor": {
          "ref": "46c479af-9ece-4760-8a37-8c2ae42ef15a",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "363fc23a-a7d3-4d28-9704-583fbbf1b2f8"
        },
        "item": {
          "id": "79fa5f58-c504-4584-8723-487f60ce1b67",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "25a0ddb5-a54e-4888-9ca9-153c6e1f0bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28711049-7c71-4d12-a27f-3b1e7856a943",
        "cursor": {
          "ref": "fadc2854-80c3-4f74-bd73-20efcc1b9539",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "92bf4796-0cdb-43c9-bbc1-a845fffa7d82"
        },
        "item": {
          "id": "28711049-7c71-4d12-a27f-3b1e7856a943",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e7846e81-7ca1-4987-8794-d126e18c5004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9211e8-f8fe-4de7-84fd-60ebaf2982c7",
        "cursor": {
          "ref": "f40c87d0-e551-4f5a-a633-b87b776f2edd",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "07692e70-7d6d-48df-9ed9-44298e9c432f"
        },
        "item": {
          "id": "ed9211e8-f8fe-4de7-84fd-60ebaf2982c7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2e6c5bb4-0140-4e5d-8d33-76a010cf1e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69186b0-8471-4550-9d47-abb26eabca52",
        "cursor": {
          "ref": "853ac0c4-3f67-400a-b141-04395d9e9277",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2b7a1d3c-1d97-4f94-95c0-8b76cb42604c"
        },
        "item": {
          "id": "a69186b0-8471-4550-9d47-abb26eabca52",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0bf21f6b-45e8-462d-8682-911f54d41171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bacf8c4-910e-4aea-9c2d-a9aeefdca61c",
        "cursor": {
          "ref": "f592ef74-ceff-4330-9a70-62e935f8bc1c",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b0c31bd6-dbf2-438c-8138-fa2c48742882"
        },
        "item": {
          "id": "1bacf8c4-910e-4aea-9c2d-a9aeefdca61c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f2de7dee-22cd-4cee-84d3-33f80f97e514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a623c4-620f-4172-aa48-62525f6cd9bb",
        "cursor": {
          "ref": "a803aeed-eb2f-4d17-a5ed-4674dfb61d73",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a5887c5e-6ed6-4886-8496-de1f78b1838f"
        },
        "item": {
          "id": "86a623c4-620f-4172-aa48-62525f6cd9bb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8554e0c0-6d32-4e7a-b0be-fdb5e4a9f694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3063b90-798a-456c-ba26-3f38689ceff6",
        "cursor": {
          "ref": "4b04870e-ef71-40ff-90c1-edffb1590097",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "140c6ded-f46d-4330-a8b0-885df92b6b19"
        },
        "item": {
          "id": "f3063b90-798a-456c-ba26-3f38689ceff6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ef407949-b76c-4e69-b2e0-387d2c76f90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf86096e-5181-4d57-9214-56a4bd473d97",
        "cursor": {
          "ref": "8e0eb28c-e6c0-4cf5-a65f-5795f576cfe5",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7e07cb4d-58ae-4df4-8635-22929b9dc118"
        },
        "item": {
          "id": "bf86096e-5181-4d57-9214-56a4bd473d97",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "da2d55b6-8327-4d45-a429-67146fefa48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef487b0-d509-482f-b003-86a1f27fa12e",
        "cursor": {
          "ref": "9def2276-2f6a-4cbc-a8a0-47832a3db35c",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "22fd7084-8320-467a-860b-8730947f4b91"
        },
        "item": {
          "id": "7ef487b0-d509-482f-b003-86a1f27fa12e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1ace1992-b34e-4703-bef9-93558f55337c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b891a3-f804-44e5-a96c-8fca32266d84",
        "cursor": {
          "ref": "b0ae3e73-3970-4c9f-a4e5-9809ad681870",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "627ef7d4-eea7-44bf-bd7d-aff998b521a7"
        },
        "item": {
          "id": "85b891a3-f804-44e5-a96c-8fca32266d84",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4754194b-c36d-436f-8e10-a30e9e58a536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d387b85d-f41f-496a-943e-d29f1c55fb69",
        "cursor": {
          "ref": "ce6378fe-4635-40ce-9362-139972208152",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "bdb6880b-9fe4-4ad8-ab01-db7f83d55a5f"
        },
        "item": {
          "id": "d387b85d-f41f-496a-943e-d29f1c55fb69",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4113e78a-5093-409b-9906-6a74a7ae991f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc4eeda-0c36-4a88-a14e-a6838afdd0a8",
        "cursor": {
          "ref": "75b63347-ca24-408a-aa01-d5e17994b9c3",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8b99a16e-08dd-4068-9b69-78e038040fa9"
        },
        "item": {
          "id": "cbc4eeda-0c36-4a88-a14e-a6838afdd0a8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7c2877c0-92b1-41de-8d62-6d74bf90a6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01554a3-92eb-4e1a-a699-9af6211b0a48",
        "cursor": {
          "ref": "dab068da-c11f-4b89-850f-10f6ebf0dbc3",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f7232241-dcfb-425b-b246-a45aaed51d70"
        },
        "item": {
          "id": "d01554a3-92eb-4e1a-a699-9af6211b0a48",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "79a32345-9ec9-4b4e-9634-81fe98d1b12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978f5b5d-a318-4caf-b8a1-8be62f0484b9",
        "cursor": {
          "ref": "233fb706-8ed4-406f-a8e6-aed62619a55b",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9b8035cb-44a2-4e36-b1c0-30096437406a"
        },
        "item": {
          "id": "978f5b5d-a318-4caf-b8a1-8be62f0484b9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "393b0b12-57ab-4392-abcf-ebc63a3bf67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c351adcd-d8fa-4c41-bf32-8a848f67ece8",
        "cursor": {
          "ref": "1bd8eaaf-d64b-4a39-9603-8c630e1f7b77",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3932b940-9173-4383-8783-0694f448f2c6"
        },
        "item": {
          "id": "c351adcd-d8fa-4c41-bf32-8a848f67ece8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "550c34be-fbb6-44c9-a5f1-681780f10de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6b9629-fdf3-4d33-9fb6-aca9183751b3",
        "cursor": {
          "ref": "b891505f-3a13-4882-a123-9d0afe5cbe13",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "57770916-288c-45e9-87f3-62844dc06b40"
        },
        "item": {
          "id": "6b6b9629-fdf3-4d33-9fb6-aca9183751b3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "50de09e1-0220-4e4a-b4c5-704cd863a515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ea7898-6f13-4348-934b-0387d73d0ed0",
        "cursor": {
          "ref": "75a91897-e67c-47ef-9669-338ccee86c77",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c2397906-f73c-42be-baed-e49f0e4cc832"
        },
        "item": {
          "id": "45ea7898-6f13-4348-934b-0387d73d0ed0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c60ecb67-96fc-4750-9d8e-d8b55dcd879f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c63b1c1-0ce2-4019-966c-e2dd16292edd",
        "cursor": {
          "ref": "34ad4384-bc9b-4a88-b68e-663d5ef69a35",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2a2a7d3a-1edf-4866-aa89-d9c2a2ceb217"
        },
        "item": {
          "id": "9c63b1c1-0ce2-4019-966c-e2dd16292edd",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f70eebcd-1875-4523-9a63-da45b230ddaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b409f5-46ea-48ee-bfd8-d97d911f4977",
        "cursor": {
          "ref": "057e1077-b19a-4b25-b4cd-f8de64637767",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1e8cf334-ce4f-42d6-a28e-337824be30cb"
        },
        "item": {
          "id": "21b409f5-46ea-48ee-bfd8-d97d911f4977",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e69867f9-e1e8-43fe-bc58-8354cda27fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31770044-8c41-4dca-b792-62477b3c0c38",
        "cursor": {
          "ref": "2b330c3b-70af-41df-93ac-c0438ca01b31",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ee7158c8-a2d4-4d6c-8319-23206116fc8a"
        },
        "item": {
          "id": "31770044-8c41-4dca-b792-62477b3c0c38",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "77a62a54-aeb6-4387-917a-b5d8d19eafa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64142494-a9a8-44de-a96c-1440c0f851a9",
        "cursor": {
          "ref": "49c9ea9b-0853-48a6-ac0e-fdf902dfc9a5",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c2390f35-ed8a-49e6-9d77-d3004243e356"
        },
        "item": {
          "id": "64142494-a9a8-44de-a96c-1440c0f851a9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9bf1ad29-30ae-4ebf-a9de-c8eb6ded4561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f996c7-def7-4e5f-a15b-42368c9e837c",
        "cursor": {
          "ref": "85dc9c5e-bca3-4721-ad7a-8bdc3f61408d",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a8270d58-130c-42ad-a9fe-e50cfd8d3f16"
        },
        "item": {
          "id": "02f996c7-def7-4e5f-a15b-42368c9e837c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a7e03bd0-3dcf-4ec1-baea-1af945b9ca88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33eaecd3-ab64-4083-8d9b-ead84b6935c1",
        "cursor": {
          "ref": "5ef273cc-e072-4747-934a-168bc96cc83a",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5c59afb2-2285-4f43-ab29-303a68d6d187"
        },
        "item": {
          "id": "33eaecd3-ab64-4083-8d9b-ead84b6935c1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "eb40841a-6085-4446-a321-a83b29be5233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1caa51d-0413-4742-aa51-8a6af8323625",
        "cursor": {
          "ref": "7de90cc5-901d-4b8a-9b86-add4aac3892c",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3ceb6332-dc7e-451b-8f63-f2a9b691c7f4"
        },
        "item": {
          "id": "b1caa51d-0413-4742-aa51-8a6af8323625",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5ef10341-5cc2-4dde-ab9f-eb614c63f622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236bfc5d-d8c6-471e-b36f-c787f8134441",
        "cursor": {
          "ref": "da0c022c-6916-4a2f-9536-139a5cde8b59",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e8a39194-2e15-4f95-831c-f4a16d0bc3ec"
        },
        "item": {
          "id": "236bfc5d-d8c6-471e-b36f-c787f8134441",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2be0ffb0-bf94-438e-a5bd-84147a46028e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925afd89-4cef-491f-a73a-1713f1065d01",
        "cursor": {
          "ref": "0c30bbb8-b724-4aaf-967a-3df15920b39e",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1bfbe931-157d-4a9b-a1c2-8709c89ead61"
        },
        "item": {
          "id": "925afd89-4cef-491f-a73a-1713f1065d01",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "3b8f0ebb-bed7-46ba-a0eb-7df7543bf29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "4b71f227-d08a-4b14-a8ac-09141b696aa0",
        "cursor": {
          "ref": "f5b4c353-7b1e-400d-bbde-8d530f48b5d1",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c037a4de-add4-4b17-bf38-5f1dea3e18fe"
        },
        "item": {
          "id": "4b71f227-d08a-4b14-a8ac-09141b696aa0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a70e8450-2ff5-414d-bda4-631b0156d3d7",
          "status": "Created",
          "code": 201,
          "responseTime": 8711,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc7ca0d-aa9a-44e7-a011-fb3eae7777cb",
        "cursor": {
          "ref": "e39675ef-3a99-4b7e-9606-d16db221bbb5",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "aab2de0d-5977-4fe3-bbf4-03d7fc393b17"
        },
        "item": {
          "id": "fbc7ca0d-aa9a-44e7-a011-fb3eae7777cb",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1b700124-ec76-45a2-b490-a7c80f89112d",
          "status": "Created",
          "code": 201,
          "responseTime": 7807,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "05276c0a-3e56-42a3-80ce-fa1d9829e5b7",
        "cursor": {
          "ref": "2e31c219-0f0a-42ae-b040-fe238ffd5729",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8f13682b-7ba6-4be6-b4b9-fa85b23824ae"
        },
        "item": {
          "id": "05276c0a-3e56-42a3-80ce-fa1d9829e5b7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8d565bc8-5486-4b05-88a7-f52c5d25d4b2",
          "status": "Created",
          "code": 201,
          "responseTime": 7991,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8973a511-4a34-4664-a51c-c57c3db72516",
        "cursor": {
          "ref": "6f4be057-55aa-4202-83b5-ba3b2a9930c3",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "449bd9ee-f658-469c-980c-73e62eac4935"
        },
        "item": {
          "id": "8973a511-4a34-4664-a51c-c57c3db72516",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c1006845-c93d-4c1d-bd24-535b50edf6ba",
          "status": "Created",
          "code": 201,
          "responseTime": 8534,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a662e1-5dc6-4e70-a6e1-211fa0027aee",
        "cursor": {
          "ref": "b9e2eef3-86f2-4a7f-908a-0cb348bbdbfc",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f68bb25b-7c8a-42dc-b0e3-b30dd6cd88bf"
        },
        "item": {
          "id": "f7a662e1-5dc6-4e70-a6e1-211fa0027aee",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "361650ec-00bf-4936-8794-9662c9e03fef",
          "status": "Created",
          "code": 201,
          "responseTime": 7627,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8d840d-7518-4d4a-8515-f9ec8b89372e",
        "cursor": {
          "ref": "59b7e03a-2a87-41c7-95ce-a0f732c7625a",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c1a4f20c-3a89-4511-9203-f7a44358d3a9"
        },
        "item": {
          "id": "be8d840d-7518-4d4a-8515-f9ec8b89372e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1aa51647-1f4f-4032-b696-2158cf74a92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "30e8f620-32e1-43d3-975d-cd572289a4d2",
        "cursor": {
          "ref": "824a5a70-6956-44e0-92d4-214ab873f729",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b653aebc-e0ed-4fa3-817e-6bde3a9f5eb9"
        },
        "item": {
          "id": "30e8f620-32e1-43d3-975d-cd572289a4d2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0be31898-834a-4d98-b8b6-5e619079a74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a016bf-1175-45b3-b6f1-af1e1509d719",
        "cursor": {
          "ref": "ad0b154c-ecfd-48a1-a507-0346c0059b86",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "78854d91-1497-4530-9573-d942a75e5eda"
        },
        "item": {
          "id": "d2a016bf-1175-45b3-b6f1-af1e1509d719",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5177011c-3d0b-42c3-8529-e50786778607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6386b69c-d317-4520-a280-ec69fa4ac67b",
        "cursor": {
          "ref": "e260c332-228b-48ab-a0f4-788233379c7c",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ea8828e5-b344-4c32-81ed-019330712b3d"
        },
        "item": {
          "id": "6386b69c-d317-4520-a280-ec69fa4ac67b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d35caef9-b212-4def-ad04-05f267eb4ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d6f481-0d78-41ff-a2ba-d318eaac4027",
        "cursor": {
          "ref": "8726a658-261c-458f-9dea-2301843f18e8",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "689ea24e-be67-4561-be71-d7ede80006c0"
        },
        "item": {
          "id": "e8d6f481-0d78-41ff-a2ba-d318eaac4027",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8860154e-8556-41ca-b32a-5a2f25b552ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682f58f7-5951-4087-b40b-528147602c01",
        "cursor": {
          "ref": "69226b21-69e4-4fd5-9c32-da1e1393b2db",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "81fff979-c9e6-438e-aa90-dcd737b18803"
        },
        "item": {
          "id": "682f58f7-5951-4087-b40b-528147602c01",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "207ffce0-2ed2-4084-b459-c234fda48d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca652b9-9bca-437d-89b9-397f59bb00a4",
        "cursor": {
          "ref": "52f30880-5732-4bde-99a9-086514a03c32",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e3b7ea7f-4c51-440d-a841-8673a70153ff"
        },
        "item": {
          "id": "5ca652b9-9bca-437d-89b9-397f59bb00a4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "abd76de4-f6ff-4cd3-90d8-6413f3436fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5713a994-4c43-41a8-8995-3d9654761444",
        "cursor": {
          "ref": "2c1feb7e-4d42-4638-9643-ac15265d66f2",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0d948af2-d8f8-4ec2-b8d0-4760f445893b"
        },
        "item": {
          "id": "5713a994-4c43-41a8-8995-3d9654761444",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c572966d-ce22-490c-b077-1922386d16b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde8bf49-4fec-4bd2-a2ef-c42988688e21",
        "cursor": {
          "ref": "00298165-97c9-4f4b-b3d5-af2091f3fb18",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fc91c44f-a638-444a-8ca2-ba667a4a861c"
        },
        "item": {
          "id": "dde8bf49-4fec-4bd2-a2ef-c42988688e21",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "56026ed9-0561-4b8c-8fef-df0e7a64edd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94960848-059e-4a2e-8972-d70e2758e472",
        "cursor": {
          "ref": "44ae2d6c-4005-4107-8976-02b445b18fdb",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bfee8250-1ba8-4856-a08b-24d170e22a72"
        },
        "item": {
          "id": "94960848-059e-4a2e-8972-d70e2758e472",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d0946cc6-c798-4305-929c-c3f64b2c1913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a9031f-7123-4281-86cc-adb53becb239",
        "cursor": {
          "ref": "86ab8ee2-b71e-463c-a535-a3cc4c68d41c",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "adcc0c29-940d-4a94-9384-d8f15419787a"
        },
        "item": {
          "id": "79a9031f-7123-4281-86cc-adb53becb239",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2bc3091d-ab08-4b40-9319-01aa7108f629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a478f7-9009-459f-b018-138a6654f520",
        "cursor": {
          "ref": "938a28fe-f66d-4615-a372-c35e709f882e",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ed3ba1ab-a851-428a-b588-c7a674d54c72"
        },
        "item": {
          "id": "41a478f7-9009-459f-b018-138a6654f520",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6884528d-224e-43f2-939e-8a360d308db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4cec5b-c910-4fe4-9635-d10747edc37e",
        "cursor": {
          "ref": "db532dd8-3a5d-41e6-aee9-f15f9b8c2ebf",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f5873f02-1fc5-457f-8b76-2d23a350bde7"
        },
        "item": {
          "id": "5f4cec5b-c910-4fe4-9635-d10747edc37e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f92e19bf-9ad1-4793-a713-8a6ffa795c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a7fa03-6f3b-4c7c-943d-77244ad01588",
        "cursor": {
          "ref": "a7f5b76d-7207-4f42-b244-df5a1c93ad9d",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1bcd798d-e026-4600-905d-9db77338f177"
        },
        "item": {
          "id": "84a7fa03-6f3b-4c7c-943d-77244ad01588",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f6d34396-a353-4e85-bc65-db56f09b2bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76e8367-0946-4483-834b-5d749ca81d82",
        "cursor": {
          "ref": "8c3be4d0-706b-4c16-889e-2bd7c02a7780",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "596c39f9-90ba-4eb8-b65b-5793bb9692f7"
        },
        "item": {
          "id": "a76e8367-0946-4483-834b-5d749ca81d82",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3867d655-5b91-4e07-a681-e149f5f10c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab4f7fd-0d21-4eef-ae66-0a29a511a0e2",
        "cursor": {
          "ref": "893f27e8-a1d6-4e5b-9680-a292b9b2ba9e",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "954dfda8-710a-412d-a876-3d7970097e5f"
        },
        "item": {
          "id": "5ab4f7fd-0d21-4eef-ae66-0a29a511a0e2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b6a665fe-36a5-4aec-90f7-75b3fe6afdb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a98347-0bf6-42c3-a122-4dc380aaeb5a",
        "cursor": {
          "ref": "21d1ec1e-9203-4560-9e6a-361baff9ae1f",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4c1f921e-1e5a-4b80-9d53-f225ab6e830a"
        },
        "item": {
          "id": "18a98347-0bf6-42c3-a122-4dc380aaeb5a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c56aaff4-bb7b-4656-93d3-f23ebc62c413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6faedb-1428-427c-876e-8b9776d07e90",
        "cursor": {
          "ref": "e14d31d7-b719-49ea-8ec6-142823820efd",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fe27318c-7dde-4eeb-a93d-a6688b01de79"
        },
        "item": {
          "id": "5c6faedb-1428-427c-876e-8b9776d07e90",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c599d236-096d-46a5-ae28-e6edb0b8c522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43243dac-f951-4e17-9443-7683cd0cf49a",
        "cursor": {
          "ref": "b9fe53da-97ff-456b-a5b3-4d69f56b264c",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4ca5fb44-4fa4-459c-9b75-542acbccd0cc"
        },
        "item": {
          "id": "43243dac-f951-4e17-9443-7683cd0cf49a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "714c3afd-6a53-4762-904e-dce20a1beb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a35159c-1e9b-4983-a6a5-63b197d4106c",
        "cursor": {
          "ref": "8647dd84-bfe3-4261-b543-95d569e928f1",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e8206409-8324-4336-8542-631e74d1a049"
        },
        "item": {
          "id": "2a35159c-1e9b-4983-a6a5-63b197d4106c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "16248a87-b657-43d3-9c97-8747a5668b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc51ae61-e3cd-448f-9674-57a9077f45c1",
        "cursor": {
          "ref": "68ca4dcc-7b08-44d0-958b-573a9ab5945f",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "aa0b8174-3597-4b2d-ae80-4e47fee98810"
        },
        "item": {
          "id": "dc51ae61-e3cd-448f-9674-57a9077f45c1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0cdbf12b-ee21-4c9e-9a36-edcc2eaa1421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b97836-143f-4e63-9945-c246cec68c70",
        "cursor": {
          "ref": "4a30b92e-820d-4036-9ccc-f5c235cb6344",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8d44fc64-2a51-4be1-8e79-ca9a358f501f"
        },
        "item": {
          "id": "54b97836-143f-4e63-9945-c246cec68c70",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c58a4ae2-0d24-44a8-b7ee-bb3a5a832de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438066b5-fa29-4b47-a321-c17475336275",
        "cursor": {
          "ref": "a2a51c38-3e01-4a18-ad13-9963a46d7dcf",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "30dcdb74-55c5-4f11-aeaf-706c68cc04da"
        },
        "item": {
          "id": "438066b5-fa29-4b47-a321-c17475336275",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "73bbef56-9749-444b-bb26-ee9cfb8db201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2a98c4-ceec-4482-81eb-dda0b931b71e",
        "cursor": {
          "ref": "e08b69e5-ed71-4648-aba3-bf108addb140",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fd106d08-d803-4401-b48d-c14a461d41d8"
        },
        "item": {
          "id": "bd2a98c4-ceec-4482-81eb-dda0b931b71e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c108fa3e-1900-44c9-943f-75c11fb076bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289b6f88-5943-4bb7-bd5c-7a017bbe1ff0",
        "cursor": {
          "ref": "0938d0cd-a6e6-44bb-a487-faa5aed0d746",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6835f137-a0b2-466a-9efa-ed81feb24b24"
        },
        "item": {
          "id": "289b6f88-5943-4bb7-bd5c-7a017bbe1ff0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "567a7db4-955c-432c-b57c-0dd322d7fbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab5275b-51e8-4cac-bf4f-3ab61d7ff552",
        "cursor": {
          "ref": "41f8ed0b-36e9-49ac-8b70-2df97dee64cf",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0ba0dcbe-fcef-4992-ba3c-24927e745659"
        },
        "item": {
          "id": "3ab5275b-51e8-4cac-bf4f-3ab61d7ff552",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "70070ab7-d1c6-4ec1-bcb6-79e290b328ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d811ed92-7034-4feb-820b-8c8c08cbabe3",
        "cursor": {
          "ref": "e867fec9-2b4d-4746-bc8a-1c1dcb6ec3e6",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6d331286-0396-4372-8cda-179edfb887ae"
        },
        "item": {
          "id": "d811ed92-7034-4feb-820b-8c8c08cbabe3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f15f8f63-3723-444c-afb8-7012577ed1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6668e0-c692-4b41-b4c0-3fb0ef11f622",
        "cursor": {
          "ref": "887d9956-1832-4f5f-bb21-e90979e10bbf",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d36240c2-ed2a-4dda-a3cf-322562249666"
        },
        "item": {
          "id": "5c6668e0-c692-4b41-b4c0-3fb0ef11f622",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7fbcf434-e392-45ae-ad11-cff5cb087c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc5c975-b750-4ed9-8f9f-e5f6c535b303",
        "cursor": {
          "ref": "5dd8a2f6-ae4a-433d-b250-83e5ac523e85",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0ad5c4f3-56f6-4d30-875d-7c0a3dbaff10"
        },
        "item": {
          "id": "0fc5c975-b750-4ed9-8f9f-e5f6c535b303",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "80c1dff7-ae5d-454c-85cc-de52d4ae93c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1a8b63-2142-4ab7-bcfc-d58d4801e4bb",
        "cursor": {
          "ref": "6cf7cd80-7a7b-46a8-9839-52e40df52565",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b4d69b48-d21f-4056-ab5c-1d3476aa7d5f"
        },
        "item": {
          "id": "3d1a8b63-2142-4ab7-bcfc-d58d4801e4bb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3adf7f35-5154-452e-a1e1-26bb5cae2a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526deb80-7f92-466f-a789-203223061bac",
        "cursor": {
          "ref": "382aaa2c-afd0-4dfe-a3dd-ae8d34f290ac",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "41b844b3-ec4d-4fc7-a389-e61c143927da"
        },
        "item": {
          "id": "526deb80-7f92-466f-a789-203223061bac",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5e317b5e-5260-4660-9455-430e4bebca51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ff4f45-d244-4746-b1a5-501be8064a0b",
        "cursor": {
          "ref": "281340b3-994c-4fe8-9f27-3b1a42fe0618",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1c89cec2-e8e0-4c36-9979-22f9618fc051"
        },
        "item": {
          "id": "46ff4f45-d244-4746-b1a5-501be8064a0b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4c91ec40-c29a-42b8-9a8e-bc64f6385589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58c3412-10d5-463f-904a-2a1e8be14965",
        "cursor": {
          "ref": "d120434b-fa51-4af1-bfa7-571fc7600780",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "18c3285f-2289-496a-a719-d4e632790ebc"
        },
        "item": {
          "id": "c58c3412-10d5-463f-904a-2a1e8be14965",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "302a5e63-2b3f-4812-9d0c-9599061a31c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b6f03d-6c8f-4f6e-8595-3c9abfb6596f",
        "cursor": {
          "ref": "668d439c-f5a4-481a-af00-319a30b755d5",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4f4543ff-9f78-4f94-9617-a94c0ec05042"
        },
        "item": {
          "id": "48b6f03d-6c8f-4f6e-8595-3c9abfb6596f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "32191aff-8692-463a-9909-ec598a26e201",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97dfb41f-922a-444b-9b3d-4b0ac7d4ce8e",
        "cursor": {
          "ref": "ba9e616f-61a4-4fa2-9ff7-5796d30c08b6",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "92e6912c-8f71-49e8-8972-ceb787c8c4ac"
        },
        "item": {
          "id": "97dfb41f-922a-444b-9b3d-4b0ac7d4ce8e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6a26c436-0e2e-45ae-9bf5-84c1cd3db4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1244b6-8160-47c6-9199-96c3f23d8bd8",
        "cursor": {
          "ref": "2356c2d1-d5ea-4837-b279-1be974e3600e",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "854ac455-f318-49e8-9351-b3ecb1a8ae7d"
        },
        "item": {
          "id": "ae1244b6-8160-47c6-9199-96c3f23d8bd8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bf173495-55b3-4d7f-ae2c-9ec6a8859cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a92943f-9d92-4c99-a3f1-329174a27ecf",
        "cursor": {
          "ref": "2ccf6dfe-34f3-47f3-97cd-36538fe3a699",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2592c498-52f2-461d-a2dd-5a7e3aada88e"
        },
        "item": {
          "id": "9a92943f-9d92-4c99-a3f1-329174a27ecf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "69040e1a-d2f3-4608-b8bf-93ac0443f286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc0e874-aa4a-4f1c-ac5c-84e8a6955e03",
        "cursor": {
          "ref": "5d730fca-066c-438a-99b8-f8457fef5503",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "403332bb-b094-49e5-be93-66c10b450e73"
        },
        "item": {
          "id": "cdc0e874-aa4a-4f1c-ac5c-84e8a6955e03",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e32979a7-fc01-45bd-b4df-6d215c87eee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42aeb1f2-2edc-4c08-9394-36693a8f0bd2",
        "cursor": {
          "ref": "781706f8-2c26-4b18-ac6e-f06830970051",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bbb325f4-09ec-4a5c-bb72-bc7681bbf13e"
        },
        "item": {
          "id": "42aeb1f2-2edc-4c08-9394-36693a8f0bd2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "37c5e01c-f237-421c-8814-9b178253242f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0dbf444-315c-47df-9003-e5713ab542a7",
        "cursor": {
          "ref": "ee7e5d17-1d7e-4685-8031-dd1a93c28d62",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a883b276-0fdb-4cb9-b702-dc8026f1b68e"
        },
        "item": {
          "id": "e0dbf444-315c-47df-9003-e5713ab542a7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b0dcca6f-684c-4e32-98c9-0bc538a8465c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91239041-46c4-4885-a5f3-a6ab03f8272c",
        "cursor": {
          "ref": "d2e6c2f9-8fac-4b2d-a56c-72df34e33e1a",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e0573226-be39-48c8-859e-0bb3c194f8d1"
        },
        "item": {
          "id": "91239041-46c4-4885-a5f3-a6ab03f8272c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "408ef494-b92d-462a-85a0-0f564c33fbe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f76b24-0394-4a56-808a-903aaaa88383",
        "cursor": {
          "ref": "8fd63083-8372-482e-8d1a-337e4ac0fd23",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c83b9028-d4e4-4464-a998-70b2e4917c3c"
        },
        "item": {
          "id": "18f76b24-0394-4a56-808a-903aaaa88383",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "41fc0465-a793-4da9-a2b6-7977de36550b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c87949d-07e5-41c1-86aa-f6a00ccd8452",
        "cursor": {
          "ref": "630e489d-a82d-423e-95bc-d786bc88ce21",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "be6b878b-2000-4c82-9c89-1f38a31e88e7"
        },
        "item": {
          "id": "1c87949d-07e5-41c1-86aa-f6a00ccd8452",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "27a8bfbb-8f1b-4dba-8aab-9117499911e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3e160d-d638-4df5-a310-cd4b16f91126",
        "cursor": {
          "ref": "ee5f3e05-397b-4719-ba7c-a323069490dd",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "63391757-d5e0-47da-b811-82989f0d59d3"
        },
        "item": {
          "id": "9c3e160d-d638-4df5-a310-cd4b16f91126",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8dd95c4c-c4a6-4f33-a42e-d4b6410ef8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b660613e-27e3-4698-826c-ec98a942746e",
        "cursor": {
          "ref": "1e80802d-2540-4d23-9f3a-8e4cf28b0687",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fd0c0037-09b4-4dce-aa09-d35f9ee7fed7"
        },
        "item": {
          "id": "b660613e-27e3-4698-826c-ec98a942746e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d8f39b81-6171-4a6c-9ff2-2c12a3181f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fb1200-9464-4276-ac98-9faedf349de5",
        "cursor": {
          "ref": "8945881e-6d3a-4ab5-a55c-960054e50047",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b17ecd95-62aa-4389-beed-cdf214a03b3e"
        },
        "item": {
          "id": "56fb1200-9464-4276-ac98-9faedf349de5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "689c0ad6-f8d0-4119-81ae-3a835bc1927e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef03f56-b9a7-4bae-a735-88925683a112",
        "cursor": {
          "ref": "5c2a4210-563b-4d99-a796-4b6e78aab152",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ff05a40b-7950-450f-b05d-f6143bde7f40"
        },
        "item": {
          "id": "aef03f56-b9a7-4bae-a735-88925683a112",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2c9fe5c7-1fbe-4c59-899f-39f3dde3c19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344692d0-1395-4579-ac0e-419ae631b41b",
        "cursor": {
          "ref": "89cdcd65-91e8-4299-8cb1-d6cec972e353",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "03484024-811f-49f9-a090-2cb8dbd5baa2"
        },
        "item": {
          "id": "344692d0-1395-4579-ac0e-419ae631b41b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cbcd5140-c85d-4dfc-871c-ddeec9932867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72249712-69cf-4d03-b6dc-0b0d525cfd3a",
        "cursor": {
          "ref": "883fdd09-100b-4f51-a080-1d316ebf3c73",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "48568f68-2f53-4e65-92e7-f0e1714b8e4b"
        },
        "item": {
          "id": "72249712-69cf-4d03-b6dc-0b0d525cfd3a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "14bedaaf-2d6d-4091-9709-04960c11031f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96bcbae-84eb-4725-89d1-0ef7afd27aa1",
        "cursor": {
          "ref": "1c9ad31f-4162-4c65-90f7-fa04026d1697",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6cbcc443-1b67-42fd-a8e2-ac708b72c27f"
        },
        "item": {
          "id": "d96bcbae-84eb-4725-89d1-0ef7afd27aa1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "039dde56-d082-4ff8-96d0-536932ade1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d714fb4-0abb-4e01-9f14-227b9ad812cf",
        "cursor": {
          "ref": "d13fa1c3-7c1f-4630-8279-7d64e9bac063",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3cf577e1-9aef-4bfb-a129-1acba94a1761"
        },
        "item": {
          "id": "2d714fb4-0abb-4e01-9f14-227b9ad812cf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b854fcd0-859a-4b43-8b43-96354be8471d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fb4171-499b-4f25-8c49-ebaf095888ec",
        "cursor": {
          "ref": "c6be3b68-41e7-4c3b-b381-90a35c9ce940",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8d11057d-ab74-470c-b6d5-35fd220948e2"
        },
        "item": {
          "id": "03fb4171-499b-4f25-8c49-ebaf095888ec",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "80b20fcf-286d-477f-ad54-595f328c9123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc4d3a2-1c1f-4578-8fb4-6c8166ba07eb",
        "cursor": {
          "ref": "8cf92d22-cfee-4169-93ed-f59ef1640eac",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4e82d96b-a087-4200-9ca2-b7eb08006dc6"
        },
        "item": {
          "id": "bdc4d3a2-1c1f-4578-8fb4-6c8166ba07eb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "740af896-8f75-4673-8f28-b4a538e1faff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52554fee-0cdf-4f8b-a2b8-fa00e762354d",
        "cursor": {
          "ref": "9f4ab040-58c1-446f-bb67-c1074db03d48",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fe5c0eab-44f8-4f1a-ab6b-aae0eb8f3b46"
        },
        "item": {
          "id": "52554fee-0cdf-4f8b-a2b8-fa00e762354d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "46e4fa0c-bb1c-4ef8-9270-39c707d4f745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15d8da8-339f-452b-8f36-168e599f000d",
        "cursor": {
          "ref": "31ff9e52-d799-48d5-b51e-7046d00fbaad",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f42e0ab9-d40f-4f95-9165-e74a780d43ec"
        },
        "item": {
          "id": "e15d8da8-339f-452b-8f36-168e599f000d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "06631b32-dc33-4c5f-bf4d-9f60342fb349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c4a4b7-9ec3-432d-a454-14a88d79fe03",
        "cursor": {
          "ref": "00fa6df1-14a1-4f13-aeaf-a7baff1fdf41",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c30b86d0-7a7a-4baf-a121-1898e87f7284"
        },
        "item": {
          "id": "89c4a4b7-9ec3-432d-a454-14a88d79fe03",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2a212dbf-14ed-4855-a81e-274fb03739d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df27c64-d6c1-4146-af1e-18e154563845",
        "cursor": {
          "ref": "0a43232a-d484-4009-820d-330ca4f9c9ae",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cf6c6710-616d-4e99-882c-fb4ea659031c"
        },
        "item": {
          "id": "2df27c64-d6c1-4146-af1e-18e154563845",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e0a5943a-c69a-4e28-b462-aff3e2fb3db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e94596b-6f0c-4bb6-9808-d71fba2dc342",
        "cursor": {
          "ref": "0cfce29a-900e-40b8-8a18-6962928a1052",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b53a5ace-9f23-48af-b9c9-31b34d58e93a"
        },
        "item": {
          "id": "4e94596b-6f0c-4bb6-9808-d71fba2dc342",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fabce70b-0013-42c9-8acb-8920cb07127e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de37e068-c539-4ab4-a5cd-440c27629a90",
        "cursor": {
          "ref": "93ef3fa5-cf49-4540-9519-e53915f20dd9",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "41fe0f12-4724-4f03-98a1-8b00615d2828"
        },
        "item": {
          "id": "de37e068-c539-4ab4-a5cd-440c27629a90",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "626a10b4-e3ce-4b8c-a26a-a6669db59d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7da67c9-10c2-4a07-9d42-9e6cfcc9d27b",
        "cursor": {
          "ref": "9f97cabf-65df-4d2d-8f17-a3c473390a5c",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6b9cce42-4f28-4145-a335-0a4d40484e8d"
        },
        "item": {
          "id": "d7da67c9-10c2-4a07-9d42-9e6cfcc9d27b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "19727a16-fe77-49d2-ac35-9231f3bf36b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f87c747-5bf0-416f-945c-2d3a10c88099",
        "cursor": {
          "ref": "37c3924d-fdb5-47d7-8ec2-b574d56fb1b1",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "789cb7d3-9f24-4cda-ae7b-0addf8738c19"
        },
        "item": {
          "id": "4f87c747-5bf0-416f-945c-2d3a10c88099",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0f36b888-c050-4228-a3b4-d1d5c3bda42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7866d4-5238-4d91-8566-04c1dbf28f6e",
        "cursor": {
          "ref": "b9179737-dab8-42ce-aaf4-1e952ba0f3ee",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "164b0b3c-8738-431e-a81e-1dcdfceb1a2f"
        },
        "item": {
          "id": "ee7866d4-5238-4d91-8566-04c1dbf28f6e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b42eb329-6929-4082-be96-500e5c4b6955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36039b48-5b1a-42b7-addc-790c55efcead",
        "cursor": {
          "ref": "0a0efa32-a979-4c24-84c0-d7ced88e4eaf",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "bddd704b-0202-43cb-b2c3-ed4bebc061fc"
        },
        "item": {
          "id": "36039b48-5b1a-42b7-addc-790c55efcead",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7a9fd86b-5f30-43b1-b9e7-554fde29b811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a634760c-cad2-4f80-b305-16dabe082a0b",
        "cursor": {
          "ref": "76f4c460-d9e8-4e8b-b610-714feae8074f",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f03cb804-4408-4d3a-9860-38df4167e081"
        },
        "item": {
          "id": "a634760c-cad2-4f80-b305-16dabe082a0b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0c2b33cd-8f8a-4f69-882c-7230640bd246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a71710b-b74a-4db3-b785-8128c6153288",
        "cursor": {
          "ref": "adc37f0e-cf9d-4845-b79c-0539704111ba",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b4d18d98-b0e7-4f35-82bf-ce0c36dba55b"
        },
        "item": {
          "id": "8a71710b-b74a-4db3-b785-8128c6153288",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d570ab6a-c757-46ea-a577-bb9d324dc868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77df9aa-b830-49e4-b700-f280bba823b8",
        "cursor": {
          "ref": "86cc5f56-8b3f-465e-95f0-306727f82271",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "62a6ed98-17f9-4fb8-8774-2f01faad6a0f"
        },
        "item": {
          "id": "e77df9aa-b830-49e4-b700-f280bba823b8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0c2053a2-8197-4821-8212-9d7d96e40bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3b1e55-8374-4d1f-9518-0a00a2a75965",
        "cursor": {
          "ref": "c6ce6cca-88dd-4a5e-b97a-5513d68f779c",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a61f85e0-9898-4f6e-88b8-a6bc5849b42d"
        },
        "item": {
          "id": "fa3b1e55-8374-4d1f-9518-0a00a2a75965",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "26e44c77-2221-4130-b47c-554a8442c8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf94b4b7-7aed-4554-af09-6f2fa3913ac5",
        "cursor": {
          "ref": "89dc47eb-8172-4dfc-9e32-9f2a2ca2e52d",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "28e8a3b7-4da5-48ec-815b-65dcf10c0ac2"
        },
        "item": {
          "id": "cf94b4b7-7aed-4554-af09-6f2fa3913ac5",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "bb701bae-b38d-467a-b32c-7f694b1f0859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7196ec-1bf3-4dd4-a6d8-6238594e8945",
        "cursor": {
          "ref": "caf25909-b0ad-417e-9c7d-6493eb2f0988",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "44540976-373b-46f5-af30-833f787c937f"
        },
        "item": {
          "id": "dc7196ec-1bf3-4dd4-a6d8-6238594e8945",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a9052fac-32e2-40a2-9806-c4f066f6ed25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13f05f1-5f63-426e-ae0e-ec237ed1fc41",
        "cursor": {
          "ref": "f6dbc7a5-3a7b-4348-9ee9-46cad69c3a9a",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "04eac6f8-d85c-4895-af25-d004d9bd8332"
        },
        "item": {
          "id": "b13f05f1-5f63-426e-ae0e-ec237ed1fc41",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6d8098a9-a29d-41a7-89e0-cf6b80e19fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f95569-cbf2-42af-af20-9c64ec04c8d3",
        "cursor": {
          "ref": "3bf32d78-df65-4868-aaa5-0514e7f23b5b",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1bfc64a0-2bc4-4510-8146-d505023bfbee"
        },
        "item": {
          "id": "e2f95569-cbf2-42af-af20-9c64ec04c8d3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9dd9520c-1036-445e-8530-a3dab2a806fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02d6d6b-4602-40b6-9e22-2348580de462",
        "cursor": {
          "ref": "6d38f8e3-1762-47c2-bdf3-7d16dce2b5a6",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f7e4bb19-b856-4bb4-9421-464eb1ef18b5"
        },
        "item": {
          "id": "f02d6d6b-4602-40b6-9e22-2348580de462",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f0a08c42-99fa-4f80-a7d9-da17d0e841c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f4dd54-0c81-4655-8afa-62c950d3be1a",
        "cursor": {
          "ref": "744dbbd7-b14d-4752-b9d6-a4706dc74e0a",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2b85a37d-ca7c-4c33-aa80-c3abd16a1281"
        },
        "item": {
          "id": "62f4dd54-0c81-4655-8afa-62c950d3be1a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8348086b-87f1-4dff-a8ac-702c39bc1a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e6cf87-ae19-46ee-aee8-9901b461c656",
        "cursor": {
          "ref": "1119768d-16e0-4e14-a239-9e21daf2c4c3",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "129cb835-1679-499e-b243-1a35c525387b"
        },
        "item": {
          "id": "42e6cf87-ae19-46ee-aee8-9901b461c656",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "22765465-38e6-4896-95a7-139f434bfea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc20d57-4c75-402d-91e5-20ebb552e5b1",
        "cursor": {
          "ref": "84adf720-75b1-4d3a-b399-f409fe00b491",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b03bc7ae-ce3e-4396-90ee-46d3eeaeb472"
        },
        "item": {
          "id": "cfc20d57-4c75-402d-91e5-20ebb552e5b1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bd817679-e030-40c4-b914-b1c88ddd11cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07b43e0-e9c6-4bfa-8e88-007210ce707b",
        "cursor": {
          "ref": "6d559f49-c2fe-4393-82d2-fdec3833c001",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "db669dac-df9f-4698-be1b-810b48cf971b"
        },
        "item": {
          "id": "e07b43e0-e9c6-4bfa-8e88-007210ce707b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5270af89-9bc1-4345-8b60-51eb7b0b0c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d710ea91-e519-447b-90d9-b1f6200b9ce5",
        "cursor": {
          "ref": "4b70af5e-1517-42fe-802d-e7f6066421ef",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "71566a89-a6fd-4bb6-98dc-8b13c983e466"
        },
        "item": {
          "id": "d710ea91-e519-447b-90d9-b1f6200b9ce5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0e71e60c-f873-482c-be2f-f23cbb37da99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d144805-3836-410d-b9bb-7a0e7a2c58d2",
        "cursor": {
          "ref": "3245850b-199a-47d4-8bdc-b54f602844e3",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0c8aa22b-0222-4034-8620-a9a3b3edbdc3"
        },
        "item": {
          "id": "1d144805-3836-410d-b9bb-7a0e7a2c58d2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "314862cc-7c8b-41bb-8582-6b484e07a3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3715a788-e06a-4a9d-97c9-7af47fdf4f0e",
        "cursor": {
          "ref": "3786a583-44db-4c66-acdb-832feb947572",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "44c00d99-624e-4e4a-b25d-ecc44a5ebcc8"
        },
        "item": {
          "id": "3715a788-e06a-4a9d-97c9-7af47fdf4f0e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "652794d3-6010-4ddd-a77a-2e10fd913773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7faf92-25b6-4b28-8584-68ffd6976bbf",
        "cursor": {
          "ref": "8179c173-e231-4298-8f4c-1b73162e9f56",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "25efbf3c-e67b-454a-8bfc-4f2245a0cfc0"
        },
        "item": {
          "id": "db7faf92-25b6-4b28-8584-68ffd6976bbf",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2ffafaec-6341-4f87-8fb6-a268f026e394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbf0590-0149-44e5-a96e-3fad45414df7",
        "cursor": {
          "ref": "e9ebf024-34e5-42f7-93e6-f4665813296b",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0bd92c81-d049-4352-a8d2-3fac39fb0d22"
        },
        "item": {
          "id": "8dbf0590-0149-44e5-a96e-3fad45414df7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a4a52448-b60d-41c8-a8ec-49fcfc576e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7806fcba-6922-472d-81b0-4eff0306d54a",
        "cursor": {
          "ref": "6afaafb0-3ca7-435d-ab36-01f94e54fcd6",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "159c2548-9812-49bd-a2c6-f6ea76dd9bae"
        },
        "item": {
          "id": "7806fcba-6922-472d-81b0-4eff0306d54a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7faf8ca2-3523-41c4-a9be-d61c508124aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9de4fa-3c79-423e-a48f-1e4a471436b0",
        "cursor": {
          "ref": "d247aa3c-f972-4b4f-900b-73ac6b1f16b5",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0ee5ed62-d1d7-4411-87db-a96c9d1ee857"
        },
        "item": {
          "id": "ca9de4fa-3c79-423e-a48f-1e4a471436b0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "101f7a61-a9d5-4575-bb15-624d0e62eec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d019da1-55f6-4c25-a9a8-ad12ba2d003c",
        "cursor": {
          "ref": "bc993320-c4d7-4682-943b-d647060dd1d8",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f0e61d2e-b382-47c9-9cc1-1f0522317745"
        },
        "item": {
          "id": "1d019da1-55f6-4c25-a9a8-ad12ba2d003c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b22eda09-9bcb-464c-84c3-94bbe71958b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e069d4c-66c5-49f2-8421-ae725bbeb4b7",
        "cursor": {
          "ref": "5b4e34bd-7ca2-4579-8125-a5996c5ae6ce",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5545c84f-edff-48ff-a994-d40fad555e0f"
        },
        "item": {
          "id": "0e069d4c-66c5-49f2-8421-ae725bbeb4b7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b3686558-0645-4736-aa17-de5b68743431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a6f80f-6fde-4010-bdd2-24fa2f8d4e47",
        "cursor": {
          "ref": "374641fb-6b39-4aa0-b910-5065ca654b98",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ae90d53f-12e2-4890-9bbb-5a69c6bf6a70"
        },
        "item": {
          "id": "02a6f80f-6fde-4010-bdd2-24fa2f8d4e47",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "dde7c3e0-8442-4fc1-a635-5b5565dde997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6d1613-49dd-411c-8f4a-548a89b5c6db",
        "cursor": {
          "ref": "025610cb-90f4-415d-b539-c1531fd1c406",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "67f30ce0-8a58-4800-b07d-67a0a4209047"
        },
        "item": {
          "id": "5d6d1613-49dd-411c-8f4a-548a89b5c6db",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4f201af9-cdfc-47e4-b923-7754877ecd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f317baaf-00d4-41d8-acac-16df12cd3654",
        "cursor": {
          "ref": "5fa7e6f6-33bb-4f54-98df-b73a023fd7db",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b43e60f8-4100-4f22-9ab7-84281d67931b"
        },
        "item": {
          "id": "f317baaf-00d4-41d8-acac-16df12cd3654",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d40918f7-9094-4090-8350-6d2b6a94a904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c373996-30bd-456b-b291-c64a558b7809",
        "cursor": {
          "ref": "1e9b8ade-4bbf-4a1d-ac4b-7826813f7e0e",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8285e14a-cbcd-40c3-9ba1-d16590c78fbf"
        },
        "item": {
          "id": "4c373996-30bd-456b-b291-c64a558b7809",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7579742a-8e5d-48e5-ad5d-aad6759fe992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58fc632-a860-41c6-833d-40b04a8fccd4",
        "cursor": {
          "ref": "9344bc99-3ad4-4970-86f4-dfe704dad338",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "758600a8-f696-4bde-a476-416b289487a2"
        },
        "item": {
          "id": "f58fc632-a860-41c6-833d-40b04a8fccd4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "159deff5-cbb2-4a65-80ce-69d2b3741d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea082be6-9075-44cb-84a3-9b94afd2fcb7",
        "cursor": {
          "ref": "8b49f818-9fb5-47c4-b676-b2e6c71fe898",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b38d4325-a6f8-4e49-8201-0fb95230c3da"
        },
        "item": {
          "id": "ea082be6-9075-44cb-84a3-9b94afd2fcb7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f0e37e9a-c8fc-45f9-856d-e8507a7e70a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250e779e-193a-46bb-9f8f-18818d15d38a",
        "cursor": {
          "ref": "95573bf8-47df-4e38-8861-81a1410ca969",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "311fec4e-28fb-4f99-81d8-6c6307d80a2a"
        },
        "item": {
          "id": "250e779e-193a-46bb-9f8f-18818d15d38a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b72bbdce-edf4-4972-aaa5-89e3b5f5ff85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d940cd-eff5-43ac-937c-723525e1e3d9",
        "cursor": {
          "ref": "f936580b-d190-4224-b78d-5935d4b7429a",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "745e27ef-32cf-4206-bd56-0b3af0270570"
        },
        "item": {
          "id": "97d940cd-eff5-43ac-937c-723525e1e3d9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f817762c-9b92-483f-9974-225e39ab5aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe524103-9f03-409f-bae1-15d2bf16f11f",
        "cursor": {
          "ref": "4d791f1c-2320-4ce2-aff0-d492b5a3af5b",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "41832894-c53d-4bee-a9e5-a4a21e927bb2"
        },
        "item": {
          "id": "fe524103-9f03-409f-bae1-15d2bf16f11f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1bf1ad9c-869d-4616-a0ed-2df75b0dd6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79238df9-fbc4-498e-b771-916dd1a6ff46",
        "cursor": {
          "ref": "635923da-876c-40a6-a2b1-778d70b42c85",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e2a28672-e4a7-4253-a893-530a002264db"
        },
        "item": {
          "id": "79238df9-fbc4-498e-b771-916dd1a6ff46",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3bef5f49-230a-490a-91a8-d705f9102b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3b8fca-bcbc-4f81-8c72-0885852c2560",
        "cursor": {
          "ref": "f21af526-ae2b-4ca1-8ce3-898be9a3ec68",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ade281ef-97b1-4421-aede-c68f6fe0b087"
        },
        "item": {
          "id": "ea3b8fca-bcbc-4f81-8c72-0885852c2560",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "701da5bb-0b64-4fb3-89a4-eeb6d01b62cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74bdd51-dc9e-49d0-b771-1fbe1cd33d7f",
        "cursor": {
          "ref": "506146e8-d28b-4212-a49a-81e500234107",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fd40357b-9e90-4f20-aa6e-cdbb43a82747"
        },
        "item": {
          "id": "c74bdd51-dc9e-49d0-b771-1fbe1cd33d7f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f245b7da-1a5f-464a-9e4b-20115a405078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a32a3db-86cf-4b19-a69b-6ba66f0145f9",
        "cursor": {
          "ref": "5bd73c5b-de17-4fb0-ae38-aef931eefbd2",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c794d855-b1d7-4f69-b06b-699bb8340e73"
        },
        "item": {
          "id": "8a32a3db-86cf-4b19-a69b-6ba66f0145f9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f1f64c1a-bdd5-4c16-b1f4-b6cddda12b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d378e889-ec6f-4b2f-a5c9-6d43684a3a35",
        "cursor": {
          "ref": "6d7a5adc-c724-4b36-8c10-3fb7c65bdaa8",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "95cf026e-e38e-4208-94ef-ccd223bc27ad"
        },
        "item": {
          "id": "d378e889-ec6f-4b2f-a5c9-6d43684a3a35",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "33614180-4f45-4a40-828d-f73d9f1c97c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc69917d-ebf6-449a-ba04-52f114aa8174",
        "cursor": {
          "ref": "3d6df7f0-9e73-44be-831b-59950e4738ec",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "eeda65fa-80aa-444b-bbdb-9d249a86113d"
        },
        "item": {
          "id": "fc69917d-ebf6-449a-ba04-52f114aa8174",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d78f43aa-d724-4f09-b5b2-14a3a9ee346c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73cda12-d2bf-4312-97c3-d89883a72d15",
        "cursor": {
          "ref": "d3fb4031-9bac-4982-9d5a-629f77b7bd36",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "87018f6e-228e-4e81-b8da-a6b7a2522b07"
        },
        "item": {
          "id": "e73cda12-d2bf-4312-97c3-d89883a72d15",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d14b5649-e7c2-455a-b440-68eba9003aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a477bd-7bbd-4a39-8158-1771be38a87d",
        "cursor": {
          "ref": "c8e575ee-d7b4-4cb6-ab7a-d33389389798",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3540ac91-7623-43e4-8905-40167c3f096c"
        },
        "item": {
          "id": "29a477bd-7bbd-4a39-8158-1771be38a87d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3bea7847-ee23-4768-9f8a-78edf9413e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bd1949-2045-4fa1-a15d-825b6bac6bac",
        "cursor": {
          "ref": "4a1bd7bc-6f80-43bd-86b9-ccb37b94ec05",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "fe867c87-e61b-42eb-a0c4-384d530e5722"
        },
        "item": {
          "id": "94bd1949-2045-4fa1-a15d-825b6bac6bac",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cbd3b924-98ae-4e2c-bfef-3668dca969ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332ec727-6e6f-4ef5-bc68-3fb196634380",
        "cursor": {
          "ref": "3ac39e48-5bad-4aa8-b107-219c0b228aa5",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fc7f3fe3-f805-4aa0-b32c-933a721b748f"
        },
        "item": {
          "id": "332ec727-6e6f-4ef5-bc68-3fb196634380",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5669f967-7ce1-490f-a67c-3db8216d4f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0835452a-b5bb-43a6-a3b9-3d7ece86f15a",
        "cursor": {
          "ref": "eb952829-f516-4db0-baab-611b8398ce35",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5b8d32fc-6ca1-41fd-922b-ea1a7d301857"
        },
        "item": {
          "id": "0835452a-b5bb-43a6-a3b9-3d7ece86f15a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f64d5c22-79eb-4da6-a594-23f95593f8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471d37bc-850c-4281-a244-f3d91b9ff190",
        "cursor": {
          "ref": "b0bf0df3-1bca-4f02-b723-410ebef66531",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6ffe383e-fb88-4715-b694-4d5aad303074"
        },
        "item": {
          "id": "471d37bc-850c-4281-a244-f3d91b9ff190",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8549ffe9-42bd-413e-bf2f-52b49e6195b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f036db-eb86-4cbd-92e2-c37af1b039f8",
        "cursor": {
          "ref": "89e78b98-325a-4d7e-9a8e-be82c4c208a9",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "224b5af9-00d6-4d26-afe1-bb35fedccd79"
        },
        "item": {
          "id": "20f036db-eb86-4cbd-92e2-c37af1b039f8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e8395e9c-5850-41bb-8128-0924bd7044dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354d5cc1-3915-48c6-a657-c14166bd5b7f",
        "cursor": {
          "ref": "107346c3-0b08-412a-85ac-42256bdcebf6",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9a47e8e5-e7ce-4866-a034-c08fba619fda"
        },
        "item": {
          "id": "354d5cc1-3915-48c6-a657-c14166bd5b7f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "30d2f9fb-5a59-4fec-944c-63945efb5ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95cf6997-15b3-4bb5-9e29-32bf6c444905",
        "cursor": {
          "ref": "08662ed7-3730-492f-9b89-d3517a9eac43",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a5b7e22c-0b8c-4e19-8fdf-e97c09f4b5e0"
        },
        "item": {
          "id": "95cf6997-15b3-4bb5-9e29-32bf6c444905",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9a6c6339-3555-4575-90de-2503f8629878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df3a44c-076c-4488-bcb2-43e61b7b5a75",
        "cursor": {
          "ref": "abe2dedf-061d-4d84-958a-ca86de159331",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "28c7eb4c-347e-450a-bcf0-4fa88a2b701d"
        },
        "item": {
          "id": "2df3a44c-076c-4488-bcb2-43e61b7b5a75",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "77d2469e-dbfc-40e3-a5dd-c339661f8ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43edf4fb-eaee-447f-9f94-055e822349b2",
        "cursor": {
          "ref": "5c723f6b-aec1-4dfa-9990-e732e19b955a",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "890c6648-99a7-4f01-af7f-c2d64dd79840"
        },
        "item": {
          "id": "43edf4fb-eaee-447f-9f94-055e822349b2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "be5a4b54-efd9-41d3-9194-0bb75e65f093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51591f68-3308-48cb-8823-b1fa3e1cb0b9",
        "cursor": {
          "ref": "fe58f877-9433-4def-857b-81ee9d45a065",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "863d7da5-fae4-4e61-9847-1a865e8137c5"
        },
        "item": {
          "id": "51591f68-3308-48cb-8823-b1fa3e1cb0b9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e6ddf97b-b75b-4ef5-9c8a-161c30175f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c32720-0130-4941-a7b7-aa8cb91dcacb",
        "cursor": {
          "ref": "a5d885a2-7ab6-45fc-b37b-c7a5a05bf5ca",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "97da4bf8-76c7-4390-b577-1c8543517f51"
        },
        "item": {
          "id": "e1c32720-0130-4941-a7b7-aa8cb91dcacb",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "75a46ea5-e13f-4976-bf0c-42d5ee587492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60747054-8a3b-443b-9ac7-445bc35be30b",
        "cursor": {
          "ref": "9ce553aa-f0c0-422c-bb8b-e4326161e383",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "be5b43be-aba8-43c6-ac14-ac498e99336c"
        },
        "item": {
          "id": "60747054-8a3b-443b-9ac7-445bc35be30b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7ba690c0-f6b9-43fe-a6cf-af1ae68c9888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8052983c-5a6b-4d65-a91a-abb2d84d29dc",
        "cursor": {
          "ref": "7cd02caf-bb96-499c-92e3-21647e39c5a6",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "80e82903-bec8-4c9c-bab2-109bf92b5a60"
        },
        "item": {
          "id": "8052983c-5a6b-4d65-a91a-abb2d84d29dc",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "26adb9e3-ea77-4f21-afaa-c4d1d0eb2fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b78087-279c-4d52-adc2-6c553d4dea0d",
        "cursor": {
          "ref": "1560d187-d567-4e9d-a52f-2a5a5b7e3a1b",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "58ab9bd2-bdae-4350-b4f7-1000717aff8b"
        },
        "item": {
          "id": "30b78087-279c-4d52-adc2-6c553d4dea0d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "eb630b66-623a-4bba-b67e-6552c4de1d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac040e0-ab21-4f26-ab98-df6d0c89d475",
        "cursor": {
          "ref": "1e152f3d-bde0-434e-99f7-d3b90bc4fb18",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "44b476c5-267c-498e-902d-cb1b5b893ffd"
        },
        "item": {
          "id": "8ac040e0-ab21-4f26-ab98-df6d0c89d475",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "03a36b89-4d20-4c33-bc85-dc1fa253c5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb9e8bd-a16b-407f-b36f-01e0b5a26c59",
        "cursor": {
          "ref": "31c85aec-5833-416b-9abf-d2e49109af50",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "54aedaf0-bb89-4e39-bf4e-9440bb1f999a"
        },
        "item": {
          "id": "3bb9e8bd-a16b-407f-b36f-01e0b5a26c59",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9f5ada0e-51aa-48f7-a785-0fbc360c77d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614c31aa-6504-42c4-9822-2a1b9a297a6e",
        "cursor": {
          "ref": "406c0d49-5181-40bc-acf0-995c4140c304",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "848f1d5b-1ee1-468e-8a10-3d412b993ad1"
        },
        "item": {
          "id": "614c31aa-6504-42c4-9822-2a1b9a297a6e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c60528c7-f2f3-4025-891c-23fb00590f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb54c47-2e3a-475d-a575-699369bcff5c",
        "cursor": {
          "ref": "9e412802-db22-4e2d-adcf-9226f5d53675",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0e0de7f7-845b-4d3b-90b9-13ddaeec56b0"
        },
        "item": {
          "id": "3fb54c47-2e3a-475d-a575-699369bcff5c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "16c8b6a7-5f7d-4ee1-b4ec-b9130a2430a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca742c0c-cf07-41eb-b84a-0de3a2989e66",
        "cursor": {
          "ref": "cce774cc-d1ac-4cc7-beab-09cbb9c00fe9",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a6bb5393-faa7-4566-9c99-699dbbea48d9"
        },
        "item": {
          "id": "ca742c0c-cf07-41eb-b84a-0de3a2989e66",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3af19a63-1ac8-4555-99dc-5568f0ac8c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c052534-13d2-4aa2-bb52-926c0a58e9d9",
        "cursor": {
          "ref": "65fe2481-a4dc-4592-89bd-89d5f61afcb1",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6d61423f-ee24-4102-8cd1-60af2ce7eccd"
        },
        "item": {
          "id": "9c052534-13d2-4aa2-bb52-926c0a58e9d9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "69fcdcbe-44f6-4c37-9e28-0e1932610269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079a0493-8a51-4f29-9852-0526668458cc",
        "cursor": {
          "ref": "278c07e9-eb95-4949-8a6b-71782898c7f1",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4b7c75e5-a855-4d9a-944b-0f3d88a5e355"
        },
        "item": {
          "id": "079a0493-8a51-4f29-9852-0526668458cc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9b898486-e83e-4159-8801-34872bd6bfb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d8b30e-9622-44d9-87a1-78f3e4641327",
        "cursor": {
          "ref": "87541ea7-f677-4974-8c6b-eee4f1b9b917",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6b0e5b94-81a0-4fb1-8bfd-e6e7fe807726"
        },
        "item": {
          "id": "00d8b30e-9622-44d9-87a1-78f3e4641327",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "aeef5b42-1a9b-4d34-a894-8f382a9b2138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050964a8-0788-4f73-8511-6604ca182fe3",
        "cursor": {
          "ref": "40f0431f-e01c-407c-8a31-aab48358775a",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "904e6c5f-abd1-4e58-9357-f42749db7624"
        },
        "item": {
          "id": "050964a8-0788-4f73-8511-6604ca182fe3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "98697729-497b-4c65-a88a-b16b921c21a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c039b2-689f-4ebe-91a9-941f29d32852",
        "cursor": {
          "ref": "fa29cef5-b92e-4c78-84c9-327f1a5ce3c3",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fdabcde5-6b25-4a82-a453-2008375f7bcf"
        },
        "item": {
          "id": "a6c039b2-689f-4ebe-91a9-941f29d32852",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8a87f917-7f97-4150-8007-02283a40c2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2782db9-956e-4952-8707-754db136fbdc",
        "cursor": {
          "ref": "38c5c7fb-5950-45f2-abb9-6c7b665d8186",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4ee01177-1d42-45ee-87d9-79289550cf62"
        },
        "item": {
          "id": "f2782db9-956e-4952-8707-754db136fbdc",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3de2be77-5ae0-49e3-b5dc-9b2ed86e5db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09410cca-b70c-413f-937e-f79c268ab741",
        "cursor": {
          "ref": "024bea0c-67d5-4999-8727-6cf2a3f1d2f2",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "13cc3704-d629-465a-ad7a-52e34b6cce06"
        },
        "item": {
          "id": "09410cca-b70c-413f-937e-f79c268ab741",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cfbbc941-0abc-4b78-b17a-3a3b5a16e679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5694013-860c-48c8-bae6-2641e9727154",
        "cursor": {
          "ref": "54779f94-ff14-4fca-b639-3f480edb4da6",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "488e5494-fb78-4536-adde-4bf73046a285"
        },
        "item": {
          "id": "f5694013-860c-48c8-bae6-2641e9727154",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4c05d73c-9143-462a-bc1c-a4c8c60c37fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fb6cfb-e35e-492b-b28a-7985b4b236f9",
        "cursor": {
          "ref": "b8aacd88-69e0-4fb5-bf85-7e58947d9af0",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f95c327b-089c-4704-bbc3-e36c76d1ba3b"
        },
        "item": {
          "id": "62fb6cfb-e35e-492b-b28a-7985b4b236f9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e46e24f4-cb66-46b1-9279-4fa0253634f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce41c26-e1ab-4b9b-922f-55731ef7ebf0",
        "cursor": {
          "ref": "ca108fd9-0eeb-4a30-b114-063b8c22a732",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "73f7ec2f-ce70-4693-8fb2-86df26feed48"
        },
        "item": {
          "id": "9ce41c26-e1ab-4b9b-922f-55731ef7ebf0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c0804449-3add-45a5-aa0e-bed662e04902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bc40c1-869b-4685-aaf7-ab039ef9464f",
        "cursor": {
          "ref": "29249898-3589-47c7-bf27-329b454422ea",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "be4fc505-78ad-4893-b68f-5543fdfdf478"
        },
        "item": {
          "id": "20bc40c1-869b-4685-aaf7-ab039ef9464f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a2539de1-2c32-4cfc-9323-e0f905d6890d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791afadc-ec11-4cec-ab1d-645eea77b691",
        "cursor": {
          "ref": "4c95ef15-6ccd-482e-86ca-8faa395d153a",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "90e013b1-7ca8-41ac-a62e-341bbe970184"
        },
        "item": {
          "id": "791afadc-ec11-4cec-ab1d-645eea77b691",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "fc1490a0-34f2-4beb-91eb-60f82a93e683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d49813-fcff-436d-8046-c1d647a6db4a",
        "cursor": {
          "ref": "3895bc03-1ff7-4291-bb3e-2b67d1c8c162",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b91d4c16-cdb1-4fa5-b122-1452c16c238f"
        },
        "item": {
          "id": "90d49813-fcff-436d-8046-c1d647a6db4a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4537e05d-1849-4e3f-9118-2453ada400d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c139bd-c998-4e7a-a9f3-203b2fe2fbae",
        "cursor": {
          "ref": "791461ea-5d3a-4444-845e-86f87a393fe2",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "89242ca4-446a-4024-99c5-71fce197c441"
        },
        "item": {
          "id": "86c139bd-c998-4e7a-a9f3-203b2fe2fbae",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9761b1f5-9c0a-4b00-b564-c26cb1aad5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4079f0-02c0-41c4-94d1-d04bd183fb3f",
        "cursor": {
          "ref": "6dc92aad-d8b6-4708-81ae-04ae48233ac8",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8cdbc47b-db20-4856-876d-460a2e44db30"
        },
        "item": {
          "id": "8b4079f0-02c0-41c4-94d1-d04bd183fb3f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e6f65779-ba4a-47c6-82b0-0949a0859901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c318b9-ec32-46c1-b195-ec48c54facae",
        "cursor": {
          "ref": "11077408-1303-432a-9d19-2982ddf1247b",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7769c6e4-16d8-4052-bdc1-1868b6e7de5e"
        },
        "item": {
          "id": "e8c318b9-ec32-46c1-b195-ec48c54facae",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a6c23599-ff36-4bf4-ab07-6fbad88217e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbf9656-36c0-491a-be70-aab3a8878b0a",
        "cursor": {
          "ref": "6a4e43b9-4189-461e-80ed-3560cad00f57",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9240e822-892f-456d-990a-358938bc5c4d"
        },
        "item": {
          "id": "acbf9656-36c0-491a-be70-aab3a8878b0a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "32b9907c-5ada-4b56-96c9-602e16edcd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3331051-8fc1-4f45-9ad3-6c25983ee459",
        "cursor": {
          "ref": "087cf712-28de-49b3-81d1-315649b30e73",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1814f74c-a01b-4247-84db-8d3c3eaedf1d"
        },
        "item": {
          "id": "d3331051-8fc1-4f45-9ad3-6c25983ee459",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "71828a7e-5855-4b03-ad82-d4601c3fe110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9c0669-1181-4d2e-acbc-d3399f0d51c9",
        "cursor": {
          "ref": "f6f8db3e-eb74-449c-be9c-51fa8a17ed1f",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6697f33b-ba5a-47f1-bc60-ea5cfdb34f1a"
        },
        "item": {
          "id": "2d9c0669-1181-4d2e-acbc-d3399f0d51c9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e0227be7-8b20-4e56-a31e-8647066e34d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0cdfba-5964-425e-8233-1e58e6057449",
        "cursor": {
          "ref": "429592a3-370d-451a-a9bf-c3eaf7d3db8f",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "65e49c94-3250-4585-8e34-ac4c2ec6971d"
        },
        "item": {
          "id": "ea0cdfba-5964-425e-8233-1e58e6057449",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a2ff51ee-e031-4490-96f1-de272ba32ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2965d42-430e-4ccb-89ac-c706a1d5042e",
        "cursor": {
          "ref": "b27831a2-90c8-4e73-adc9-1bccbe91952c",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9a46c158-aa7c-40a1-a201-625ca7dca964"
        },
        "item": {
          "id": "a2965d42-430e-4ccb-89ac-c706a1d5042e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "308150bb-2012-489f-8965-50a71441368d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ebea1b-be10-4112-b96e-e9043075b9de",
        "cursor": {
          "ref": "e13d3263-212e-4d26-9519-84d6af9e3c81",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c081f8d2-1536-465f-b327-3cc7072b05d6"
        },
        "item": {
          "id": "99ebea1b-be10-4112-b96e-e9043075b9de",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "79078a41-c05c-4b00-a60c-8f50f796bff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da0469f-3580-4e4f-86bb-f68e2aae55d8",
        "cursor": {
          "ref": "f8d9be97-92a2-46d1-951e-34f0dddc7b3a",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5c8c1d79-83cd-4ed7-aa4a-cd72b06a4f6a"
        },
        "item": {
          "id": "4da0469f-3580-4e4f-86bb-f68e2aae55d8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a36300fe-65d1-49d3-ac56-3cef01587ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf00549-89b4-4f3e-a4f2-f402d426f581",
        "cursor": {
          "ref": "12c316da-d254-44ed-a75b-ac000db3f4b6",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "fde94ffc-44a4-44f0-ab95-7aed8eb1d814"
        },
        "item": {
          "id": "adf00549-89b4-4f3e-a4f2-f402d426f581",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cb43c0c3-b259-4f37-8179-c26d08a31b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d78500c-e754-4140-b4ab-1feb4d43578a",
        "cursor": {
          "ref": "bbd15c8f-ab4d-43d8-ac40-7fe92791b255",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f9b32418-bcd0-4860-9a22-5c79eb85952f"
        },
        "item": {
          "id": "7d78500c-e754-4140-b4ab-1feb4d43578a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6b243dec-70b1-49a7-8634-108c3028549c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d72762-ea0e-418e-af5d-3fb612ff054f",
        "cursor": {
          "ref": "dbe51ca9-05be-4129-ba01-8d494f8875d6",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "4780187d-3fca-47a7-9bfa-c69d96b882ca"
        },
        "item": {
          "id": "d9d72762-ea0e-418e-af5d-3fb612ff054f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ac1b4c9b-1caa-4d69-a0e6-f8be2e4902e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba01302-976e-4b21-b991-3d5345d8faa0",
        "cursor": {
          "ref": "a39faa9a-0b94-40ea-b680-3f6ee1bf4622",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "41d18579-5c5e-4a9b-8425-37cc217a2227"
        },
        "item": {
          "id": "5ba01302-976e-4b21-b991-3d5345d8faa0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b45b43a9-26d3-4378-b109-c1ea9f4ffab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97502763-5805-44b2-b765-771fe1bd6710",
        "cursor": {
          "ref": "1abbfd8b-0116-4b37-97bd-0eb6f4d8c99c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "81036d9e-cf3d-41a8-ab67-a8a1d74a0286"
        },
        "item": {
          "id": "97502763-5805-44b2-b765-771fe1bd6710",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "29976fb0-6b52-4597-a14c-e81e306f5aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff895b24-62d5-4b8d-8198-383438ec26e8",
        "cursor": {
          "ref": "6ab45f44-a721-4bc6-93b6-258cfaacf8d8",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "5d21b74c-85b6-439d-bba7-d0694b0be5a8"
        },
        "item": {
          "id": "ff895b24-62d5-4b8d-8198-383438ec26e8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8fea22e4-5c68-4ad5-88f6-8feac93d2ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f84db8e-4b02-420e-be8b-281a7f5f91fa",
        "cursor": {
          "ref": "d336876b-913c-42ec-91a1-2d7364f3715a",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7145fc50-4037-43f8-8fab-669a43377856"
        },
        "item": {
          "id": "1f84db8e-4b02-420e-be8b-281a7f5f91fa",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6927286e-ceba-45d3-a99e-264841e5c00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f9ed7a-1f4f-4341-ace7-735bc3d019be",
        "cursor": {
          "ref": "6337f016-daaf-4287-a690-014477814cc4",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "6886d61b-e67c-41f8-8fd6-08c9f41e24c9"
        },
        "item": {
          "id": "49f9ed7a-1f4f-4341-ace7-735bc3d019be",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "61896630-57e2-4f67-9878-07cd108ee2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca77003-3c1c-49a9-984c-cd2cb475920a",
        "cursor": {
          "ref": "078f3aed-e800-44b1-b6ac-c7eab5ba7911",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "cb04acd2-11f4-45db-8653-e09505554e29"
        },
        "item": {
          "id": "fca77003-3c1c-49a9-984c-cd2cb475920a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "41f45590-bb19-4046-a1ca-38c532f2ea62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ba32a9-c1e2-446a-b64e-4ff23594ec95",
        "cursor": {
          "ref": "98523022-46ba-4b8b-b45b-3010a4dff534",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "8a6437ed-0abe-49bc-ae8f-a51553cd96ca"
        },
        "item": {
          "id": "c4ba32a9-c1e2-446a-b64e-4ff23594ec95",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "01aa83af-d946-4c32-bcbc-5240fb2a6085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941c6070-e2cf-40fe-89e0-3b25f75be49d",
        "cursor": {
          "ref": "ac10b520-6eb1-483a-9ecb-2cc047e777cf",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "870c7497-6908-4038-aac0-9a936576cb80"
        },
        "item": {
          "id": "941c6070-e2cf-40fe-89e0-3b25f75be49d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8255f191-4bdf-461f-8679-190cb9906327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6774d64a-5996-4393-a7d8-a1034ffbc3df",
        "cursor": {
          "ref": "58ccb265-c2ec-4b83-b2e6-bb41129b342e",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c26221fe-6648-4b77-a799-581bd1916ef3"
        },
        "item": {
          "id": "6774d64a-5996-4393-a7d8-a1034ffbc3df",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5e068390-b175-4f93-a271-cbe47dffeb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752647ba-85dc-4525-b2fd-bf90eeca15a6",
        "cursor": {
          "ref": "81b3c514-d7ac-4b56-b493-28821a9ae180",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e05aaa26-3c59-4f77-8753-d91af0ee3361"
        },
        "item": {
          "id": "752647ba-85dc-4525-b2fd-bf90eeca15a6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "840354cc-8863-45dc-8c61-f0dcdd992fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ca3183-6e89-4aa7-9a83-e0bc15494bc2",
        "cursor": {
          "ref": "bfe23512-577d-456c-a8fb-538e1664dff7",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "7c9661cc-b16c-4659-9993-999ca86db1dd"
        },
        "item": {
          "id": "18ca3183-6e89-4aa7-9a83-e0bc15494bc2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ea0868e3-15b0-4597-a26b-a688ed3576b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b86598-82d7-4c40-bb39-7d5fb9c26671",
        "cursor": {
          "ref": "2feda387-d3a0-4498-b1a3-6b546b56e9a4",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f3841d7a-9b7d-4468-a4a4-286c2ba4dc35"
        },
        "item": {
          "id": "37b86598-82d7-4c40-bb39-7d5fb9c26671",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "333e5a98-a8f1-4879-9ff9-1298103be001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd64acd-70eb-49d9-a87e-c6ba5a3d22c5",
        "cursor": {
          "ref": "ddce8e02-7bee-456a-a107-1ce8a97202c1",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b96491a9-979f-4a33-8b68-32841acc2dd6"
        },
        "item": {
          "id": "1dd64acd-70eb-49d9-a87e-c6ba5a3d22c5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f63450bc-b3de-4dee-90ac-d81ccb56b5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcc676c-eb23-4a1c-b1e7-97890fe0855a",
        "cursor": {
          "ref": "33388927-5471-4b90-85d7-cd480580cac4",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d82d9d66-4e4e-45f4-99db-a0b2d8cf9486"
        },
        "item": {
          "id": "cdcc676c-eb23-4a1c-b1e7-97890fe0855a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "11d4b80e-f369-4e3f-aec5-5d15c47a82d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5c4228-eff8-433b-bd58-ca64b430f146",
        "cursor": {
          "ref": "9e5bdef7-f800-4bb1-a24c-920353ed8e09",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d88aa82f-8f3f-4838-b5cc-8437737e708d"
        },
        "item": {
          "id": "7f5c4228-eff8-433b-bd58-ca64b430f146",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e6314c2c-6682-411d-993f-d0b133a5a682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662fe029-97d2-46b4-8db2-c0503ff3be70",
        "cursor": {
          "ref": "1678e1d9-408c-4388-9801-6ec9277a619e",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c96a88f9-4b06-4556-bdfc-6de13f499e62"
        },
        "item": {
          "id": "662fe029-97d2-46b4-8db2-c0503ff3be70",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ceb5cfca-a359-49fa-aad8-3b4d88fd3767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe2dd4e-a1e5-4887-843e-25a7e2ffe0d6",
        "cursor": {
          "ref": "f2443e31-0a1a-4f70-9b6b-3f37b9b2a5cf",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "bd6f7c16-aa6d-414d-9844-9cd681b2613c"
        },
        "item": {
          "id": "abe2dd4e-a1e5-4887-843e-25a7e2ffe0d6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "35b4f531-2323-41ce-b7a5-49936e20bea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fea2205-f33d-448a-974a-efb45b8f9302",
        "cursor": {
          "ref": "ec844d7c-3060-41a9-8917-f38b4c6c0207",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8533a5b0-f0c0-424a-b241-b813c812cf5e"
        },
        "item": {
          "id": "0fea2205-f33d-448a-974a-efb45b8f9302",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8831feca-0c67-4eca-924e-59f4f185b765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5feaa18-708f-42a3-923f-abdf57eb756e",
        "cursor": {
          "ref": "53b62001-a9ab-444d-b15e-1ea2c6359f83",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "81b82ce7-acd8-471a-8f35-e0b173311a10"
        },
        "item": {
          "id": "c5feaa18-708f-42a3-923f-abdf57eb756e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5a0b990e-40d7-411f-98c0-baac12396358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197f8447-c55e-48a6-8246-005ee60f3450",
        "cursor": {
          "ref": "07fc3bdf-64cc-4f2f-a7eb-8fb353c75dbe",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c0cce003-0ef6-4e32-9ec5-b2d7218b68fc"
        },
        "item": {
          "id": "197f8447-c55e-48a6-8246-005ee60f3450",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "99882e73-8448-41bf-935b-c560d4403377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0093a5d9-2052-4b48-be2a-ea708bd23c09",
        "cursor": {
          "ref": "cd376213-aed8-4a5f-be43-4ba71e0b93c5",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "9de012e9-8319-4f83-aa43-5b6cd8953af3"
        },
        "item": {
          "id": "0093a5d9-2052-4b48-be2a-ea708bd23c09",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e5bcc01f-5e50-4b7e-9caa-ff8a716f3d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909cf4e5-248a-40ec-a3b8-4e4ff54c42fa",
        "cursor": {
          "ref": "fbcc519a-09f3-4261-8bf7-139cd85290c0",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "89fcced7-cb5c-4979-bd07-ff5d6670234f"
        },
        "item": {
          "id": "909cf4e5-248a-40ec-a3b8-4e4ff54c42fa",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b9b4f1bb-2c20-4624-9c47-c6429dc93fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b94ee70-deec-4b1c-b375-304ca1681383",
        "cursor": {
          "ref": "552a9ad2-8a7e-4985-923d-84856f09fe87",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "636580fc-a1ae-40e0-81cf-5482bea3d18e"
        },
        "item": {
          "id": "6b94ee70-deec-4b1c-b375-304ca1681383",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "691b5e06-3234-4a74-a4e1-eb1c2e197d0a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a317945c-e147-49e2-b2b8-3195e3011d46",
        "cursor": {
          "ref": "b7d529d8-7483-4f5e-84a6-eb42eb02b88a",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c2deafd7-ce7c-4515-bd26-bbf0e6aa3019"
        },
        "item": {
          "id": "a317945c-e147-49e2-b2b8-3195e3011d46",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e32da439-8c37-413e-b984-57f0190a7611",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ef8c8a-96dd-4e47-bcfc-8443fad0a9dc",
        "cursor": {
          "ref": "b998b162-7562-4289-8808-2ef541cfadbe",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "7c8fd281-9e60-4061-a56d-60db7ff7b209"
        },
        "item": {
          "id": "58ef8c8a-96dd-4e47-bcfc-8443fad0a9dc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "36e52150-4734-4e80-82a6-2368049362a2",
          "status": "OK",
          "code": 200,
          "responseTime": 1545,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbc0db0-8426-4a82-9382-549dba91fd97",
        "cursor": {
          "ref": "2537a825-09c7-44a9-b366-ccf40894f417",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b358f33a-a174-4c22-b9cb-9a3b0eac4d14"
        },
        "item": {
          "id": "ddbc0db0-8426-4a82-9382-549dba91fd97",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "73d33dd8-4d52-4aaa-a0ce-15b519c54682",
          "status": "OK",
          "code": 200,
          "responseTime": 1322,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d63a60-1826-4065-84b7-bbe439ebe2ef",
        "cursor": {
          "ref": "9bf555cb-b556-4ff3-aa05-f458c886da60",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6b8790cf-4eab-4b1c-8dcc-ff86df697c83"
        },
        "item": {
          "id": "a4d63a60-1826-4065-84b7-bbe439ebe2ef",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9ebc4643-9160-482d-b33f-0b3fdb23aea5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d63a60-1826-4065-84b7-bbe439ebe2ef",
        "cursor": {
          "ref": "9bf555cb-b556-4ff3-aa05-f458c886da60",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6b8790cf-4eab-4b1c-8dcc-ff86df697c83"
        },
        "item": {
          "id": "a4d63a60-1826-4065-84b7-bbe439ebe2ef",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9ebc4643-9160-482d-b33f-0b3fdb23aea5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0fd195-cfa5-432c-91ce-1ac830021470",
        "cursor": {
          "ref": "af0b743e-5d58-491a-9534-536cade71ff8",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "6f2412e3-1e3e-4c80-86ce-b75629e880b3"
        },
        "item": {
          "id": "dd0fd195-cfa5-432c-91ce-1ac830021470",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "17214dbf-bd13-4328-8600-b3d512940605",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d93e424-48da-4856-8653-159316a87b6d",
        "cursor": {
          "ref": "2baf2a0a-0a9a-4ba6-bfac-44e243a91c4e",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "e44a7a58-8a6c-4976-9a5a-7b7696289cdd"
        },
        "item": {
          "id": "1d93e424-48da-4856-8653-159316a87b6d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e48828ee-f9e7-4d14-96c5-a8e242f55e80",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}